[{"compiler":[[16,12]],"method":["search"],"sampling":[[12,0.3073168534319848,0.24975591897964478,0.44292722758837044],[11,0.30341441719792783,0.2653656639158726,0.4312199188861996],[10,0.28878028132021427,0.3239022074267268,0.3873175112530589],[9,0.2809754088521004,0.35902413353323936,0.36000045761466026],[8,0.2653656639158726,0.45268260315060616,0.28195173293352127],[7,0.24975591897964478,0.49951183795928955,0.2507322430610657],[6,0.21853642910718918,0.5931703075766563,0.18829326331615448],[5,0.18731693923473358,0.6868287771940231,0.1258542835712433],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":146.26806640625,"type":"analyze"},{"outcomes":[["body",512,"invalid",269.952880859375,1031],["body",2048,"invalid",5.139892578125,5],["body",256,"invalid",240.918701171875,2414],["body",1024,"valid",898.22998046875,2752],["body",1024,"invalid",856.745849609375,1698],["body",512,"valid",255.017333984375,1251],["body",256,"valid",222.80078125,2422],["body",2048,"valid",827.168701171875,1831]],"time":3589.85986328125,"type":"sample"},{"compiler":[[15,11]],"inputs":[["0","1"],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","(-.f64 (pow.f64 (+.f64 n 1) (/.f64 1 x)) (pow.f64 n (/.f64 1 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","(-.f64 (pow.f64 (+.f64 n 1) (/.f64 1 x)) (pow.f64 n (/.f64 1 x)))"]],"symmetry":[[]],"time":61.0400390625,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))"]],"time":18.191162109375,"type":"simplify"},{"compiler":[[15,11]],"time":0.31689453125,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","next",33.20623557247954]],"compiler":[[15,11],[15,11]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[33.20623557247954],"time":0.87109375,"type":"prune"},{"compiler":[[36,24]],"locations":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))",2.757686462220715,true]],"time":10.224853515625,"type":"localize"},{"count":[[1,24]],"series":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","n","-inf",0.683837890625],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","n","inf",0.960205078125],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","n","0",0.427978515625],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","x","-inf",1.0888671875],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","x","inf",1.09619140625],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))","x","0",0.862060546875]],"time":5.277099609375,"type":"series"},{"count":[[1,44]],"inputs":[["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) (*.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 0) (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) (*.f64 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))) (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 x (/.f64 1 n))) (pow.f64 (+.f64 x 1) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 x (/.f64 1 n))) (neg.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) 0) (pow.f64 x (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))) (neg.f64 (pow.f64 x (/.f64 1 n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 2 n))) (+.f64 (cbrt.f64 (pow.f64 x (/.f64 2 n))) (cbrt.f64 (pow.f64 (fma.f64 x x x) (/.f64 1 n))))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))) (cbrt.f64 (pow.f64 x (/.f64 1 n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 2)) (cbrt.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))) (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 2 n))) (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 2 n))) (cbrt.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))) (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n))) (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x (/.f64 1 n)))) (cbrt.f64 (pow.f64 x (/.f64 2 n))) (pow.f64 (+.f64 x 1) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x (/.f64 1 n))) (neg.f64 (cbrt.f64 (pow.f64 x (/.f64 2 n)))) (pow.f64 (+.f64 x 1) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) 1 (neg.f64 (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 x (/.f64 1 n))) (pow.f64 (+.f64 x 1) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 x (/.f64 1 n)) (pow.f64 (+.f64 x 1) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n))))))))"]],"rules":[["egg-rr",44]],"time":21.56787109375,"type":"rewrite"},{"count":[[68,84]],"inputs":[["(-.f64 1 (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (/.f64 x n) 1) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)))) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2))))) (exp.f64 (/.f64 (log.f64 x) n)))","(/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 3)) (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 n 4))) (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n)))) (pow.f64 x 4)))))","(/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x))","(+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3))))) (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3))))) (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 n 4))) (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n))))) (pow.f64 x 4)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x)))))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 3) (pow.f64 n 3))) (/.f64 (log.f64 (+.f64 1 x)) n))) (+.f64 (/.f64 (log.f64 x) n) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 4) (pow.f64 n 4))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 3) (pow.f64 n 3))) (/.f64 (log.f64 (+.f64 1 x)) n)))) (+.f64 (/.f64 (log.f64 x) n) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n 4))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 (log.f64 (+.f64 1 x)) 3)) (*.f64 -1/6 (pow.f64 (log.f64 x) 3))) (pow.f64 n 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 4) (pow.f64 n 4))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 (log.f64 (+.f64 1 x)) 3)) (*.f64 -1/6 (pow.f64 (log.f64 x) 3))) (pow.f64 n 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (*.f64 1/24 (/.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n 4)))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (exp.f64 (/.f64 (log.f64 x) n)))","(neg.f64 (expm1.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (/.f64 x n) 1) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (/.f64 x n) (expm1.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)))) (exp.f64 (/.f64 (log.f64 x) n)))","(+.f64 (/.f64 x n) (+.f64 (*.f64 (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n)) (*.f64 x x)) (neg.f64 (expm1.f64 (/.f64 (log.f64 x) n)))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2))))) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (*.f64 (+.f64 (/.f64 1/3 n) (fma.f64 1/6 (pow.f64 n -3) (/.f64 -1/2 (*.f64 n n)))) (pow.f64 x 3)) (-.f64 (-.f64 (expm1.f64 (/.f64 (log.f64 x) n)) (/.f64 x n)) (*.f64 (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n)) (*.f64 x x))))","(/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x))","(/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x)))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 3)) (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x))))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (+.f64 (/.f64 1/3 n) (fma.f64 1/6 (pow.f64 n -3) (/.f64 -1/2 (*.f64 n n))))) (pow.f64 x -3)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n))) (*.f64 n x)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 n 4))) (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (exp.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) n)))) (pow.f64 x 4)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (+.f64 (/.f64 1/3 n) (fma.f64 1/6 (pow.f64 n -3) (/.f64 -1/2 (*.f64 n n))))) (pow.f64 x -3)) (+.f64 (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)) (*.f64 (*.f64 (-.f64 (fma.f64 1/24 (pow.f64 n -4) (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n -3) (/.f64 1/4 n))) (exp.f64 (/.f64 (log.f64 x) n))) (pow.f64 x -4)))))","(/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x))","(/.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (*.f64 n x))","(+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x)))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (*.f64 n x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3))))) (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x))))","(+.f64 (*.f64 (*.f64 (+.f64 (/.f64 1/3 n) (fma.f64 1/6 (pow.f64 n -3) (/.f64 -1/2 (*.f64 n n)))) (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n))) (pow.f64 x -3)) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (*.f64 n x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3))))) (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 n 4))) (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n))))) (pow.f64 x 4)) (/.f64 (exp.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) n)) (*.f64 n x)))))","(+.f64 (*.f64 (*.f64 (+.f64 (/.f64 1/3 n) (fma.f64 1/6 (pow.f64 n -3) (/.f64 -1/2 (*.f64 n n)))) (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n))) (pow.f64 x -3)) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (-.f64 (fma.f64 1/24 (pow.f64 n -4) (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n -3) (/.f64 1/4 n)))) (pow.f64 x -4)) (/.f64 (exp.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) n)) (*.f64 n x)))))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log.f64 (+.f64 1 x)) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 3) (pow.f64 n 3))) (/.f64 (log.f64 (+.f64 1 x)) n))) (+.f64 (/.f64 (log.f64 x) n) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))","(-.f64 (+.f64 (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (*.f64 1/6 (pow.f64 (/.f64 (log1p.f64 x) n) 3))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (*.f64 1/6 (pow.f64 (/.f64 (log.f64 x) n) 3))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 4) (pow.f64 n 4))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 3) (pow.f64 n 3))) (/.f64 (log.f64 (+.f64 1 x)) n)))) (+.f64 (/.f64 (log.f64 x) n) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n 4))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))))","(-.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (fma.f64 1/24 (*.f64 (pow.f64 (log1p.f64 x) 4) (pow.f64 n -4)) (fma.f64 1/6 (pow.f64 (/.f64 (log1p.f64 x) n) 3) (/.f64 (log1p.f64 x) n)))) (+.f64 (/.f64 (log.f64 x) n) (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (fma.f64 1/24 (*.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n -4)) (*.f64 1/6 (pow.f64 (/.f64 (log.f64 x) n) 3))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))","(/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 (log.f64 (+.f64 1 x)) 3)) (*.f64 -1/6 (pow.f64 (log.f64 x) 3))) (pow.f64 n 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 4) (pow.f64 n 4))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 (log.f64 (+.f64 1 x)) 3)) (*.f64 -1/6 (pow.f64 (log.f64 x) 3))) (pow.f64 n 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (log.f64 (+.f64 1 x))) (*.f64 -1 (log.f64 x))) n))))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))) (*.f64 1/24 (/.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n 4)))))","(-.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (fma.f64 1/24 (*.f64 (pow.f64 (log1p.f64 x) 4) (pow.f64 n -4)) (+.f64 (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3)) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (*.f64 1/24 (*.f64 (pow.f64 (log.f64 x) 4) (pow.f64 n -4)))))"]],"time":110.753173828125,"type":"simplify"},{"compiler":[[2611,1793]],"time":30.02490234375,"type":"eval"},{"alts":[["(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","fresh",36.6110101769632],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","fresh",32.9096726292424],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","next",25.16419161673865]],"compiler":[[30,18],[13,9],[42,28],[30,18],[13,9],[42,28]],"count":[[85,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[84,3],"picked":[1,0]}],"min-error":[0.4250951268336135],"time":14.5009765625,"type":"prune"},{"compiler":[[185,88]],"locations":[["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))",3.0463279001216614,true],["(-.f64 (log1p.f64 x) (log.f64 x))",3.1158808390532924,true],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))",6.347442621434535,true],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))",6.854782367652944,true]],"time":40.262939453125,"type":"localize"},{"count":[[4,72]],"series":[["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))","x","-inf",0.8720703125],["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))","x","inf",2.365966796875],["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))","x","0",0.198974609375],["(-.f64 (log1p.f64 x) (log.f64 x))","x","-inf",0.197998046875],["(-.f64 (log1p.f64 x) (log.f64 x))","x","inf",0.223876953125],["(-.f64 (log1p.f64 x) (log.f64 x))","x","0",0.216064453125],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","n","-inf",0.258056640625],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","n","inf",0.35400390625],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","n","0",23.027099609375],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","x","-inf",0.77001953125],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","x","inf",0.619873046875],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","x","0",0.425048828125],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","-inf",0.51708984375],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","inf",1.4169921875],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","0",2.494140625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","-inf",4.02880859375],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","inf",3.301025390625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","0",0.85302734375]],"time":42.736083984375,"type":"series"},{"count":[[4,196]],"inputs":[["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","(-.f64 (log1p.f64 x) (log.f64 x))","(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (-.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 0) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (*.f64 (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (*.f64 (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (/.f64 (log1p.f64 x) n)) (-.f64 (/.f64 (log.f64 x) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (/.f64 (log1p.f64 x) n))) (/.f64 (log.f64 x) n))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 0) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2)) (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (cbrt.f64 (pow.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) 2)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 1 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 0) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (pow.f64 (log.f64 x) 3)) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (neg.f64 (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 n -3) (*.f64 -1/6 (pow.f64 (log.f64 x) 3))) (*.f64 (pow.f64 n -3) (*.f64 -1/6 (neg.f64 (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 n -3) (*.f64 (pow.f64 (log.f64 x) 3) -1/6)) (*.f64 (pow.f64 n -3) (*.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) -1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 0 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 3) (*.f64 (pow.f64 n -3) -1/6)) (*.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) (*.f64 (pow.f64 n -3) -1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n -3)) (*.f64 (*.f64 -1/6 (neg.f64 (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 3) -1/6) (pow.f64 n -3)) (*.f64 (*.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) -1/6) (pow.f64 n -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (neg.f64 (pow.f64 (log1p.f64 x) 3))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (pow.f64 (log.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) (*.f64 (pow.f64 n -3) -1/6)) (*.f64 (pow.f64 (log.f64 x) 3) (*.f64 (pow.f64 n -3) -1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/6) (*.f64 (cbrt.f64 1/36) (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) -1/6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 n -3) (cbrt.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))) (cbrt.f64 (pow.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (/.f64 1 n)) (/.f64 (/.f64 1 n) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (*.f64 -1/6 (pow.f64 n -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 2)) (pow.f64 n -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 n) (*.f64 (/.f64 (/.f64 1 n) n) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 x) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 x)) (log1p.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 0) (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 x) (log.f64 x)) (*.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (log1p.f64 x) (log.f64 x))) (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 x) (log.f64 x)) (*.f64 0 (-.f64 (log1p.f64 x) (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 x)) (*.f64 (neg.f64 (log1p.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (log1p.f64 x)) -1) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 x) (log.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log1p.f64 x) 0) (log.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (log.f64 x)) (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 (log.f64 x) (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2)) (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x)))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (log.f64 x) (log1p.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (log.f64 x) (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (log.f64 x) (log1p.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 x) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 x) 1 (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (cbrt.f64 (log1p.f64 x)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log1p.f64 x)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (log1p.f64 x) (log.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 0) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (pow.f64 (log.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (pow.f64 (log.f64 x) 2)) (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (+.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 (log.f64 x) 2))) (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (*.f64 (log.f64 x) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (neg.f64 (log1p.f64 x))) (*.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (*.f64 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))) (-.f64 (log.f64 x) (log1p.f64 x))) (*.f64 (pow.f64 (log.f64 x) 2) (-.f64 (log.f64 x) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2) (-.f64 (log.f64 x) (log1p.f64 x))) (*.f64 (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))) (-.f64 (log.f64 x) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 (log.f64 x) 2)) (-.f64 (log.f64 x) (log1p.f64 x))) (*.f64 (*.f64 (log.f64 x) (log1p.f64 x)) (-.f64 (log.f64 x) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (log1p.f64 x)) (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))))) (*.f64 (log.f64 x) (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 x) 3) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) (pow.f64 (log.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (log.f64 x)) (*.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) (*.f64 (neg.f64 (pow.f64 (log.f64 x) 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))))) (*.f64 (neg.f64 (log1p.f64 x)) (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 (log1p.f64 x) 3)) (neg.f64 (pow.f64 (log.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (log.f64 x) 3) 0) (pow.f64 (log1p.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 2)) (cbrt.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (log.f64 x) 3)) (neg.f64 (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3)))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))) (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 x) (log1p.f64 x)) (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (log.f64 x) (log.f64 x) (*.f64 (log1p.f64 x) (+.f64 (log1p.f64 x) (log.f64 x))))) (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (pow.f64 (log1p.f64 x) 3) (pow.f64 (log.f64 x) 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 x) 2) (log.f64 x) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 x) (pow.f64 (log.f64 x) 2) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (log.f64 x) 3) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 x) 3) 1 (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 x) 2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (log.f64 x) 3)) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (pow.f64 (log.f64 x) 2)) (neg.f64 (pow.f64 (log1p.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))"]],"rules":[["egg-rr",53],["egg-rr",48],["egg-rr",35],["egg-rr",60]],"time":54.800048828125,"type":"rewrite"},{"count":[[268,292]],"inputs":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (+.f64 (/.f64 1 n) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (/.f64 1 (*.f64 n x)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))) (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4))))))","(*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4)))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2))))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))","(+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (+.f64 (*.f64 7/24 (/.f64 (pow.f64 x 5) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))","(*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x)))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x)))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))))))","(*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x)))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3))))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 -1 (log.f64 x))","(+.f64 x (*.f64 -1 (log.f64 x)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x))))","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(pow.f64 (log.f64 x) 3)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (pow.f64 (log.f64 x) 3))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 3/2 (pow.f64 x 4)) (pow.f64 (log.f64 x) 3)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -7/4 (pow.f64 x 5)) (+.f64 (*.f64 3/2 (pow.f64 x 4)) (pow.f64 (log.f64 x) 3))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 2 (log.f64 (/.f64 1 x))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 2 (log.f64 (/.f64 1 x))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))))) (+.f64 (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 x 4)))))))","(/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x))))","(+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3))) (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3)))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 4))) (+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x))))))))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (neg.f64 (/.f64 (log.f64 x) n)) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3))) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (neg.f64 (/.f64 (log.f64 x) n)) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3)))) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (neg.f64 (/.f64 (log.f64 x) n)) (fma.f64 (-.f64 (/.f64 1/2 (*.f64 n n)) (/.f64 1/2 n)) (*.f64 x x) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3))))) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n)))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (fma.f64 (-.f64 (+.f64 (/.f64 1/3 n) (/.f64 1/6 (pow.f64 n 3))) (/.f64 1/2 (*.f64 n n))) (pow.f64 x 3) (+.f64 (/.f64 x n) (+.f64 (neg.f64 (/.f64 (log.f64 x) n)) (fma.f64 (-.f64 (/.f64 1/2 (*.f64 n n)) (/.f64 1/2 n)) (*.f64 x x) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3)))))) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n)))","(/.f64 (+.f64 (/.f64 1 n) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (pow.f64 n 3)) (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n))))) x)","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (/.f64 1 (*.f64 n x)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (*.f64 n n)) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 (*.f64 n n) x))) (/.f64 1 (*.f64 n x))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (*.f64 n n)) (*.f64 x x)) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (/.f64 1/3 (*.f64 n (pow.f64 x 3))) (fma.f64 1/2 (/.f64 (fma.f64 -2/3 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n)) (neg.f64 (pow.f64 n (neg.f64 2)))) (pow.f64 x 3)) (fma.f64 1/6 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 (*.f64 n x) 3)) (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 (*.f64 n n) x))))))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))) (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4))))))","(-.f64 (fma.f64 1/2 (/.f64 (fma.f64 2/3 (pow.f64 n (neg.f64 2)) (fma.f64 1/2 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n)) (/.f64 1/4 (*.f64 n n)))) (pow.f64 x 4)) (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (+.f64 (/.f64 1/3 (*.f64 n (pow.f64 x 3))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (*.f64 n n)) (*.f64 x x)) (fma.f64 -1/6 (/.f64 (-.f64 (pow.f64 n (neg.f64 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (neg.f64 (log.f64 x)))) (neg.f64 (log.f64 x))) (pow.f64 n 3))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (pow.f64 n 3)) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 x)) 2) (pow.f64 n 3)) (/.f64 (*.f64 -4/3 (neg.f64 (log.f64 x))) (pow.f64 n 3)))))) (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 n x)) (fma.f64 1/2 (/.f64 (fma.f64 -2/3 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n)) (neg.f64 (pow.f64 n (neg.f64 2)))) (pow.f64 x 3)) (fma.f64 1/6 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 (*.f64 n x) 3)) (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 (*.f64 n n) x))))))))))) (+.f64 (/.f64 1/2 (*.f64 n (*.f64 x x))) (/.f64 1/4 (*.f64 n (pow.f64 x 4)))))","(*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x))","(neg.f64 (/.f64 (-.f64 (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (pow.f64 n 3)))) (/.f64 1 n)) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (neg.f64 (/.f64 (-.f64 (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (pow.f64 n 3)))) (/.f64 1 n)) x)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 n (neg.f64 2)) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n)))) (*.f64 x x)) (/.f64 (*.f64 1/6 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))) (*.f64 (pow.f64 n 3) (*.f64 x x))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (neg.f64 (/.f64 (-.f64 (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (neg.f64 (/.f64 (-.f64 (fma.f64 1/6 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (neg.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3)) (*.f64 1/2 (+.f64 (pow.f64 n (neg.f64 2)) (/.f64 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 n n))))) (/.f64 1/3 n)) (pow.f64 x 3))) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 n (neg.f64 2)) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n)))) (*.f64 x x)) (/.f64 (*.f64 1/6 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))) (*.f64 (pow.f64 n 3) (*.f64 x x)))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4)))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2))))))","(-.f64 (+.f64 (neg.f64 (/.f64 (-.f64 (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (pow.f64 n 3)))) (/.f64 1 n)) x)) (fma.f64 1/6 (/.f64 (+.f64 (neg.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 -1/4 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (fma.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/2 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4))) (+.f64 (neg.f64 (/.f64 (-.f64 (fma.f64 1/6 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (neg.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3)) (*.f64 1/2 (+.f64 (pow.f64 n (neg.f64 2)) (/.f64 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 n n))))) (/.f64 1/3 n)) (pow.f64 x 3))) (fma.f64 1/2 (/.f64 (fma.f64 11/12 (pow.f64 n (neg.f64 2)) (/.f64 (*.f64 -1/2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 n n))) (pow.f64 x 4)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 n (neg.f64 2)) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 n n)))) (*.f64 x x)) (/.f64 (*.f64 1/6 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))) (*.f64 (pow.f64 n 3) (*.f64 x x)))))))) (+.f64 (/.f64 1/2 (*.f64 n (*.f64 x x))) (/.f64 1/4 (*.f64 n (pow.f64 x 4)))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(/.f64 (-.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) n)","(/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (+.f64 1 x)) n)) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (+.f64 1 x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (+.f64 (/.f64 (log.f64 x) n) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log1p.f64 x) 2) (*.f64 n n)) (/.f64 (log1p.f64 x) n)) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))) (+.f64 (/.f64 (log.f64 x) n) (/.f64 (*.f64 1/2 (pow.f64 (log.f64 x) 2)) (*.f64 n n))))","(*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3))","(+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))","(fma.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3)) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3)) (fma.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3)) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3))) (+.f64 (*.f64 7/24 (/.f64 (pow.f64 x 5) (pow.f64 n 3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))","(fma.f64 -1/4 (/.f64 (pow.f64 x 4) (pow.f64 n 3)) (fma.f64 1/6 (/.f64 (pow.f64 x 3) (pow.f64 n 3)) (fma.f64 7/24 (/.f64 (pow.f64 x 5) (pow.f64 n 3)) (/.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n 3)))))","(*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x)))","(*.f64 1/6 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))))","(*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x)))))","(fma.f64 1/6 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 (*.f64 n x) 3)) (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))))))","(fma.f64 1/6 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 (*.f64 n x) 3)) (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (/.f64 (*.f64 -1/6 (-.f64 (pow.f64 n (neg.f64 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (neg.f64 (log.f64 x)))) (neg.f64 (log.f64 x))) (pow.f64 n 3))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (pow.f64 n 3)) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 x)) 2) (pow.f64 n 3)) (/.f64 (*.f64 -4/3 (neg.f64 (log.f64 x))) (pow.f64 n 3))))))) (pow.f64 x 4))))","(*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x)))","(*.f64 -1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (*.f64 (pow.f64 n 3) x)))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (*.f64 (pow.f64 n 3) x)) (/.f64 (*.f64 1/6 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))) (*.f64 (pow.f64 n 3) (*.f64 x x))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (*.f64 (pow.f64 n 3) x)) (fma.f64 1/6 (/.f64 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 -1/6 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (neg.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (pow.f64 (*.f64 n x) 3))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))))))","(fma.f64 1/6 (/.f64 (+.f64 (neg.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 -1/4 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (fma.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/2 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) (*.f64 (pow.f64 n 3) x)) (fma.f64 1/6 (/.f64 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 -1/6 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (neg.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (pow.f64 (*.f64 n x) 3)))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(/.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n 3))","(*.f64 -1 (log.f64 x))","(neg.f64 (log.f64 x))","(+.f64 x (*.f64 -1 (log.f64 x)))","(+.f64 x (neg.f64 (log.f64 x)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x))))","(fma.f64 -1/2 (*.f64 x x) (+.f64 x (neg.f64 (log.f64 x))))","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x)))))","(fma.f64 1/3 (pow.f64 x 3) (fma.f64 -1/2 (*.f64 x x) (+.f64 x (neg.f64 (log.f64 x)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1/3 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(-.f64 (fma.f64 1/3 (pow.f64 x (neg.f64 3)) (/.f64 1 x)) (fma.f64 1/4 (pow.f64 x (neg.f64 4)) (/.f64 1/2 (*.f64 x x))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1/3 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(-.f64 (fma.f64 1/3 (pow.f64 x (neg.f64 3)) (/.f64 1 x)) (fma.f64 1/4 (pow.f64 x (neg.f64 4)) (/.f64 1/2 (*.f64 x x))))","(pow.f64 (log.f64 x) 3)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (pow.f64 (log.f64 x) 3))","(+.f64 (neg.f64 (pow.f64 x 3)) (pow.f64 (log.f64 x) 3))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 3/2 (pow.f64 x 4)) (pow.f64 (log.f64 x) 3)))","(+.f64 (neg.f64 (pow.f64 x 3)) (fma.f64 3/2 (pow.f64 x 4) (pow.f64 (log.f64 x) 3)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -7/4 (pow.f64 x 5)) (+.f64 (*.f64 3/2 (pow.f64 x 4)) (pow.f64 (log.f64 x) 3))))","(+.f64 (neg.f64 (pow.f64 x 3)) (fma.f64 -7/4 (pow.f64 x 5) (fma.f64 3/2 (pow.f64 x 4) (pow.f64 (log.f64 x) 3))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))","(neg.f64 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x)))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) x)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 2 (log.f64 (/.f64 1 x))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))))","(+.f64 (neg.f64 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 2 (log.f64 (/.f64 1 x))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (*.f64 -2 (log.f64 (/.f64 1 x))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) x))))) (+.f64 (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 x 4)))))))","(-.f64 (+.f64 (pow.f64 x (neg.f64 4)) (+.f64 (neg.f64 (/.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (neg.f64 (log.f64 x)) 2) (fma.f64 2 (neg.f64 (log.f64 x)) (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)))))) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) x))))) (fma.f64 -4/3 (/.f64 (neg.f64 (log.f64 x)) (pow.f64 x 4)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (neg.f64 (log.f64 x)))) (neg.f64 (log.f64 x))) (pow.f64 x 4))) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 x)) 2) (pow.f64 x 4)) (/.f64 (*.f64 -1/2 (+.f64 1 (neg.f64 (log.f64 x)))) (pow.f64 x 4))))))","(/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)","(/.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (+.f64 -1 -2)) x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 x x))) (*.f64 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x) (+.f64 -2 -1)))","(+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3))) (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3)))))))))","(+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (+.f64 (neg.f64 (/.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 x x))) (+.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x) (+.f64 -2 -1)) (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3)) (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 4))) (+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x))))))))))","(+.f64 (neg.f64 (/.f64 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 x 3))) (fma.f64 -2 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 x x))) (+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 3)) (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (fma.f64 -1/4 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (fma.f64 2/3 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (fma.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (*.f64 -1/2 (+.f64 1 (neg.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 4))) (+.f64 (/.f64 (log.f64 -1) (pow.f64 x 3)) (/.f64 (neg.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) x))))))))"]],"time":257.81103515625,"type":"simplify"},{"compiler":[[18202,11217]],"time":196.675048828125,"type":"eval"},{"alts":[["(-.f64 (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (*.f64 n n)) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 (*.f64 n n) x))) (/.f64 1 (*.f64 n x))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","fresh",41.0510375028219],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",25.368720523033723],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","fresh",32.9096726292424],["(*.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2)))","fresh",25.362822964423074],["(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (pow.f64 n 3)) (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n))))) x)","fresh",39.84007157900811],["(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","fresh",36.6110101769632],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))","fresh",34.18242963214343],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",25.28322999235145],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",41.92818818391915],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","next",25.098533507234215]],"compiler":[[91,52],[45,31],[13,9],[86,52],[31,22],[30,18],[129,75],[64,40],[46,33],[43,31],[91,52],[45,31],[13,9],[86,52],[31,22],[30,18],[129,75],[64,40],[46,33],[43,31]],"count":[[295,10]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[292,8],"picked":[1,0]}],"min-error":[0.08518498016428752],"time":108.39990234375,"type":"prune"},{"compiler":[[199,116]],"locations":[["(log.f64 (/.f64 (+.f64 1 x) x))",3.0114113597534695,true],["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))",3.0463279001216614,false],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))",6.347442621434535,false],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))",6.854782367652944,true]],"time":49.93310546875,"type":"localize"},{"count":[[2,36]],"series":[["(log.f64 (/.f64 (+.f64 1 x) x))","x","-inf",0.218017578125],["(log.f64 (/.f64 (+.f64 1 x) x))","x","inf",0.164794921875],["(log.f64 (/.f64 (+.f64 1 x) x))","x","0",0.166015625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","-inf",0.3671875],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","inf",0.81201171875],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","0",0.676025390625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","-inf",0.899169921875],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","inf",0.75],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","0",0.510986328125]],"time":4.864990234375,"type":"series"},{"count":[[2,93]],"inputs":[["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(log.f64 (/.f64 (+.f64 1 x) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (-.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 0) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (*.f64 (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (*.f64 (neg.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 (/.f64 (log.f64 x) (neg.f64 n)) (/.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (neg.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 0) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2)) (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (cbrt.f64 (pow.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) 2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 1 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (cbrt.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 x) (log.f64 x)) (*.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 0) (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 x) (log.f64 x)) (*.f64 0 (-.f64 (log1p.f64 x) (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (log1p.f64 x) (log.f64 x))) (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 x) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 x) (log.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log1p.f64 x) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (log1p.f64 x)) (neg.f64 (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 2)) (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x)))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (log.f64 x) (log1p.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 (log1p.f64 x) (log.f64 x)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (pow.f64 (/.f64 (+.f64 1 x) x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 x) 1 (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (cbrt.f64 (log1p.f64 x)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log1p.f64 x)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 x) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (neg.f64 (log.f64 x)))))))"]],"rules":[["egg-rr",34],["egg-rr",59]],"time":42.216796875,"type":"rewrite"},{"count":[[129,141]],"inputs":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (+.f64 (/.f64 1 n) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (/.f64 1 (*.f64 n x)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))) (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4))))))","(*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4)))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2))))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(*.f64 -1 (log.f64 x))","(+.f64 x (*.f64 -1 (log.f64 x)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x))))","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (-.f64 (*.f64 -1/6 (pow.f64 (/.f64 (log.f64 x) n) 3)) (/.f64 (log.f64 x) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (/.f64 (-.f64 x (log.f64 x)) n) (*.f64 -1/6 (pow.f64 (/.f64 (log.f64 x) n) 3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (/.f64 (-.f64 x (log.f64 x)) n) (fma.f64 (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n)) (*.f64 x x) (*.f64 -1/6 (pow.f64 (/.f64 (log.f64 x) n) 3)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 n)) (*.f64 1/6 (/.f64 1 (pow.f64 n 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 n 2)))) (pow.f64 x 3)) (+.f64 (/.f64 x n) (+.f64 (*.f64 -1 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 n 2))) (*.f64 1/2 (/.f64 1 n))) (pow.f64 x 2)) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3))))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 (+.f64 (*.f64 1/6 (pow.f64 n -3)) (+.f64 (/.f64 1/3 n) (/.f64 -1/2 (*.f64 n n)))) (pow.f64 x 3) (+.f64 (/.f64 (-.f64 x (log.f64 x)) n) (fma.f64 (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n)) (*.f64 x x) (*.f64 -1/6 (pow.f64 (/.f64 (log.f64 x) n) 3))))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(/.f64 (+.f64 (/.f64 1 n) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (*.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (pow.f64 n -3)) (*.f64 (log.f64 x) (pow.f64 n -2)))) x)","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (/.f64 1 (*.f64 n x)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 1 (*.f64 n x)) (fma.f64 1/3 (/.f64 (pow.f64 x -3) n) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (*.f64 n n)) (pow.f64 x -3)) (fma.f64 1/6 (*.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (log.f64 x) 2) (+.f64 (*.f64 (log.f64 x) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)) (neg.f64 (*.f64 (log.f64 x) 2))))) (pow.f64 (*.f64 n x) -3)) (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)))))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 n (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (/.f64 1 (*.f64 n x)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x)))))))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))) (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4))))))","(-.f64 (fma.f64 1/2 (*.f64 (fma.f64 2/3 (pow.f64 n -2) (/.f64 (+.f64 (neg.f64 (*.f64 (log.f64 x) 1/2)) 1/4) (*.f64 n n))) (pow.f64 x -4)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/3 (/.f64 (pow.f64 x -3) n) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 n -3) (+.f64 (/.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 11/12 (neg.f64 (*.f64 (log.f64 x) 1/2)))) (*.f64 -1/2 (-.f64 1 (log.f64 x)))) (pow.f64 n 3)) (/.f64 (+.f64 (neg.f64 (*.f64 -4/3 (log.f64 x))) (*.f64 -1/4 (pow.f64 (log.f64 x) 2))) (pow.f64 n 3)))) (pow.f64 x -4)) (+.f64 (/.f64 1 (*.f64 n x)) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (*.f64 n n)) (pow.f64 x -3)) (fma.f64 1/6 (*.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (log.f64 x) 2) (+.f64 (*.f64 (log.f64 x) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)) (neg.f64 (*.f64 (log.f64 x) 2))))) (pow.f64 (*.f64 n x) -3)) (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)))))))))) (fma.f64 1/2 (/.f64 (pow.f64 x -2) n) (/.f64 1/4 (*.f64 n (pow.f64 x 4)))))","(*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x))","(/.f64 (-.f64 (/.f64 1 n) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2)))) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))))) (/.f64 1/2 (*.f64 n (pow.f64 x 2))))","(+.f64 (/.f64 (-.f64 (/.f64 1 n) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2)))) x) (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2)) (*.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 2))) (/.f64 (pow.f64 n -3) (*.f64 x x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2)))))","(+.f64 (/.f64 (-.f64 (/.f64 1 n) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2)))) x) (+.f64 (*.f64 (-.f64 (/.f64 1/3 n) (fma.f64 1/6 (*.f64 (+.f64 (+.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 -1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))) (pow.f64 n -3)) (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n))))) (pow.f64 x -3)) (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2)) (*.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 2))) (/.f64 (pow.f64 n -3) (*.f64 x x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3)))) (/.f64 1 n)) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))))) (*.f64 1/3 (/.f64 1 n))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 n (pow.f64 x 4)))) (*.f64 1/2 (/.f64 1 (*.f64 n (pow.f64 x 2))))))","(-.f64 (+.f64 (/.f64 (-.f64 (/.f64 1 n) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2)))) x) (fma.f64 1/6 (*.f64 (-.f64 (fma.f64 -1/4 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (+.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 2/3 (+.f64 11/12 (*.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (*.f64 -1/2 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (*.f64 (pow.f64 n -3) (pow.f64 x -4))) (+.f64 (*.f64 (-.f64 (/.f64 1/3 n) (fma.f64 1/6 (*.f64 (+.f64 (+.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 -1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))) (pow.f64 n -3)) (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n))))) (pow.f64 x -3)) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 11/12 (*.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n)) (pow.f64 x -4)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2)) (*.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 2))) (/.f64 (pow.f64 n -3) (*.f64 x x))))))))) (fma.f64 1/2 (/.f64 (pow.f64 x -2) n) (/.f64 1/4 (*.f64 n (pow.f64 x 4)))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(*.f64 -1 (log.f64 x))","(neg.f64 (log.f64 x))","(+.f64 x (*.f64 -1 (log.f64 x)))","(-.f64 x (log.f64 x))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x))))","(fma.f64 -1/2 (*.f64 x x) (-.f64 x (log.f64 x)))","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 x (*.f64 -1 (log.f64 x)))))","(fma.f64 1/3 (pow.f64 x 3) (fma.f64 -1/2 (*.f64 x x) (-.f64 x (log.f64 x))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (fma.f64 1/3 (pow.f64 x -3) (/.f64 1 x)) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(-.f64 (fma.f64 1/3 (pow.f64 x -3) (/.f64 1 x)) (fma.f64 1/4 (pow.f64 x -4) (/.f64 1/2 (*.f64 x x))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (fma.f64 1/3 (pow.f64 x -3) (/.f64 1 x)) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2)))))","(-.f64 (fma.f64 1/3 (pow.f64 x -3) (/.f64 1 x)) (fma.f64 1/4 (pow.f64 x -4) (/.f64 1/2 (*.f64 x x))))"]],"time":219.74609375,"type":"simplify"},{"compiler":[[17459,11317]],"time":191.514892578125,"type":"eval"},{"alts":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","fresh",32.9096726292424],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",41.92818818391915],["(*.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2)))","fresh",25.362822964423074],["(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","fresh",41.0510375028219],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","next",25.28322999235145],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","done",25.098533507234215],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",25.368720523033723],["(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","fresh",36.6110101769632],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))","fresh",34.18242963214343],["(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (*.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (pow.f64 n -3)) (*.f64 (log.f64 x) (pow.f64 n -2)))) x)","fresh",39.84007157900811]],"compiler":[[13,9],[46,33],[86,52],[81,50],[64,40],[43,31],[45,31],[30,18],[129,75],[26,19],[13,9],[46,33],[86,52],[81,50],[64,40],[45,31],[30,18],[129,75],[26,19]],"count":[[286,10]],"kept":[{"done":[0,0],"fresh":[9,4],"new":[276,5],"picked":[1,1]}],"min-error":[0.08518498016428752],"time":96.772216796875,"type":"prune"},{"compiler":[[365,161]],"locations":[["(-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))",3.0463279001216614,false],["(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))",6.347442621434535,false],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))",6.854782367652944,true],["(cbrt.f64 (pow.f64 (log1p.f64 x) 2))",13.95175555994119,true]],"time":81.765869140625,"type":"localize"},{"count":[[2,29]],"series":[["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","-inf",0.586181640625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","inf",1.1689453125],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","n","0",1.369140625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","-inf",12.4619140625],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","inf",13.72705078125],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","x","0",2.406982421875],["(cbrt.f64 (pow.f64 (log1p.f64 x) 2))","x","-inf",1.447998046875],["(cbrt.f64 (pow.f64 (log1p.f64 x) 2))","x","inf",1.169921875],["(cbrt.f64 (pow.f64 (log1p.f64 x) 2))","x","0",0.720947265625]],"time":36.051025390625,"type":"series"},{"count":[[2,68]],"inputs":[["(cbrt.f64 (pow.f64 (log1p.f64 x) 2))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) 4) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (log1p.f64 x))) (neg.f64 (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log1p.f64 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 x) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 x) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 x) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (+.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2))) (-.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (*.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 (/.f64 (log.f64 x) (neg.f64 n)) (/.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 0) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (pow.f64 n -3) -1/6) (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (neg.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2) (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 2/3) (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2/3) (+.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log.f64 x) n) 4) 1/4)) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 (cbrt.f64 1/2) (pow.f64 (/.f64 (log.f64 x) n) 2/3))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 (cbrt.f64 1/2) (pow.f64 (/.f64 (log.f64 x) n) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2/3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (pow.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) 2/3) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (fma.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 1 (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2/3) (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))"]],"rules":[["egg-rr",51],["egg-rr",17]],"time":44.655029296875,"type":"rewrite"},{"count":[[97,116]],"inputs":[["(pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))) (pow.f64 x 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))) (pow.f64 x 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) (+.f64 1 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3))))) (pow.f64 x 3)))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3))))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -4/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (pow.f64 x 3)))))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 x) n) (pow.f64 1 1/3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) n) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (*.f64 n (pow.f64 x 3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))))))))))))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (*.f64 n (pow.f64 x 3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 -1/3 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) (+.f64 1 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3)))))))) (*.f64 n (pow.f64 x 4))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) 2) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 10)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 1/4 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))))))))))))))))))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))))) (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -4/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/4 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) 2) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 10)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))))) (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))))))))))))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 x) 2))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3))","(fma.f64 -2/3 (/.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9) x) (cbrt.f64 (pow.f64 (log.f64 x) 2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))) (pow.f64 x 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4)) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9)))) (pow.f64 x -2)) (fma.f64 -2/3 (/.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9) x) (cbrt.f64 (pow.f64 (log.f64 x) 2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))) (pow.f64 x 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (/.f64 1 x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (/.f64 (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) (+.f64 1 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3))))) (pow.f64 x 3)))) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4)) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9)))) (pow.f64 x -2)) (fma.f64 -2/3 (/.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9) x) (fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4)) (-.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (fma.f64 -4/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9)))) (*.f64 -8/27 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) 5)))))) (pow.f64 x -3)) (cbrt.f64 (pow.f64 (log.f64 x) 2)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3)","(cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3))","(fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9) x) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4))) (pow.f64 x -2)) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9) x) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (/.f64 1 x))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (/.f64 (-.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -4/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (pow.f64 x 3)))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4))) (pow.f64 x -2)) (fma.f64 2/3 (/.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9) x) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))) (/.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) (-.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 -8/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5)) (*.f64 -4/3 (*.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))))) -1/3) (pow.f64 x 3)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 x) n) (pow.f64 1 1/3))) (*.f64 -1/6 (/.f64 (pow.f64 (log.f64 x) 3) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (-.f64 (*.f64 (*.f64 -1/6 (pow.f64 (log.f64 x) 3)) (pow.f64 n -3)) (/.f64 (log.f64 x) n)) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 n 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) n) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))))) x)","(/.f64 (fma.f64 1/6 (*.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (pow.f64 n -3)) (fma.f64 1/3 (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) n) (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (/.f64 1 1))) (*.f64 (log.f64 x) (pow.f64 n -2)))) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)) (/.f64 1 1)) (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9)) (*.f64 n (*.f64 x x))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (*.f64 n (*.f64 1 (*.f64 x x)))) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (*.f64 n x)) (/.f64 1 1)))))))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (*.f64 n (pow.f64 x 3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))))))))))))))","(fma.f64 1/6 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (+.f64 (*.f64 1/3 (+.f64 (/.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)) (/.f64 1 1)) (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9)) (*.f64 n (*.f64 x x))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (-.f64 1/3 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -5) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) 1/27) 1))))) (*.f64 (*.f64 n 1) (pow.f64 x 3))))) (fma.f64 1/6 (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (*.f64 n (*.f64 1 (*.f64 x x)))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (*.f64 n x)) (/.f64 1 1))) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (*.f64 n n)) (pow.f64 x -3)) (fma.f64 1/6 (*.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (log.f64 x) 2) (+.f64 (*.f64 (log.f64 x) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)) (neg.f64 (*.f64 (log.f64 x) 2))))) (pow.f64 (*.f64 n x) -3)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4))) (+.f64 (fma.f64 1/2 (neg.f64 (log.f64 x)) (*.f64 -1/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))))) (*.f64 n (pow.f64 x 3))) (/.f64 1 1))) (/.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) -1/3) (*.f64 (*.f64 n 1) (pow.f64 x 3)))))))))))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 n 2))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (*.f64 1/4 (/.f64 1 (pow.f64 n 2))))) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 (pow.f64 n 3) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (*.f64 n x)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -2/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (/.f64 1 (pow.f64 n 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 1 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) 1))) (*.f64 2 (log.f64 (/.f64 1 x)))))) (*.f64 (pow.f64 n 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (*.f64 n (pow.f64 x 3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) (+.f64 1 (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 -1/2 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (*.f64 -2 (log.f64 (/.f64 1 x))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9)))))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (/.f64 1 (pow.f64 n 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 11/12 (*.f64 1/2 (log.f64 (/.f64 1 x)))) (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (pow.f64 n 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 n 3))) (*.f64 -4/3 (/.f64 (log.f64 (/.f64 1 x)) (pow.f64 n 3))))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9)))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 -1/3 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (*.f64 1/2 (log.f64 (/.f64 1 x))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/3) (-.f64 (*.f64 -2/3 (log.f64 (/.f64 1 x))) (+.f64 1 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 (/.f64 1 x))) 1/9) (-.f64 (+.f64 1 (log.f64 (/.f64 1 x))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 16)) 1/9))))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/3)))))))) (*.f64 n (pow.f64 x 4))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (pow.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) 1/3)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) 2) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 10)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 1/4 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (-.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))))))))) (*.f64 n (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 4)))))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 x)) (*.f64 (pow.f64 n 2) x))))))))))))))))))))","(fma.f64 1/2 (*.f64 (fma.f64 2/3 (pow.f64 n -2) (/.f64 (+.f64 (neg.f64 (*.f64 (log.f64 x) 1/2)) 1/4) (*.f64 n n))) (pow.f64 x -4)) (fma.f64 1/3 (/.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)) (/.f64 1 1)) (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9)) (*.f64 n (*.f64 x x))) (fma.f64 1/6 (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (*.f64 n x)) (/.f64 1 1))) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (*.f64 n n)) (pow.f64 x -3)) (fma.f64 1/6 (*.f64 (+.f64 1 (fma.f64 1/3 (pow.f64 (log.f64 x) 2) (+.f64 (*.f64 (log.f64 x) (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1)) (neg.f64 (*.f64 (log.f64 x) 2))))) (pow.f64 (*.f64 n x) -3)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4))) (+.f64 (fma.f64 1/2 (neg.f64 (log.f64 x)) (*.f64 -1/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))))) (*.f64 n (pow.f64 x 3))) (/.f64 1 1))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (*.f64 (*.f64 n 1) (pow.f64 x 3))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (-.f64 1/3 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -5) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) 1/27) 1))))) (*.f64 (*.f64 n 1) (pow.f64 x 3))) (fma.f64 1/6 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4))) (+.f64 (fma.f64 1/2 (neg.f64 (log.f64 x)) (*.f64 -1/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9))))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (*.f64 (*.f64 n 1) (pow.f64 x 4))) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 n -3) (+.f64 (/.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 11/12 (neg.f64 (*.f64 (log.f64 x) 1/2)))) (*.f64 -1/2 (-.f64 1 (log.f64 x)))) (pow.f64 n 3)) (/.f64 (+.f64 (neg.f64 (*.f64 -4/3 (log.f64 x))) (*.f64 -1/4 (pow.f64 (log.f64 x) 2))) (pow.f64 n 3)))) (pow.f64 x -4)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (*.f64 n (*.f64 1 (*.f64 x x)))) (+.f64 (*.f64 1/3 (+.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (-.f64 1/3 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -5) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) 1/27) 1))) (neg.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) 1/9)))) (*.f64 (*.f64 n 1) (pow.f64 x 4))) (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) 1/9) (*.f64 (/.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -4))) (+.f64 (-.f64 (fma.f64 -2/3 (neg.f64 (log.f64 x)) -1) (fma.f64 -4/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (+.f64 (-.f64 1 (log.f64 x)) (*.f64 -4/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9)))) (*.f64 -8/27 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) 5))))) (-.f64 (neg.f64 (*.f64 (log.f64 x) -1/3)) (fma.f64 -2/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (fma.f64 1/2 (neg.f64 (log.f64 x)) (*.f64 -1/3 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) 16) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) 5))))))) (*.f64 n (pow.f64 x 4))) (/.f64 1 1))))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (log.f64 x) 2))) (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))) 2) (neg.f64 (log.f64 x))) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -10) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -10)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (+.f64 1/4 (*.f64 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -5) 1/9) (*.f64 (-.f64 1/3 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (neg.f64 (log.f64 x)) -5) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (+.f64 1/2 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 -1 (log.f64 x)) 1/9) (cbrt.f64 (pow.f64 -1 -1/3))))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 x)) -2)) 1/27) 1))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)))) 2/3)))))) (*.f64 (*.f64 n 1) (pow.f64 x 4))) (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x))))))))))))))))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x))","(neg.f64 (/.f64 (-.f64 (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3)))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2))) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))))) (/.f64 (pow.f64 x -2) n)) (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9) (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9))) (/.f64 (pow.f64 x -2) n)))) (-.f64 (fma.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 2 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2)))) (/.f64 (-.f64 (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3)))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2))) x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))))) (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9) (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9))) (/.f64 (pow.f64 x -2) n)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))))) (/.f64 (pow.f64 x -2) n)))) (-.f64 (-.f64 (fma.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 2 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2)))) (/.f64 (-.f64 (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3)))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2))) x)) (*.f64 (fma.f64 1/6 (*.f64 (+.f64 (+.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 -1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))) (pow.f64 n -3)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) (+.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9)))))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (/.f64 (*.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) n))) (fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n)) (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) (+.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -5) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) -1/3) n)))) (pow.f64 x -3))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))) (*.f64 n (pow.f64 x 2))))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 -1/4 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 (+.f64 11/12 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/2 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 11/12 (/.f64 1 (pow.f64 n 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (+.f64 (*.f64 2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (*.f64 (pow.f64 n 3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -4/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/4 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) 2) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 10)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))))))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) (*.f64 n (pow.f64 x 4))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1/3 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (pow.f64 n 3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/3) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 16)) 1/9)))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))) (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9)))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 (*.f64 1/2 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))))) (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) (+.f64 1/3 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) 1/3) (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3))) n) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/9))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (*.f64 -2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 n 3))))) x)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (pow.f64 n 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) (pow.f64 n 2)))) (pow.f64 x 2))))))))))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) (+.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9)))))))) (/.f64 (pow.f64 x -4) n)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9) (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9))) (/.f64 (pow.f64 x -2) n)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))))) (/.f64 (pow.f64 x -2) n)))) (fma.f64 1/6 (*.f64 (-.f64 (fma.f64 -1/4 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (+.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 2/3 (+.f64 11/12 (*.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (*.f64 -1/2 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (*.f64 (pow.f64 n -3) (pow.f64 x -4))) (fma.f64 1/2 (*.f64 (/.f64 (+.f64 11/12 (*.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n)) (pow.f64 x -4)) (fma.f64 1/6 (*.f64 (fma.f64 -1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 2 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (*.f64 (pow.f64 n -3) (pow.f64 x -2))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9) (/.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4))) (+.f64 (-.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 -8/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5)) (*.f64 -4/3 (*.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))))) (-.f64 (*.f64 -1/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (fma.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9) (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))))))))) (*.f64 n (pow.f64 x 4)))) (+.f64 (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) (+.f64 (*.f64 (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) (+.f64 1/4 (fma.f64 1/3 (/.f64 (pow.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) 2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -10) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))) (*.f64 (*.f64 2/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -5) 1/9)) (+.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -5) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))))))) (/.f64 (pow.f64 x -4) n)) (*.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9)) (+.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -5) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (/.f64 (pow.f64 x -4) n)))) (-.f64 (-.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 n n)) (pow.f64 x -2))) (/.f64 (-.f64 (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) -3) (pow.f64 n 3)))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (pow.f64 n -2))) x)) (*.f64 (fma.f64 1/6 (*.f64 (+.f64 (+.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (+.f64 -1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (fma.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)))) (pow.f64 n -3)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) (+.f64 (+.f64 (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 -4/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9))) (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 -1/3 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 16) 1/9)))))) n) (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) 1/9)) (/.f64 (*.f64 (*.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9))) (neg.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) 1/9))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) n))) (fma.f64 1/2 (/.f64 (+.f64 1 (*.f64 -2/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 n n)) (/.f64 (*.f64 (*.f64 (*.f64 (*.f64 3 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2))) (+.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -5) 1/9) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) -1/3) n)))) (pow.f64 x -3))))))))))","(*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))","(*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3)))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n) (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)","(/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (+.f64 (pow.f64 (*.f64 (log.f64 (+.f64 1 x)) (log.f64 x)) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)","(/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) (pow.f64 n 2))) (+.f64 (*.f64 -1/6 (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 (+.f64 1 x)) 3)) (pow.f64 n 3))) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (log.f64 x) (log.f64 (+.f64 1 x))) 1/3) (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 x)) 2) 1/3) (pow.f64 (pow.f64 (log.f64 x) 2) 1/3))) (-.f64 (pow.f64 (log.f64 (+.f64 1 x)) 1/3) (pow.f64 (log.f64 x) 1/3))) n))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 x) 2) (pow.f64 n 2))))","(+.f64 (fma.f64 1/2 (*.f64 (pow.f64 (log1p.f64 x) 2) (pow.f64 n -2)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n))) (*.f64 -1/2 (pow.f64 (neg.f64 (/.f64 (log.f64 x) n)) 2)))"]],"time":218.919921875,"type":"simplify"},{"compiler":[[26334,17145]],"time":271.60302734375,"type":"eval"},{"alts":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","fresh",32.9096726292424],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","fresh",41.92818818391915],["(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","fresh",41.0510375028219],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","done",25.28322999235145],["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","done",25.098533507234215],["(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","fresh",36.6110101769632],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))","fresh",34.18242963214343],["(*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) 2))","fresh",25.362822964423074],["(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (*.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (pow.f64 n -3)) (*.f64 (log.f64 x) (pow.f64 n -2)))) x)","fresh",39.84007157900811],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)","fresh",18.90413642377372]],"compiler":[[13,9],[46,33],[81,50],[64,40],[43,31],[30,18],[129,75],[86,52],[26,19],[29,15]],"count":[[261,10]],"kept":[{"done":[1,1],"fresh":[8,6],"new":[251,2],"picked":[1,1]}],"min-error":[0.08518498016428752],"time":72.27392578125,"type":"prune"},{"accuracy":[8.81502257165504],"baseline":[18.90413642377372],"branch":[["x",12.079243430667207,3],["n",8.81502257165504,6],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))",11.890848183237964,2],["(/.f64 1 n)",9.406698626615322,5]],"compiler":[[3,2],[3,2],[15,11],[5,4],[976,527]],"count":[[19,6]],"inputs":[["(*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)) (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))))) 2))","(/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 (cbrt.f64 (log.f64 x)) (cbrt.f64 (log1p.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (*.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (pow.f64 n -3)) (*.f64 (log.f64 x) (pow.f64 n -2)))) x)","(-.f64 (+.f64 (*.f64 1/6 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x)) (+.f64 1 (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (pow.f64 (neg.f64 (log.f64 x)) 2) (*.f64 -2 (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 n 3) (*.f64 x x))) (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 1 (neg.f64 (log.f64 x))) (*.f64 n n)) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 (*.f64 n n) x))) (/.f64 1 (*.f64 n x))))) (/.f64 1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 x) (log.f64 x))) 3) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(*.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 (log.f64 x) n) 2) 1/2 (*.f64 1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) 2)))","(/.f64 (+.f64 (/.f64 1 n) (fma.f64 1/6 (/.f64 (*.f64 (+.f64 2 1) (pow.f64 (neg.f64 (log.f64 x)) 2)) (pow.f64 n 3)) (neg.f64 (/.f64 (neg.f64 (log.f64 x)) (*.f64 n n))))) x)","(*.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n))) 2)) (+.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (/.f64 (log.f64 x) n) 4))) (*.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))) (-.f64 (cbrt.f64 (fma.f64 (pow.f64 n -3) (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2)) (+.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (*.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x))))) (-.f64 (cbrt.f64 (log1p.f64 x)) (cbrt.f64 (log.f64 x)))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (-.f64 (log1p.f64 x) (log.f64 x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))"]],"link":["."],"name":["2nthrt (problem 3.4.6)"],"oracle":[51.75878200792467],"outputs":[["(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n)))","(+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x)))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))","(+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x))))","(-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))"]],"time":110.692138671875,"times":[["x",23.190185546875],["n",34.99609375],["(-.f64 (pow.f64 (+.f64 x 1) (/.f64 1 n)) (pow.f64 x (/.f64 1 n)))",3.865966796875],["(/.f64 1 n)",30.623046875]],"type":"regimes"},{"bstep":[[8.056263945040677e+180,1.5687420699234986e+182,86.718017578125],[1.920372343687909e+133,6.09844453529404e+148,91.72705078125],[1.035405431623576e+22,1.6176703675889753e+27,43.281005859375],[5.903445761400776e-6,480.0197778830897,8.23095703125],[-492907840.3761622,-459967186.98096496,41.139892578125]],"compiler":[[31,19],[14,10],[17,13],[3,2]],"method":["binary-search","binary-search","binary-search","binary-search","binary-search"],"time":271.510986328125,"type":"bsearch"},{"compiler":[[263,158]],"inputs":[["(if (<=.f64 n -4134810653042197/8388608) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (if (<=.f64 n 1) (-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n))) (if (<=.f64 n 10354054316235759288320) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x))) (if (<=.f64 n 19203723436879088893470151759330812956353471735941661585486744310559483343529954631512578527406483377655041388418372645124902704119808) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (if (<=.f64 n 8056263945040676807876733744461311068161598397766003140057494886776300983332432399923515191882691416859782062063317006133419186875891185337503311564547941408830328349209504117686272) (+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x)))) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 n -4134810653042197/8388608) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (if (<=.f64 n 1) (-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n))) (if (<=.f64 n 10354054316235759288320) (+.f64 (*.f64 (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n))) (pow.f64 x -2)) (/.f64 (exp.f64 (/.f64 (log.f64 x) n)) (*.f64 n x))) (if (<=.f64 n 19203723436879088893470151759330812956353471735941661585486744310559483343529954631512578527406483377655041388418372645124902704119808) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))) (if (<=.f64 n 8056263945040676807876733744461311068161598397766003140057494886776300983332432399923515191882691416859782062063317006133419186875891185337503311564547941408830328349209504117686272) (+.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (*.f64 (log.f64 x) (-.f64 1 (log.f64 x))) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (neg.f64 (*.f64 (log.f64 x) -2)))) (/.f64 (pow.f64 n -3) (*.f64 x x))) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (+.f64 (/.f64 (log.f64 x) (*.f64 (*.f64 n n) x)) (/.f64 1 (*.f64 n x))))) (/.f64 -1/2 (*.f64 n (*.f64 x x)))) (-.f64 (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (*.f64 (*.f64 -1/6 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3))) (pow.f64 n -3))) (*.f64 1/2 (pow.f64 (/.f64 (log.f64 x) n) 2))))))))","(if (<=.f64 n -4134810653042197/8388608) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (if (<=.f64 n 1) (-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (exp.f64 (/.f64 (log.f64 x) n))) (if (<=.f64 n 10354054316235759288320) (*.f64 (exp.f64 (/.f64 (log.f64 x) n)) (+.f64 (*.f64 (fma.f64 1/2 (pow.f64 n -2) (/.f64 -1/2 n)) (pow.f64 x -2)) (/.f64 1 (*.f64 n x)))) (if (<=.f64 n 19203723436879088893470151759330812956353471735941661585486744310559483343529954631512578527406483377655041388418372645124902704119808) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))) (if (<=.f64 n 8056263945040676807876733744461311068161598397766003140057494886776300983332432399923515191882691416859782062063317006133419186875891185337503311564547941408830328349209504117686272) (fma.f64 -1/2 (/.f64 (pow.f64 x (neg.f64 2)) n) (fma.f64 (fma.f64 (fma.f64 (-.f64 1 (log.f64 x)) (log.f64 x) (fma.f64 -1/2 (pow.f64 (log.f64 x) 2) (*.f64 (log.f64 x) 2))) (/.f64 (pow.f64 n -3) (*.f64 x x)) (/.f64 (*.f64 3 (pow.f64 (log.f64 x) 2)) (*.f64 (pow.f64 n 3) x))) 1/6 (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 n -2) (-.f64 1 (log.f64 x))) (*.f64 x x)) (/.f64 (+.f64 (/.f64 1 n) (/.f64 (log.f64 x) (*.f64 n n))) x)))) (+.f64 (fma.f64 1/2 (pow.f64 (/.f64 (log1p.f64 x) n) 2) (/.f64 (log.f64 (/.f64 (+.f64 1 x) x)) n)) (fma.f64 -1/6 (*.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log1p.f64 x) 3)) (pow.f64 n -3)) (*.f64 -1/2 (pow.f64 (/.f64 (log.f64 x) n) 2)))))))))"]],"stop":[["fuel",1]],"time":21.031005859375,"type":"simplify"},{"time":0.032958984375,"type":"soundness"},{"compiler":[[263,158]],"remove-preprocessing":[[]],"time":70.81494140625,"type":"end"}]