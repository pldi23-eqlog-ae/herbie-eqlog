[{"compiler":[[33,24]],"method":["search"],"sampling":[[1,1.5243887901117388e-5,0.0,0.9999847561120989],[0,0.0,1.5243887901117388e-5,0.9999847561120989]],"time":0.214111328125,"type":"analyze"},{"outcomes":[["body",512,"valid",2.879150390625,32],["body",1024,"valid",8.625732421875,66],["body",256,"valid",403.4541015625,8158]],"time":422.755859375,"type":"sample"},{"compiler":[[10,7]],"inputs":[["0","1","2"],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))","(+.f64 (-.f64 1 uy) (*.f64 uy maxCos))","(+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))","(+.f64 (-.f64 1 ux) (*.f64 ux uy))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))","(fma.f64 ux maxCos (-.f64 1 ux))","(+.f64 (-.f64 1 uy) (*.f64 uy maxCos))","(fma.f64 uy maxCos (-.f64 1 uy))","(+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))","(fma.f64 ux maxCos (-.f64 1 maxCos))","(+.f64 (-.f64 1 ux) (*.f64 ux uy))","(fma.f64 uy ux (-.f64 1 ux))"]],"symmetry":[[]],"time":72.1611328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))","(fma.f64 ux maxCos (-.f64 1 ux))"]],"time":18.07080078125,"type":"simplify"},{"compiler":[[16,10]],"time":0.316162109375,"type":"eval"},{"alts":[["(fma.f64 ux maxCos (-.f64 1 ux))","next",0.02734375]],"compiler":[[9,6],[9,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.02734375],"time":0.81689453125,"type":"prune"},{"compiler":[[15,9]],"locations":[["(fma.f64 ux maxCos (-.f64 1 ux))",0.01171875,true]],"time":3.77001953125,"type":"localize"},{"count":[[1,24]],"series":[["(fma.f64 ux maxCos (-.f64 1 ux))","maxCos","-inf",1.156982421875],["(fma.f64 ux maxCos (-.f64 1 ux))","maxCos","inf",0.279052734375],["(fma.f64 ux maxCos (-.f64 1 ux))","maxCos","0",0.26904296875],["(fma.f64 ux maxCos (-.f64 1 ux))","ux","-inf",0.405029296875],["(fma.f64 ux maxCos (-.f64 1 ux))","ux","inf",0.328857421875],["(fma.f64 ux maxCos (-.f64 1 ux))","ux","0",0.39306640625]],"time":2.908935546875,"type":"series"},{"count":[[1,73]],"inputs":[["(fma.f64 ux maxCos (-.f64 1 ux))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 ux maxCos 1) (neg.f64 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 ux) (fma.f64 ux maxCos 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 ux (-.f64 maxCos 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 ux (-.f64 maxCos 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (*.f64 ux (-.f64 1 maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (*.f64 ux (-.f64 1 maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 ux maxCos) (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux)))) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 ux (-.f64 maxCos 1)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (neg.f64 (fma.f64 ux maxCos 1))) (neg.f64 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (fma.f64 ux maxCos 1) -1)) (neg.f64 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 ux maxCos) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux)))) (/.f64 (pow.f64 ux 3) (-.f64 -1 (fma.f64 ux ux ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))) (neg.f64 (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 ux maxCos) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 ux) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 ux (-.f64 maxCos 1)) 3) 4)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 ux maxCos) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux)))) (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 ux maxCos) (+.f64 ux -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 ux maxCos 1) ux)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))) (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 ux (-.f64 maxCos 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (*.f64 ux (-.f64 1 maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (-.f64 ux (fma.f64 ux maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (+.f64 9 (-.f64 ux (fma.f64 ux maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (+.f64 3 (-.f64 ux (fma.f64 ux maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (+.f64 2 (*.f64 ux (-.f64 1 maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))) (+.f64 0 (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (*.f64 ux maxCos) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux)))) 1) (/.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))) 1) (/.f64 (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 ux (-.f64 maxCos 1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 (*.f64 ux (-.f64 1 maxCos)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 ux (fma.f64 ux maxCos 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (/.f64 1 (-.f64 -1 (fma.f64 ux ux ux))) (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 ux) (neg.f64 (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 ux (fma.f64 ux maxCos 1))) (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 ux -1) 2/3) (-.f64 (pow.f64 (*.f64 ux maxCos) 2/3) (*.f64 (cbrt.f64 (-.f64 1 ux)) (cbrt.f64 (*.f64 ux maxCos))))) (+.f64 (cbrt.f64 (-.f64 1 ux)) (cbrt.f64 (*.f64 ux maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 ux maxCos) 2/3) (-.f64 (pow.f64 (+.f64 ux -1) 2/3) (*.f64 (cbrt.f64 (*.f64 ux maxCos)) (cbrt.f64 (-.f64 1 ux))))) (+.f64 (cbrt.f64 (*.f64 ux maxCos)) (cbrt.f64 (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 ux maxCos) 2/3) (+.f64 (pow.f64 (+.f64 ux -1) 2/3) (*.f64 (cbrt.f64 (*.f64 ux maxCos)) (cbrt.f64 (+.f64 ux -1))))) (-.f64 (cbrt.f64 (*.f64 ux maxCos)) (cbrt.f64 (+.f64 ux -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 ux (fma.f64 ux maxCos 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 ux (fma.f64 ux maxCos 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (*.f64 ux (-.f64 maxCos 1)) 3)) (+.f64 1 (-.f64 (*.f64 (*.f64 ux (-.f64 maxCos 1)) (*.f64 ux (-.f64 maxCos 1))) (*.f64 ux (-.f64 maxCos 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 3)) (+.f64 1 (+.f64 (*.f64 (*.f64 ux (-.f64 1 maxCos)) (*.f64 ux (-.f64 1 maxCos))) (*.f64 ux (-.f64 1 maxCos)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 ux (-.f64 maxCos 1)) 3) -1) (+.f64 (*.f64 (*.f64 ux (-.f64 maxCos 1)) (*.f64 ux (-.f64 maxCos 1))) (+.f64 1 (*.f64 (*.f64 ux (-.f64 maxCos 1)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 ux (fma.f64 ux maxCos 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 ux (-.f64 maxCos 1)) 3) 1) (+.f64 (*.f64 (*.f64 ux (-.f64 maxCos 1)) (*.f64 ux (-.f64 maxCos 1))) (-.f64 1 (*.f64 (*.f64 ux (-.f64 maxCos 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 ux (fma.f64 ux maxCos 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos)) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (*.f64 ux (-.f64 maxCos 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 ux)) (pow.f64 (+.f64 ux -1) 2/3) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 ux -1) 2/3) (cbrt.f64 (-.f64 1 ux)) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 ux -1) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 ux (cbrt.f64 maxCos)) (pow.f64 maxCos 2/3) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 ux) (*.f64 (pow.f64 ux 2/3) maxCos) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 ux maxCos)) (pow.f64 (*.f64 ux maxCos) 2/3) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 ux maxCos (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 ux 3)) (/.f64 -1 (-.f64 -1 (fma.f64 ux ux ux))) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 maxCos ux (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 ux maxCos) 1 (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 ux) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 ux) 1 (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 ux maxCos) (-.f64 1 ux))))))"]],"rules":[["egg-rr",73]],"time":42.110107421875,"type":"rewrite"},{"count":[[97,83]],"inputs":[["1","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(*.f64 (-.f64 maxCos 1) ux)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(-.f64 1 ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(*.f64 (-.f64 maxCos 1) ux)","(*.f64 (+.f64 maxCos -1) ux)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(fma.f64 ux (+.f64 maxCos -1) 1)","(*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))","(*.f64 (+.f64 maxCos -1) ux)","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(fma.f64 ux (+.f64 maxCos -1) 1)","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 1 ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(fma.f64 ux (+.f64 maxCos -1) 1)"]],"time":88.735107421875,"type":"simplify"},{"compiler":[[1026,632]],"time":14.056884765625,"type":"eval"},{"alts":[["(fma.f64 ux (+.f64 maxCos -1) 1)","next",0.015625],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","fresh",0.6960526367581884]],"compiler":[[9,7],[12,9],[9,7],[12,9]],"count":[[84,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[83,2],"picked":[1,0]}],"min-error":[0.0078125],"time":15.988037109375,"type":"prune"},{"compiler":[[16,11]],"time":3.89404296875,"type":"localize"},{"compiler":[[3,3]],"time":0.087890625,"type":"eval"},{"alts":[["(fma.f64 ux (+.f64 maxCos -1) 1)","done",0.015625],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","next",0.6960526367581884]],"compiler":[[9,7],[12,9],[12,9]],"count":[[2,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[0,0],"picked":[1,1]}],"min-error":[0.0078125],"time":0.994140625,"type":"prune"},{"compiler":[[32,20]],"locations":[["(fma.f64 ux maxCos (-.f64 1 ux))",0.01171875,false],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))",0.10546875,true],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)",0.7038651367581884,true]],"time":8.2568359375,"type":"localize"},{"count":[[2,16]],"series":[["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","maxCos","-inf",0.239013671875],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","maxCos","inf",0.259033203125],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","maxCos","0",0.6640625],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","ux","-inf",0.279052734375],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","ux","inf",0.25],["(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))","ux","0",0.26416015625],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","maxCos","-inf",0.4580078125],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","maxCos","inf",0.551025390625],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","maxCos","0",2.511962890625],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","ux","-inf",0.47802734375],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","ux","inf",0.784912109375],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","ux","0",1.09619140625]],"time":8.041015625,"type":"series"},{"count":[[2,69]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","(cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 0) (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 ux maxCos (-.f64 1 ux))) (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 0 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 ux maxCos) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 ux) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 maxCos ux 1) (neg.f64 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 ux) (fma.f64 maxCos ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 maxCos ux 1) 1) (neg.f64 ux))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 ux maxCos) (neg.f64 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (neg.f64 ux) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 ux maxCos) ux) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 ux maxCos) (+.f64 ux -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 ux maxCos) 0) (+.f64 ux -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 ux maxCos) (/.f64 1 (fma.f64 ux ux (+.f64 1 ux)))) (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 maxCos ux 1) ux)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 ux ux (+.f64 1 ux))) (-.f64 (/.f64 (pow.f64 ux 3) (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 ux maxCos) ux) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 ux -1) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 ux (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4/3) 2) (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 ux -1) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 ux (fma.f64 maxCos ux 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 ux)) (pow.f64 (-.f64 1 ux) 2/3) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 ux) 2/3) (cbrt.f64 (-.f64 1 ux)) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 ux (cbrt.f64 maxCos)) (pow.f64 maxCos 2/3) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 ux) (*.f64 (pow.f64 ux 2/3) maxCos) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 ux maxCos)) (cbrt.f64 (pow.f64 (*.f64 ux maxCos) 2)) (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 ux maxCos (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 ux 3)) (/.f64 1 (fma.f64 ux ux (+.f64 1 ux))) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 maxCos ux (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 ux -1) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 ux) 1 (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 ux) (*.f64 ux maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 ux maxCos) 1 (-.f64 1 ux))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 ux maxCos) (-.f64 1 ux))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 0) (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (*.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (*.f64 0 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))"]],"rules":[["egg-rr",18],["egg-rr",51]],"time":24.842041015625,"type":"rewrite"},{"count":[[85,98]],"inputs":[["1","(+.f64 1 (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1)))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))) (pow.f64 ux 2)) (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1))))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))) (pow.f64 ux 2)) (+.f64 (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1)))) (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (+.f64 (*.f64 -4/27 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (*.f64 1/3 (*.f64 (-.f64 maxCos 1) (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))))))))))","(*.f64 (pow.f64 1 1/3) (-.f64 1 ux))","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (+.f64 (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))) (*.f64 (pow.f64 maxCos 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (+.f64 (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))) (+.f64 (*.f64 (pow.f64 maxCos 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2)))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2)))) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 ux 3) (-.f64 1 ux)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))))) (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3)) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))) (pow.f64 1 1/3)))))) (pow.f64 maxCos 3)))))","1","(+.f64 1 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)) (*.f64 -1/9 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3))))) (*.f64 -1/9 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))))","(pow.f64 (-.f64 1 ux) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (pow.f64 (-.f64 1 ux) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))) (pow.f64 (-.f64 1 ux) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))) (pow.f64 (-.f64 1 ux) 1/3))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1)))))","(+.f64 1 (*.f64 ux (+.f64 maxCos -1)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))) (pow.f64 ux 2)) (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1))))))","(+.f64 1 (fma.f64 (+.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) (+.f64 1/9 -1/9)) 0) (*.f64 ux ux) (*.f64 ux (+.f64 maxCos -1))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))) (pow.f64 ux 2)) (+.f64 (*.f64 ux (+.f64 (*.f64 2/3 (-.f64 maxCos 1)) (*.f64 1/3 (-.f64 maxCos 1)))) (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (+.f64 (*.f64 -4/27 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (*.f64 1/3 (*.f64 (-.f64 maxCos 1) (+.f64 (*.f64 1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2))))))))))))","(+.f64 1 (fma.f64 (+.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) (+.f64 1/9 -1/9)) 0) (*.f64 ux ux) (fma.f64 ux (+.f64 maxCos -1) (*.f64 (pow.f64 ux 3) (fma.f64 -2/3 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) -5/27) (fma.f64 -4/27 (pow.f64 (+.f64 maxCos -1) 3) (fma.f64 -1/3 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) -5/27) (*.f64 (*.f64 1/3 (+.f64 maxCos -1)) (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/9)))))))))","(*.f64 (pow.f64 1 1/3) (-.f64 1 ux))","(-.f64 1 ux)","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))))","(+.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 4) 1/9) ux)))","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (+.f64 (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))) (*.f64 (pow.f64 maxCos 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))))))))","(+.f64 (-.f64 1 ux) (fma.f64 maxCos (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 4) 1/9) ux) (*.f64 (*.f64 maxCos maxCos) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 -1 (+.f64 ux -1)) 1/9) (*.f64 ux ux)) (fma.f64 (cbrt.f64 (-.f64 1 ux)) (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -4) 1/9) (*.f64 ux ux)) -1/9) (*.f64 (*.f64 -1/9 (pow.f64 (/.f64 -1 (+.f64 ux -1)) 1/9)) (*.f64 ux ux)))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (-.f64 1 ux)) (+.f64 (*.f64 maxCos (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) ux)))) (+.f64 (*.f64 (pow.f64 maxCos 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/9) (pow.f64 ux 2)))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 4)) 1/9) (pow.f64 ux 2)))) ux))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 ux 3) (-.f64 1 ux)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))))) (pow.f64 (*.f64 1 (-.f64 1 ux)) 1/3)) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))) (pow.f64 1 1/3)))))) (pow.f64 maxCos 3)))))","(+.f64 (-.f64 1 ux) (fma.f64 maxCos (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 4) 1/9) ux) (fma.f64 (*.f64 maxCos maxCos) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 -1 (+.f64 ux -1)) 1/9) (*.f64 ux ux)) (fma.f64 (cbrt.f64 (-.f64 1 ux)) (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -4) 1/9) (*.f64 ux ux)) -1/9) (*.f64 (*.f64 -1/9 (pow.f64 (/.f64 -1 (+.f64 ux -1)) 1/9)) (*.f64 ux ux)))) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -2) 1/9) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -4) 1/9) (*.f64 ux ux)) -1/9) ux)) (fma.f64 (fma.f64 -2/27 (/.f64 (pow.f64 ux 3) (-.f64 1 ux)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 ux -1))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (pow.f64 ux 3)) -5/27)))) (cbrt.f64 (-.f64 1 ux)) (fma.f64 -2/27 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (pow.f64 ux 3)) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (pow.f64 ux 3)) -5/27))))) (pow.f64 maxCos 3)))))","1","(+.f64 1 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)))","(+.f64 1 (*.f64 1/3 (*.f64 ux (+.f64 maxCos -1))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)) (*.f64 -1/9 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))))","(+.f64 1 (fma.f64 1/3 (*.f64 ux (+.f64 maxCos -1)) (*.f64 -1/9 (pow.f64 (*.f64 ux (+.f64 maxCos -1)) 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3))))) (*.f64 -1/9 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))))","(+.f64 1 (fma.f64 1/3 (*.f64 ux (+.f64 maxCos -1)) (fma.f64 -1/3 (pow.f64 (*.f64 ux (*.f64 (+.f64 maxCos -1) (cbrt.f64 -5/27))) 3) (*.f64 -1/9 (pow.f64 (*.f64 ux (+.f64 maxCos -1)) 2)))))","(pow.f64 (-.f64 1 ux) 1/3)","(cbrt.f64 (-.f64 1 ux))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (pow.f64 (-.f64 1 ux) 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -2) 1/9) (*.f64 maxCos ux)) (cbrt.f64 (-.f64 1 ux)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))) (pow.f64 (-.f64 1 ux) 1/3)))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -2) 1/9) (*.f64 maxCos ux)) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -7) 1/9) (pow.f64 (*.f64 maxCos ux) 2)) (cbrt.f64 (-.f64 1 ux))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))) (pow.f64 (-.f64 1 ux) 1/3))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -2) 1/9) (*.f64 maxCos ux)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (*.f64 (pow.f64 maxCos 3) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (pow.f64 ux 3)) -5/27))) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -7) 1/9) (pow.f64 (*.f64 maxCos ux) 2)) (cbrt.f64 (-.f64 1 ux)))))"]],"time":77.294921875,"type":"simplify"},{"compiler":[[3494,2536]],"time":47.30712890625,"type":"eval"},{"alts":[["(fma.f64 ux (+.f64 maxCos -1) 1)","done",0.015625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","next",0.6234551269897464]],"compiler":[[9,7],[22,16],[22,16]],"count":[[183,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[181,1],"picked":[1,0]}],"min-error":[0.00390625],"time":44.802001953125,"type":"prune"},{"compiler":[[69,45]],"locations":[["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))",0.12890625,true],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)",0.17578125,true],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))",0.29296875,true],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)",0.607753759768442,true]],"time":29.308837890625,"type":"localize"},{"count":[[4,80]],"series":[["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","maxCos","-inf",1.110107421875],["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","maxCos","inf",2.262939453125],["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","maxCos","0",1.14404296875],["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","ux","-inf",2.375],["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","ux","inf",1.47314453125],["(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))","ux","0",0.870849609375],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","maxCos","-inf",0.89697265625],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","maxCos","inf",0.886962890625],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","maxCos","0",0.85498046875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","ux","-inf",0.849853515625],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","ux","inf",0.7919921875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","ux","0",1.0849609375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","maxCos","-inf",0.27099609375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","maxCos","inf",0.2919921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","maxCos","0",9.8369140625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","ux","-inf",0.26806640625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","ux","inf",0.2890625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","ux","0",26.3779296875],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","maxCos","-inf",0.495849609375],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","maxCos","inf",0.55615234375],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","maxCos","0",1.789794921875],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","ux","-inf",0.509033203125],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","ux","inf",1.322998046875],["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","ux","0",0.93798828125]],"time":58.13916015625,"type":"series"},{"count":[[4,102]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)","(cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 0) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (*.f64 0 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 0) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (*.f64 0 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 2/3) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 3) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) 3) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 0) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (*.f64 0 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (cbrt.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (+.f64 2 3)) (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 0) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) (*.f64 0 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))) (*.f64 -1 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))) (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 4) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3))))))"]],"rules":[["egg-rr",25],["egg-rr",30],["egg-rr",28],["egg-rr",19]],"time":34.259033203125,"type":"rewrite"},{"count":[[182,217]],"inputs":[["1","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) 1)","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (pow.f64 ux 2) (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 49/162 (pow.f64 (-.f64 maxCos 1) 2)))) 1))","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (pow.f64 ux 2) (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 49/162 (pow.f64 (-.f64 maxCos 1) 2)))) (+.f64 1 (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 343/4374 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 7/18 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 2/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3))))))) (*.f64 49/54 (*.f64 (-.f64 maxCos 1) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))))))))))","(pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9)","(+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))","(+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))))) (*.f64 49/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9)) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (+.f64 (*.f64 343/4374 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))) (+.f64 (*.f64 7/18 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))) (-.f64 1 ux))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))))))) (*.f64 49/54 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/9) (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) ux))))) (pow.f64 maxCos 3))) (+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))))) (*.f64 49/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9)) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))))","1","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(*.f64 (-.f64 maxCos 1) ux)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(-.f64 1 ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","1","(+.f64 1 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)))","(+.f64 1 (+.f64 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -1/3 (pow.f64 (-.f64 maxCos 1) 2))) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (+.f64 (*.f64 4/81 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (pow.f64 ux 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -1/3 (pow.f64 (-.f64 maxCos 1) 2))) (pow.f64 ux 2)))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux))))))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (+.f64 (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))))","(+.f64 (*.f64 4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 ux 3)))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (+.f64 (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux))))))","(+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))))","(+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))))))","(pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 2/9 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))) (pow.f64 maxCos 2))) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 2/9 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))) (pow.f64 maxCos 2))) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux))) (*.f64 (*.f64 (+.f64 (*.f64 4/81 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (*.f64 2/9 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))) (pow.f64 maxCos 3)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (pow.f64 (-.f64 (/.f64 1 ux) 1) 2)))) (pow.f64 maxCos 2)) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (pow.f64 (-.f64 (/.f64 1 ux) 1) 2)))) (pow.f64 maxCos 2)) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos)) (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) (-.f64 (/.f64 1 ux) 1)) (pow.f64 ux 2))) (*.f64 4/81 (pow.f64 (-.f64 (/.f64 1 ux) 1) 3))))) (pow.f64 maxCos 3)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2)))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (pow.f64 maxCos 3))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))))))","1","(+.f64 1 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))))","(+.f64 1 (+.f64 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))) (*.f64 (+.f64 (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2))) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2))) (-.f64 (*.f64 2 maxCos) 2))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (-.f64 (*.f64 2 maxCos) 2))) (*.f64 2 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3)))) (*.f64 1/4374 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3)))) (pow.f64 ux 3)) (+.f64 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))) (*.f64 (+.f64 (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2))) (pow.f64 ux 2)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2)))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux)))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 2)))) (pow.f64 ux 2)) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4)))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3) (pow.f64 (-.f64 maxCos 1) 6))) (*.f64 -6 (/.f64 (-.f64 (*.f64 2 maxCos) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/4374 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 3))))) (pow.f64 ux 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 2)))) (pow.f64 ux 2)) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux)))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux))))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))) (pow.f64 ux 2))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 6))) (*.f64 -6 (/.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))))) (*.f64 1/4374 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 3))))) (pow.f64 ux 3))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))) (pow.f64 ux 2)))))","(pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9)","(+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9)) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux)))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9)) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 1/81 (/.f64 (*.f64 ux (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))))) (-.f64 1 ux))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 16 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (*.f64 -12 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))) (*.f64 4/2187 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2)))))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 16 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))))) (*.f64 1/81 (/.f64 (*.f64 (-.f64 1 ux) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) ux)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (pow.f64 maxCos 3)) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 -1/81 (/.f64 (*.f64 (-.f64 1 ux) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) ux)) (+.f64 (*.f64 -4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 1/54 (+.f64 (*.f64 -16 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 12 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)))))))) (pow.f64 maxCos 3))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) 1)","(fma.f64 7/9 (*.f64 (+.f64 maxCos -1) ux) 1)","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (pow.f64 ux 2) (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 49/162 (pow.f64 (-.f64 maxCos 1) 2)))) 1))","(fma.f64 7/9 (*.f64 (+.f64 maxCos -1) ux) (fma.f64 (*.f64 ux ux) (fma.f64 7/6 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/3) (*.f64 49/162 (pow.f64 (+.f64 maxCos -1) 2))) 1))","(+.f64 (*.f64 7/9 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (pow.f64 ux 2) (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 49/162 (pow.f64 (-.f64 maxCos 1) 2)))) (+.f64 1 (*.f64 (pow.f64 ux 3) (+.f64 (*.f64 343/4374 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 7/18 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 2/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3))))))) (*.f64 49/54 (*.f64 (-.f64 maxCos 1) (+.f64 (*.f64 -1/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 2)))))))))))","(+.f64 (fma.f64 7/9 (*.f64 (+.f64 maxCos -1) ux) (fma.f64 (*.f64 ux ux) (fma.f64 7/6 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/3) (*.f64 49/162 (pow.f64 (+.f64 maxCos -1) 2))) 1)) (*.f64 (pow.f64 ux 3) (fma.f64 343/4374 (pow.f64 (+.f64 maxCos -1) 3) (fma.f64 7/18 (+.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) (+.f64 2/9 2/27)) (*.f64 -2 (*.f64 (pow.f64 (+.f64 maxCos -1) 3) -5/27))) (*.f64 (*.f64 49/54 (+.f64 maxCos -1)) (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/3))))))","(pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9)","(+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))","(fma.f64 7/9 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 maxCos ux)) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))","(+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))))) (*.f64 49/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9)) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9)))","(fma.f64 7/9 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 maxCos ux)) (*.f64 (+.f64 (*.f64 (fma.f64 7/6 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -10) 1/9) (*.f64 ux ux)) -1/3) (*.f64 49/162 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -10) 1/9) (*.f64 ux ux)))) (*.f64 maxCos maxCos)) 1) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 (+.f64 (*.f64 343/4374 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))) (+.f64 (*.f64 7/18 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (pow.f64 ux 3))))) (-.f64 1 ux))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/3) (pow.f64 ux 3))))))) (*.f64 49/54 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 5)) 1/9) (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) ux))))) (pow.f64 maxCos 3))) (+.f64 (*.f64 7/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 maxCos ux))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 7/6 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2))))) (*.f64 49/162 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 10)) 1/9) (pow.f64 ux 2)))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9)) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))))","(fma.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9) (*.f64 (fma.f64 343/4374 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -5)) (pow.f64 ux 3)) (fma.f64 7/18 (fma.f64 2/27 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -5)) (pow.f64 ux 3)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -2)) (pow.f64 ux 3)) -5/27) (-.f64 1 ux)) (*.f64 2/9 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) -5)) (pow.f64 ux 3))))) (*.f64 49/54 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -5) 1/9) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -10) 1/9) (*.f64 ux ux)) -1/3) ux))))) (pow.f64 maxCos 3)) (fma.f64 7/9 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 maxCos ux)) (*.f64 (+.f64 (*.f64 (fma.f64 7/6 (*.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -10) 1/9) (*.f64 ux ux)) -1/3) (*.f64 49/162 (*.f64 (pow.f64 (pow.f64 (-.f64 1 ux) -10) 1/9) (*.f64 ux ux)))) (*.f64 maxCos maxCos)) 1) (pow.f64 (pow.f64 (-.f64 1 ux) 7) 1/9))))","1","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(*.f64 (-.f64 maxCos 1) ux)","(*.f64 (+.f64 maxCos -1) ux)","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 (-.f64 maxCos 1) ux))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))","(*.f64 (+.f64 maxCos -1) ux)","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(+.f64 1 (*.f64 -1 (*.f64 ux (+.f64 1 (*.f64 -1 maxCos)))))","(+.f64 1 (*.f64 (+.f64 maxCos -1) ux))","(-.f64 1 ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(*.f64 maxCos ux)","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","(-.f64 (+.f64 1 (*.f64 maxCos ux)) ux)","(+.f64 1 (fma.f64 ux maxCos (neg.f64 ux)))","1","(+.f64 1 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)))","(+.f64 1 (*.f64 2/3 (*.f64 (+.f64 maxCos -1) ux)))","(+.f64 1 (+.f64 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -1/3 (pow.f64 (-.f64 maxCos 1) 2))) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 2/3 (*.f64 (+.f64 maxCos -1) ux) (*.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/9) (*.f64 ux ux))))","(+.f64 1 (+.f64 (*.f64 2/3 (*.f64 (-.f64 maxCos 1) ux)) (+.f64 (*.f64 (+.f64 (*.f64 4/81 (pow.f64 (-.f64 maxCos 1) 3)) (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 3)) (*.f64 -2/9 (pow.f64 (-.f64 maxCos 1) 3)))) (pow.f64 ux 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (-.f64 maxCos 1) 2)) (*.f64 -1/3 (pow.f64 (-.f64 maxCos 1) 2))) (pow.f64 ux 2)))))","(+.f64 1 (fma.f64 2/3 (*.f64 (+.f64 maxCos -1) ux) (fma.f64 (fma.f64 4/81 (pow.f64 (+.f64 maxCos -1) 3) 0) (pow.f64 ux 3) (*.f64 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) -1/9) (*.f64 ux ux)))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux))))))","(pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux)))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))))","(+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (/.f64 (*.f64 2/3 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux)))) (*.f64 (+.f64 maxCos -1) ux)))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (+.f64 (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))))","(+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (fma.f64 2/3 (/.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (*.f64 (+.f64 maxCos -1) ux)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) -2)))))","(+.f64 (*.f64 4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 3) (pow.f64 ux 3)))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (+.f64 (*.f64 2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (-.f64 maxCos 1) ux))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (-.f64 maxCos 1)) (*.f64 -1 (log.f64 (/.f64 1 ux)))))) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))))))","(fma.f64 4/81 (/.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (pow.f64 (*.f64 (+.f64 maxCos -1) ux) 3)) (+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (fma.f64 2/3 (/.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (*.f64 (+.f64 maxCos -1) ux)) (*.f64 -1/9 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 (+.f64 maxCos -1)) (log.f64 ux))) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) -2))))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux))))))","(pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux)))))","(+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))))","(fma.f64 -2/3 (/.f64 (/.f64 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux))))) ux) (-.f64 1 maxCos)) (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux))))))","(+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))","(+.f64 (fma.f64 -2/3 (/.f64 (/.f64 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux))))) ux) (-.f64 1 maxCos)) (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux)))))) (*.f64 (*.f64 -1/9 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux)))))) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) -2)))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 3)))) (+.f64 (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 ux (+.f64 1 (*.f64 -1 maxCos))))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 maxCos))) (*.f64 -1 (log.f64 (/.f64 -1 ux)))))) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux))))) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 3)) (+.f64 (fma.f64 -2/3 (/.f64 (/.f64 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux))))) ux) (-.f64 1 maxCos)) (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux)))))) (*.f64 (*.f64 -1/9 (pow.f64 (exp.f64 2/3) (-.f64 (log1p.f64 (neg.f64 maxCos)) (neg.f64 (log.f64 (neg.f64 ux)))))) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) -2))))","(pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3)","(cbrt.f64 (pow.f64 (-.f64 1 ux) 2))","(+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux))))","(+.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) 2)) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 -1 (+.f64 -1 ux)))) (*.f64 maxCos ux)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 2/9 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))) (pow.f64 maxCos 2))) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux)))))","(+.f64 (*.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 ux ux) -1/9) (pow.f64 (-.f64 1 ux) 2)) (*.f64 maxCos maxCos)) 1) (cbrt.f64 (pow.f64 (-.f64 1 ux) 2))) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 -1 (+.f64 -1 ux)))) (*.f64 maxCos ux)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 2/9 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))) (pow.f64 maxCos 2))) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 1 ux)) 1/3) (*.f64 maxCos ux))) (*.f64 (*.f64 (+.f64 (*.f64 4/81 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (*.f64 2/9 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))) (pow.f64 maxCos 3)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/3)))))","(+.f64 (*.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 ux ux) -1/9) (pow.f64 (-.f64 1 ux) 2)) (*.f64 maxCos maxCos)) 1) (cbrt.f64 (pow.f64 (-.f64 1 ux) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 ux))) (*.f64 maxCos ux)) (*.f64 (fma.f64 4/81 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3)) 0) (*.f64 (pow.f64 maxCos 3) (cbrt.f64 (pow.f64 (-.f64 1 ux) 2))))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))","(pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux)))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos)))","(+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (/.f64 (*.f64 2/3 (*.f64 (+.f64 (/.f64 1 ux) -1) (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))))) maxCos))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (pow.f64 (-.f64 (/.f64 1 ux) 1) 2)))) (pow.f64 maxCos 2)) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos))))","(+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (fma.f64 -1/3 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 2/9 (pow.f64 (+.f64 (/.f64 1 ux) -1) 2)))) (pow.f64 maxCos -2)) (+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (/.f64 (*.f64 2/3 (*.f64 (+.f64 (/.f64 1 ux) -1) (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))))) maxCos)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (pow.f64 (-.f64 (/.f64 1 ux) 1) 2)))) (pow.f64 maxCos 2)) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 (/.f64 1 ux) 1) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux))))) maxCos)) (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 maxCos))) (log.f64 ux)))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) (-.f64 (/.f64 1 ux) 1)) (pow.f64 ux 2))) (*.f64 4/81 (pow.f64 (-.f64 (/.f64 1 ux) 1) 3))))) (pow.f64 maxCos 3)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (fma.f64 -1/3 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 2/9 (pow.f64 (+.f64 (/.f64 1 ux) -1) 2)))) (pow.f64 maxCos -2)) (+.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (fma.f64 2/3 (/.f64 (*.f64 (+.f64 (/.f64 1 ux) -1) (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux)))) maxCos) (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 maxCos) (log.f64 ux))) (fma.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) (+.f64 (/.f64 1 ux) -1)) (pow.f64 ux -2)) (*.f64 4/81 (pow.f64 (+.f64 (/.f64 1 ux) -1) 3))))) (pow.f64 maxCos 3)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))","(pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))))","(fma.f64 2/3 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) ux) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))))","(+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -1/9) (*.f64 ux ux)) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) (pow.f64 maxCos -2)) (fma.f64 2/3 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) ux) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2)))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (*.f64 maxCos ux))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux)))))) (pow.f64 maxCos 3))) (exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 maxCos))) (log.f64 (*.f64 -1 ux))))))))","(+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -1/9) (*.f64 ux ux)) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) (pow.f64 maxCos -2)) (fma.f64 2/3 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) ux) (-.f64 (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos))))) (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)) (+.f64 2/9 -22/81)) (pow.f64 (exp.f64 2/3) (-.f64 (log.f64 (neg.f64 ux)) (neg.f64 (log.f64 (neg.f64 maxCos)))))) (pow.f64 maxCos 3)))))","1","(+.f64 1 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))))","(+.f64 1 (*.f64 1/9 (*.f64 ux (fma.f64 2 maxCos -2))))","(+.f64 1 (+.f64 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))) (*.f64 (+.f64 (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2))) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 1/9 (*.f64 ux (fma.f64 2 maxCos -2)) (*.f64 (fma.f64 1/18 (-.f64 (*.f64 2 (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (fma.f64 2 maxCos -2) 2)) (*.f64 1/162 (pow.f64 (fma.f64 2 maxCos -2) 2))) (*.f64 ux ux))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2))) (-.f64 (*.f64 2 maxCos) 2))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (-.f64 (*.f64 2 maxCos) 2))) (*.f64 2 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3)))) (*.f64 1/4374 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3)))) (pow.f64 ux 3)) (+.f64 (*.f64 1/9 (*.f64 ux (-.f64 (*.f64 2 maxCos) 2))) (*.f64 (+.f64 (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2)) (*.f64 2 (pow.f64 (-.f64 maxCos 1) 2)))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2))) (pow.f64 ux 2)))))","(+.f64 1 (fma.f64 (fma.f64 1/162 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (fma.f64 2 maxCos -2) 2)) (fma.f64 2 maxCos -2)) (fma.f64 1/54 (fma.f64 -6 (*.f64 (pow.f64 (+.f64 maxCos -1) 2) (fma.f64 2 maxCos -2)) (*.f64 (pow.f64 (fma.f64 2 maxCos -2) 3) 2)) (*.f64 1/4374 (pow.f64 (fma.f64 2 maxCos -2) 3)))) (pow.f64 ux 3) (fma.f64 1/9 (*.f64 ux (fma.f64 2 maxCos -2)) (*.f64 (fma.f64 1/18 (-.f64 (*.f64 2 (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (fma.f64 2 maxCos -2) 2)) (*.f64 1/162 (pow.f64 (fma.f64 2 maxCos -2) 2))) (*.f64 ux ux)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux)))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2))) ux)))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 2)))) (pow.f64 ux 2)) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux))))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (fma.f64 1/162 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2) (*.f64 1/18 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2)))))) (*.f64 ux ux)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2))) ux))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4)))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 3) (pow.f64 (-.f64 maxCos 1) 6))) (*.f64 -6 (/.f64 (-.f64 (*.f64 2 maxCos) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/4374 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 3))))) (pow.f64 ux 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (+.f64 (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 (*.f64 2 maxCos) 2) 2) (pow.f64 (-.f64 maxCos 1) 4))))) (*.f64 1/162 (pow.f64 (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2)))) 2)))) (pow.f64 ux 2)) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 ux))) (log.f64 (pow.f64 (-.f64 maxCos 1) 2))))) (-.f64 (*.f64 2 (/.f64 maxCos (pow.f64 (-.f64 maxCos 1) 2))) (*.f64 2 (/.f64 1 (pow.f64 (-.f64 maxCos 1) 2))))) ux)))))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (fma.f64 1/162 (*.f64 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2))) (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2))) (fma.f64 1/54 (fma.f64 2 (/.f64 (pow.f64 (fma.f64 2 maxCos -2) 3) (pow.f64 (+.f64 maxCos -1) 6)) (/.f64 (*.f64 (fma.f64 2 maxCos -2) -6) (pow.f64 (+.f64 maxCos -1) 4))) (*.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 3) 1/4374)))) (pow.f64 ux 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (fma.f64 1/162 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2) (*.f64 1/18 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2)))))) (*.f64 ux ux)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 ux)) (log.f64 (pow.f64 (+.f64 maxCos -1) 2)))) (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2))) ux)))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux))))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux))))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)))","(+.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (*.f64 -1/9 (/.f64 (*.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux))))))) (neg.f64 ux))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))) (pow.f64 ux 2))))","(+.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (fma.f64 -1/9 (/.f64 (*.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux))))))) (neg.f64 ux)) (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (fma.f64 1/162 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2) (*.f64 1/18 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2)))))) (pow.f64 ux -2))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 3) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 6))) (*.f64 -6 (/.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))))) (*.f64 1/4374 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 3))))) (pow.f64 ux 3))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))) ux)) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)) (*.f64 -2 (log.f64 (/.f64 -1 ux)))))) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 -2 (/.f64 maxCos (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 (*.f64 -2 maxCos)) 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))))) (pow.f64 ux 2)))))","(+.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (-.f64 (fma.f64 -1/9 (/.f64 (*.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux))))))) (neg.f64 ux)) (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (fma.f64 1/162 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2) (*.f64 1/18 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2)))))) (pow.f64 ux -2))) (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (pow.f64 (+.f64 maxCos -1) 2)) (*.f64 -2 (neg.f64 (log.f64 (neg.f64 ux)))))) (fma.f64 1/162 (*.f64 (fma.f64 2 (pow.f64 (-.f64 1 maxCos) -2) (neg.f64 (pow.f64 (/.f64 (fma.f64 2 maxCos -2) (pow.f64 (+.f64 maxCos -1) 2)) 2))) (/.f64 (*.f64 2 (-.f64 1 maxCos)) (pow.f64 (+.f64 maxCos -1) 2))) (fma.f64 1/54 (fma.f64 2 (/.f64 (pow.f64 (*.f64 2 (-.f64 1 maxCos)) 3) (pow.f64 (-.f64 1 maxCos) 6)) (/.f64 (*.f64 (fma.f64 2 maxCos -2) -6) (neg.f64 (pow.f64 (+.f64 maxCos -1) 4)))) (*.f64 1/4374 (pow.f64 (/.f64 (*.f64 2 (-.f64 1 maxCos)) (pow.f64 (+.f64 maxCos -1) 2)) 3))))) (pow.f64 ux 3))))","(pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9)","(+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux))))","(+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (-.f64 1 ux) -7) 1/9)) (*.f64 maxCos ux)))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9)) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux)))))","(+.f64 (*.f64 (+.f64 (*.f64 (fma.f64 2/81 (*.f64 (*.f64 ux ux) (pow.f64 (-.f64 1 ux) -2)) (*.f64 1/18 (/.f64 (*.f64 (*.f64 ux ux) -2) (pow.f64 (-.f64 1 ux) 2)))) (*.f64 maxCos maxCos)) 1) (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9)) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (-.f64 1 ux) -7) 1/9)) (*.f64 maxCos ux)))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 1/18 (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2)))))) (pow.f64 maxCos 2)) (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9)) (+.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 1 ux) 2)) 1/9) (*.f64 (pow.f64 maxCos 3) (+.f64 (*.f64 1/81 (/.f64 (*.f64 ux (+.f64 (*.f64 2 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))) (*.f64 -4 (/.f64 (pow.f64 ux 2) (pow.f64 (-.f64 1 ux) 2))))) (-.f64 1 ux))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 16 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))) (*.f64 -12 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))) (*.f64 4/2187 (/.f64 (pow.f64 ux 3) (pow.f64 (-.f64 1 ux) 3))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 1 ux) 7)) 1/9) (*.f64 maxCos ux))))))","(+.f64 (*.f64 (+.f64 (*.f64 (fma.f64 2/81 (*.f64 (*.f64 ux ux) (pow.f64 (-.f64 1 ux) -2)) (*.f64 1/18 (/.f64 (*.f64 (*.f64 ux ux) -2) (pow.f64 (-.f64 1 ux) 2)))) (*.f64 maxCos maxCos)) 1) (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9)) (fma.f64 (pow.f64 (pow.f64 (-.f64 1 ux) 2) 1/9) (*.f64 (pow.f64 maxCos 3) (fma.f64 1/81 (/.f64 (*.f64 ux (/.f64 (*.f64 (*.f64 ux ux) -2) (pow.f64 (-.f64 1 ux) 2))) (-.f64 1 ux)) (fma.f64 1/54 (/.f64 (*.f64 (pow.f64 ux 3) 4) (pow.f64 (-.f64 1 ux) 3)) (/.f64 (*.f64 4/2187 (pow.f64 ux 3)) (pow.f64 (-.f64 1 ux) 3))))) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (-.f64 1 ux) -7) 1/9)) (*.f64 maxCos ux))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))))","(fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))) ux) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))))","(+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux)))) (fma.f64 2/81 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 1/18 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux))))) (pow.f64 maxCos -2)) (fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))) ux) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2)))))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (pow.f64 maxCos 2)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 16 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))))) (*.f64 1/81 (/.f64 (*.f64 (-.f64 1 ux) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) ux)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (pow.f64 maxCos 3)) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 maxCos))) (log.f64 (pow.f64 ux 2))))))))","(+.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux)))) (fma.f64 2/81 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 1/18 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux))))) (pow.f64 maxCos -2)) (fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))) ux) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux)))))) (/.f64 (*.f64 (fma.f64 4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)) (fma.f64 1/54 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 3) 4) (pow.f64 ux 3)) (/.f64 (*.f64 1/81 (*.f64 (-.f64 1 ux) (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux)))) ux))) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 maxCos)) (log.f64 (*.f64 ux ux))))) (pow.f64 maxCos 3)))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))))","(fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux))))) ux) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux)))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2))))","(+.f64 (fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux))))) ux) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux))))) (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux)))) (fma.f64 2/81 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 1/18 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux))))) (pow.f64 maxCos -2)))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 (-.f64 1 ux) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2)))))) (*.f64 maxCos ux))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 -1/81 (/.f64 (*.f64 (-.f64 1 ux) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))) ux)) (+.f64 (*.f64 -4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 1/54 (+.f64 (*.f64 -16 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3))) (*.f64 12 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)))))))) (pow.f64 maxCos 3))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 maxCos))) (log.f64 (pow.f64 ux 2))))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 1/18 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux 2))))))) (pow.f64 maxCos 2)))))","(fma.f64 2/9 (/.f64 (*.f64 (/.f64 (-.f64 1 ux) maxCos) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux))))) ux) (-.f64 (+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux)))) (*.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux)))) (fma.f64 2/81 (*.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 ux -2)) (*.f64 1/18 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux))))) (pow.f64 maxCos -2))) (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 maxCos))) (log.f64 (*.f64 ux ux)))) (fma.f64 -1/81 (/.f64 (*.f64 (-.f64 1 ux) (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 2) -2) (*.f64 ux ux))) ux) (fma.f64 -4/2187 (/.f64 (pow.f64 (-.f64 1 ux) 3) (pow.f64 ux 3)) (*.f64 1/54 (/.f64 (*.f64 (pow.f64 (-.f64 1 ux) 3) -4) (pow.f64 ux 3)))))) (pow.f64 maxCos 3))))"]],"time":344.635009765625,"type":"simplify"},{"compiler":[[10549,7975]],"time":125.1328125,"type":"eval"},{"alts":[["(fma.f64 ux (+.f64 maxCos -1) 1)","done",0.015625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","done",0.6234551269897464]],"compiler":[[9,7],[22,16]],"count":[[219,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[217,0],"picked":[1,1]}],"min-error":[0.00390625],"time":36.5810546875,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["ux",0.015625,1],["uy",0.015625,1],["maxCos",0.015625,1],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",0.015625,1]],"compiler":[[4,3],[4,3],[4,3],[10,7],[50,33]],"count":[[5,1]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 7/3) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2/3)))","(fma.f64 ux (+.f64 maxCos -1) 1)","(pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 3)","(fma.f64 ux maxCos (-.f64 1 ux))","(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))"]],"link":["."],"name":["UniformSampleCone, z"],"oracle":[0.8439027344426088],"outputs":[["(fma.f64 ux (+.f64 maxCos -1) 1)"]],"time":14.294921875,"times":[["ux",3.2900390625],["uy",3.14599609375],["maxCos",3.176025390625],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",3.43603515625]],"type":"regimes"},{"compiler":[[9,7]],"inputs":[["(fma.f64 ux (+.f64 maxCos -1) 1)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 ux (+.f64 maxCos -1) 1)"]],"stop":[["done",1]],"time":38.405029296875,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[9,7]],"remove-preprocessing":[[]],"time":7.9990234375,"type":"end"}]