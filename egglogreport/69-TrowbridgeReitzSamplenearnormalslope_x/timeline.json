[{"compiler":[[37,28]],"method":["search"],"sampling":[[12,2.793967723814632e-12,1.8626451492097546e-13,0.9999999999970197],[11,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[10,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[9,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[8,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[7,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[6,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[5,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[4,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[3,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[2,0.0,2.9802322387356077e-12,0.9999999999970197],[1,0.0,2.9802322387356077e-12,0.9999999999970197],[0,0.0,2.9802322387356077e-12,0.9999999999970197]],"time":37.447021484375,"type":"analyze"},{"outcomes":[["body",256,"valid",602.583984375,8256]],"time":610.9658203125,"type":"sample"},{"compiler":[[14,11]],"inputs":[["0","1","2"],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 cosTheta_i (-.f64 1 cosTheta_i))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 cosTheta_i)))","(*.f64 (sqrt.f64 (/.f64 u2 (-.f64 1 u2))) (cos.f64 (*.f64 314159265359/50000000000 u1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 cosTheta_i (-.f64 1 cosTheta_i))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 cosTheta_i)))","(*.f64 (sqrt.f64 (/.f64 u2 (-.f64 1 u2))) (cos.f64 (*.f64 314159265359/50000000000 u1)))"]],"symmetry":[[]],"time":72.14208984375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"time":19.028076171875,"type":"simplify"},{"compiler":[[14,11]],"time":0.31298828125,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","next",0.4028172254547238]],"compiler":[[14,11],[14,11]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.4028172254547238],"time":0.808837890625,"type":"prune"},{"compiler":[[39,27]],"locations":[["(*.f64 314159265359/50000000000 u2)",0.1015625,true],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.11328125,true],["(/.f64 u1 (-.f64 1 u1))",0.1796875,true],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",0.28515625,true]],"time":10.545166015625,"type":"localize"},{"count":[[4,24]],"series":[["(*.f64 314159265359/50000000000 u2)","u2","-inf",0.298828125],["(*.f64 314159265359/50000000000 u2)","u2","inf",0.302001953125],["(*.f64 314159265359/50000000000 u2)","u2","0",0.237060546875],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","-inf",0.306884765625],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","inf",0.31201171875],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","0",0.3408203125],["(/.f64 u1 (-.f64 1 u1))","u1","-inf",0.2861328125],["(/.f64 u1 (-.f64 1 u1))","u1","inf",0.199951171875],["(/.f64 u1 (-.f64 1 u1))","u1","0",0.182861328125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","-inf",0.34912109375],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","inf",0.841796875],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","0",1.1240234375],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","-inf",0.547119140625],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","inf",0.776123046875],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","0",1.0439453125]],"time":7.364990234375,"type":"series"},{"count":[[4,182]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(/.f64 u1 (-.f64 1 u1))","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(*.f64 314159265359/50000000000 u2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (cbrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2))) (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2) (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 u1 (-.f64 1 u1))) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))) (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 0 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 u1)) (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (/.f64 1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 u1)) u1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 u1) (/.f64 (cbrt.f64 (*.f64 u1 u1)) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 u1) (/.f64 1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 1 u1))) (/.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 u1 u1)) (-.f64 1 u1)) (cbrt.f64 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 u1)) (neg.f64 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (+.f64 -1 u1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))) (cbrt.f64 (/.f64 1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (cbrt.f64 (-.f64 1 u1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 u1) (+.f64 -1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 1 u1))) u1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 u1) (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 -1) (+.f64 -1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 u1 (+.f64 -1 u1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 u1 (-.f64 1 u1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 0) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1/2) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 1/2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 0 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (fabs.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 0) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 u1) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 314159265359/50000000000 u2) 0) (*.f64 314159265359/50000000000 u2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 314159265359/50000000000 u2) 1/2) (*.f64 (*.f64 314159265359/50000000000 u2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 314159265359/50000000000 u2) (*.f64 (*.f64 314159265359/50000000000 u2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 314159265359/50000000000 u2)) (*.f64 314159265359/50000000000 u2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 314159265359/50000000000 u2)) (*.f64 1/2 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 314159265359/50000000000 u2) (*.f64 0 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 314159265359/50000000000) (*.f64 (cbrt.f64 (*.f64 314159265359/50000000000 314159265359/50000000000)) u2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 u2) (*.f64 (cbrt.f64 (*.f64 u2 u2)) 314159265359/50000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 314159265359/50000000000 314159265359/50000000000)) u2) (cbrt.f64 314159265359/50000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 u2 u2)) 314159265359/50000000000) (cbrt.f64 u2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 314159265359/50000000000 u2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 314159265359/50000000000 u2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u2 314159265359/50000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 2)) (cbrt.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 314159265359/50000000000 (cbrt.f64 u2)) (cbrt.f64 (*.f64 u2 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 u2 (sqrt.f64 314159265359/50000000000)) (sqrt.f64 314159265359/50000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 u2 (cbrt.f64 314159265359/50000000000)) (cbrt.f64 (*.f64 314159265359/50000000000 314159265359/50000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 314159265359/50000000000) (*.f64 u2 (sqrt.f64 314159265359/50000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 314159265359/50000000000 u2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 314159265359/50000000000 u2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 u2 u2)) (*.f64 314159265359/50000000000 (cbrt.f64 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 314159265359/50000000000 314159265359/50000000000)) (*.f64 u2 (cbrt.f64 314159265359/50000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 314159265359/50000000000 u2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 314159265359/50000000000 u2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 314159265359/50000000000 u2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 314159265359/50000000000 u2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 314159265359/50000000000 u2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",45],["egg-rr",71],["egg-rr",34]],"time":36.5869140625,"type":"rewrite"},{"count":[[206,202]],"inputs":[["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","u1","(+.f64 (pow.f64 u1 2) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) 1))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","u1","(+.f64 (pow.f64 u1 2) u1)","(fma.f64 u1 u1 u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (fma.f64 u1 u1 (pow.f64 u1 3)) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","(+.f64 (+.f64 u1 (pow.f64 u1 3)) (fma.f64 u1 u1 (pow.f64 u1 4)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (+.f64 (pow.f64 u1 -3) (/.f64 1 u1))))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (+.f64 (pow.f64 u1 -3) (/.f64 1 u1))))"]],"time":83.012939453125,"type":"simplify"},{"compiler":[[3572,2724]],"time":46.968994140625,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.4080599008292725],["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))","fresh",0.49739275382332526],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.45816849499160783],["(*.f64 (sqrt.f64 (fma.f64 u1 u1 u1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",22.87167059486324],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","next",0.4129147352231658],["(*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))","fresh",0.4700677466690393],["(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","fresh",7.002101990603901],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.42072723522316585],["(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8314062880448688],["(*.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","fresh",0.5027853006490361],["(/.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))","fresh",0.55390980360226],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",0.48672022481682753]],"compiler":[[18,15],[22,17],[25,20],[13,9],[27,21],[23,19],[36,28],[22,18],[17,14],[22,17],[23,18],[23,19],[18,15],[22,17],[25,20],[13,9],[27,21],[23,19],[36,28],[22,18],[17,14],[22,17],[23,18],[23,19]],"count":[[203,12]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[202,12],"picked":[1,0]}],"min-error":[0.04843259254663357],"time":62.753173828125,"type":"prune"},{"compiler":[[119,75]],"locations":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",0.28515625,true],["(/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))",0.296875,true],["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))",0.3359375,true],["(pow.f64 (-.f64 1 u1) 2)",0.45703125,true]],"time":28.267822265625,"type":"localize"},{"count":[[4,44]],"series":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","-inf",0.166015625],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","inf",0.18701171875],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","0",0.211181640625],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","-inf",1.169921875],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","inf",0.273193359375],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","0",0.265869140625],["(/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))","u1","-inf",0.2939453125],["(/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))","u1","inf",0.175048828125],["(/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))","u1","0",0.196044921875],["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))","u1","-inf",1.055908203125],["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))","u1","inf",0.471923828125],["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))","u1","0",0.31982421875],["(pow.f64 (-.f64 1 u1) 2)","u1","-inf",0.242919921875],["(pow.f64 (-.f64 1 u1) 2)","u1","inf",0.266845703125],["(pow.f64 (-.f64 1 u1) 2)","u1","0",0.30419921875]],"time":5.8662109375,"type":"series"},{"count":[[4,266]],"inputs":[["(pow.f64 (-.f64 1 u1) 2)","(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))","(/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))","(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 u1) (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u1 (+.f64 -1 u1)) (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (neg.f64 u1) (*.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 u1) (+.f64 1 (*.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2) (*.f64 (pow.f64 (-.f64 1 u1) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2) 1/2) (*.f64 (pow.f64 (-.f64 1 u1) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2) 0) (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 -1 u1) u1) (*.f64 (+.f64 -1 u1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 -1 u1) -1) (*.f64 (+.f64 -1 u1) u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2) (*.f64 0 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (-.f64 1 u1) 2)) (*.f64 1/2 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 1 u1) 2)) (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 u1) (*.f64 (*.f64 u1 (+.f64 -1 u1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 -1 u1) (*.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (-.f64 (/.f64 (pow.f64 u1 3) (fma.f64 (+.f64 1 u1) u1 1)) (*.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 u1 (*.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)) (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 u1)) (pow.f64 (cbrt.f64 (-.f64 1 u1)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 u1) (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2/3) (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 u1) (+.f64 -1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (*.f64 (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 u1) -1) (*.f64 (+.f64 -1 u1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (/.f64 1 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 u1) (+.f64 -1 (pow.f64 u1 3))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 u1) (+.f64 -1 (pow.f64 u1 3))) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 u1 3)) (+.f64 -1 u1)) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) 1) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 u1 3))) (pow.f64 (cbrt.f64 (-.f64 1 u1)) (+.f64 2 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 u1 3)) (-.f64 1 u1)) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 1) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) 1) (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (+.f64 -1 (pow.f64 u1 3))) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (*.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 u1 3))) (*.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2)) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 u1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 -1 u1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 u1)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 u1) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 u1)) (pow.f64 (-.f64 1 u1) 2/3) (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 u1) (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 u1 3)) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 -1 u1) (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 u1) 1 (*.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 u1) 2/3) (cbrt.f64 (-.f64 1 u1)) (*.f64 u1 (+.f64 -1 u1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1/2) (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 0) (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (*.f64 0 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (*.f64 1/2 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 u1 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 u1 4)) (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u1 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1))) (cbrt.f64 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (pow.f64 u1 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 u1) (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (pow.f64 (-.f64 1 u1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1)))) (neg.f64 (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 u1 2/3)) (cbrt.f64 (/.f64 u1 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (+.f64 -1 u1))) (neg.f64 (pow.f64 u1 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (neg.f64 u1))) (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (neg.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 u1)) (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 (cbrt.f64 (neg.f64 u1)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 u1) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 (cbrt.f64 u1) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 u1 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 u1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 u1) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 u1)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (pow.f64 u1 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 u1 2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1)))) (pow.f64 u1 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 u1 3) (-.f64 1 u1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 u1 3) (-.f64 1 u1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2) (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 0 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))) (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 u1 (-.f64 1 u1))) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 u1)) (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))) (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 u1) (/.f64 1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 u1) (/.f64 (pow.f64 u1 2/3) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (/.f64 -1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 u1)) u1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2)) (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 u1 2/3) (/.f64 (cbrt.f64 u1) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (/.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) -1/3) (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3) (cbrt.f64 (/.f64 (/.f64 u1 (-.f64 1 u1)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2))) (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) -1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) -1) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (pow.f64 (-.f64 1 u1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 u1 (+.f64 -1 u1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (-.f64 1 u1) 2/3))) (/.f64 (pow.f64 u1 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 u1) (+.f64 -1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3) (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (-.f64 1 u1) 2/3))) (pow.f64 u1 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2)) u1) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1)))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 u1) -1/3) u1) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2))) (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (/.f64 (pow.f64 u1 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 u1)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) 1) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) 1) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1)))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 (/.f64 u1 (-.f64 1 u1)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1))) (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) 1) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) -1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 -1) (+.f64 -1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) 1) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3)) (*.f64 (cbrt.f64 (+.f64 -1 u1)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 u1) (pow.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 2/3)) (*.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 u1 2/3)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1)))) (pow.f64 u1 2/3)) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))) (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1)))) (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1)))) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2)))) (*.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 u1 2/3) (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))) (*.f64 (pow.f64 (-.f64 1 u1) 2/3) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1))) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))) (*.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 u1 u1) (-.f64 1 u1))) (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))) (*.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2))) u1) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4))) (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 u1 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 u1 (+.f64 -1 u1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 u1 (-.f64 1 u1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2/3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 2/3) (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))) (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (+.f64 -1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (/.f64 u1 (cbrt.f64 (+.f64 -1 u1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3))))))"]],"rules":[["egg-rr",33],["egg-rr",115],["egg-rr",47],["egg-rr",71]],"time":46.327880859375,"type":"rewrite"},{"count":[[310,295]],"inputs":[["1","(+.f64 1 (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(pow.f64 u1 2)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(pow.f64 u1 2)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","u1","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) u1)","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) (+.f64 (*.f64 2/9 (pow.f64 u1 3)) u1))","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) (+.f64 (*.f64 2/9 (pow.f64 u1 3)) (+.f64 (*.f64 14/81 (pow.f64 u1 4)) u1)))","u1","(+.f64 (pow.f64 u1 2) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (/.f64 (cbrt.f64 -1) u1))","(+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 2)) (/.f64 (cbrt.f64 -1) u1)))","(+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 3)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 2)) (/.f64 (cbrt.f64 -1) u1))))","(*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 (*.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 2)))) (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 (*.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 2)))) (+.f64 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (+.f64 (cbrt.f64 -1) (*.f64 1/2 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 3)) (sqrt.f64 (/.f64 1 (cbrt.f64 -1))))))))","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))"]],"method":["egg-herbie"],"outputs":[["1","(E.f64)","(+.f64 1 (*.f64 -2 u1))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","(pow.f64 u1 2)","(E.f64)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","(pow.f64 u1 2)","(E.f64)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(E.f64)","u1","(E.f64)","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) u1)","(E.f64)","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) (+.f64 (*.f64 2/9 (pow.f64 u1 3)) u1))","(E.f64)","(+.f64 (*.f64 1/3 (pow.f64 u1 2)) (+.f64 (*.f64 2/9 (pow.f64 u1 3)) (+.f64 (*.f64 14/81 (pow.f64 u1 4)) u1)))","(E.f64)","u1","(E.f64)","(+.f64 (pow.f64 u1 2) u1)","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(E.f64)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","(E.f64)","-1","(E.f64)","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(E.f64)","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(E.f64)","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(E.f64)","(cbrt.f64 -1)","(E.f64)","(+.f64 (cbrt.f64 -1) (/.f64 (cbrt.f64 -1) u1))","(E.f64)","(+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 2)) (/.f64 (cbrt.f64 -1) u1)))","(E.f64)","(+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 3)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 u1 2)) (/.f64 (cbrt.f64 -1) u1))))","(E.f64)","(*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(E.f64)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2))))","(E.f64)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 (*.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 2)))) (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))))","(E.f64)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (/.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) u1))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 (*.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 2)))) (+.f64 (*.f64 (sqrt.f64 (cbrt.f64 -1)) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (+.f64 (cbrt.f64 -1) (*.f64 1/2 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (pow.f64 (*.f64 -1/2 (sqrt.f64 (cbrt.f64 -1))) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 u1 3)) (sqrt.f64 (/.f64 1 (cbrt.f64 -1))))))))","(E.f64)","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(E.f64)","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(E.f64)","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(E.f64)"]],"time":344.8349609375,"type":"simplify"},{"compiler":[[7354,5552]],"time":94.571044921875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8314062880448688],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.4044384656862818],["(/.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))","fresh",0.55390980360226],["(*.f64 (sqrt.f64 (*.f64 (pow.f64 u1 2/3) (/.f64 (cbrt.f64 u1) (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.142427340878577],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",0.48672022481682753],["(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.45197723522316585],["(*.f64 (sqrt.f64 (fma.f64 u1 u1 u1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",22.87167059486324],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","next",0.3855709852231658],["(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","fresh",7.002101990603901],["(*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))","fresh",0.4700677466690393]],"compiler":[[17,14],[21,17],[23,18],[19,15],[23,19],[30,25],[13,9],[49,38],[36,28],[23,19],[17,14],[21,17],[23,18],[19,15],[23,19],[30,25],[13,9],[49,38],[36,28],[23,19]],"count":[[307,10]],"kept":[{"done":[0,0],"fresh":[11,6],"new":[295,4],"picked":[1,0]}],"min-error":[0.04452634254663357],"time":112.8349609375,"type":"prune"},{"compiler":[[297,211]],"locations":[["(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1)))",0.3359375,false],["(/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))",0.4668350586106521,true],["(/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))",0.49056625976844204,true],["(pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)",0.545253759768442,true]],"time":78.094970703125,"type":"localize"},{"count":[[3,28]],"series":[["(/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))","u1","-inf",0.344970703125],["(/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))","u1","inf",0.448974609375],["(/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))","u1","0",0.27294921875],["(/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))","u1","-inf",0.398193359375],["(/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))","u1","inf",0.31103515625],["(/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))","u1","0",0.340087890625],["(pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)","u1","-inf",0.296142578125],["(pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)","u1","inf",0.262939453125],["(pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)","u1","0",0.3310546875]],"time":3.14697265625,"type":"series"},{"count":[[3,223]],"inputs":[["(pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)","(/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))","(/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)) 1) (fma.f64 u1 u1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)) 1) (fma.f64 u1 u1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)) (fma.f64 u1 u1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)) (fma.f64 u1 u1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 0) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 1 (*.f64 u1 u1))) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) (*.f64 0 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (*.f64 u1 u1)) (fma.f64 (+.f64 1 u1) u1 1)) (*.f64 u1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 1 u1) u1 1) (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 1 u1) u1 1) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)) (+.f64 1 (*.f64 u1 u1))) u1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)) (+.f64 1 (*.f64 u1 u1))) u1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1)) 1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1)) 1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) -1) (*.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 3) 1)) (+.f64 1 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 3) 1) (fma.f64 (+.f64 1 u1) u1 1)) (+.f64 1 (*.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 3) 1)) (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 2) (-.f64 1 (fma.f64 u1 u1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 3) 1) (fma.f64 (+.f64 1 u1) u1 1)) (+.f64 (pow.f64 (fma.f64 u1 u1 u1) 2) (-.f64 1 (fma.f64 u1 u1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 u1 u1 u1) (fma.f64 (+.f64 1 u1) u1 1) (fma.f64 (+.f64 1 u1) u1 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2) 0) (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2) (*.f64 (pow.f64 (-.f64 1 u1) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 u1) (*.f64 (-.f64 1 u1) (neg.f64 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 u1) (neg.f64 u1)) (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 1 u1) 2)) (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2) (*.f64 0 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 u1) (*.f64 (neg.f64 u1) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 u1) (-.f64 1 u1)) (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 1 u1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2/3) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (/.f64 (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 u1) (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))) (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 u1 -1) (+.f64 u1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (*.f64 (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (/.f64 1 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2/3) (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)) (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2) (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2) (cbrt.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2/3) (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)) (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1))) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 2)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1))) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (/.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 1) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (/.f64 (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 4))))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)))) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) -1) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 1) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) -1) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)) (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) 1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)) -1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) -1) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (-.f64 1 u1) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 u1)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 u1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 u1 -1) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 1 u1) (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3)) (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (-.f64 1 u1) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 1 u1) 3) (pow.f64 (-.f64 1 u1) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 0) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (-.f64 1 (pow.f64 u1 3))) (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 (pow.f64 u1 3)) (neg.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (-.f64 1 u1)) (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 u1) (neg.f64 (pow.f64 u1 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 0 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (neg.f64 u1)) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 u1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (*.f64 (*.f64 (-.f64 1 u1) (neg.f64 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 2/3) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 u1) (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 u1) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 u1 3)) (/.f64 (-.f64 1 u1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (/.f64 (-.f64 1 u1) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (neg.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 u1) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (cbrt.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3) (cbrt.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3)))) (*.f64 (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)) (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2)) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3)))) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3) (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3)))) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 2/3)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (-.f64 1 u1)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 u1 3) 3)) (/.f64 (-.f64 1 u1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (/.f64 (-.f64 1 u1) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1))) (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1))) (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3)))) (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (*.f64 (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)) (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 u1 3)) 2) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (fma.f64 (+.f64 1 u1) u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 u1 3)) (-.f64 1 (pow.f64 (pow.f64 u1 3) 3))) (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) -1/3)) (*.f64 (fma.f64 (+.f64 1 u1) u1 1) (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 u1) (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) -1) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (pow.f64 u1 3) 3)) (/.f64 (-.f64 1 u1) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (neg.f64 (+.f64 (+.f64 1 (pow.f64 u1 6)) (pow.f64 u1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (/.f64 (-.f64 1 (pow.f64 u1 3)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (neg.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 3) (fma.f64 (+.f64 1 u1) u1 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u1 3) -1) (-.f64 1 u1)) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) 3) (fma.f64 (+.f64 1 u1) u1 1)))))))"]],"rules":[["egg-rr",71],["egg-rr",100],["egg-rr",52]],"time":47.569091796875,"type":"rewrite"},{"count":[[251,251]],"inputs":[["1","(+.f64 (*.f64 2 u1) 1)","(+.f64 (*.f64 2 u1) (+.f64 1 (*.f64 3 (pow.f64 u1 2))))","(+.f64 (*.f64 2 u1) (+.f64 1 (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","(pow.f64 u1 4)","(+.f64 (pow.f64 u1 4) (*.f64 2 (pow.f64 u1 3)))","(+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2))))","(+.f64 (*.f64 2 u1) (+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","(pow.f64 u1 4)","(+.f64 (pow.f64 u1 4) (*.f64 2 (pow.f64 u1 3)))","(+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2))))","(+.f64 (*.f64 2 u1) (+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","1","(+.f64 1 (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(pow.f64 u1 2)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(pow.f64 u1 2)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","1","(+.f64 1 (*.f64 -4/3 u1))","(+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 u1 2)) (*.f64 -4/3 u1)))","(+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 u1 2)) (+.f64 (*.f64 -50/81 (pow.f64 u1 3)) (*.f64 -4/3 u1))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 2 u1) 1)","(fma.f64 2 u1 1)","(+.f64 (*.f64 2 u1) (+.f64 1 (*.f64 3 (pow.f64 u1 2))))","(+.f64 (*.f64 u1 (+.f64 2 (*.f64 u1 3))) 1)","(+.f64 (*.f64 2 u1) (+.f64 1 (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","(+.f64 (fma.f64 2 u1 1) (*.f64 (*.f64 u1 u1) (+.f64 3 (*.f64 2 u1))))","(pow.f64 u1 4)","(+.f64 (pow.f64 u1 4) (*.f64 2 (pow.f64 u1 3)))","(*.f64 (pow.f64 u1 3) (+.f64 u1 2))","(+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2))))","(+.f64 (pow.f64 u1 4) (*.f64 (*.f64 u1 u1) (+.f64 3 (*.f64 2 u1))))","(+.f64 (*.f64 2 u1) (+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","(+.f64 (*.f64 (pow.f64 u1 3) (+.f64 u1 2)) (*.f64 u1 (+.f64 (*.f64 u1 3) 2)))","(pow.f64 u1 4)","(+.f64 (pow.f64 u1 4) (*.f64 2 (pow.f64 u1 3)))","(*.f64 (pow.f64 u1 3) (+.f64 u1 2))","(+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2))))","(+.f64 (pow.f64 u1 4) (*.f64 (*.f64 u1 u1) (+.f64 3 (*.f64 2 u1))))","(+.f64 (*.f64 2 u1) (+.f64 (pow.f64 u1 4) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 2)))))","(+.f64 (*.f64 (pow.f64 u1 3) (+.f64 u1 2)) (*.f64 u1 (+.f64 (*.f64 u1 3) 2)))","1","(+.f64 1 (*.f64 -2 u1))","(fma.f64 -2 u1 1)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","(pow.f64 u1 2)","(*.f64 u1 u1)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(*.f64 u1 (+.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","(pow.f64 u1 2)","(*.f64 u1 u1)","(+.f64 (pow.f64 u1 2) (*.f64 -2 u1))","(*.f64 u1 (+.f64 -2 u1))","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","(+.f64 (pow.f64 u1 2) (+.f64 1 (*.f64 -2 u1)))","(+.f64 (*.f64 u1 (+.f64 -2 u1)) 1)","1","(+.f64 1 (*.f64 -4/3 u1))","(fma.f64 u1 -4/3 1)","(+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 u1 2)) (*.f64 -4/3 u1)))","(+.f64 1 (*.f64 u1 (+.f64 -4/3 (*.f64 u1 2/9))))","(+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 u1 2)) (+.f64 (*.f64 -50/81 (pow.f64 u1 3)) (*.f64 -4/3 u1))))","(+.f64 (*.f64 (*.f64 u1 u1) (+.f64 (*.f64 u1 -50/81) 2/9)) (fma.f64 u1 -4/3 1))"]],"time":127.907958984375,"type":"simplify"},{"compiler":[[14932,10911]],"time":169.4931640625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8314062880448688],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","next",0.4044384656862818],["(/.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))","fresh",0.55390980360226],["(*.f64 (sqrt.f64 (*.f64 (pow.f64 u1 2/3) (/.f64 (cbrt.f64 u1) (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.142427340878577],["(*.f64 (sqrt.f64 (fma.f64 u1 u1 u1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",22.87167059486324],["(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.4246334852231658],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","done",0.3855709852231658],["(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","fresh",7.002101990603901],["(*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))","fresh",0.4700677466690393],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",0.48672022481682753]],"compiler":[[17,14],[21,17],[23,18],[19,15],[13,9],[52,42],[49,38],[36,28],[23,19],[23,19],[17,14],[21,17],[23,18],[19,15],[13,9],[52,42],[36,28],[23,19],[23,19]],"count":[[312,10]],"kept":[{"done":[0,0],"fresh":[9,8],"new":[302,1],"picked":[1,1]}],"min-error":[0.04452634254663357],"time":122.94091796875,"type":"prune"},{"compiler":[[77,58]],"locations":[["(pow.f64 (-.f64 1 u1) 2/3)",0.16015625,true],["(/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))",0.1875,true],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",0.28515625,true],["(/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))",0.31640625,true]],"time":30.77001953125,"type":"localize"},{"count":[[4,40]],"series":[["(pow.f64 (-.f64 1 u1) 2/3)","u1","-inf",0.4541015625],["(pow.f64 (-.f64 1 u1) 2/3)","u1","inf",0.47412109375],["(pow.f64 (-.f64 1 u1) 2/3)","u1","0",0.2939453125],["(/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))","u1","-inf",0.402099609375],["(/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))","u1","inf",0.43701171875],["(/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))","u1","0",0.296142578125],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","-inf",0.325927734375],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","inf",0.166015625],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u2","0",0.213134765625],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","-inf",0.25],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","inf",0.242919921875],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","u1","0",0.27685546875],["(/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))","u1","-inf",0.22802734375],["(/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))","u1","inf",0.20703125],["(/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))","u1","0",0.261962890625]],"time":4.803955078125,"type":"series"},{"count":[[4,232]],"inputs":[["(/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))","(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))","(pow.f64 (-.f64 1 u1) 2/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2) (*.f64 (/.f64 u1 (-.f64 1 u1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))) (*.f64 1/2 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 u1 (-.f64 1 u1))) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 0 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 u1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (+.f64 u1 -1))) (/.f64 u1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (/.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)) (neg.f64 (pow.f64 (-.f64 1 u1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (/.f64 -1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (-.f64 -1 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (pow.f64 (-.f64 1 u1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) -1/3) (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3)) (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 u1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 1 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) -1) (*.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) -1) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) (neg.f64 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 u1) (/.f64 1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (-.f64 1 u1) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0) (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (*.f64 (pow.f64 (-.f64 1 u1) 2/3) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 u1) (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3))) (*.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 u1) -1) (*.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) 1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4) (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) -1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4) (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3)) u1) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3)) (neg.f64 u1)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)))) (*.f64 (cbrt.f64 (+.f64 u1 -1)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (-.f64 1 u1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 u1) (+.f64 u1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3)) (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 u1) -1/3) u1) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 u1) -1/3) (neg.f64 u1)) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 u1) -1/3) (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 u1 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1)))) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (-.f64 -1 1/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (-.f64 1 u1) -1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) 1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) 1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 u1) (/.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (/.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (neg.f64 (pow.f64 (-.f64 1 u1) -1/3))) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 u1) (neg.f64 (pow.f64 (-.f64 1 u1) -1/3))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) 1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1))) -1) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) -1) (cbrt.f64 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) 1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 -1) (+.f64 u1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) 1) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) -1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (*.f64 (cbrt.f64 (-.f64 1 u1)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -1/3)) (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (*.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 u1 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)) (pow.f64 (-.f64 1 u1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 u1 (+.f64 u1 -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (-.f64 1 u1) -1/3) (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 u1 (-.f64 1 u1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2/3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 2/3) (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))) (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 u1 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 1/2) (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 0) (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (*.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (*.f64 1/2 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) (*.f64 0 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))) (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 u1) (neg.f64 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 u1) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3) (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) -2/3) u1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)) (/.f64 u1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3))) (neg.f64 (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 u1 (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 u1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3) (cbrt.f64 u1)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3) (cbrt.f64 (neg.f64 u1))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)) u1) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (pow.f64 u1 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 u1) (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 u1)) (pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 u1) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 u1 -1) (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) 1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 u1 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 u1 (pow.f64 (-.f64 1 u1) -2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 u1) (pow.f64 (-.f64 1 u1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 u1 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2/3) 1/2) (*.f64 (pow.f64 (-.f64 1 u1) 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 u1) 2/3) 0) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2/3) (*.f64 (pow.f64 (-.f64 1 u1) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (-.f64 1 u1) 2/3)) (*.f64 1/2 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 1 u1) 2/3)) (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 u1) 2/3) (*.f64 0 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 u1 -1)) (cbrt.f64 (+.f64 u1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 1 u1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 u1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (-.f64 1 u1) 2/3) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 u1 3))) 2) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 u1)) (cbrt.f64 (-.f64 1 (pow.f64 u1 3)))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 u1) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 u1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 u1) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 u1 -1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 1 u1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 u1) 2))))))"]],"rules":[["egg-rr",33],["egg-rr",50],["egg-rr",31],["egg-rr",118]],"time":43.653076171875,"type":"rewrite"},{"count":[[272,282]],"inputs":[["u1","(+.f64 (pow.f64 u1 2) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","u1","(+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1)","(+.f64 (*.f64 5/9 (pow.f64 u1 3)) (+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1))","(+.f64 (*.f64 40/81 (pow.f64 u1 4)) (+.f64 (*.f64 5/9 (pow.f64 u1 3)) (+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1)))","1","(+.f64 1 (*.f64 -2/3 u1))","(+.f64 1 (+.f64 (*.f64 -2/3 u1) (*.f64 -1/9 (pow.f64 u1 2))))","(+.f64 (*.f64 -4/81 (pow.f64 u1 3)) (+.f64 1 (+.f64 (*.f64 -2/3 u1) (*.f64 -1/9 (pow.f64 u1 2)))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1))))))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1)))","(+.f64 (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 2))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1))))","(+.f64 (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 2))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 3))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1)))))","(pow.f64 (pow.f64 u1 2) 1/3)","(+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3)))","(+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 u1 4)) 1/3)) (+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3))))","(+.f64 (*.f64 -4/81 (pow.f64 (/.f64 1 (pow.f64 u1 7)) 1/3)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 u1 4)) 1/3)) (+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3)))))"]],"method":["egg-herbie"],"outputs":[["u1","(+.f64 (pow.f64 u1 2) u1)","(fma.f64 u1 u1 u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (fma.f64 u1 u1 (pow.f64 u1 3)) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","(+.f64 (+.f64 u1 (pow.f64 u1 3)) (fma.f64 u1 u1 (pow.f64 u1 4)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(-.f64 -1 (+.f64 (+.f64 (pow.f64 u1 -2) (pow.f64 u1 -3)) (/.f64 1 u1)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(-.f64 -1 (+.f64 (pow.f64 u1 -2) (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(-.f64 -1 (+.f64 (+.f64 (pow.f64 u1 -2) (pow.f64 u1 -3)) (/.f64 1 u1)))","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 (*.f64 u2 u2) -98696044010906577398881/5000000000000000000000)))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 (*.f64 u2 u2) -98696044010906577398881/5000000000000000000000) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 (pow.f64 u2 2) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 4) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 6) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 (*.f64 u2 u2) -98696044010906577398881/5000000000000000000000) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","u1","(+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1)","(fma.f64 2/3 (*.f64 u1 u1) u1)","(+.f64 (*.f64 5/9 (pow.f64 u1 3)) (+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1))","(fma.f64 (pow.f64 u1 3) 5/9 (fma.f64 2/3 (*.f64 u1 u1) u1))","(+.f64 (*.f64 40/81 (pow.f64 u1 4)) (+.f64 (*.f64 5/9 (pow.f64 u1 3)) (+.f64 (*.f64 2/3 (pow.f64 u1 2)) u1)))","(fma.f64 40/81 (pow.f64 u1 4) (fma.f64 (pow.f64 u1 3) 5/9 (fma.f64 2/3 (*.f64 u1 u1) u1)))","1","(+.f64 1 (*.f64 -2/3 u1))","(fma.f64 u1 -2/3 1)","(+.f64 1 (+.f64 (*.f64 -2/3 u1) (*.f64 -1/9 (pow.f64 u1 2))))","(+.f64 (fma.f64 u1 -2/3 1) (*.f64 -1/9 (*.f64 u1 u1)))","(+.f64 (*.f64 -4/81 (pow.f64 u1 3)) (+.f64 1 (+.f64 (*.f64 -2/3 u1) (*.f64 -1/9 (pow.f64 u1 2)))))","(+.f64 (fma.f64 (pow.f64 u1 3) -4/81 1) (fma.f64 -2/3 u1 (*.f64 -1/9 (*.f64 u1 u1))))","(exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1))))))","(pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1)))","(+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1)))","(fma.f64 (/.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))) u1) -2/3 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))))","(+.f64 (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 2))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1))))","(fma.f64 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))) (pow.f64 u1 -2)) -1/9 (fma.f64 (/.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))) u1) -2/3 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1)))))","(+.f64 (*.f64 -1/9 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 2))) (+.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) (pow.f64 u1 3))) (*.f64 -2/3 (/.f64 (exp.f64 (*.f64 2/3 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 u1)))))) u1)))))","(+.f64 (fma.f64 -1/9 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))) (pow.f64 u1 -2)) (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1)))) (fma.f64 -4/81 (*.f64 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1))) (pow.f64 u1 -3)) (/.f64 (*.f64 -2/3 (pow.f64 (exp.f64 2/3) (+.f64 (log.f64 -1) (log.f64 u1)))) u1)))","(pow.f64 (pow.f64 u1 2) 1/3)","(cbrt.f64 (*.f64 u1 u1))","(+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3)))","(fma.f64 (cbrt.f64 (/.f64 1 u1)) -2/3 (cbrt.f64 (*.f64 u1 u1)))","(+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 u1 4)) 1/3)) (+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3))))","(fma.f64 (cbrt.f64 (pow.f64 u1 -4)) -1/9 (fma.f64 (cbrt.f64 (/.f64 1 u1)) -2/3 (cbrt.f64 (*.f64 u1 u1))))","(+.f64 (*.f64 -4/81 (pow.f64 (/.f64 1 (pow.f64 u1 7)) 1/3)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 u1 4)) 1/3)) (+.f64 (pow.f64 (pow.f64 u1 2) 1/3) (*.f64 -2/3 (pow.f64 (/.f64 1 u1) 1/3)))))","(fma.f64 -4/81 (cbrt.f64 (pow.f64 u1 -7)) (fma.f64 (cbrt.f64 (pow.f64 u1 -4)) -1/9 (fma.f64 (cbrt.f64 (/.f64 1 u1)) -2/3 (cbrt.f64 (*.f64 u1 u1)))))"]],"time":134.5859375,"type":"simplify"},{"compiler":[[6439,5064]],"time":84.77001953125,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 u1 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (-.f64 -1 1/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.4483214943537116],["(*.f64 (sqrt.f64 (fma.f64 u1 u1 u1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",22.87167059486324],["(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8314062880448688],["(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","done",0.4044384656862818],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",0.48672022481682753],["(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 (*.f64 u2 u2) -98696044010906577398881/5000000000000000000000) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","fresh",7.002101990603901],["(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.4246334852231658],["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","done",0.3855709852231658],["(*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))","fresh",0.4700677466690393],["(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)) 2)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.7509467264809927],["(/.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))","fresh",0.55390980360226]],"compiler":[[26,22],[13,9],[17,14],[21,17],[23,19],[36,28],[52,42],[49,38],[23,19],[42,36],[23,18]],"count":[[292,11]],"kept":[{"done":[1,1],"fresh":[8,6],"new":[282,3],"picked":[1,1]}],"min-error":[0.04452634254663357],"time":93.3310546875,"type":"prune"},{"accuracy":[0.3855709852231658],"baseline":[0.3855709852231658],"branch":[["cosTheta_i",0.3855709852231658,1],["u1",0.3855709852231658,1],["u2",0.3855709852231659,1],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",0.3855709852231658,1],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",0.3855709852231658,1],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.3855709852231658,1],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.3855709852231658,1],["(/.f64 u1 (-.f64 1 u1))",0.3855709852231658,1],["(/.f64 u1 (-.f64 1 u1))",0.3855709852231658,1],["(cos.f64 (*.f64 314159265359/50000000000 u2))",0.3855709852231658,1],["(*.f64 314159265359/50000000000 u2)",0.3855709852231659,1]],"compiler":[[4,3],[4,3],[4,3],[14,11],[14,11],[9,7],[9,7],[8,6],[8,6],[7,6],[6,5],[500,385]],"count":[[21,1]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 u1 (pow.f64 (pow.f64 (-.f64 1 u1) 2/3) (-.f64 -1 1/3))) (cbrt.f64 (cbrt.f64 (-.f64 1 u1))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 (*.f64 u2 u2) -98696044010906577398881/5000000000000000000000) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) -2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 u1))) 4)) 2)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (pow.f64 (-.f64 1 u1) 2/3)) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (*.f64 (pow.f64 u1 2/3) (/.f64 (cbrt.f64 u1) (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (/.f64 (/.f64 u1 (cbrt.f64 (cbrt.f64 (-.f64 1 u1)))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2/3))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))","(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (/.f64 1 (fma.f64 (+.f64 1 u1) u1 1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (fma.f64 u1 u1 u1)) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (pow.f64 (-.f64 1 u1) 2)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 (*.f64 -98696044010906577398881/5000000000000000000000 (*.f64 u2 u2)) (*.f64 9740909103402808085817682884085781839780052161/150000000000000000000000000000000000000000000 (pow.f64 u2 4)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (+.f64 1 (*.f64 -961389193575684075633145058384385882649239799132134631991269883031841/11250000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 6)))))","(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (cbrt.f64 (pow.f64 (-.f64 1 u1) 2))) (cbrt.f64 (-.f64 1 u1)))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))) 3)","(*.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2))) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(/.f64 (*.f64 (*.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (cbrt.f64 u1)) (cbrt.f64 (-.f64 1 u1)))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)) 2)) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (cos.f64 (*.f64 314159265359/50000000000 u2)))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"link":["."],"name":["Trowbridge-Reitz Sample, near normal, slope_x"],"oracle":[26.597189643078227],"outputs":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"time":88.296875,"times":[["cosTheta_i",9.530029296875],["u1",6.75390625],["u2",6.671875],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",6.95703125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (cos.f64 (*.f64 314159265359/50000000000 u2)))",7.0390625],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",6.8310546875],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",6.839111328125],["(/.f64 u1 (-.f64 1 u1))",6.780029296875],["(/.f64 u1 (-.f64 1 u1))",6.89990234375],["(cos.f64 (*.f64 314159265359/50000000000 u2))",6.70703125],["(*.f64 314159265359/50000000000 u2)",6.850830078125]],"type":"regimes"},{"compiler":[[49,38]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 (*.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (*.f64 u1 u1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (cbrt.f64 (fma.f64 (+.f64 1 u1) u1 1))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 1 u1) u1 1) 2)))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 (/.f64 u1 (cbrt.f64 (-.f64 1 u1))) (cbrt.f64 (/.f64 (*.f64 (-.f64 1 u1) (-.f64 1 (pow.f64 u1 3))) (fma.f64 (+.f64 1 u1) u1 1))))) (cos.f64 (*.f64 314159265359/50000000000 u2)))"]],"stop":[["fuel",1]],"time":26.588134765625,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[49,38]],"remove-preprocessing":[[]],"time":19.97509765625,"type":"end"}]