[{"compiler":[[57,41]],"method":["search"],"sampling":[[12,7.296140480202946e-9,3.0805926471967995e-9,0.9999999896232669],[11,7.296140480202946e-9,3.0805926471967995e-9,0.9999999896232669],[10,6.809731114856083e-9,3.5670020125436625e-9,0.9999999896232669],[9,5.836912384162357e-9,4.539820743237389e-9,0.9999999896232669],[8,3.891274922774904e-9,6.485458204624841e-9,0.9999999896232669],[7,3.891274922774904e-9,6.485458204624841e-9,0.9999999896232669],[6,3.891274922774904e-9,6.485458204624841e-9,0.9999999896232669],[5,2.5941832818499365e-9,7.782549845549809e-9,0.9999999896232669],[4,0.0,1.0376733127399746e-8,0.9999999896232669],[3,0.0,1.0376733127399746e-8,0.9999999896232669],[2,0.0,1.0376733127399746e-8,0.9999999896232669],[1,0.0,1.0376733127399746e-8,0.9999999896232669],[0,0.0,1.0376733127399746e-8,0.9999999896232669]],"time":121.25390625,"type":"analyze"},{"outcomes":[["body",256,"valid",811.093994140625,8256]],"time":818.81494140625,"type":"sample"},{"compiler":[[22,15]],"inputs":[["0","1","2","3","4"],["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphay alphay)) (/.f64 sin2phi (*.f64 alphax alphax))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 alphax))) (+.f64 (/.f64 cos2phi (*.f64 u0 u0)) (/.f64 sin2phi (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 alphax (*.f64 cos2phi cos2phi)) (/.f64 sin2phi (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 sin2phi sin2phi)) (/.f64 alphax (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 alphay))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 u0 u0))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 alphay (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 cos2phi cos2phi))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 alphay (*.f64 sin2phi sin2phi))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 cos2phi))) (+.f64 (/.f64 u0 (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 sin2phi))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 u0 (*.f64 alphay alphay))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 sin2phi (*.f64 alphax alphax)) (/.f64 cos2phi (*.f64 alphay alphay))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphay alphay)) (/.f64 sin2phi (*.f64 alphax alphax))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphay alphay)) (/.f64 sin2phi (*.f64 alphax alphax)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 alphax))) (+.f64 (/.f64 cos2phi (*.f64 u0 u0)) (/.f64 sin2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 alphax)) (+.f64 (/.f64 cos2phi (*.f64 u0 u0)) (/.f64 sin2phi (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 alphax (*.f64 cos2phi cos2phi)) (/.f64 sin2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 alphax (*.f64 cos2phi cos2phi)) (/.f64 sin2phi (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 sin2phi sin2phi)) (/.f64 alphax (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 cos2phi sin2phi) sin2phi) (/.f64 alphax (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 alphay))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 u0 u0))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 alphay)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 u0 u0)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 alphay (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 cos2phi cos2phi))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 alphay (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 cos2phi cos2phi)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 alphay (*.f64 sin2phi sin2phi))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 alphay sin2phi) sin2phi))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 cos2phi))) (+.f64 (/.f64 u0 (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 cos2phi)) (+.f64 (/.f64 u0 (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 sin2phi))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 u0 (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 sin2phi)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 u0 (*.f64 alphay alphay)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 sin2phi (*.f64 alphax alphax)) (/.f64 cos2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphay alphay)) (/.f64 sin2phi (*.f64 alphax alphax)))))"]],"symmetry":[[]],"time":89.738037109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))"]],"time":22.699951171875,"type":"simplify"},{"compiler":[[37,22]],"time":1.484130859375,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","next",0.6293339838718501],["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))","fresh",11.771495550979543]],"compiler":[[20,14],[22,15],[20,14],[22,15]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.6137089838718501],"time":1.587890625,"type":"prune"},{"compiler":[[66,24]],"locations":[["(log1p.f64 (neg.f64 u0))",0.01171875,true],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))",0.1875,true],["(/.f64 cos2phi (*.f64 alphax alphax))",0.265625,true],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))",0.5632214350296401,true]],"time":16.046142578125,"type":"localize"},{"count":[[4,144]],"series":[["(log1p.f64 (neg.f64 u0))","u0","-inf",0.197998046875],["(log1p.f64 (neg.f64 u0))","u0","inf",0.23095703125],["(log1p.f64 (neg.f64 u0))","u0","0",0.2080078125],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphax","-inf",0.15283203125],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphax","inf",0.22900390625],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphax","0",0.22802734375],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","cos2phi","-inf",0.191162109375],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","cos2phi","inf",0.16015625],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","cos2phi","0",0.304931640625],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphay","-inf",0.348876953125],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphay","inf",0.319091796875],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","alphay","0",0.364013671875],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","sin2phi","-inf",0.30615234375],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","sin2phi","inf",0.287109375],["(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","sin2phi","0",0.494873046875],["(/.f64 cos2phi (*.f64 alphax alphax))","alphax","-inf",0.14697265625],["(/.f64 cos2phi (*.f64 alphax alphax))","alphax","inf",0.2529296875],["(/.f64 cos2phi (*.f64 alphax alphax))","alphax","0",0.414794921875],["(/.f64 cos2phi (*.f64 alphax alphax))","cos2phi","-inf",0.360107421875],["(/.f64 cos2phi (*.f64 alphax alphax))","cos2phi","inf",0.4931640625],["(/.f64 cos2phi (*.f64 alphax alphax))","cos2phi","0",0.882080078125],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphax","-inf",0.345947265625],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphax","inf",0.715087890625],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphax","0",0.68505859375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","cos2phi","-inf",4.996826171875],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","cos2phi","inf",0.512939453125],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","cos2phi","0",0.488037109375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphay","-inf",0.39501953125],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphay","inf",0.548095703125],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","alphay","0",0.76904296875],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","sin2phi","-inf",0.64599609375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","sin2phi","inf",0.708984375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","sin2phi","0",0.763916015625],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","u0","-inf",0.52099609375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","u0","inf",0.698974609375],["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","u0","0",0.908935546875]],"time":20.932861328125,"type":"series"},{"count":[[4,188]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","(/.f64 cos2phi (*.f64 alphax alphax))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(log1p.f64 (neg.f64 u0))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (/.f64 -1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)) (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (cbrt.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (neg.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0))))) (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (log1p.f64 (neg.f64 u0)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)) (log1p.f64 (neg.f64 u0))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2))) (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) -1) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 alphax alphax))) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 cos2phi) (*.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 cos2phi) (neg.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cos2phi (pow.f64 alphax -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alphax -2) cos2phi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi alphax) (/.f64 1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -2)) (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) (pow.f64 alphax -2)) (cbrt.f64 cos2phi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax) (/.f64 (cbrt.f64 cos2phi) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 alphax -2)) (neg.f64 cos2phi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (cbrt.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 cos2phi alphax)) (/.f64 -1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi alphax) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 cos2phi) (neg.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 cos2phi (*.f64 alphax alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 cos2phi alphax)) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (cbrt.f64 (*.f64 cos2phi cos2phi))) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -2)) cos2phi) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 alphax) (/.f64 cos2phi (cbrt.f64 alphax))) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 alphax) (neg.f64 cos2phi)) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 cos2phi)) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (neg.f64 cos2phi))) (cbrt.f64 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 cos2phi alphax))) (cbrt.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (*.f64 cos2phi cos2phi))) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) 1) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) 1) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 cos2phi alphax)) 1) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 cos2phi (cbrt.f64 alphax)) (/.f64 1 alphax)) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 cos2phi) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2))) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 cos2phi)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2))) (cbrt.f64 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 cos2phi alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2))) (cbrt.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) 1) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (cbrt.f64 (*.f64 alphax alphax)))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 alphax)) (cbrt.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) 1) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi -1) (neg.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi (cbrt.f64 alphax)) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 cos2phi) (cbrt.f64 (*.f64 alphax alphax))) (neg.f64 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) -1) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 (*.f64 alphax alphax))) (cbrt.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 cos2phi alphax)) (cbrt.f64 (*.f64 cos2phi cos2phi))) (*.f64 (cbrt.f64 alphax) (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 cos2phi (cbrt.f64 alphax)) 1) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2)))) (neg.f64 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax))) (cbrt.f64 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 sin2phi (pow.f64 alphay -2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 (neg.f64 sin2phi) (pow.f64 alphay -2))) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 sin2phi) (pow.f64 alphay -2)) -1) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 sin2phi (pow.f64 alphay -2)) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 cos2phi) (*.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) (pow.f64 alphax -2)) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 cos2phi (pow.f64 alphax -2) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 cos2phi) (neg.f64 (pow.f64 alphax -2)) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 cos2phi alphax) (/.f64 1 alphax) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 alphax -2) cos2phi (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 alphax -2)) (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 sin2phi) (*.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) (pow.f64 alphay -2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 sin2phi (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 (*.f64 sin2phi (pow.f64 alphay -2)) 2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 alphay (*.f64 2 -2))) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 alphay -2) sin2phi (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1 (*.f64 sin2phi (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 sin2phi (pow.f64 alphay -2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 sin2phi (pow.f64 alphay -2)) 1 (/.f64 (/.f64 cos2phi alphax) alphax))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 u0)) (*.f64 (log1p.f64 (neg.f64 u0)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (neg.f64 u0)) 0) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 u0)) (*.f64 0 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (neg.f64 u0))) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (cbrt.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 u0)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0)))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 u0)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (neg.f64 u0)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (neg.f64 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (-.f64 1 u0))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 -1 (+.f64 -1 u0))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (neg.f64 u0))))))"]],"rules":[["egg-rr",25],["egg-rr",46],["egg-rr",71],["egg-rr",46]],"time":38.445068359375,"type":"rewrite"},{"count":[[332,257]],"inputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(*.f64 -1 u0)","(+.f64 (*.f64 -1 u0) (*.f64 -1/2 (pow.f64 u0 2)))","(+.f64 (*.f64 -1 u0) (+.f64 (*.f64 -1/2 (pow.f64 u0 2)) (*.f64 -1/3 (pow.f64 u0 3))))","(+.f64 (*.f64 -1 u0) (+.f64 (*.f64 -1/2 (pow.f64 u0 2)) (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/4 (pow.f64 u0 4)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (/.f64 1 u0))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 1 u0) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 1 u0) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u0 3))) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2))))))","(*.f64 -1 (log.f64 (/.f64 -1 u0)))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (/.f64 1 u0))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (+.f64 (/.f64 1 u0) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2)))))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (+.f64 (/.f64 1 u0) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u0 3))) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 u0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (fma.f64 (*.f64 u0 u0) -1/2 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/2 (*.f64 u0 u0))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 u0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(+.f64 (/.f64 (fma.f64 (*.f64 u0 u0) -1/2 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/4 (pow.f64 u0 4))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (/.f64 (log.f64 -1) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 (-.f64 (log.f64 u0) (/.f64 1 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (fma.f64 1/2 (/.f64 (pow.f64 u0 -2) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 (/.f64 1 u0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (fma.f64 (/.f64 (pow.f64 u0 -2) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) 1/2 (fma.f64 (/.f64 (pow.f64 u0 -3) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) 1/3 (/.f64 (/.f64 1 u0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 (log.f64 (neg.f64 u0))) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(neg.f64 (/.f64 (+.f64 (/.f64 1 u0) (neg.f64 (log.f64 (neg.f64 u0)))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (neg.f64 (/.f64 (+.f64 (/.f64 1 u0) (neg.f64 (log.f64 (neg.f64 u0)))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (-.f64 (neg.f64 (/.f64 (+.f64 (/.f64 1 u0) (neg.f64 (log.f64 (neg.f64 u0)))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (*.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) -2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (*.f64 alphay alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))","(*.f64 -1 u0)","(neg.f64 u0)","(+.f64 (*.f64 -1 u0) (*.f64 -1/2 (pow.f64 u0 2)))","(fma.f64 (*.f64 u0 u0) -1/2 (neg.f64 u0))","(+.f64 (*.f64 -1 u0) (+.f64 (*.f64 -1/2 (pow.f64 u0 2)) (*.f64 -1/3 (pow.f64 u0 3))))","(-.f64 (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/2 (*.f64 u0 u0))) u0)","(+.f64 (*.f64 -1 u0) (+.f64 (*.f64 -1/2 (pow.f64 u0 2)) (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/4 (pow.f64 u0 4)))))","(-.f64 (fma.f64 -1/2 (*.f64 u0 u0) (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/4 (pow.f64 u0 4)))) u0)","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1))","(+.f64 (log.f64 u0) (log.f64 -1))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (/.f64 1 u0))","(+.f64 (log.f64 u0) (+.f64 (log.f64 -1) (/.f64 -1 u0)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 1 u0) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2)))))","(-.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (fma.f64 (pow.f64 u0 -2) 1/2 (/.f64 1 u0)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 1 u0) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u0 3))) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2))))))","(-.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 1 u0) (fma.f64 1/3 (pow.f64 u0 -3) (/.f64 (/.f64 1/2 u0) u0))))","(*.f64 -1 (log.f64 (/.f64 -1 u0)))","(neg.f64 (neg.f64 (log.f64 (neg.f64 u0))))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (/.f64 1 u0))","(neg.f64 (+.f64 (/.f64 1 u0) (neg.f64 (log.f64 (neg.f64 u0)))))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (+.f64 (/.f64 1 u0) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2)))))","(neg.f64 (+.f64 (fma.f64 (pow.f64 u0 -2) 1/2 (/.f64 1 u0)) (neg.f64 (log.f64 (neg.f64 u0)))))","(-.f64 (*.f64 -1 (log.f64 (/.f64 -1 u0))) (+.f64 (/.f64 1 u0) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u0 3))) (*.f64 1/2 (/.f64 1 (pow.f64 u0 2))))))","(neg.f64 (+.f64 (+.f64 (/.f64 1 u0) (fma.f64 1/3 (pow.f64 u0 -3) (/.f64 (/.f64 1/2 u0) u0))) (neg.f64 (log.f64 (neg.f64 u0)))))"]],"time":513.244873046875,"type":"simplify"},{"compiler":[[6378,3150]],"time":62.155029296875,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (pow.f64 alphax -2))))))","fresh",0.6726728022509444],["(neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (cbrt.f64 (log1p.f64 (neg.f64 u0)))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","fresh",0.7254453608615965],["(neg.f64 (/.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2)))","fresh",1.4734078907117514],["(neg.f64 (-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))))","fresh",49.95159826527944],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3)))","fresh",0.9801044671561651],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","next",0.5723614741034082],["(neg.f64 (+.f64 (/.f64 (fma.f64 (*.f64 u0 u0) -1/2 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/4 (pow.f64 u0 4))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))))","fresh",11.315101521579995],["(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","fresh",11.268289763476696],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (cbrt.f64 (*.f64 alphax alphax))))))","fresh",0.6518140131771762],["(neg.f64 (*.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0))))","fresh",0.6515203120193863],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 alphay (*.f64 2 -2))) (/.f64 (/.f64 cos2phi alphax) alphax))))","fresh",0.7016377924825022],["(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","fresh",16.69572277985036],["(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","fresh",0.8968093257673212]],"compiler":[[26,19],[28,19],[53,33],[31,20],[23,17],[21,16],[46,29],[75,55],[26,19],[22,16],[28,21],[15,11],[23,17],[26,19],[28,19],[53,33],[31,20],[23,17],[21,16],[46,29],[75,55],[26,19],[22,16],[28,21],[15,11],[23,17]],"count":[[259,13]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[257,13],"picked":[1,0]}],"min-error":[0.015625],"time":71.31201171875,"type":"prune"},{"compiler":[[74,42]],"locations":[["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))",0.015625,true],["(/.f64 sin2phi (pow.f64 alphay 2))",0.2578125,true],["(/.f64 cos2phi (pow.f64 alphax 2))",0.265625,true],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))",0.5632214350296401,true]],"time":18.092041015625,"type":"localize"},{"count":[[4,72]],"series":[["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphay","-inf",0.171875],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphay","inf",0.157958984375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphay","0",0.1708984375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","sin2phi","-inf",0.157958984375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","sin2phi","inf",0.1572265625],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","sin2phi","0",0.172119140625],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphax","-inf",0.156005859375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphax","inf",0.566162109375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","alphax","0",0.214111328125],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","cos2phi","-inf",0.177978515625],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","cos2phi","inf",0.162109375],["(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","cos2phi","0",0.289794921875],["(/.f64 sin2phi (pow.f64 alphay 2))","alphay","-inf",0.139892578125],["(/.f64 sin2phi (pow.f64 alphay 2))","alphay","inf",0.259033203125],["(/.f64 sin2phi (pow.f64 alphay 2))","alphay","0",0.337158203125],["(/.f64 sin2phi (pow.f64 alphay 2))","sin2phi","-inf",0.360107421875],["(/.f64 sin2phi (pow.f64 alphay 2))","sin2phi","inf",0.4560546875],["(/.f64 sin2phi (pow.f64 alphay 2))","sin2phi","0",0.44287109375],["(/.f64 cos2phi (pow.f64 alphax 2))","alphax","-inf",0.1572265625],["(/.f64 cos2phi (pow.f64 alphax 2))","alphax","inf",0.137939453125],["(/.f64 cos2phi (pow.f64 alphax 2))","alphax","0",0.138916015625],["(/.f64 cos2phi (pow.f64 alphax 2))","cos2phi","-inf",0.156005859375],["(/.f64 cos2phi (pow.f64 alphax 2))","cos2phi","inf",0.14013671875],["(/.f64 cos2phi (pow.f64 alphax 2))","cos2phi","0",0.14306640625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","-inf",0.255126953125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","inf",0.319091796875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","0",0.321044921875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","-inf",0.296875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","inf",0.323974609375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","0",0.279052734375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","-inf",0.27392578125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","inf",0.337890625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","0",0.300048828125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","-inf",0.302001953125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","inf",0.306884765625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","0",0.2900390625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","-inf",0.2939453125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","inf",0.30908203125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","0",0.39111328125]],"time":10.55712890625,"type":"series"},{"count":[[4,227]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (/.f64 -1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)) (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (log1p.f64 (neg.f64 u0)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0))))) (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)) (log1p.f64 (neg.f64 u0))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2))) (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 u0)))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 alphax alphax))) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 cos2phi) (*.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 cos2phi) (neg.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cos2phi (pow.f64 alphax -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alphax -2) cos2phi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -2)) (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi alphax) (/.f64 1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 cos2phi) (neg.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi alphax) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 cos2phi (*.f64 alphax alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 cos2phi)) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (neg.f64 cos2phi))) (cbrt.f64 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (cbrt.f64 (*.f64 cos2phi cos2phi))) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 alphax) cos2phi) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (*.f64 cos2phi cos2phi))) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -2)) cos2phi) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 cos2phi) (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax)) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 cos2phi alphax) 1) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) 1) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 cos2phi) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2))) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 cos2phi)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2))) (cbrt.f64 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 cos2phi alphax)) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2)))) (neg.f64 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 0) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (*.f64 0 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 alphay alphay))) (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 sin2phi) (neg.f64 (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 sin2phi) alphay) (/.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 sin2phi) (*.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) (pow.f64 alphay -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 sin2phi (pow.f64 alphay -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alphay -2) sin2phi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alphay) (/.f64 sin2phi alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 sin2phi alphay) (/.f64 1 alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 sin2phi alphay) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 alphay 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 sin2phi (*.f64 alphay alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 sin2phi) alphay) (cbrt.f64 (*.f64 sin2phi sin2phi))) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (neg.f64 sin2phi))) (cbrt.f64 (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 sin2phi)) (cbrt.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (*.f64 sin2phi sin2phi))) (cbrt.f64 (pow.f64 alphay 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 alphay -2)) sin2phi) (cbrt.f64 (pow.f64 alphay 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 alphay) sin2phi) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) 1) (cbrt.f64 (pow.f64 alphay 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 sin2phi alphay) 1) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 sin2phi)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2))) (cbrt.f64 (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 sin2phi) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2))) (cbrt.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 sin2phi) (/.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) alphay)) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (cbrt.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 sin2phi alphay)) (neg.f64 alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2)))) (neg.f64 (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) -1) (*.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) -1) (*.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 (*.f64 alphax alphay) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi))) (/.f64 1 (neg.f64 (pow.f64 (*.f64 alphax alphay) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (pow.f64 alphay -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (*.f64 (*.f64 cos2phi sin2phi) (pow.f64 (*.f64 alphax alphay) -2))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (*.f64 (*.f64 cos2phi sin2phi) (pow.f64 (*.f64 alphax alphay) -2))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphax alphax)) (neg.f64 (neg.f64 (*.f64 cos2phi (*.f64 alphay alphay))))) (pow.f64 (*.f64 alphax alphay) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 (*.f64 alphax alphay) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi))) (neg.f64 (pow.f64 (*.f64 alphax alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphax alphax)) (neg.f64 (neg.f64 (*.f64 cos2phi (*.f64 alphay alphay))))) (pow.f64 (*.f64 alphax alphay) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (*.f64 alphay alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)) (cbrt.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)))) (cbrt.f64 (pow.f64 (*.f64 alphax alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) 1) (pow.f64 (*.f64 alphax alphay) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)))) (pow.f64 (*.f64 alphax alphay) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi))) 1) (neg.f64 (pow.f64 (*.f64 alphax alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) 1) (*.f64 alphay alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphax alphax)) (neg.f64 (neg.f64 (*.f64 cos2phi (*.f64 alphay alphay))))) 1) (pow.f64 (*.f64 alphax alphay) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))) (cbrt.f64 (pow.f64 (*.f64 alphax alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphax 4))) (*.f64 (*.f64 alphay alphay) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))) (*.f64 (*.f64 alphay alphay) (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) alphax) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (/.f64 cos2phi alphax))) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (neg.f64 (*.f64 alphax alphax))) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (neg.f64 cos2phi))) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (*.f64 alphax alphax)) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) cos2phi)) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 alphax 4))) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))) (*.f64 (cbrt.f64 (pow.f64 alphay 4)) (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) alphax) (*.f64 (neg.f64 (*.f64 alphay alphay)) (/.f64 cos2phi alphax))) (*.f64 (neg.f64 (*.f64 alphay alphay)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) (cbrt.f64 (pow.f64 alphax 4))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) alphax) (*.f64 alphay (/.f64 cos2phi alphax))) (*.f64 alphay alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (neg.f64 (*.f64 alphax alphax))) (*.f64 alphay (neg.f64 cos2phi))) (*.f64 alphay (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (*.f64 alphax alphax)) (*.f64 alphay cos2phi)) (*.f64 alphay (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (cbrt.f64 (pow.f64 alphax 4))) (*.f64 alphay (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))) (*.f64 alphay (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi alphay) (*.f64 (*.f64 alphax alphax) (/.f64 sin2phi alphay))) (*.f64 (*.f64 alphax alphax) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphay 4))) (*.f64 (*.f64 alphax alphax) (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))))) (*.f64 (*.f64 alphax alphax) (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (neg.f64 (*.f64 alphay alphay))) (*.f64 alphax (neg.f64 sin2phi))) (*.f64 alphax (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) alphay) (*.f64 alphax (/.f64 sin2phi alphay))) (*.f64 alphax alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (cbrt.f64 (pow.f64 alphay 4))) (*.f64 alphax (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))))) (*.f64 alphax (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (*.f64 alphay alphay)) (*.f64 alphax sin2phi)) (*.f64 alphax (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (neg.f64 (*.f64 alphay alphay))) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (neg.f64 sin2phi))) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) alphay) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (/.f64 sin2phi alphay))) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (pow.f64 alphay 4))) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))))) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (*.f64 alphay alphay)) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) sin2phi)) (*.f64 (cbrt.f64 (pow.f64 alphax 4)) (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) alphay) (*.f64 (neg.f64 (*.f64 alphax alphax)) (/.f64 sin2phi alphay))) (*.f64 (neg.f64 (*.f64 alphax alphax)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) (cbrt.f64 (pow.f64 alphay 4))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (cbrt.f64 (pow.f64 alphay 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2))) (neg.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphax alphax)) (neg.f64 (neg.f64 (*.f64 cos2phi (*.f64 alphay alphay)))))) (neg.f64 (pow.f64 (*.f64 alphax alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 alphay) (/.f64 sin2phi alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 sin2phi) (*.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) (pow.f64 alphay -2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 sin2phi) alphay) (/.f64 (cbrt.f64 (*.f64 sin2phi sin2phi)) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 sin2phi) (neg.f64 (pow.f64 alphay -2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1 (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 alphay -2) sin2phi (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 cos2phi) (neg.f64 (pow.f64 alphax -2)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 cos2phi) (*.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) (pow.f64 alphax -2)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 cos2phi) alphax) (/.f64 (cbrt.f64 (*.f64 cos2phi cos2phi)) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 alphax -2) cos2phi (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1 (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 alphax -2)) (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (/.f64 (/.f64 sin2phi alphay) alphay))))))"]],"rules":[["egg-rr",93],["egg-rr",46],["egg-rr",46],["egg-rr",42]],"time":44.169921875,"type":"rewrite"},{"count":[[299,269]],"inputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 u0 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(+.f64 (/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/4 (pow.f64 u0 4))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (-.f64 (log.f64 u0) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (+.f64 (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 (log.f64 (neg.f64 u0))) (neg.f64 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))"]],"time":252.237060546875,"type":"simplify"},{"compiler":[[6935,3172]],"time":60.179931640625,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2)))","fresh",1.4734078907117514],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))","next",0.5935139643349662],["(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","fresh",0.8968093257673212],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (*.f64 alphay alphay))))","fresh",0.7511678706300386],["(neg.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",0.7502103999353646],["(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","fresh",16.69572277985036],["(neg.f64 (*.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0))))","fresh",0.6515203120193863],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2)))))","fresh",0.6104665034087343],["(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","fresh",11.268289763476696],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (cbrt.f64 (*.f64 alphay alphay))))))","fresh",0.6710515620193864],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))","fresh",0.6554265620193864],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (/.f64 (/.f64 cos2phi alphax) alphax))))","fresh",0.6593328120193863],["(neg.f64 (/.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",21.92821711772222]],"compiler":[[53,33],[21,14],[23,17],[28,17],[28,19],[15,11],[22,16],[29,23],[75,55],[27,20],[27,16],[26,19],[42,26],[53,33],[21,14],[23,17],[28,17],[28,19],[15,11],[22,16],[29,23],[75,55],[27,20],[27,16],[26,19],[42,26]],"count":[[282,13]],"kept":[{"done":[0,0],"fresh":[12,2],"new":[269,11],"picked":[1,0]}],"min-error":[0.0078125],"time":92.330078125,"type":"prune"},{"compiler":[[73,14]],"locations":[["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))",0.015625,true],["(/.f64 (/.f64 cos2phi alphax) alphax)",0.21484375,true],["(/.f64 (/.f64 sin2phi alphay) alphay)",0.28515625,true],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))",0.5632214350296401,true]],"time":11.85888671875,"type":"localize"},{"count":[[4,156]],"series":[["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphax","-inf",0.15185546875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphax","inf",0.154052734375],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphax","0",0.15185546875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","cos2phi","-inf",0.169921875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","cos2phi","inf",0.153076171875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","cos2phi","0",0.153076171875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphay","-inf",0.1689453125],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphay","inf",0.153076171875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","alphay","0",0.169921875],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","sin2phi","-inf",0.15380859375],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","sin2phi","inf",0.159912109375],["(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))","sin2phi","0",0.1689453125],["(/.f64 (/.f64 cos2phi alphax) alphax)","alphax","-inf",0.13818359375],["(/.f64 (/.f64 cos2phi alphax) alphax)","alphax","inf",0.154052734375],["(/.f64 (/.f64 cos2phi alphax) alphax)","alphax","0",0.137939453125],["(/.f64 (/.f64 cos2phi alphax) alphax)","cos2phi","-inf",0.14111328125],["(/.f64 (/.f64 cos2phi alphax) alphax)","cos2phi","inf",0.156005859375],["(/.f64 (/.f64 cos2phi alphax) alphax)","cos2phi","0",0.139892578125],["(/.f64 (/.f64 sin2phi alphay) alphay)","alphay","-inf",0.13818359375],["(/.f64 (/.f64 sin2phi alphay) alphay)","alphay","inf",0.155029296875],["(/.f64 (/.f64 sin2phi alphay) alphay)","alphay","0",0.138916015625],["(/.f64 (/.f64 sin2phi alphay) alphay)","sin2phi","-inf",0.141845703125],["(/.f64 (/.f64 sin2phi alphay) alphay)","sin2phi","inf",0.156982421875],["(/.f64 (/.f64 sin2phi alphay) alphay)","sin2phi","0",0.14208984375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphax","-inf",0.27490234375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphax","inf",0.294921875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphax","0",0.264892578125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","cos2phi","-inf",0.280029296875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","cos2phi","inf",0.263916015625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","cos2phi","0",0.263916015625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphay","-inf",0.259033203125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphay","inf",0.285888671875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","alphay","0",0.254150390625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","sin2phi","-inf",0.2861328125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","sin2phi","inf",0.31005859375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","sin2phi","0",0.251220703125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","u0","-inf",0.273193359375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","u0","inf",0.288818359375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","u0","0",0.336181640625]],"time":8.419921875,"type":"series"},{"count":[[4,211]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax)))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 (/.f64 cos2phi alphax) alphax)","(+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 0) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 2)) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (neg.f64 1/3)) (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (/.f64 -1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 0) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (*.f64 0 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 alphay)) (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 sin2phi alphay)) (/.f64 -1 alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 sin2phi (cbrt.f64 alphay)) (/.f64 (/.f64 1 alphay) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 sin2phi (pow.f64 alphay -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 sin2phi alphay)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 sin2phi alphay) 2)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 sin2phi alphay) (/.f64 1 alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alphay) (/.f64 sin2phi alphay))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 alphay)) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (pow.f64 (cbrt.f64 alphay) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 sin2phi) (/.f64 1 (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 sin2phi (/.f64 1 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 sin2phi alphay) alphay)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 sin2phi alphay)) (neg.f64 alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (cbrt.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 sin2phi (*.f64 alphay alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 sin2phi (/.f64 (*.f64 alphay alphay) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 sin2phi) (/.f64 (neg.f64 (*.f64 alphay alphay)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay))) (neg.f64 (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 0) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 alphax)) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 cos2phi alphax)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 cos2phi alphax) 2)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 cos2phi alphax)) (/.f64 -1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi (cbrt.f64 alphax)) (/.f64 (/.f64 1 alphax) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cos2phi (pow.f64 alphax -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi alphax) (/.f64 1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 alphax)) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (pow.f64 (cbrt.f64 alphax) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cos2phi (/.f64 1 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 cos2phi) (/.f64 1 (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 cos2phi alphax) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 cos2phi alphax)) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 cos2phi (*.f64 alphax alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 cos2phi) (neg.f64 (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 cos2phi (/.f64 (*.f64 alphax alphax) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 cos2phi) (/.f64 (neg.f64 (*.f64 alphax alphax)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax))) (neg.f64 (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 0) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) -1) (*.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) -1) (*.f64 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 cos2phi alphax) alphax) (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax)) (/.f64 1 (*.f64 alphay alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax)) alphay) (/.f64 1 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax))) (/.f64 1 (neg.f64 (*.f64 alphay alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax)) (*.f64 alphay alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax)) alphay) alphax)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi alphay) (*.f64 (*.f64 alphax alphax) (/.f64 sin2phi alphay))) (*.f64 (*.f64 alphax alphax) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi (cbrt.f64 (*.f64 alphay alphay))) (*.f64 (*.f64 alphax alphax) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)))) (*.f64 (*.f64 alphax alphax) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi (neg.f64 (*.f64 alphay alphay))) (*.f64 (*.f64 alphax alphax) (neg.f64 sin2phi))) (*.f64 (*.f64 alphax alphax) (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi (neg.f64 alphay)) (*.f64 (*.f64 alphax alphax) (neg.f64 (/.f64 sin2phi alphay)))) (*.f64 (*.f64 alphax alphax) (neg.f64 alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 cos2phi (*.f64 alphay alphay)) (*.f64 (*.f64 alphax alphax) sin2phi)) (*.f64 (*.f64 alphax alphax) (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) alphay) (*.f64 (neg.f64 (*.f64 alphax alphax)) (/.f64 sin2phi alphay))) (*.f64 (neg.f64 (*.f64 alphax alphax)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) (cbrt.f64 (*.f64 alphay alphay))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) (neg.f64 (*.f64 alphay alphay))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (neg.f64 sin2phi))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) (neg.f64 alphay)) (*.f64 (neg.f64 (*.f64 alphax alphax)) (neg.f64 (/.f64 sin2phi alphay)))) (*.f64 (neg.f64 (*.f64 alphax alphax)) (neg.f64 alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 cos2phi) (*.f64 alphay alphay)) (*.f64 (neg.f64 (*.f64 alphax alphax)) sin2phi)) (*.f64 (neg.f64 (*.f64 alphax alphax)) (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) alphay) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (/.f64 sin2phi alphay))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (*.f64 alphay alphay))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (neg.f64 (*.f64 alphay alphay))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (neg.f64 sin2phi))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (neg.f64 alphay)) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (neg.f64 (/.f64 sin2phi alphay)))) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (neg.f64 alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (*.f64 alphay alphay)) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) sin2phi)) (*.f64 (cbrt.f64 (*.f64 alphax alphax)) (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 cos2phi alphax)) (cbrt.f64 (*.f64 alphay alphay))) (*.f64 (neg.f64 alphax) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)))) (*.f64 (neg.f64 alphax) (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 cos2phi alphax)) (neg.f64 (*.f64 alphay alphay))) (*.f64 (neg.f64 alphax) (neg.f64 sin2phi))) (*.f64 (neg.f64 alphax) (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 cos2phi alphax)) (*.f64 alphay alphay)) (*.f64 (neg.f64 alphax) sin2phi)) (*.f64 (neg.f64 alphax) (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (cbrt.f64 (*.f64 alphay alphay))) (*.f64 alphax (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)))) (*.f64 alphax (cbrt.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (neg.f64 (*.f64 alphay alphay))) (*.f64 alphax (neg.f64 sin2phi))) (*.f64 alphax (neg.f64 (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 cos2phi alphax) (*.f64 alphay alphay)) (*.f64 alphax sin2phi)) (*.f64 alphax (*.f64 alphay alphay)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 sin2phi alphay)) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 (neg.f64 alphay) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 (neg.f64 alphay) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 sin2phi alphay)) (*.f64 alphax alphax)) (*.f64 (neg.f64 alphay) cos2phi)) (*.f64 (neg.f64 alphay) (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 sin2phi alphay)) (neg.f64 (*.f64 alphax alphax))) (*.f64 (neg.f64 alphay) (neg.f64 cos2phi))) (*.f64 (neg.f64 alphay) (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi (cbrt.f64 (*.f64 alphax alphax))) (*.f64 (*.f64 alphay alphay) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 (*.f64 alphay alphay) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi (neg.f64 alphax)) (*.f64 (*.f64 alphay alphay) (neg.f64 (/.f64 cos2phi alphax)))) (*.f64 (*.f64 alphay alphay) (neg.f64 alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi (*.f64 alphax alphax)) (*.f64 (*.f64 alphay alphay) cos2phi)) (*.f64 (*.f64 alphay alphay) (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 sin2phi (neg.f64 (*.f64 alphax alphax))) (*.f64 (*.f64 alphay alphay) (neg.f64 cos2phi))) (*.f64 (*.f64 alphay alphay) (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 alphay (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 alphay (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (*.f64 alphax alphax)) (*.f64 alphay cos2phi)) (*.f64 alphay (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (neg.f64 (*.f64 alphax alphax))) (neg.f64 (*.f64 alphay cos2phi))) (*.f64 alphay (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) alphax) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (/.f64 cos2phi alphax))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (neg.f64 alphax)) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (neg.f64 (/.f64 cos2phi alphax)))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (neg.f64 alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (*.f64 alphax alphax)) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) cos2phi)) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 alphay)) (neg.f64 (*.f64 alphax alphax))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (neg.f64 cos2phi))) (*.f64 (cbrt.f64 (*.f64 alphay alphay)) (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 sin2phi alphax)) (*.f64 (neg.f64 (*.f64 alphay alphay)) (/.f64 cos2phi alphax))) (*.f64 (neg.f64 (*.f64 alphay alphay)) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (cbrt.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) (neg.f64 alphax)) (*.f64 (neg.f64 (*.f64 alphay alphay)) (neg.f64 (/.f64 cos2phi alphax)))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (neg.f64 alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) (*.f64 alphax alphax)) (*.f64 (neg.f64 (*.f64 alphay alphay)) cos2phi)) (*.f64 (neg.f64 (*.f64 alphay alphay)) (*.f64 alphax alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 sin2phi) (neg.f64 (*.f64 alphax alphax))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (neg.f64 cos2phi))) (*.f64 (neg.f64 (*.f64 alphay alphay)) (neg.f64 (*.f64 alphax alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax)) alphay)) (neg.f64 alphax))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 sin2phi alphay) alphax (/.f64 (*.f64 alphay cos2phi) alphax))) (neg.f64 (*.f64 alphay alphax)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 cos2phi alphax) (/.f64 1 alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 sin2phi alphay) (/.f64 1 alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 cos2phi alphax) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 sin2phi alphay)) (/.f64 -1 alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 2)) (cbrt.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 sin2phi alphay)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 sin2phi alphay) 2)) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 alphay) (/.f64 sin2phi alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 sin2phi alphay) alphay) 1 (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 sin2phi (cbrt.f64 alphay)) (/.f64 (/.f64 1 alphay) (cbrt.f64 (*.f64 alphay alphay))) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (/.f64 sin2phi alphay) alphay)) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 alphay)) (/.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphay alphay))) (/.f64 (/.f64 cos2phi alphax) alphax))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 cos2phi alphax)) (/.f64 -1 alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 cos2phi alphax)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 cos2phi alphax) 2)) alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 1 (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 alphax)) (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 (*.f64 alphax alphax))) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 alphax) (/.f64 cos2phi alphax) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 cos2phi (cbrt.f64 alphax)) (/.f64 (/.f64 1 alphax) (cbrt.f64 (*.f64 alphax alphax))) (/.f64 (/.f64 sin2phi alphay) alphay))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 cos2phi alphax) alphax) 2)) (cbrt.f64 (/.f64 (/.f64 cos2phi alphax) alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))))"]],"rules":[["egg-rr",102],["egg-rr",37],["egg-rr",37],["egg-rr",35]],"time":42.653076171875,"type":"rewrite"},{"count":[[367,255]],"inputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 cos2phi (pow.f64 alphax 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(/.f64 sin2phi (pow.f64 alphay 2))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 u0 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(+.f64 (/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/4 (pow.f64 u0 4))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (-.f64 (log.f64 u0) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (+.f64 (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 (log.f64 (neg.f64 u0))) (neg.f64 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(/.f64 sin2phi (pow.f64 alphay 2))","(/.f64 (/.f64 sin2phi alphay) alphay)","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))","(+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))","(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))"]],"time":511.2119140625,"type":"simplify"},{"compiler":[[6513,2451]],"time":48.045166015625,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2)))","fresh",1.4734078907117514],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))","done",0.5935139643349662],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (*.f64 alphay alphay))))","fresh",0.7511678706300386],["(neg.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",0.7502103999353646],["(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","fresh",16.69572277985036],["(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","fresh",0.8968093257673212],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2)))))","next",0.6104665034087343],["(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","fresh",11.268289763476696],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (cbrt.f64 (*.f64 alphay alphay))))))","fresh",0.6710515620193864],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))","fresh",0.6554265620193864],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 alphay (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 alphay (cbrt.f64 (*.f64 alphax alphax))))))","fresh",0.7036291010931545],["(neg.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",0.6515203120193863],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (/.f64 (/.f64 cos2phi alphax) alphax))))","fresh",0.6593328120193863],["(neg.f64 (/.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",21.92821711772222]],"compiler":[[53,33],[21,14],[28,17],[28,19],[15,11],[23,17],[29,23],[75,55],[27,20],[27,16],[34,20],[22,16],[26,19],[42,26],[53,33],[28,17],[28,19],[15,11],[23,17],[29,23],[75,55],[27,20],[27,16],[34,20],[22,16],[26,19],[42,26]],"count":[[268,14]],"kept":[{"done":[0,0],"fresh":[12,10],"new":[255,3],"picked":[1,1]}],"min-error":[0.00390625],"time":90.52197265625,"type":"prune"},{"compiler":[[132,90]],"locations":[["(/.f64 sin2phi (pow.f64 alphay 2))",0.2578125,false],["(/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))",0.26953125,true],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))",0.33431625976844204,true],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))",0.5632214350296401,true]],"time":36.806884765625,"type":"localize"},{"count":[[3,84]],"series":[["(/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))","alphax","-inf",0.27294921875],["(/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))","alphax","inf",0.31005859375],["(/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))","alphax","0",0.35986328125],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","alphax","-inf",0.14404296875],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","alphax","inf",0.220947265625],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","alphax","0",0.9130859375],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","cos2phi","-inf",0.2509765625],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","cos2phi","inf",0.212158203125],["(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","cos2phi","0",1.201904296875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","-inf",0.27001953125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","inf",0.341064453125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphay","0",0.298828125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","-inf",0.296142578125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","inf",0.27587890625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","sin2phi","0",0.294189453125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","-inf",0.302978515625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","inf",0.362060546875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","alphax","0",0.40087890625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","-inf",0.325927734375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","inf",0.3291015625],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","cos2phi","0",0.296875],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","-inf",0.294189453125],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","inf",0.333984375],["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","u0","0",0.427001953125]],"time":9.205078125,"type":"series"},{"count":[[3,112]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2))))","(*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4))))","(/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 0) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) (*.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 2/3) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2/3) (pow.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))) -1/3) (/.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (pow.f64 (cbrt.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (/.f64 -1 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2/3) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) (log1p.f64 (neg.f64 u0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))) (neg.f64 (pow.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 u0))) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (pow.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (neg.f64 (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 0) (*.f64 cos2phi (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 cos2phi (pow.f64 alphax -2)) (*.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 cos2phi (pow.f64 alphax -2))) (*.f64 cos2phi (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 cos2phi (pow.f64 alphax -2)) (*.f64 0 (*.f64 cos2phi (pow.f64 alphax -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 cos2phi (pow.f64 alphax -2))) (pow.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 2/3) (cbrt.f64 (*.f64 cos2phi (pow.f64 alphax -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 cos2phi) (*.f64 (pow.f64 cos2phi 2/3) (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 alphax -4) 2/3)) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 cos2phi (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 alphax -2) (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 cos2phi (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 cos2phi (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4)))) (cbrt.f64 (/.f64 (pow.f64 alphax -2) (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2)))) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -4)) (*.f64 cos2phi cos2phi)) (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (pow.f64 alphax -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -4)) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -4)) (cbrt.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))))) (pow.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 1 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 alphax -2)) cos2phi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -2)) (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cos2phi (pow.f64 alphax -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alphax -2) cos2phi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -4)) cos2phi) (cbrt.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 cos2phi) (cbrt.f64 (pow.f64 alphax -2))) (neg.f64 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4)))) (cbrt.f64 (pow.f64 (pow.f64 alphax -4) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 cos2phi) (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (neg.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4)))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4))))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 cos2phi (pow.f64 alphax -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 cos2phi (pow.f64 alphax -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 cos2phi (pow.f64 alphax -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 alphax -2)) cos2phi))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 cos2phi (pow.f64 alphax -2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -4)) 0) (cbrt.f64 (pow.f64 alphax -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 alphax -4)) (*.f64 (cbrt.f64 (pow.f64 alphax -4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 alphax -4))) (cbrt.f64 (pow.f64 alphax -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 alphax -4)) (*.f64 0 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (pow.f64 alphax -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (pow.f64 alphax -4)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -2)) (cbrt.f64 (pow.f64 alphax -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 alphax -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 alphax -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -2))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -2))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (/.f64 1 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -2))) (neg.f64 (cbrt.f64 (pow.f64 alphax -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 alphax -4) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (cbrt.f64 (pow.f64 (pow.f64 alphax -4) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -4)))) (/.f64 -1 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (pow.f64 alphax 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 alphax -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (neg.f64 (pow.f64 alphax 4)))) (cbrt.f64 (neg.f64 (pow.f64 alphax 4)))) (cbrt.f64 (pow.f64 alphax 8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (pow.f64 alphax -4) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -4)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 alphax -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 alphax -2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 alphax -4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 alphax 4) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 alphax 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -2))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax -4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 alphax 4))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 alphax -2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 alphax -4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 alphax -4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 alphax -4))))))"]],"rules":[["egg-rr",40],["egg-rr",37],["egg-rr",35]],"time":34.718017578125,"type":"rewrite"},{"count":[[196,154]],"inputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (pow.f64 alphax 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 u0 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))))","(+.f64 (/.f64 (+.f64 (neg.f64 u0) (*.f64 -1/2 (*.f64 u0 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 u0 3)) (*.f64 -1/4 (pow.f64 u0 4))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u0))) (log.f64 -1)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))","(/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 (-.f64 (log.f64 u0) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (+.f64 (/.f64 (log.f64 -1) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (/.f64 (+.f64 (log.f64 u0) (log.f64 -1)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (+.f64 (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))) (+.f64 (/.f64 (/.f64 1 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(/.f64 (neg.f64 (log.f64 (neg.f64 u0))) (neg.f64 (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))))","(/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))","(-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(-.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))) (+.f64 (/.f64 1 (*.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(-.f64 (-.f64 (/.f64 (-.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u0)))) (/.f64 1 u0)) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))) (/.f64 1/2 (*.f64 (*.f64 u0 u0) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay))))) (/.f64 1/3 (*.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 (/.f64 sin2phi alphay) alphay)))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi)","(/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)","(+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))","(-.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 cos2phi 2) (*.f64 (pow.f64 alphay 6) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 3) (pow.f64 alphax 4))) (+.f64 (/.f64 (*.f64 (pow.f64 alphay 2) (log.f64 (-.f64 1 u0))) sin2phi) (*.f64 -1 (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log.f64 (-.f64 1 u0)))) (*.f64 (pow.f64 sin2phi 2) (pow.f64 alphax 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 cos2phi cos2phi) (pow.f64 sin2phi 3)) (/.f64 (*.f64 (pow.f64 alphay 6) (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi)) (/.f64 (*.f64 cos2phi (*.f64 (pow.f64 alphay 4) (log1p.f64 (neg.f64 u0)))) (pow.f64 (*.f64 sin2phi alphax) 2))) (/.f64 (*.f64 (pow.f64 cos2phi 3) (*.f64 (pow.f64 alphay 8) (log1p.f64 (neg.f64 u0)))) (*.f64 (pow.f64 sin2phi 4) (pow.f64 alphax 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi)","(/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)","(+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))","(-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2))))))","(-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6)))) (+.f64 (/.f64 (*.f64 (pow.f64 sin2phi 2) (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 6))) (*.f64 (pow.f64 cos2phi 3) (pow.f64 alphay 4))) (+.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 2)) cos2phi) (*.f64 -1 (/.f64 (*.f64 sin2phi (*.f64 (log.f64 (-.f64 1 u0)) (pow.f64 alphax 4))) (*.f64 (pow.f64 cos2phi 2) (pow.f64 alphay 2)))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 sin2phi sin2phi) (pow.f64 cos2phi 3)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 6)) (pow.f64 alphay 4)) (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi)) (/.f64 (*.f64 sin2phi (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 4))) (pow.f64 (*.f64 cos2phi alphay) 2))) (/.f64 (*.f64 (pow.f64 sin2phi 3) (*.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 alphax 8))) (*.f64 (pow.f64 cos2phi 4) (pow.f64 alphay 6))))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))","(/.f64 cos2phi (pow.f64 alphax 2))","(/.f64 cos2phi (*.f64 alphax alphax))"]],"time":287.0419921875,"type":"simplify"},{"compiler":[[5736,3352]],"time":57.033935546875,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2)))","fresh",1.4734078907117514],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))","done",0.5935139643349662],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (*.f64 alphay alphay))))","fresh",0.7511678706300386],["(neg.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",0.7502103999353646],["(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","fresh",16.69572277985036],["(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","fresh",0.8968093257673212],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2)))))","done",0.6104665034087343],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))","fresh",0.6554265620193864],["(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","fresh",11.268289763476696],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 alphay (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 alphay (cbrt.f64 (*.f64 alphax alphax))))))","fresh",0.7036291010931545],["(neg.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",0.6515203120193863],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (/.f64 (/.f64 cos2phi alphax) alphax))))","fresh",0.6593328120193863],["(neg.f64 (/.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","fresh",21.92821711772222],["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (cbrt.f64 (*.f64 alphay alphay))))))","fresh",0.6710515620193864]],"compiler":[[53,33],[21,14],[28,17],[28,19],[15,11],[23,17],[29,23],[27,16],[75,55],[34,20],[22,16],[26,19],[42,26],[27,20]],"count":[[213,14]],"kept":[{"done":[1,1],"fresh":[12,11],"new":[199,1],"picked":[1,1]}],"min-error":[0.00390625],"time":51.738037109375,"type":"prune"},{"accuracy":[0.5723614741034081],"baseline":[0.5723614741034082],"branch":[["alphax",0.5723614741034081,1],["alphay",0.5723614741034082,1],["u0",0.5723614741034082,1],["cos2phi",0.5723614741034082,1],["sin2phi",0.5723614741034082,1],["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))",0.5723614741034081,1],["(neg.f64 (log.f64 (-.f64 1 u0)))",0.5723614741034082,1],["(log.f64 (-.f64 1 u0))",0.5723614741034082,1],["(-.f64 1 u0)",0.5723614741034082,1],["(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay)))",0.5723614741034081,1],["(/.f64 cos2phi (*.f64 alphax alphax))",0.5723614741034082,1],["(/.f64 cos2phi (*.f64 alphax alphax))",0.5723614741034082,1],["(*.f64 alphax alphax)",0.5723614741034081,1],["(*.f64 alphax alphax)",0.5723614741034081,1],["(/.f64 sin2phi (*.f64 alphay alphay))",0.5723614741034081,1],["(*.f64 alphay alphay)",0.5723614741034082,1],["(*.f64 alphay alphay)",0.5723614741034082,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[22,15],[10,9],[9,8],[8,7],[16,10],[10,7],[10,7],[8,6],[8,6],[10,7],[8,6],[8,6],[809,423]],"count":[[30,1]],"inputs":[["(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 (/.f64 sin2phi alphay) (cbrt.f64 (*.f64 alphax alphax))) (*.f64 alphay (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)))) (*.f64 alphay (cbrt.f64 (*.f64 alphax alphax))))))","(neg.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 (/.f64 sin2phi alphay) alphay) (/.f64 (/.f64 cos2phi alphax) alphax))))","(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (*.f64 (fma.f64 cos2phi (*.f64 alphay alphay) (*.f64 (*.f64 alphax alphax) sin2phi)) (pow.f64 alphax -2)) (*.f64 alphay alphay))))","(neg.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (*.f64 (*.f64 cos2phi (cbrt.f64 (pow.f64 alphax -2))) (/.f64 1 (cbrt.f64 (pow.f64 alphax 4)))) (/.f64 sin2phi (pow.f64 alphay 2)))))","(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (cbrt.f64 (*.f64 alphay alphay))))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (/.f64 (+.f64 (*.f64 sin2phi alphax) (*.f64 (*.f64 alphay alphay) (/.f64 cos2phi alphax))) (*.f64 (*.f64 alphay alphay) alphax))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (cbrt.f64 (pow.f64 alphay -2)) (/.f64 sin2phi (cbrt.f64 (pow.f64 alphay 4))) (/.f64 (/.f64 cos2phi alphax) alphax))))","(neg.f64 (/.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 u0))) (cbrt.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2) (pow.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)) 2)))) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (*.f64 (/.f64 (/.f64 cos2phi alphax) (cbrt.f64 alphax)) (cbrt.f64 (pow.f64 alphax -2))))))","(neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 u0)) 2)) (cbrt.f64 (log1p.f64 (neg.f64 u0)))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(neg.f64 (/.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 2) 2)))","(neg.f64 (-.f64 (/.f64 (*.f64 (log1p.f64 (neg.f64 u0)) (*.f64 alphax alphax)) cos2phi) (/.f64 (*.f64 (*.f64 sin2phi (log1p.f64 (neg.f64 u0))) (pow.f64 alphax 4)) (pow.f64 (*.f64 cos2phi alphay) 2))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (pow.f64 (cbrt.f64 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) 3)))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(neg.f64 (+.f64 (/.f64 (fma.f64 (*.f64 u0 u0) -1/2 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))) (/.f64 (fma.f64 -1/3 (pow.f64 u0 3) (*.f64 -1/4 (pow.f64 u0 4))) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax))))))","(neg.f64 (+.f64 (*.f64 -1 (/.f64 u0 (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 u0 2) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 u0 4) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2))))) (*.f64 -1/3 (/.f64 (pow.f64 u0 3) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi (cbrt.f64 (pow.f64 alphax 4))) (cbrt.f64 (*.f64 alphax alphax))))))","(neg.f64 (*.f64 (/.f64 1 (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax))) (log1p.f64 (neg.f64 u0))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 (*.f64 sin2phi (cbrt.f64 (pow.f64 alphay -2))) (cbrt.f64 (pow.f64 alphay (*.f64 2 -2))) (/.f64 (/.f64 cos2phi alphax) alphax))))","(neg.f64 (/.f64 (*.f64 (*.f64 alphay alphay) (log1p.f64 (neg.f64 u0))) sin2phi))","(neg.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 (/.f64 cos2phi alphax) alphax)))) 3))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 sin2phi (pow.f64 alphay -2) (/.f64 cos2phi (*.f64 alphax alphax)))))","(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))"]],"link":["."],"name":["Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5"],"oracle":[63.02429846279607],"outputs":[["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))"]],"time":171.02392578125,"times":[["alphax",8.9140625],["alphay",8.878173828125],["u0",11.14697265625],["cos2phi",8.840087890625],["sin2phi",8.822021484375],["(/.f64 (neg.f64 (log.f64 (-.f64 1 u0))) (+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay))))",9.01318359375],["(neg.f64 (log.f64 (-.f64 1 u0)))",8.833984375],["(log.f64 (-.f64 1 u0))",8.869873046875],["(-.f64 1 u0)",8.873046875],["(+.f64 (/.f64 cos2phi (*.f64 alphax alphax)) (/.f64 sin2phi (*.f64 alphay alphay)))",8.945068359375],["(/.f64 cos2phi (*.f64 alphax alphax))",8.95703125],["(/.f64 cos2phi (*.f64 alphax alphax))",8.877197265625],["(*.f64 alphax alphax)",8.91796875],["(*.f64 alphax alphax)",8.89111328125],["(/.f64 sin2phi (*.f64 alphay alphay))",9.64306640625],["(*.f64 alphay alphay)",8.807861328125],["(*.f64 alphay alphay)",8.927001953125]],"type":"regimes"},{"compiler":[[21,16]],"inputs":[["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))"]],"method":["egg-herbie"],"outputs":[["(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (+.f64 (/.f64 cos2phi (pow.f64 alphax 2)) (/.f64 sin2phi (pow.f64 alphay 2)))))","(neg.f64 (/.f64 (log1p.f64 (neg.f64 u0)) (fma.f64 cos2phi (pow.f64 alphax -2) (/.f64 sin2phi (*.f64 alphay alphay)))))"]],"stop":[["fuel",1]],"time":22.299072265625,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[21,16]],"remove-preprocessing":[[]],"time":10.7109375,"type":"end"}]