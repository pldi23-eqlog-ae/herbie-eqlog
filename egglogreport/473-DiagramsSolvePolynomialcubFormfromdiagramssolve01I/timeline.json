[{"compiler":[[19,14]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":188.200927734375,"type":"analyze"},{"outcomes":[["body",256,"invalid",175.015869140625,3164],["body",256,"valid",458.7021484375,8256]],"time":644.2900390625,"type":"sample"},{"compiler":[[18,13]],"inputs":[["0","1","2","3","4"],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 y x) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 z y) (*.f64 (*.f64 x 9) t)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 t y) (*.f64 (*.f64 z 9) x)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 a y) (*.f64 (*.f64 z 9) t)) (*.f64 x 2))","(/.f64 (-.f64 (*.f64 x z) (*.f64 (*.f64 y 9) t)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x t) (*.f64 (*.f64 z 9) y)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x a) (*.f64 (*.f64 z 9) t)) (*.f64 y 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 t 9) z)) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 a 9) t)) (*.f64 z 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) a)) (*.f64 t 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 (*.f64 z 9) t))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 y x) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 (*.f64 z 9) t))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 z y) (*.f64 (*.f64 x 9) t)) (*.f64 a 2))","(/.f64 (fma.f64 z y (neg.f64 (*.f64 (*.f64 x 9) t))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 t y) (*.f64 (*.f64 z 9) x)) (*.f64 a 2))","(/.f64 (fma.f64 t y (neg.f64 (*.f64 (*.f64 z 9) x))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 a y) (*.f64 (*.f64 z 9) t)) (*.f64 x 2))","(/.f64 (fma.f64 a y (neg.f64 (*.f64 (*.f64 z 9) t))) (*.f64 x 2))","(/.f64 (-.f64 (*.f64 x z) (*.f64 (*.f64 y 9) t)) (*.f64 a 2))","(/.f64 (fma.f64 x z (neg.f64 (*.f64 (*.f64 y 9) t))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x t) (*.f64 (*.f64 z 9) y)) (*.f64 a 2))","(/.f64 (fma.f64 x t (neg.f64 (*.f64 (*.f64 z 9) y))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x a) (*.f64 (*.f64 z 9) t)) (*.f64 y 2))","(/.f64 (fma.f64 x a (neg.f64 (*.f64 (*.f64 z 9) t))) (*.f64 y 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 t 9) z)) (*.f64 a 2))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 (*.f64 z 9) t))) (*.f64 a 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 a 9) t)) (*.f64 z 2))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 (*.f64 a 9) t))) (*.f64 z 2))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) a)) (*.f64 t 2))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 (*.f64 z 9) a))) (*.f64 t 2))"]],"symmetry":[[]],"time":85.863037109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))"]],"time":20.83984375,"type":"simplify"},{"compiler":[[30,20]],"time":0.461181640625,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","next",8.644292288893853],["(*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))","fresh",9.012765400011654]],"compiler":[[18,13],[17,12],[18,13],[17,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[8.305070380474769],"time":1.476806640625,"type":"prune"},{"compiler":[[48,26]],"locations":[["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))",0.015625,true],["(*.f64 (*.f64 z 9) t)",0.18359375,true],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))",8.17707362842244,true]],"time":10.458984375,"type":"localize"},{"count":[[3,132]],"series":[["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","t","-inf",0.155029296875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","t","inf",0.171142578125],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","t","0",0.151123046875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","z","-inf",0.178955078125],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","z","inf",0.151123046875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","z","0",0.155029296875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","y","-inf",0.177978515625],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","y","inf",0.14892578125],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","y","0",0.1748046875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","x","-inf",0.154052734375],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","x","inf",0.15478515625],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))","x","0",0.18896484375],["(*.f64 (*.f64 z 9) t)","t","-inf",0.18701171875],["(*.f64 (*.f64 z 9) t)","t","inf",0.26708984375],["(*.f64 (*.f64 z 9) t)","t","0",0.273193359375],["(*.f64 (*.f64 z 9) t)","z","-inf",0.215087890625],["(*.f64 (*.f64 z 9) t)","z","inf",0.29296875],["(*.f64 (*.f64 z 9) t)","z","0",0.287109375],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","a","-inf",0.876953125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","a","inf",0.534912109375],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","a","0",0.776123046875],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","t","-inf",0.458984375],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","t","inf",0.509033203125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","t","0",1.1689453125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","z","-inf",0.491943359375],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","z","inf",0.576171875],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","z","0",0.5791015625],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","y","-inf",0.468017578125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","y","inf",0.77392578125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","y","0",0.5439453125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","x","-inf",0.489013671875],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","x","inf",0.6220703125],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","x","0",0.798828125]],"time":13.549072265625,"type":"series"},{"count":[[3,225]],"inputs":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))","(*.f64 (*.f64 z 9) t)","(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (+.f64 a a)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)) (/.f64 (*.f64 x y) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 0) (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 a) (*.f64 x y)) (*.f64 (/.f64 1/2 a) (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 a) (*.f64 (*.f64 -9 t) z)) (*.f64 (/.f64 1/2 a) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) (*.f64 0 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 a a)) 1) (*.f64 (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x y) (+.f64 a a)) (/.f64 (*.f64 (*.f64 t z) 9) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)) (/.f64 (*.f64 x y) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 -2 a)) (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 x y) (+.f64 a a)) (*.f64 (*.f64 a a) 4)) (/.f64 (*.f64 (+.f64 a a) (*.f64 (*.f64 t z) 9)) (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 a a)) (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (/.f64 1/2 a))) (pow.f64 (cbrt.f64 (+.f64 a a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2)) (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) (neg.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 8)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) a) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 a a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 t z) 9))) (/.f64 1 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) a) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2)) (cbrt.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y)))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 8)) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) a) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1/2) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) 1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 a)) (*.f64 2 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) 1/2) (*.f64 -2 a)) (*.f64 a (*.f64 (*.f64 -9 t) z))) (*.f64 a (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) 1/2) (+.f64 a a)) (*.f64 a (*.f64 (*.f64 t z) 9))) (*.f64 a (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) 1/2) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (*.f64 a (*.f64 (*.f64 (*.f64 t z) 9) (cbrt.f64 (/.f64 1/2 a))))) (*.f64 a (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) 1/2) a) (*.f64 a (*.f64 (*.f64 (*.f64 t z) 9) 1/2))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (*.f64 -2 a)) (*.f64 (+.f64 a a) (*.f64 (*.f64 -9 t) z))) (*.f64 (+.f64 a a) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) 2) (*.f64 (+.f64 a a) (/.f64 (*.f64 (*.f64 t z) 9) a))) (*.f64 (+.f64 a a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (*.f64 (+.f64 a a) (*.f64 (*.f64 (*.f64 t z) 9) (cbrt.f64 (/.f64 1/2 a))))) (*.f64 (+.f64 a a) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) a) (*.f64 (+.f64 a a) (*.f64 (*.f64 (*.f64 t z) 9) 1/2))) (*.f64 (+.f64 a a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) (cbrt.f64 (/.f64 1/2 a))) (*.f64 -2 a)) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (*.f64 (*.f64 -9 t) z))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) (cbrt.f64 (/.f64 1/2 a))) 2) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (/.f64 (*.f64 (*.f64 t z) 9) a))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) (cbrt.f64 (/.f64 1/2 a))) (+.f64 a a)) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (*.f64 (*.f64 t z) 9))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (*.f64 (*.f64 (*.f64 t z) 9) (cbrt.f64 (/.f64 1/2 a))))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) (cbrt.f64 (/.f64 1/2 a))) a) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) (*.f64 (*.f64 (*.f64 t z) 9) 1/2))) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (*.f64 -2 a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 -9 t) z))) (*.f64 (*.f64 -2 a) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) 2) (*.f64 (*.f64 -2 a) (/.f64 (*.f64 (*.f64 t z) 9) a))) (*.f64 (*.f64 -2 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (+.f64 a a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 t z) 9))) (*.f64 (*.f64 -2 a) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 (*.f64 t z) 9) (cbrt.f64 (/.f64 1/2 a))))) (*.f64 (*.f64 -2 a) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) a) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 (*.f64 t z) 9) 1/2))) (*.f64 (*.f64 -2 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) a) (*.f64 -2 a)) (*.f64 2 (*.f64 (*.f64 -9 t) z))) (*.f64 2 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) a) (+.f64 a a)) (*.f64 2 (*.f64 (*.f64 t z) 9))) (*.f64 2 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) a) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (*.f64 2 (*.f64 (*.f64 (*.f64 t z) 9) (cbrt.f64 (/.f64 1/2 a))))) (*.f64 2 (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a)) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2))) (*.f64 (cbrt.f64 2) (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (/.f64 1/2 a))) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 (*.f64 a a) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 a a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 t z) 9)))) (neg.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1/2)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) (*.f64 -2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (+.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 a a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 t z) 9))) (*.f64 (*.f64 a a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2)) (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2)) (cbrt.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))))) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (fma.f64 x y (*.f64 (*.f64 -9 t) z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2))) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) a) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2))) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 2))) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 a a)) (*.f64 (*.f64 -2 a) (*.f64 (*.f64 t z) 9))) 1) (*.f64 (*.f64 a a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (/.f64 1/2 a))) 1) (cbrt.f64 (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 a)) 1/2) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x y) 1/2) 2) (*.f64 a (/.f64 (*.f64 (*.f64 t z) 9) a))) (+.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) a) 2) (*.f64 2 (/.f64 (*.f64 (*.f64 t z) 9) a))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) a) a) (*.f64 2 (*.f64 (*.f64 (*.f64 t z) 9) 1/2))) (+.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 a a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 -2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 a a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 a a)) 2)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (/.f64 1/2 a))) (/.f64 x (cbrt.f64 (*.f64 (*.f64 a a) 4))) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (/.f64 1/2 a))) (/.f64 y (cbrt.f64 (*.f64 (*.f64 a a) 4))) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 (*.f64 x y) a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 (*.f64 x y) 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 x y)) a) (*.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) (+.f64 a a)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y (+.f64 a a)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 x (+.f64 a a)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y 1/2) (/.f64 x a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/2 a)) (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) 8)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (/.f64 y a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (*.f64 x 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (/.f64 1/2 a)) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t z) 9) (*.f64 (*.f64 (*.f64 t z) 9) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 t z) 9) 0) (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t z) 9) (*.f64 0 (*.f64 (*.f64 t z) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 t z) 9)) (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 9 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (*.f64 z 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z 9)) (*.f64 (cbrt.f64 (*.f64 81 (*.f64 z z))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z 9) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 z 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 9 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 t z) 9)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)) (cbrt.f64 (*.f64 (*.f64 t z) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 t) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z 9) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 z 9))) (cbrt.f64 (*.f64 81 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t z) 9) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t z) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 -9 z) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (*.f64 -9 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (*.f64 -9 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -9 t) z)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9 z) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t z) 9) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t z) (/.f64 1 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 t) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t z) 9) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t z) 9)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t z) 9)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t z) 9)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -9 t) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 0) (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (*.f64 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 x y)) -1) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -9 t) z) (*.f64 (neg.f64 (*.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x y) (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 x y) 0) (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (neg.f64 (*.f64 x y))) (*.f64 (*.f64 t z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 -9 t) z) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2)) (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)) (cbrt.f64 (*.f64 (*.f64 (*.f64 x y) z) (*.f64 9 t))))) (-.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (*.f64 (*.f64 t z) 9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (*.f64 z 9) t (neg.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) x) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x y)) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 x y)) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) y) (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) 1 (*.f64 (*.f64 -9 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9 z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (*.f64 z 9) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (*.f64 9 t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -9 t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (*.f64 -9 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z 9) (neg.f64 t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 t z) 9)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 t z) 9) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -9 t) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9 z) t (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 x y (*.f64 (*.f64 -9 t) z)))))))"]],"rules":[["egg-rr",58],["egg-rr",37],["egg-rr",130]],"time":41.49609375,"type":"rewrite"},{"count":[[357,238]],"inputs":[["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 z) t) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 1/2 (/.f64 (-.f64 (*.f64 y x) (*.f64 9 (*.f64 t z))) a))","(/.f64 (*.f64 1/2 (fma.f64 y x (*.f64 -9 (*.f64 t z)))) a)","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 9 (*.f64 t z))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(*.f64 -9 (*.f64 t z))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))","(+.f64 (*.f64 y x) (*.f64 -9 (*.f64 t z)))","(fma.f64 y x (*.f64 -9 (*.f64 t z)))"]],"time":403.73681640625,"type":"simplify"},{"compiler":[[4467,2511]],"time":47.26806640625,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 x y) (/.f64 (*.f64 t z) (/.f64 1 9))) (*.f64 a 2))","fresh",8.659917288893851],["(fma.f64 (*.f64 x 1/2) (/.f64 y a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.326912284515604],["(/.f64 (fma.f64 (cbrt.f64 (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)) (*.f64 x y)) (*.f64 a 2))","fresh",19.958735545621234],["(fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.67325727912541],["(fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.871792257072197],["(/.f64 (*.f64 y x) (*.f64 a 2))","fresh",35.114974312970894],["(/.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 x y)) (*.f64 (*.f64 -9 t) z)) (*.f64 a 2))","fresh",17.03416942040257],["(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","fresh",8.155011640243213],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","next",8.14491413047477],["(/.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))","fresh",9.360280683296471]],"compiler":[[20,15],[21,15],[27,20],[21,15],[21,15],[12,9],[25,17],[18,13],[20,14],[21,16],[20,15],[21,15],[27,20],[21,15],[21,15],[12,9],[25,17],[18,13],[20,14],[21,16]],"count":[[240,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[238,10],"picked":[1,0]}],"min-error":[3.438659487604257],"time":80.39111328125,"type":"prune"},{"compiler":[[57,20]],"locations":[["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))",0.01171875,true],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))",0.21160126953688402,true],["(/.f64 (*.f64 t z) a)",5.3753390298400445,true],["(/.f64 (*.f64 y x) a)",6.779984186919983,true]],"time":10.324951171875,"type":"localize"},{"count":[[4,24]],"series":[["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","-inf",0.23388671875],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","inf",0.2490234375],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","0",0.869140625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","-inf",0.268798828125],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","inf",0.39697265625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","0",0.4140625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","-inf",0.31103515625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","inf",0.529052734375],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","0",0.291015625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","-inf",0.2041015625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","inf",0.176025390625],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","0",0.280029296875],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","-inf",0.17919921875],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","inf",0.210205078125],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","0",0.330810546875],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","a","-inf",0.281982421875],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","a","inf",0.277099609375],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","a","0",0.2470703125],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","z","-inf",0.27197265625],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","z","inf",0.2138671875],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","z","0",0.265869140625],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","t","-inf",0.26904296875],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","t","inf",0.2158203125],["(*.f64 -9/2 (/.f64 (*.f64 t z) a))","t","0",0.26611328125],["(/.f64 (*.f64 t z) a)","a","-inf",0.281982421875],["(/.f64 (*.f64 t z) a)","a","inf",0.307861328125],["(/.f64 (*.f64 t z) a)","a","0",0.322021484375],["(/.f64 (*.f64 t z) a)","z","-inf",1.9208984375],["(/.f64 (*.f64 t z) a)","z","inf",0.31494140625],["(/.f64 (*.f64 t z) a)","z","0",0.326904296875],["(/.f64 (*.f64 t z) a)","t","-inf",0.31787109375],["(/.f64 (*.f64 t z) a)","t","inf",0.320068359375],["(/.f64 (*.f64 t z) a)","t","0",0.324951171875],["(/.f64 (*.f64 y x) a)","a","-inf",0.320068359375],["(/.f64 (*.f64 y x) a)","a","inf",0.34619140625],["(/.f64 (*.f64 y x) a)","a","0",0.303955078125],["(/.f64 (*.f64 y x) a)","x","-inf",0.31201171875],["(/.f64 (*.f64 y x) a)","x","inf",0.344970703125],["(/.f64 (*.f64 y x) a)","x","0",0.38916015625],["(/.f64 (*.f64 y x) a)","y","-inf",0.302001953125],["(/.f64 (*.f64 y x) a)","y","inf",0.43017578125],["(/.f64 (*.f64 y x) a)","y","0",0.466064453125]],"time":15.3369140625,"type":"series"},{"count":[[4,223]],"inputs":[["(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 t z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y x) a) 0) (/.f64 (*.f64 y x) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) a) (*.f64 (/.f64 (*.f64 y x) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y x) a)) (/.f64 (*.f64 y x) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) a) (*.f64 0 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (neg.f64 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y x) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 y x) 2) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 a)) (/.f64 y (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (/.f64 x (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) (cbrt.f64 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y x)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y x)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 y x)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (cbrt.f64 (pow.f64 (*.f64 y x) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 a)) y) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) (cbrt.f64 (neg.f64 (*.f64 y x)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) (cbrt.f64 (*.f64 y x))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 a)) x) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y x) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y x) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 y x) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t z) a) 0) (/.f64 (*.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t z) a) (*.f64 (/.f64 (*.f64 t z) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t z) a) (*.f64 0 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (neg.f64 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t z) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 a)) (/.f64 z (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 t z) 2) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (*.f64 t z) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) (cbrt.f64 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t z)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 t z)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t z) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t z) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t z) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 t z)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 t z)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 a)) z) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 a)) t) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (cbrt.f64 (pow.f64 (*.f64 t z) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) (cbrt.f64 (*.f64 t z))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) (cbrt.f64 (neg.f64 (*.f64 t z)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t z) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t z) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 t z)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 t z)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 t z) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 t z) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 t z) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 t z) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 t z) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 0) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 0 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -9/2) (*.f64 (cbrt.f64 81/4) (/.f64 (*.f64 t z) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9/2 (/.f64 (*.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t z) a) -9/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -729/8 a)) (/.f64 (*.f64 t z) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9/2 (cbrt.f64 (/.f64 (*.f64 t z) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 t z) a) (cbrt.f64 -9/2)) (cbrt.f64 81/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9/2 z) t) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t z) (*.f64 (/.f64 1 a) -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 9/2 (*.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9/2 (*.f64 t z)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9/2 z) t) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9/2 (*.f64 t z)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -729/8 a)) (*.f64 t z)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (*.f64 (*.f64 -9/2 z) t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 9/2 (*.f64 t z)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 t z)) (/.f64 (neg.f64 a) -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t z) (/.f64 a -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 9/2 (*.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 0) (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) (*.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)) (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) (*.f64 0 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 2)) (cbrt.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 1/2 (*.f64 y x)) a (*.f64 a (*.f64 (*.f64 -9/2 z) t))) (/.f64 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 1/2 (*.f64 y x)))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 -1/2 (*.f64 y x)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 9/2 (*.f64 t z)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (neg.f64 a)) (*.f64 a (*.f64 -1/2 (*.f64 y x)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 9/2 (*.f64 t z)) a) (*.f64 (neg.f64 a) (*.f64 1/2 (*.f64 y x)))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 9/2 (*.f64 t z)) (neg.f64 a)) (*.f64 (neg.f64 a) (*.f64 -1/2 (*.f64 y x)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 y x)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 -9/2 z) t))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 9/2 (*.f64 t z)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) (neg.f64 a)) (*.f64 a (*.f64 9/2 (*.f64 t z)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 y x)) a) (*.f64 (neg.f64 a) (*.f64 (*.f64 -9/2 z) t))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 y x)) (neg.f64 a)) (*.f64 (neg.f64 a) (*.f64 9/2 (*.f64 t z)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 1/2 (*.f64 y x)) a (*.f64 a (*.f64 (*.f64 -9/2 z) t)))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 1/2 (*.f64 y x)) a (*.f64 a (*.f64 (*.f64 -9/2 z) t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 1/2 (*.f64 y x)) a (*.f64 a (*.f64 (*.f64 -9/2 z) t))) a) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1/2 (*.f64 y x)) (*.f64 9/2 (*.f64 t z))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 1/2 y) x (*.f64 (*.f64 -9/2 z) t)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9/2 (/.f64 (*.f64 t z) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 t z) a) -9/2 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 (*.f64 y x) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y x) a) 1/2 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 9/2 (*.f64 t z)) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9/2 (cbrt.f64 (/.f64 (*.f64 t z) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -729/8 a)) (/.f64 (*.f64 t z) (cbrt.f64 (*.f64 a a))) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -9/2) (*.f64 (cbrt.f64 81/4) (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t z) (*.f64 (/.f64 1 a) -9/2) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 t z) a) (cbrt.f64 -9/2)) (cbrt.f64 81/4) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9/2 z) t) (/.f64 1 a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 t z) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t z) a) 2)) -9/2) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 -1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 y x) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) (/.f64 (/.f64 1 a) 2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (/.f64 (*.f64 y x) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (sqrt.f64 1/2)) (sqrt.f64 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/8 a)) (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 a a))) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cbrt.f64 (/.f64 (*.f64 y x) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (*.f64 y x)) (/.f64 1 a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))))"]],"rules":[["egg-rr",85],["egg-rr",44],["egg-rr",48],["egg-rr",46]],"time":41.4541015625,"type":"rewrite"},{"count":[[247,230]],"inputs":[["(*.f64 1/2 (/.f64 (*.f64 y x) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)"]],"time":92.47802734375,"type":"simplify"},{"compiler":[[4679,2131]],"time":44.057861328125,"type":"eval"},{"alts":[["(+.f64 (*.f64 -9/2 (*.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","fresh",8.312959247696073],["(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","fresh",8.398820380474769],["(fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))","fresh",8.276475458622308],["(fma.f64 (*.f64 x 1/2) (/.f64 y a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.326912284515604],["(fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.871792257072197],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","next",7.8845456519421155],["(+.f64 (*.f64 -9/2 (*.f64 t (/.f64 z a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","fresh",9.224642892531543],["(fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.67325727912541],["(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","done",8.14491413047477],["(/.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))","fresh",9.360280683296471]],"compiler":[[26,18],[17,12],[23,17],[21,15],[21,15],[20,14],[20,14],[21,15],[20,14],[21,16],[26,18],[17,12],[23,17],[21,15],[21,15],[20,14],[20,14],[21,15],[21,16]],"count":[[240,10]],"kept":[{"done":[0,0],"fresh":[9,4],"new":[230,5],"picked":[1,1]}],"min-error":[0.515625],"time":80.4521484375,"type":"prune"},{"compiler":[[57,20]],"locations":[["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))",0.01171875,true],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))",0.21160126953688402,true],["(*.f64 z (/.f64 t a))",4.279332740911705,true],["(/.f64 (*.f64 y x) a)",6.779984186919983,false]],"time":10.1259765625,"type":"localize"},{"count":[[3,132]],"series":[["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","-inf",0.169189453125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","inf",0.194091796875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","x","0",0.1650390625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","-inf",0.198974609375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","inf",0.169921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","y","0",0.1669921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","-inf",0.195068359375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","inf",0.166015625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","a","0",0.18994140625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","-inf",0.166015625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","inf",0.1669921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","t","0",0.191162109375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","-inf",0.167236328125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","inf",0.196044921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","z","0",0.173095703125],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","a","-inf",0.155029296875],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","a","inf",0.14794921875],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","a","0",0.14599609375],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","t","-inf",0.176025390625],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","t","inf",0.14794921875],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","t","0",0.14697265625],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","z","-inf",0.177978515625],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","z","inf",0.150146484375],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))","z","0",0.156982421875],["(*.f64 z (/.f64 t a))","a","-inf",0.153076171875],["(*.f64 z (/.f64 t a))","a","inf",0.151123046875],["(*.f64 z (/.f64 t a))","a","0",0.173828125],["(*.f64 z (/.f64 t a))","t","-inf",0.155029296875],["(*.f64 z (/.f64 t a))","t","inf",0.157958984375],["(*.f64 z (/.f64 t a))","t","0",0.172119140625],["(*.f64 z (/.f64 t a))","z","-inf",0.1591796875],["(*.f64 z (/.f64 t a))","z","inf",0.16015625],["(*.f64 z (/.f64 t a))","z","0",0.23779296875]],"time":6.0068359375,"type":"series"},{"count":[[3,186]],"inputs":[["(*.f64 z (/.f64 t a))","(*.f64 -9/2 (*.f64 z (/.f64 t a)))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z t) a) 0) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z t) a) (*.f64 (/.f64 (*.f64 z t) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z t) a) (*.f64 0 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 t a) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 t a) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t a) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z t) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z t)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z t) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z t)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 t (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 a)) t) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (*.f64 z t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 a)) z) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 t a) 2)) z)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (pow.f64 (/.f64 t a) 2)) z)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 t (cbrt.f64 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z t)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z t)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 t a)) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 z t) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (neg.f64 (/.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z t) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 0) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 0 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -9/2) (*.f64 (cbrt.f64 81/4) (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9/2 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) a) -9/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -9/2 t) a) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (*.f64 t -9/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9/2 z) (cbrt.f64 (/.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9/2 z) (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -9/2 z) t) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9/2 (cbrt.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 z t) a) (cbrt.f64 -9/2)) (cbrt.f64 81/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t a) (*.f64 -9/2 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 9/2 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9/2 z) t) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 (/.f64 1 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9/2 (/.f64 (*.f64 z t) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9/2 (neg.f64 (*.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 -9/2 z) t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 -9/2 z) t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9/2 z) (/.f64 t (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 a)) (*.f64 -9/2 z)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 -9/2 z)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (*.f64 -9/2 z)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) -9/2) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z t)) -9/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) -9/2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (cbrt.f64 (neg.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) -1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z t) (/.f64 a -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t))) a)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 9/2 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 0) (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)) (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) (*.f64 0 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 2)) (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 (*.f64 -9/2 z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 y x)) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 (*.f64 -9/2 z) t)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/2 (*.f64 y x)) a) (*.f64 (neg.f64 a) (*.f64 (*.f64 -9/2 z) t))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 -9/2 z) t))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (*.f64 (*.f64 -9/2 z) t)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 (*.f64 -9/2 z) t)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) a) (*.f64 (neg.f64 a) (*.f64 1/2 (*.f64 y x)))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (neg.f64 a)) (*.f64 (neg.f64 a) (*.f64 -1/2 (*.f64 y x)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (*.f64 1/2 (*.f64 y x)) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (neg.f64 a)) (*.f64 a (*.f64 -1/2 (*.f64 y x)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (*.f64 -1/2 (*.f64 y x))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 (*.f64 -9/2 z) t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1/2 (*.f64 y x)) (neg.f64 (*.f64 (*.f64 -9/2 z) t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) a) (*.f64 a (*.f64 (*.f64 -9/2 z) t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 a (*.f64 1/2 (*.f64 y x)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z t) a) -9/2 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9/2 z) (/.f64 t a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y x) a) 1/2 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 (*.f64 y x) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (*.f64 y x)) (/.f64 1 a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/8 a)) (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 a a))) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (/.f64 (*.f64 y x) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (sqrt.f64 1/2)) (sqrt.f64 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cbrt.f64 (/.f64 (*.f64 y x) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 y x)) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y x) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) a) 2)) 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 y x) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 -1/2 (*.f64 y x)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1 (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9/2 (cbrt.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -9/2) (*.f64 (cbrt.f64 81/4) (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (*.f64 t -9/2) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 z t) a) (cbrt.f64 -9/2)) (cbrt.f64 81/4) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t a) (*.f64 -9/2 z) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -9/2 t) a) z (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 9/2 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) -9/2) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9/2 z) (cbrt.f64 (/.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t a) 2)) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9/2 z) t) (/.f64 1 a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))))))"]],"rules":[["egg-rr",74],["egg-rr",57],["egg-rr",55]],"time":36.84619140625,"type":"rewrite"},{"count":[[318,196]],"inputs":[["(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)"]],"time":406.68798828125,"type":"simplify"},{"compiler":[[4810,2203]],"time":42.9150390625,"type":"eval"},{"alts":[["(+.f64 (*.f64 -9/2 (*.f64 t (/.f64 z a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","fresh",9.224642892531543],["(fma.f64 z (/.f64 (*.f64 t -9/2) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))","fresh",8.124949626380321],["(fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.67325727912541],["(fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))","fresh",8.276475458622308],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","next",6.538320553471569],["(fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.871792257072197],["(fma.f64 (/.f64 t a) (*.f64 -9/2 z) (/.f64 (*.f64 1/2 (*.f64 y x)) a))","fresh",7.8989131203214615],["(/.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))","fresh",9.360280683296471]],"compiler":[[20,14],[19,13],[21,15],[23,17],[20,14],[21,15],[19,13],[21,16],[20,14],[19,13],[21,15],[23,17],[20,14],[21,15],[19,13],[21,16]],"count":[[252,8]],"kept":[{"done":[1,0],"fresh":[8,3],"new":[242,5],"picked":[1,0]}],"min-error":[0.00390625],"time":89.23193359375,"type":"prune"},{"compiler":[[57,20]],"locations":[["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))",0.01171875,true],["(*.f64 -9/2 (*.f64 z (/.f64 t a)))",0.21160126953688402,false],["(*.f64 z (/.f64 t a))",4.279332740911705,false],["(*.f64 x (/.f64 y a))",5.299205346791112,true]],"time":10.02099609375,"type":"localize"},{"count":[[2,96]],"series":[["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","y","-inf",0.248046875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","y","inf",0.22314453125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","y","0",0.175048828125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","x","-inf",0.169189453125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","x","inf",0.169189453125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","x","0",0.19580078125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","a","-inf",0.279052734375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","a","inf",0.303955078125],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","a","0",0.1640625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","t","-inf",0.195068359375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","t","inf",0.1669921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","t","0",0.19287109375],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","z","-inf",0.169921875],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","z","inf",0.172119140625],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","z","0",0.197021484375],["(*.f64 x (/.f64 y a))","a","-inf",0.2490234375],["(*.f64 x (/.f64 y a))","a","inf",0.178955078125],["(*.f64 x (/.f64 y a))","a","0",0.144775390625],["(*.f64 x (/.f64 y a))","y","-inf",0.280029296875],["(*.f64 x (/.f64 y a))","y","inf",0.284912109375],["(*.f64 x (/.f64 y a))","y","0",0.1708984375],["(*.f64 x (/.f64 y a))","x","-inf",0.156005859375],["(*.f64 x (/.f64 y a))","x","inf",0.156005859375],["(*.f64 x (/.f64 y a))","x","0",0.218994140625]],"time":5.169921875,"type":"series"},{"count":[[2,116]],"inputs":[["(*.f64 x (/.f64 y a))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) a) 0) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (*.f64 (/.f64 (*.f64 x y) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (*.f64 0 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y a) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 a)) (/.f64 y (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (/.f64 1 a) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 a)) y) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (*.f64 x y))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 0) (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)) (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) (*.f64 0 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (*.f64 1/2 (*.f64 x y)) (*.f64 (*.f64 -9/2 z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 2)) (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 1/2 (*.f64 x y))) a) (*.f64 (neg.f64 a) (*.f64 (*.f64 -9/2 z) t))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 1/2 (*.f64 x y))) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 (*.f64 -9/2 z) t)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 x y)) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 (*.f64 -9/2 z) t)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 1/2 (*.f64 x y))))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) a) (*.f64 (neg.f64 a) (*.f64 1/2 (*.f64 x y)))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 1/2 (*.f64 x y))))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 (*.f64 -9/2 z) t)) (neg.f64 (*.f64 1/2 (*.f64 x y)))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1/2 (*.f64 x y)) (*.f64 (*.f64 -9/2 z) t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 1/2 (*.f64 x y))) (neg.f64 (*.f64 (*.f64 -9/2 z) t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 (*.f64 x y)) a) (*.f64 a (*.f64 (*.f64 -9/2 z) t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 -9/2 z) t) a) (*.f64 a (*.f64 1/2 (*.f64 x y)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 x y))) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z t) a) -9/2 (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 1/2 (*.f64 x y)) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (/.f64 y a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9/2 z) (/.f64 t a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) a) 1/2 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 (*.f64 x y) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (*.f64 1/2 x) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (*.f64 x y)) (/.f64 1 a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) 1 (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (*.f64 x y)) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/2 y) a) x (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (/.f64 (*.f64 x y) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (/.f64 y a) 2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (*.f64 -1/2 x) y) a) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cbrt.f64 (/.f64 (*.f64 x y) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 1/2 x) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x y) a)) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 x y) a) (sqrt.f64 1/2)) (sqrt.f64 1/2) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 x y) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (/.f64 t a) -9/2) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 z t) a) (cbrt.f64 -9/2)) (cbrt.f64 81/4) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9/2 z) t) (/.f64 1 a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 -9/2 z) t) a) 1 (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 9/2 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -9/2) (*.f64 (cbrt.f64 81/4) (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -9/2 z) (cbrt.f64 (/.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t a) 2)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t a) (*.f64 -9/2 z) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -9/2 (cbrt.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -9/2 t) a) z (/.f64 (*.f64 1/2 (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) -9/2) (/.f64 (*.f64 1/2 (*.f64 x y)) a))))))"]],"rules":[["egg-rr",73],["egg-rr",43]],"time":30.276123046875,"type":"rewrite"},{"count":[[212,126]],"inputs":[["(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 -9/2 (*.f64 t z)) (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(/.f64 (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 -9/2 (*.f64 t z))) a)","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 9/2 (*.f64 t z)) (*.f64 -1/2 (*.f64 y x))) a))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 -9/2 (/.f64 (*.f64 t z) a))","(/.f64 (*.f64 (*.f64 -9/2 t) z) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(*.f64 1/2 (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 1/2 (*.f64 y x)) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)"]],"time":301.3359375,"type":"simplify"},{"compiler":[[4687,2172]],"time":43.39404296875,"type":"eval"},{"alts":[["(fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))","fresh",8.13319538047477],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 y (*.f64 (/.f64 1 a) x))))","fresh",6.930944040969198],["(+.f64 (*.f64 -9/2 (*.f64 t (/.f64 z a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","fresh",9.224642892531543],["(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","fresh",8.398820380474769],["(fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.67325727912541],["(fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))","fresh",8.276475458622308],["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","done",6.538320553471569],["(fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","fresh",8.871792257072197],["(fma.f64 (/.f64 t a) (*.f64 -9/2 z) (/.f64 (*.f64 1/2 (*.f64 y x)) a))","fresh",7.8989131203214615],["(fma.f64 z (*.f64 (/.f64 t a) -9/2) (/.f64 (*.f64 1/2 (*.f64 x y)) a))","fresh",7.86038929411279],["(/.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))","fresh",9.360280683296471]],"compiler":[[19,13],[22,16],[20,14],[17,12],[21,15],[23,17],[20,14],[21,15],[19,13],[19,13],[21,16]],"count":[[249,11]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[241,4],"picked":[1,1]}],"min-error":[0],"time":86.906982421875,"type":"prune"},{"accuracy":[0.9066328804747702],"baseline":[6.538320553471569],"branch":[["x",3.7527452312758305,3],["y",3.963774331023061,3],["z",4.274181371957784,3],["t",3.653813073899039,4],["a",2.361070635095701,3],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))",0.9222578804747701,3],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))",0.9066328804747702,3],["(*.f64 x y)",1.7400004794229913,5],["(*.f64 x y)",1.7400004794229913,5],["(*.f64 (*.f64 z 9) t)",3.765791717893105,3],["(*.f64 (*.f64 z 9) t)",3.765791717893105,3],["(*.f64 z 9)",4.274181371957784,3],["(*.f64 z 9)",4.274181371957784,3],["(*.f64 a 2)",2.361070635095701,3],["(*.f64 a 2)",2.361070635095701,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[18,13],[14,10],[8,6],[8,6],[10,8],[10,8],[8,7],[8,7],[8,7],[8,7],[400,210]],"count":[[26,3]],"inputs":[["(fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 y (*.f64 (/.f64 1 a) x))))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(fma.f64 z (*.f64 (/.f64 t a) -9/2) (/.f64 (*.f64 1/2 (*.f64 x y)) a))","(+.f64 (*.f64 -9/2 (*.f64 t (/.f64 z a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(fma.f64 z (/.f64 (*.f64 t -9/2) a) (/.f64 (*.f64 1/2 (*.f64 y x)) a))","(fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","(fma.f64 (/.f64 t a) (*.f64 -9/2 z) (/.f64 (*.f64 1/2 (*.f64 y x)) a))","(+.f64 (*.f64 -9/2 (*.f64 (/.f64 (*.f64 t z) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (fma.f64 (*.f64 -9/2 t) z (*.f64 1/2 (*.f64 y x))) a)","(fma.f64 (*.f64 (/.f64 (*.f64 y x) a) (cbrt.f64 1/2)) (cbrt.f64 1/4) (/.f64 (*.f64 (*.f64 -9/2 z) t) a))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(+.f64 (*.f64 -9/2 (*.f64 t (/.f64 z a))) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (-.f64 (*.f64 x y) (/.f64 (*.f64 t z) (/.f64 1 9))) (*.f64 a 2))","(fma.f64 (*.f64 x 1/2) (/.f64 y a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","(/.f64 (fma.f64 (cbrt.f64 (*.f64 (*.f64 -9 t) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 t z) 9) 2)) (*.f64 x y)) (*.f64 a 2))","(fma.f64 (*.f64 x y) (/.f64 1/2 a) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","(fma.f64 (/.f64 x a) (*.f64 y 1/2) (/.f64 (*.f64 (*.f64 t z) 9) (*.f64 -2 a)))","(/.f64 (*.f64 y x) (*.f64 a 2))","(/.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 x y)) (*.f64 (*.f64 -9 t) z)) (*.f64 a 2))","(/.f64 (+.f64 (*.f64 (*.f64 -9/2 z) t) (*.f64 1/2 (*.f64 y x))) a)","(+.f64 (*.f64 -9/2 (/.f64 (*.f64 t z) a)) (*.f64 1/2 (/.f64 (*.f64 y x) a)))","(/.f64 (/.f64 (/.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) a) (sqrt.f64 2)) (sqrt.f64 2))","(*.f64 (fma.f64 x y (*.f64 (*.f64 -9 t) z)) (/.f64 1/2 a))","(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))"]],"link":["."],"name":["Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, I"],"oracle":[48.65577055825464],"outputs":[["(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))","(fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a))","(+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))"]],"time":356.348876953125,"times":[["x",22.06787109375],["y",23.921875],["z",22.18798828125],["t",29.212158203125],["a",22.051025390625],["(/.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) (*.f64 a 2))",18.373046875],["(-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t))",19.833984375],["(*.f64 x y)",31.086181640625],["(*.f64 x y)",31.052001953125],["(*.f64 (*.f64 z 9) t)",19.2529296875],["(*.f64 (*.f64 z 9) t)",19.421142578125],["(*.f64 z 9)",22.610107421875],["(*.f64 z 9)",22.242919921875],["(*.f64 a 2)",22.215087890625],["(*.f64 a 2)",22.494140625]],"type":"regimes"},{"bstep":[[5.248127229480517e+146,2.1700740400450035e+150,0.031982421875],[-2.805469934897019e+240,-1.245084590694431e+238,0.094970703125]],"compiler":[[12,10],[14,10]],"method":["left-value","left-value"],"time":0.34814453125,"type":"bsearch"},{"compiler":[[73,41]],"inputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) -2000000000000000027892227608239848875948331713973276662224188341819360978852261087276817026157211448419590306798994022928930976947274441820681149515165893814064695493653429650468157899728643681221664311148496427387162969229963912192655884288) (+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a)))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) 999999999999999977996382405657660174364823889467801080772253244969263939229107492426926049423260513969768268415537077468838432306731146395363835904) (fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a)) (+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) -2000000000000000027892227608239848875948331713973276662224188341819360978852261087276817026157211448419590306798994022928930976947274441820681149515165893814064695493653429650468157899728643681221664311148496427387162969229963912192655884288) (+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a)))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 (*.f64 z 9) t)) 999999999999999977996382405657660174364823889467801080772253244969263939229107492426926049423260513969768268415537077468838432306731146395363835904) (fma.f64 -9/2 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 1/2 (*.f64 x y)) a)) (+.f64 (*.f64 -9/2 (*.f64 z (/.f64 t a))) (*.f64 1/2 (*.f64 x (/.f64 y a))))))","(if (<=.f64 (fma.f64 x y (*.f64 -9 (*.f64 z t))) -2000000000000000027892227608239848875948331713973276662224188341819360978852261087276817026157211448419590306798994022928930976947274441820681149515165893814064695493653429650468157899728643681221664311148496427387162969229963912192655884288) (/.f64 (+.f64 (*.f64 -9/2 (*.f64 z t)) (*.f64 1/2 (*.f64 x y))) a) (if (<=.f64 (fma.f64 x y (*.f64 -9 (*.f64 z t))) 999999999999999977996382405657660174364823889467801080772253244969263939229107492426926049423260513969768268415537077468838432306731146395363835904) (/.f64 (+.f64 (*.f64 -9/2 (*.f64 z t)) (*.f64 1/2 (*.f64 x y))) a) (/.f64 (+.f64 (*.f64 -9/2 (*.f64 z t)) (*.f64 1/2 (*.f64 x y))) a)))"]],"stop":[["fuel",1]],"time":26.0068359375,"type":"simplify"},{"time":0.007080078125,"type":"soundness"},{"compiler":[[73,41]],"remove-preprocessing":[[]],"time":19.055908203125,"type":"end"}]