[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[11,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[10,0.5616764276564936,0.43685944373282837,0.0014641286106780171],[9,0.37445095177099574,0.6240849196183262,0.0014641286106780171],[8,0.37445095177099574,0.6240849196183262,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":115.529052734375,"type":"analyze"},{"outcomes":[["body",1024,"valid",334.74267578125,1296],["body",512,"valid",105.577392578125,698],["body",2048,"valid",2.22314453125,4],["body",256,"valid",443.138916015625,6258]],"time":894.39306640625,"type":"sample"},{"compiler":[[12,8]],"inputs":[["0","1","2"],["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))","(-.f64 (+.f64 y (cos.f64 x)) (*.f64 z (sin.f64 x)))","(-.f64 (+.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))","(-.f64 (+.f64 x (cos.f64 z)) (*.f64 y (sin.f64 z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))","(-.f64 (+.f64 y (cos.f64 x)) (*.f64 z (sin.f64 x)))","(-.f64 (+.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))","(-.f64 (cos.f64 y) (-.f64 (*.f64 x (sin.f64 y)) z))","(-.f64 (+.f64 x (cos.f64 z)) (*.f64 y (sin.f64 z)))"]],"symmetry":[[]],"time":73.721923828125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))"]],"time":18.48095703125,"type":"simplify"},{"compiler":[[21,10]],"time":0.321044921875,"type":"eval"},{"alts":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","next",0.0625]],"compiler":[[12,8],[12,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0625],"time":0.899169921875,"type":"prune"},{"compiler":[[25,8]],"locations":[["(cos.f64 y)",0.015625,true],["(sin.f64 y)",0.015625,true],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))",0.05078125,true]],"time":6.975830078125,"type":"localize"},{"count":[[3,44]],"series":[["(cos.f64 y)","y","-inf",0.135986328125],["(cos.f64 y)","y","inf",0.142822265625],["(cos.f64 y)","y","0",0.235107421875],["(sin.f64 y)","y","-inf",0.138916015625],["(sin.f64 y)","y","inf",0.16796875],["(sin.f64 y)","y","0",0.23095703125],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","x","-inf",0.22705078125],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","x","inf",0.239013671875],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","x","0",0.444091796875],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","y","-inf",0.39208984375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","y","inf",0.5400390625],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","y","0",0.366943359375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","z","-inf",0.251953125],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","z","inf",0.35400390625],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","z","0",0.822998046875]],"time":4.876953125,"type":"series"},{"count":[[3,74]],"inputs":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","(sin.f64 y)","(cos.f64 y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) 1) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (fma.f64 (sin.f64 y) (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 z (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 z (sin.f64 y)) (neg.f64 (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) (neg.f64 z) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (pow.f64 z 2/3) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (cos.f64 y))) (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (cbrt.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 1 (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (cos.f64 y)) 1 (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) (*.f64 (sin.f64 y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 y) 0) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) (*.f64 0 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 y)) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (sin.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 y) 2/3) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (*.f64 (cos.f64 y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 y) 0) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (*.f64 0 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 y)) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 y)))))"]],"rules":[["egg-rr",17],["egg-rr",17],["egg-rr",40]],"time":29.34716796875,"type":"rewrite"},{"count":[[118,103]],"inputs":[["(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) z)) x))))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) x))","(+.f64 1 (fma.f64 (neg.f64 y) z x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x)))","(+.f64 1 (fma.f64 (neg.f64 y) z (fma.f64 -1/2 (*.f64 y y) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) z)) x))))","(+.f64 (-.f64 1 (*.f64 y z)) (fma.f64 -1/2 (*.f64 y y) (fma.f64 1/6 (*.f64 (pow.f64 y 3) z) x)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))","(fma.f64 (neg.f64 z) (sin.f64 y) (cos.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(fma.f64 -1/6 (pow.f64 y 3) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(fma.f64 (pow.f64 y 3) -1/6 (fma.f64 1/120 (pow.f64 y 5) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","(fma.f64 (pow.f64 y 3) -1/6 (fma.f64 1/120 (pow.f64 y 5) (fma.f64 (pow.f64 y 7) -1/5040 y)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(fma.f64 (*.f64 y y) -1/2 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 1/24 (pow.f64 y 4) (*.f64 -1/2 (*.f64 y y))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(+.f64 (fma.f64 -1/720 (pow.f64 y 6) 1) (fma.f64 1/24 (pow.f64 y 4) (*.f64 -1/2 (*.f64 y y))))"]],"time":132.10205078125,"type":"simplify"},{"compiler":[[1332,437]],"time":13.449951171875,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))","fresh",10.051445019536885],["(fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))","fresh",33.27054111684748],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","fresh",0.5766564942110507],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","next",0.12013627930532607],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","fresh",0.20902255861065214]],"compiler":[[22,13],[18,12],[15,11],[15,11],[15,11],[22,13],[18,12],[15,11],[15,11],[15,11]],"count":[[104,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[103,5],"picked":[1,0]}],"min-error":[0.02734375],"time":26.470947265625,"type":"prune"},{"compiler":[[40,17]],"locations":[["(cos.f64 y)",0.015625,false],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))",0.05078125,true],["(cbrt.f64 (cos.f64 y))",0.0546875,true],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)",0.34183505861065216,true]],"time":10.222900390625,"type":"localize"},{"count":[[3,60]],"series":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","-inf",0.215087890625],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","inf",0.191162109375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","0",0.572021484375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","-inf",0.2412109375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","inf",0.218994140625],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","0",0.197021484375],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","-inf",0.177978515625],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","inf",0.218017578125],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","0",0.85595703125],["(cbrt.f64 (cos.f64 y))","y","-inf",0.14208984375],["(cbrt.f64 (cos.f64 y))","y","inf",0.164794921875],["(cbrt.f64 (cos.f64 y))","y","0",0.218017578125],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","-inf",1.35107421875],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","inf",1.583984375],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","0",0.656005859375]],"time":7.20703125,"type":"series"},{"count":[[3,88]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","(cbrt.f64 (cos.f64 y))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (*.f64 (cos.f64 y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 y) 0) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (*.f64 0 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 y)) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (pow.f64 (cos.f64 y) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 y)) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (cbrt.f64 (cos.f64 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 y)) 0) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 y)) (*.f64 0 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (cos.f64 y))) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (pow.f64 (cos.f64 y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cos.f64 y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) 1) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (fma.f64 (sin.f64 y) (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 z (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 z (sin.f64 y)) (neg.f64 (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) (neg.f64 z) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (pow.f64 z 2/3) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (cbrt.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (cos.f64 y))) (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 1 (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (cos.f64 y)) 1 (*.f64 (neg.f64 z) (sin.f64 y)))))))"]],"rules":[["egg-rr",42],["egg-rr",20],["egg-rr",26]],"time":27.406982421875,"type":"rewrite"},{"count":[[148,118]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2))))","(+.f64 (*.f64 -23/6480 (pow.f64 y 6)) (+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))))","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) z)) x))))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (*.f64 (pow.f64 1 1/3) (cos.f64 y)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(fma.f64 (*.f64 y y) -1/2 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(+.f64 (fma.f64 (pow.f64 y 6) -1/720 1) (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(fma.f64 -1/6 (*.f64 y y) 1)","(+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2))))","(fma.f64 (pow.f64 y 4) -1/72 (fma.f64 -1/6 (*.f64 y y) 1))","(+.f64 (*.f64 -23/6480 (pow.f64 y 6)) (+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))))","(fma.f64 -23/6480 (pow.f64 y 6) (fma.f64 (pow.f64 y 4) -1/72 (fma.f64 -1/6 (*.f64 y y) 1)))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x)","(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 z (sin.f64 y)))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) x))","(+.f64 1 (fma.f64 (neg.f64 y) z x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x)))","(+.f64 1 (fma.f64 (neg.f64 y) z (fma.f64 -1/2 (*.f64 y y) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) z)) x))))","(+.f64 (-.f64 1 (*.f64 y z)) (fma.f64 (*.f64 y y) -1/2 (fma.f64 1/6 (*.f64 (pow.f64 y 3) z) x)))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (*.f64 (pow.f64 1 1/3) (cos.f64 y)))","(fma.f64 (neg.f64 z) (sin.f64 y) (cos.f64 y))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 y)) x))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 (cos.f64 y) x))"]],"time":175.26708984375,"type":"simplify"},{"compiler":[[2076,854]],"time":22.119873046875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","fresh",0.5766564942110507],["(fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))","fresh",10.051445019536885],["(fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))","fresh",33.27054111684748],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.12013627930532607],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","next",0.20902255861065214]],"compiler":[[15,11],[22,13],[18,12],[15,11],[15,11],[15,11],[22,13],[18,12],[15,11]],"count":[[147,5]],"kept":[{"done":[0,0],"fresh":[4,3],"new":[142,1],"picked":[1,1]}],"min-error":[0.02734375],"time":45.37109375,"type":"prune"},{"compiler":[[37,14]],"locations":[["(cos.f64 y)",0.015625,false],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))",0.05078125,true],["(cbrt.f64 (sin.f64 y))",0.109375,true],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)",0.7270089356003985,true]],"time":10.203125,"type":"localize"},{"count":[[3,51]],"series":[["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","x","-inf",0.198974609375],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","x","inf",0.18505859375],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","x","0",0.656982421875],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","y","-inf",0.35498046875],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","y","inf",0.39892578125],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","y","0",0.258056640625],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","z","-inf",0.25],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","z","inf",0.267822265625],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","z","0",0.922119140625],["(cbrt.f64 (sin.f64 y))","y","-inf",0.14697265625],["(cbrt.f64 (sin.f64 y))","y","inf",0.18408203125],["(cbrt.f64 (sin.f64 y))","y","0",0.260986328125],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","-inf",1.35498046875],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","inf",1.3369140625],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","0",1.68017578125]],"time":8.66796875,"type":"series"},{"count":[[3,88]],"inputs":[["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","(cbrt.f64 (sin.f64 y))","(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) (*.f64 (sin.f64 y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 y) 0) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) (*.f64 0 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 y)) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) 4) 2) (cbrt.f64 (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (sin.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 y) 2/3) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)) (pow.f64 (cbrt.f64 (sin.f64 y)) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sin.f64 y)) (*.f64 (cbrt.f64 (sin.f64 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sin.f64 y)) 0) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sin.f64 y)) (*.f64 0 (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (sin.f64 y))) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sin.f64 y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) 1) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (fma.f64 (sin.f64 y) (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 z (sin.f64 y)) (neg.f64 (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 z (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (cos.f64 y))) (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (cbrt.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) (neg.f64 z) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (pow.f64 z 2/3) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 1 (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (cos.f64 y)) 1 (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))))"]],"rules":[["egg-rr",43],["egg-rr",20],["egg-rr",25]],"time":27.471923828125,"type":"rewrite"},{"count":[[139,102]],"inputs":[["(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/24 (pow.f64 y 4)) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (cos.f64 y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y))))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y))))","(*.f64 (neg.f64 z) (sin.f64 y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) x))","(+.f64 1 (fma.f64 -1/2 (*.f64 y y) x))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/24 (pow.f64 y 4)) x)))","(+.f64 1 (fma.f64 -1/2 (*.f64 y y) (fma.f64 1/24 (pow.f64 y 4) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (cos.f64 y))","(-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 z (sin.f64 y)))) (+.f64 (cos.f64 y) x))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))"]],"time":184.133056640625,"type":"simplify"},{"compiler":[[1776,608]],"time":18.556884765625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))","fresh",10.051445019536885],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","next",0.5766564942110507],["(fma.f64 (*.f64 (neg.f64 z) (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (sin.f64 y)) (+.f64 x (cos.f64 y)))","fresh",33.258914906750476],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.12013627930532607],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","done",0.20902255861065214]],"compiler":[[22,13],[15,11],[18,12],[15,11],[15,11],[22,13],[15,11],[18,12]],"count":[[131,5]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[126,2],"picked":[1,1]}],"min-error":[0.0234375],"time":35.402099609375,"type":"prune"},{"compiler":[[48,12]],"locations":[["(cos.f64 y)",0.015625,false],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))",0.05078125,false],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))",0.0546875,true],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)",0.5652314453688405,true]],"time":10.697021484375,"type":"localize"},{"count":[[2,40]],"series":[["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","x","-inf",0.260009765625],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","x","inf",0.26904296875],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","x","0",0.464111328125],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","y","-inf",0.170166015625],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","y","inf",0.194091796875],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","y","0",0.473876953125],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","z","-inf",0.27001953125],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","z","inf",0.243896484375],["(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))","z","0",0.4560546875],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","x","-inf",0.467041015625],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","x","inf",1.114013671875],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","x","0",2.307861328125],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","y","-inf",1.5361328125],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","y","inf",1.56689453125],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","y","0",3.988037109375],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","z","-inf",0.471923828125],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","z","inf",0.63916015625],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","z","0",2.458984375]],"time":17.7509765625,"type":"series"},{"count":[[2,68]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","(cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 0) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) x) 1) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) (fma.f64 (sin.f64 y) (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (fma.f64 (sin.f64 y) (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 4) 2) (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 z (sin.f64 y)) (neg.f64 (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 z (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3)) (pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (cos.f64 y))) (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x (cos.f64 y)) 2/3) (cbrt.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 x (cos.f64 y))) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (pow.f64 z 2/3) (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) (neg.f64 z) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z (sin.f64 y)) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 1 (+.f64 x (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (cos.f64 y)) (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (cos.f64 y)) 1 (*.f64 (neg.f64 z) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 z) (sin.f64 y)) (+.f64 x (cos.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (*.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 0) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (*.f64 0 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))))"]],"rules":[["egg-rr",20],["egg-rr",48]],"time":25.85302734375,"type":"rewrite"},{"count":[[108,120]],"inputs":[["(*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3))","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z))","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))))))))","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2)))) (sin.f64 y)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 (sin.f64 y) 3) (+.f64 (cos.f64 y) x)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))) (*.f64 2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2)))))))))","(*.f64 (pow.f64 1 1/3) (+.f64 1 x))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (*.f64 (pow.f64 1 1/3) (+.f64 1 x)))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (+.f64 1 x))))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))))))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) z) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))) (*.f64 (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 8)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z)))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (+.f64 1 x)))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3)))))","(pow.f64 (+.f64 (cos.f64 y) x) 1/3)","(+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (sin.f64 y) 2)))) (+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (sin.f64 y) 2)))) (+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y)))))))","(pow.f64 (+.f64 1 x) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (pow.f64 (+.f64 1 x) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (+.f64 1 x) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (+.f64 (pow.f64 (+.f64 1 x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z)))))))))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 7)) 1/9) (pow.f64 x 2))) (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3))) (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3))","(+.f64 (cos.f64 y) x)","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z))","(+.f64 (+.f64 (cos.f64 y) x) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1/9) (sin.f64 y)) -1) z))","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))))))))","(+.f64 (+.f64 (cos.f64 y) x) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1/9) (sin.f64 y)) -1) z (*.f64 (*.f64 z z) (fma.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -4) 1/9) (pow.f64 (sin.f64 y) 2)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2)) 1/9)))))","(+.f64 (*.f64 (+.f64 (cos.f64 y) x) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2)))) (sin.f64 y)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 (sin.f64 y) 3) (+.f64 (cos.f64 y) x)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))) (*.f64 2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1) 1/9) (sin.f64 y)))) z) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 y) x) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 4)) 1/9) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2)))))))))","(+.f64 (+.f64 (cos.f64 y) x) (fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -4) 1/9) (pow.f64 (sin.f64 y) 2)) -1/9) (sin.f64 y)) (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2) 1/9)) (fma.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (fma.f64 2/27 (/.f64 (pow.f64 (sin.f64 y) 3) (+.f64 (cos.f64 y) x)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (cos.f64 y) x))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2)) (pow.f64 (sin.f64 y) 3)) (+.f64 -1/27 2/9))))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2)) (pow.f64 (sin.f64 y) 3)) (+.f64 -1/27 2/9)) (*.f64 (*.f64 2/27 (cbrt.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2))) (pow.f64 (sin.f64 y) 3))))) (pow.f64 z 3) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) 4) 1/9) (sin.f64 y)) -1) z (*.f64 (*.f64 z z) (fma.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -4) 1/9) (pow.f64 (sin.f64 y) 2)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (cos.f64 y) x)) 1/9) (pow.f64 (sin.f64 y) 2)) 1/9))))))","(*.f64 (pow.f64 1 1/3) (+.f64 1 x))","(+.f64 1 x)","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (*.f64 (pow.f64 1 1/3) (+.f64 1 x)))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) z) -1) y (+.f64 1 x))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (+.f64 1 x))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) z) -1) y (fma.f64 (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2) (fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2))) (cbrt.f64 (+.f64 1 x)) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9)) (*.f64 z z)))) (*.f64 y y) (+.f64 1 x)))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) z))) y) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))))))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) z) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))) (*.f64 (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 8)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z)))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (*.f64 1 (+.f64 1 x)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (+.f64 1 x)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) z) -1) y (fma.f64 (fma.f64 1/3 (-.f64 (*.f64 1/6 z) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (pow.f64 z 3)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -5) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)) z)))) (fma.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2))) (*.f64 z (pow.f64 (pow.f64 (+.f64 1 x) -2) 1/9))) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -5) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)) z) (*.f64 (cbrt.f64 (+.f64 1 x)) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -8) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)) z) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (-.f64 (*.f64 1/6 z) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (pow.f64 z 3)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -5) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)) z)))))))))) (pow.f64 y 3) (fma.f64 (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2) (fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2))) (cbrt.f64 (+.f64 1 x)) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9)) (*.f64 z z)))) (*.f64 y y) (+.f64 1 x))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)))","(-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3))","(-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3)))","(fma.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) 4) 1/9) x (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3))))","(fma.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) 4) 1/9) x (fma.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))) 1/9) 1/9) (*.f64 (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))) (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -4) 1/9) -1/9))) (*.f64 x x) (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4) 1) 1/9))) x) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y))) 1/9)) (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 4)) 1/9)))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) (pow.f64 1 1/3)))))","(fma.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) 4) 1/9) x (fma.f64 (fma.f64 -2/27 (cbrt.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2)) (+.f64 1/27 -2/9)) (fma.f64 (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2)) (+.f64 1/27 -2/9))) (/.f64 -2/27 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -4) 1/9) -1/9)) (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2) 1/9))))) (pow.f64 x 3) (fma.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))) 1/9) 1/9) (*.f64 (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))) (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -4) 1/9) -1/9))) (*.f64 x x) (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))))","(pow.f64 (+.f64 (cos.f64 y) x) 1/3)","(cbrt.f64 (+.f64 (cos.f64 y) x))","(+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y)))))","(+.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2) 1/9) (*.f64 z (sin.f64 y)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (sin.f64 y) 2)))) (+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y))))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -7) 1/9) (pow.f64 (*.f64 z (sin.f64 y)) 2)) (+.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2) 1/9) (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (sin.f64 y) 2)))) (+.f64 (pow.f64 (+.f64 (cos.f64 y) x) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (pow.f64 (sin.f64 y) 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (sin.f64 y) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (cos.f64 y) x) 2)) 1/9) (*.f64 z (sin.f64 y)))))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -7) 1/9) (pow.f64 (*.f64 z (sin.f64 y)) 2)) (+.f64 (cbrt.f64 (+.f64 (cos.f64 y) x)) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2)) (pow.f64 z 3)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2)) (pow.f64 (sin.f64 y) 3)) (+.f64 -1/27 2/9))) (*.f64 (pow.f64 (pow.f64 (+.f64 (cos.f64 y) x) -2) 1/9) (*.f64 z (sin.f64 y)))))))","(pow.f64 (+.f64 1 x) 1/3)","(cbrt.f64 (+.f64 1 x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (pow.f64 (+.f64 1 x) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -2) 1/9) (*.f64 y z)) (cbrt.f64 (+.f64 1 x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (pow.f64 (+.f64 1 x) 1/3)))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -2) 1/9) (*.f64 y z)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 y y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)))) (cbrt.f64 (+.f64 1 x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2)))) (+.f64 (pow.f64 (+.f64 1 x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 1/6 z) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (pow.f64 z 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (pow.f64 z 2))) 1/2) z)))))))))))","(+.f64 (+.f64 (cbrt.f64 (+.f64 1 x)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (+.f64 1 x) -2))) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 1/6 z) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (pow.f64 z 3)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -5) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)) z))))))) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -2) 1/9) (*.f64 y z)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 y y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/9) (*.f64 z z)) 1/2)))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (+.f64 (cos.f64 y) x)) 1/3)","(cbrt.f64 (-.f64 (+.f64 (cos.f64 y) x) (*.f64 z (sin.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3)","(cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2) 1/9) x) (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 7)) 1/9) (pow.f64 x 2))) (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3)))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2) 1/9) x) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -7) 1/9) (*.f64 x x)) (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/9) x)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 7)) 1/9) (pow.f64 x 2))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (*.f64 z (sin.f64 y))) (cos.f64 y)) 2)) 1/3))) (pow.f64 x 3)))))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2) 1/9) x) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -7) 1/9) (*.f64 x x)) (cbrt.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y)))))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (cos.f64 y) (*.f64 z (sin.f64 y))) -2)) (+.f64 1/27 -2/9)) (pow.f64 x 3)))))"]],"time":185.890869140625,"type":"simplify"},{"compiler":[[5944,3175]],"time":61.654052734375,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))","fresh",10.051445019536885],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","done",0.5766564942110507],["(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 4) 2) (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))","fresh",1.3016082013151145],["(fma.f64 (*.f64 (neg.f64 z) (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (sin.f64 y)) (+.f64 x (cos.f64 y)))","fresh",33.258914906750476],["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.12013627930532607],["(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","done",0.20902255861065214]],"compiler":[[22,13],[15,11],[30,15],[18,12],[15,11],[15,11]],"count":[[204,6]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[199,1],"picked":[1,1]}],"min-error":[0.01953125],"time":56.135009765625,"type":"prune"},{"accuracy":[0.0625],"baseline":[0.0625],"branch":[["x",0.0625,1],["y",0.0625,1],["z",0.0625,1],["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))",0.0625,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[157,46]],"count":[[11,1]],"inputs":[["(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))) 4) 2) (cbrt.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y))))))","(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","(fma.f64 (*.f64 (neg.f64 z) (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (sin.f64 y)) (+.f64 x (cos.f64 y)))","(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","(fma.f64 (cbrt.f64 (*.f64 (neg.f64 z) (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (neg.f64 z) (sin.f64 y)) 2)) (+.f64 x (cos.f64 y)))","(fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (+.f64 x (cos.f64 y)))","(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))) 3)","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","(fma.f64 (neg.f64 z) (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (+.f64 x (cos.f64 y)))","(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))","(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))"]],"link":["."],"name":["Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, B"],"oracle":[37.70694689246255],"outputs":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))"]],"time":20.881103515625,"times":[["x",4.636962890625],["y",4.679931640625],["z",4.567138671875],["(-.f64 (+.f64 x (cos.f64 y)) (*.f64 z (sin.f64 y)))",4.505859375]],"type":"regimes"},{"compiler":[[12,8]],"inputs":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (neg.f64 z) (sin.f64 y) (+.f64 x (cos.f64 y)))"]],"stop":[["fuel",1]],"time":21.02001953125,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[12,8]],"remove-preprocessing":[[]],"time":9.06591796875,"type":"end"}]