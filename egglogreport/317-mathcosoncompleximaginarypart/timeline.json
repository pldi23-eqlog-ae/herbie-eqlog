[{"compiler":[[14,11]],"method":["search"],"sampling":[[12,0.49951183795928955,0.28780467226170003,0.21268348977901042],[11,0.49951183795928955,0.2946339356712997,0.20585422636941075],[10,0.49951183795928955,0.3239022074267268,0.17658595461398363],[9,0.49951183795928955,0.33560951612889767,0.16487864591181278],[8,0.49951183795928955,0.39024362340569496,0.11024453863501549],[7,0.49951183795928955,0.40585336834192276,0.09463479369878769],[6,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[5,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":73.091064453125,"type":"analyze"},{"outcomes":[["body",512,"invalid",128.439208984375,1024],["body",2048,"invalid",0.747802734375,2],["body",256,"invalid",111.5546875,1675],["body",1024,"valid",1279.034912109375,4169],["body",1024,"invalid",404.705322265625,2006],["body",512,"valid",309.731201171875,2140],["body",256,"valid",121.433349609375,1712],["body",2048,"valid",108.83154296875,235]],"time":2477.7490234375,"type":"sample"},{"compiler":[[13,10]],"inputs":[["0","1"],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (*.f64 1/2 (sin.f64 im)) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 1/2 (sin.f64 im)) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 im) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re))))"]],"symmetry":[[]],"time":61.625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))"]],"time":19.059814453125,"type":"simplify"},{"compiler":[[24,13]],"time":0.377197265625,"type":"eval"},{"alts":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","next",43.65388110127927]],"compiler":[[13,10],[13,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[43.65388110127927],"time":0.935791015625,"type":"prune"},{"compiler":[[35,13]],"locations":[["(sin.f64 re)",0.015625,true],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.015625,true],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",6.1848050529543395,true]],"time":8.1181640625,"type":"localize"},{"count":[[3,36]],"series":[["(sin.f64 re)","re","-inf",0.135009765625],["(sin.f64 re)","re","inf",0.15380859375],["(sin.f64 re)","re","0",0.18896484375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","-inf",0.481201171875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","inf",0.70703125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","0",0.656982421875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","-inf",0.48193359375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","inf",0.533203125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","0",0.60986328125],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","-inf",0.23583984375],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","inf",0.2099609375],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","0",0.4560546875]],"time":5.02197265625,"type":"series"},{"count":[[3,120]],"inputs":[["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(sin.f64 re)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 0) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 im)) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (exp.f64 im)) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (exp.f64 im)) (neg.f64 (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 im)) 0) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 im -2))) (+.f64 (cbrt.f64 (exp.f64 (+.f64 im im))) 1)) (-.f64 (cbrt.f64 (exp.f64 (neg.f64 im))) (cbrt.f64 (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 im)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 im -2)))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 im))) (cbrt.f64 (exp.f64 (*.f64 im -2))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 im)) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 im))) (cbrt.f64 (exp.f64 (+.f64 im im))) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (exp.f64 im) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (exp.f64 im)) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 im)) (neg.f64 (cbrt.f64 (exp.f64 (+.f64 im im)))) (exp.f64 (neg.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 im -2))) (cbrt.f64 (exp.f64 (neg.f64 im))) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 im)) 1 (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (sin.f64 re)) (exp.f64 im)) (neg.f64 (*.f64 (exp.f64 im) (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (exp.f64 im) (*.f64 1/2 (sin.f64 re)))) (/.f64 (*.f64 1/2 (sin.f64 re)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (sin.f64 re) (exp.f64 im))) (*.f64 1/2 (neg.f64 (*.f64 (exp.f64 im) (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 0) (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sin.f64 re) (exp.f64 im)) 1/2) (*.f64 (neg.f64 (*.f64 (exp.f64 im) (sin.f64 re))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/2 (sin.f64 re)) (exp.f64 im)) 1) (*.f64 (neg.f64 (*.f64 (exp.f64 im) (*.f64 1/2 (sin.f64 re)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 2)) (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1/2) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 1/4)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 2)) (*.f64 1/2 (sin.f64 re))) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (*.f64 1/2 (sin.f64 re))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/2 (sin.f64 re))) (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (neg.f64 (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))) (*.f64 1/2 (sin.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 im) (exp.f64 (neg.f64 im))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (exp.f64 (neg.f64 im)) (neg.f64 (*.f64 (exp.f64 im) (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 im)) (*.f64 1/2 (sin.f64 re)) (neg.f64 (*.f64 (exp.f64 im) (*.f64 1/2 (sin.f64 re)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 re) (*.f64 (sin.f64 re) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) 0) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 re) (*.f64 0 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 re)) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 re)) (cbrt.f64 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 re) 2)) (cbrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (exp.f64 im)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 im) (sin.f64 re)) (exp.f64 im))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 re) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 re)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 re)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 re)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 re) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 re)))))"]],"rules":[["egg-rr",21],["egg-rr",52],["egg-rr",47]],"time":31.06494140625,"type":"rewrite"},{"count":[[156,152]],"inputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5))) (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 7))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 (pow.f64 im 3) -1/3 (*.f64 -2 im))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re))","(*.f64 re (*.f64 1/2 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (*.f64 re (*.f64 1/2 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (*.f64 (pow.f64 re 5) (*.f64 1/240 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5))) (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 7))))))","(fma.f64 (*.f64 -1/12 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (pow.f64 re 3) (fma.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) 1/2 (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)) (*.f64 (pow.f64 re 7) (*.f64 -1/10080 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 -1 (*.f64 (sin.f64 re) im))","(*.f64 (neg.f64 im) (sin.f64 re))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7) (fma.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1/2)","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(fma.f64 -1/6 (pow.f64 re 3) re)","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(fma.f64 1/120 (pow.f64 re 5) (fma.f64 -1/6 (pow.f64 re 3) re))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))","(+.f64 (fma.f64 (pow.f64 re 5) 1/120 re) (fma.f64 -1/6 (pow.f64 re 3) (*.f64 -1/5040 (pow.f64 re 7))))"]],"time":112.719970703125,"type":"simplify"},{"compiler":[[2562,1080]],"time":24.31103515625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)","fresh",43.64062847510265],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","next",0.5769839068427052]],"compiler":[[16,13],[25,20],[16,13],[25,20]],"count":[[153,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[152,2],"picked":[1,0]}],"min-error":[0.12109375],"time":29.80712890625,"type":"prune"},{"compiler":[[96,72]],"locations":[["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))",0.01171875,true],["(sin.f64 re)",0.015625,false],["(*.f64 -1/3 (pow.f64 im 3))",0.1015625,true],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))",0.125,true]],"time":24.159912109375,"type":"localize"},{"count":[[3,36]],"series":[["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","-inf",0.43310546875],["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","inf",0.381103515625],["(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","im","0",0.281982421875],["(*.f64 -1/3 (pow.f64 im 3))","im","-inf",0.281005859375],["(*.f64 -1/3 (pow.f64 im 3))","im","inf",0.283203125],["(*.f64 -1/3 (pow.f64 im 3))","im","0",0.39404296875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","-inf",0.55615234375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","inf",0.5009765625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","im","0",0.35498046875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","-inf",0.53515625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","inf",2.278076171875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","re","0",1.326171875]],"time":7.8310546875,"type":"series"},{"count":[[3,117]],"inputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -1/3 (pow.f64 im 3))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re))) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 0) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re)))) (*.f64 1 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7)))) (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (sin.f64 re))) (*.f64 1/2 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 -1/2520 (pow.f64 im 7)))) (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re))) 1) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 1/2 (sin.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7))) 1) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (sin.f64 re)) 1/2) (*.f64 (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (*.f64 -1/2520 (pow.f64 im 7))) 1/2) (*.f64 (*.f64 (sin.f64 re) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (*.f64 1/2 (sin.f64 re))) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/2 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2)) (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 1/2 (sin.f64 re))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 (*.f64 -1/3 (pow.f64 im 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) 0) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 0 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -1/3 (pow.f64 im 3))) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/3) (*.f64 (cbrt.f64 1/9) (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (pow.f64 im 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 im 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 im (cbrt.f64 -1/3)) (*.f64 (*.f64 im im) (cbrt.f64 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 im (cbrt.f64 -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 im 3) (cbrt.f64 -1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (*.f64 im im)) im)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 im (*.f64 (*.f64 im im) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 im im) (*.f64 im -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 im) (*.f64 im im))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/3 (pow.f64 im 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 im 3) 3) -1/27) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 im (cbrt.f64 -1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 im (cbrt.f64 -1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 im (cbrt.f64 -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 im 3) 3) -1/27))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 0) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 0 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)) (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/60 (pow.f64 im 5)) 1 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/60 (cbrt.f64 (pow.f64 im 5))) (cbrt.f64 (pow.f64 im (*.f64 2 5))) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/60 (pow.f64 im 5))) (pow.f64 (cbrt.f64 (*.f64 -1/60 (pow.f64 im 5))) 2) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/60) (*.f64 (cbrt.f64 1/3600) (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 im 5) -1/60 (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 im im) (*.f64 im -1/3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/3) (*.f64 (cbrt.f64 1/9) (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 im 3) -1/3 (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 im (cbrt.f64 -1/3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 im (cbrt.f64 -1/3)) (*.f64 (*.f64 im im) (cbrt.f64 1/9)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 (*.f64 im im)) im (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 im (*.f64 (*.f64 im im) -1/3) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 (pow.f64 im 3)) 1 (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 3) (cbrt.f64 -1/3)) (cbrt.f64 1/9) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 -1/3 (pow.f64 im 3))) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/3 im) (*.f64 im im) (*.f64 -1/60 (pow.f64 im 5)))))))"]],"rules":[["egg-rr",41],["egg-rr",27],["egg-rr",49]],"time":33.514892578125,"type":"rewrite"},{"count":[[153,142]],"inputs":[["(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(+.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/12 (pow.f64 re 3)))) (*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(+.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/12 (pow.f64 re 3)))) (fma.f64 -1/10080 (*.f64 (pow.f64 re 7) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(*.f64 (neg.f64 im) (sin.f64 re))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (neg.f64 im) (sin.f64 re)))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))"]],"time":114.248046875,"type":"simplify"},{"compiler":[[4940,3685]],"time":65.40087890625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))","fresh",3.575305542702356],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)","fresh",43.64062847510265],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)","fresh",1.0602604694328501],["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","next",0.5730776568427052],["(*.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","fresh",3.57596931223805],["(*.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (*.f64 1/2 (sin.f64 re))))","fresh",19.821359081748774],["(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 re) 2)) (cbrt.f64 (sin.f64 re)))) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","fresh",3.540149292702356],["(*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)))","fresh",19.79954282198033]],"compiler":[[34,27],[16,13],[28,23],[31,24],[34,27],[48,39],[32,25],[48,39],[34,27],[16,13],[28,23],[31,24],[34,27],[48,39],[32,25],[48,39]],"count":[[172,8]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[170,7],"picked":[1,0]}],"min-error":[0.0078125],"time":60.695068359375,"type":"prune"},{"compiler":[[110,80]],"locations":[["(sin.f64 re)",0.015625,false],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))",0.0703125,true],["(*.f64 -1/3 (pow.f64 im 3))",0.1015625,false],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))",0.12109375,true]],"time":26.567138671875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","im","-inf",0.348876953125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","im","inf",0.323974609375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","im","0",0.341064453125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","re","-inf",0.450927734375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","re","inf",0.469970703125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","re","0",0.51611328125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","-inf",0.968017578125],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","inf",0.906982421875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","0",2.0322265625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","-inf",0.465087890625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","inf",0.68994140625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","0",0.6630859375]],"time":8.385009765625,"type":"series"},{"count":[[2,96]],"inputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 im -2)) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 0) (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re)))) (*.f64 1 (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (sin.f64 re))) (*.f64 1/2 (*.f64 (*.f64 im -2) (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 0 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 im -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re))) 1) (*.f64 (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 im 7) -1/2520) (sin.f64 re)) 1/2) (*.f64 (*.f64 (*.f64 im -2) (sin.f64 re)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) 1/2) (*.f64 (*.f64 (sin.f64 re) (*.f64 im -2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (*.f64 1/2 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2)) (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re)) (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/60 (pow.f64 im 5))) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 0) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (sin.f64 re))) (*.f64 1/2 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 1/2 (sin.f64 re)))) (*.f64 1 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (*.f64 -1/60 (pow.f64 im 5))) 1/2) (*.f64 (*.f64 (sin.f64 re) (*.f64 -1/3 (pow.f64 im 3))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (sin.f64 re)) 1/2) (*.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (sin.f64 re)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 1/2 (sin.f64 re))) 1) (*.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 1/2 (sin.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/60 (pow.f64 im 5))) 1) (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/3 (pow.f64 im 3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 1/2 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 2)) (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (pow.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 1/2 (sin.f64 re)) (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/60 (pow.f64 im 5)) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/3 (pow.f64 im 3))))))))"]],"rules":[["egg-rr",48],["egg-rr",48]],"time":30.787841796875,"type":"rewrite"},{"count":[[144,125]],"inputs":[["(*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re)))","(+.f64 (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5))) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re))))","(+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 7))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5))) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) re))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))))","(fma.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) re) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))))","(fma.f64 1/240 (*.f64 (pow.f64 re 5) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))) (fma.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) re) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))))","(+.f64 (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) re)) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))))))","(+.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/10080 (pow.f64 re 7)))) (fma.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) re) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(*.f64 (neg.f64 im) (sin.f64 re))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (neg.f64 im) (sin.f64 re)))","(*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re))","(*.f64 1/2 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) re))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re)))","(fma.f64 -1/12 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3)) (*.f64 1/2 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) re)))","(+.f64 (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5))) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re))))","(fma.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5)) 1/240 (fma.f64 -1/12 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3)) (*.f64 1/2 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) re))))","(+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 7))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5))) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))) re)))))","(fma.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 7)) -1/10080 (fma.f64 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 5)) 1/240 (fma.f64 -1/12 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) (pow.f64 re 3)) (*.f64 1/2 (*.f64 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))) re)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))"]],"time":143.39794921875,"type":"simplify"},{"compiler":[[7371,5437]],"time":88.38916015625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))","fresh",3.575305542702356],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)","fresh",43.64062847510265],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","next",1.054069209664408],["(+.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",19.79563657198033],["(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",3.5510008736583885],["(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 2) 3)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",1.5065724635400874],["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","done",0.5730776568427052]],"compiler":[[34,27],[16,13],[34,27],[44,35],[40,31],[52,41],[31,24],[34,27],[16,13],[34,27],[44,35],[40,31],[52,41]],"count":[[215,7]],"kept":[{"done":[0,0],"fresh":[7,2],"new":[207,4],"picked":[1,1]}],"min-error":[0.00390625],"time":85.488037109375,"type":"prune"},{"compiler":[[154,112]],"locations":[["(*.f64 -1/3 (pow.f64 im 3))",0.1015625,false],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))",0.12109375,true],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)",0.5802690430532608,true],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))",14.7262851601094,true]],"time":36.6279296875,"type":"localize"},{"count":[[3,40]],"series":[["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","-inf",0.19287109375],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","inf",0.175048828125],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","im","0",0.180908203125],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","-inf",0.179931640625],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","inf",0.1689453125],["(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))","re","0",0.323974609375],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","im","-inf",0.43896484375],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","im","inf",0.538818359375],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","im","0",0.8271484375],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","re","-inf",0.72607421875],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","re","inf",0.81298828125],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","re","0",1.7900390625],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","im","-inf",0.323974609375],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","im","inf",0.346923828125],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","im","0",0.406982421875],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","re","-inf",1.26513671875],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","re","inf",2.23291015625],["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","re","0",1.108154296875]],"time":12.324951171875,"type":"series"},{"count":[[3,123]],"inputs":[["(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))","(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)","(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (*.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 0) (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (*.f64 0 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/8 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3) (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sqrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (cbrt.f64 (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 re)) (cbrt.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 0) (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520))) (*.f64 1/2 (*.f64 (sin.f64 re) (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))) (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 0 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) 1/2) (*.f64 (*.f64 (sin.f64 re) (*.f64 im -2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (*.f64 1/2 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3) (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/8 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3) (cbrt.f64 (*.f64 1/8 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3) 1/2) (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3) (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (sqrt.f64 1/2)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (cbrt.f64 1/2)) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 2/3)) (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3) (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/4) (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (*.f64 1/2 (sin.f64 re)) (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (*.f64 im -2) (*.f64 1/2 (sin.f64 re))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 0) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) (*.f64 (sin.f64 re) (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 0 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520)) 1) (*.f64 (*.f64 (sin.f64 re) (*.f64 im -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) (*.f64 im -2)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 2/3) (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3) (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 re)) (*.f64 (pow.f64 (sin.f64 re) 2/3) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 re) 2/3) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (cbrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3) (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (cbrt.f64 (sin.f64 re))) (pow.f64 (sin.f64 re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2/3) (*.f64 (sin.f64 re) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 re) 2/3) (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) (cbrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 im 7) -1/2520) (sin.f64 re) (*.f64 (sin.f64 re) (*.f64 im -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/2520) (*.f64 (sin.f64 re) (*.f64 im -2)))))))"]],"rules":[["egg-rr",33],["egg-rr",55],["egg-rr",35]],"time":34.30908203125,"type":"rewrite"},{"count":[[163,140]],"inputs":[["(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (+.f64 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))) (*.f64 1/120 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (+.f64 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))) (+.f64 (*.f64 -1/5040 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 7))) (*.f64 1/120 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 5))))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 -2 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))) 1/3) (cbrt.f64 1/2))","(cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) 2) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))) 1/3)))","(*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im))))","(*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im)))","(*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (+.f64 re (*.f64 (pow.f64 re 3) -1/6)))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (+.f64 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))) (*.f64 1/120 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 5)))))","(fma.f64 -1/6 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (pow.f64 re 3)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (+.f64 (*.f64 (pow.f64 re 5) 1/120) re)))","(+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 3))) (+.f64 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 -2 im))) (+.f64 (*.f64 -1/5040 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 7))) (*.f64 1/120 (*.f64 (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))) (pow.f64 re 5))))))","(+.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (+.f64 re (*.f64 (pow.f64 re 3) -1/6))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)) (+.f64 (*.f64 (pow.f64 re 7) -1/5040) (*.f64 (pow.f64 re 5) 1/120))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (*.f64 -1/2520 (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 -2 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 re) im)) (*.f64 -1/2520 (*.f64 (sin.f64 re) (pow.f64 im 7))))","(*.f64 (sin.f64 re) (fma.f64 -1/2520 (pow.f64 im 7) (*.f64 -2 im)))"]],"time":166.675048828125,"type":"simplify"},{"compiler":[[6405,4827]],"time":79.9208984375,"type":"eval"},{"alts":[["(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))","fresh",3.575305542702356],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)","fresh",43.64062847510265],["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","done",1.054069209664408],["(+.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",19.79563657198033],["(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",3.5510008736583885],["(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 2) 3)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","fresh",1.5065724635400874],["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","done",0.5730776568427052]],"compiler":[[34,27],[16,13],[34,27],[44,35],[40,31],[52,41],[31,24]],"count":[[173,7]],"kept":[{"done":[1,1],"fresh":[5,5],"new":[166,0],"picked":[1,1]}],"min-error":[0.00390625],"time":41.716064453125,"type":"prune"},{"accuracy":[0.5730776568427052],"baseline":[0.5730776568427052],"branch":[["re",0.5730776568427052,1],["im",0.5730776568427052,1],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.5730776568427052,1],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.5730776568427052,1],["(*.f64 1/2 (sin.f64 re))",0.5730776568427052,1],["(sin.f64 re)",0.5730776568427052,1],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",0.5730776568427052,1],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",0.5730776568427052,1]],"compiler":[[3,2],[3,2],[13,10],[13,10],[6,5],[4,3],[8,6],[8,6],[453,338]],"count":[[14,1]],"inputs":[["(+.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) 3) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)) 2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2)))))) 2) 3)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (cbrt.f64 (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) 3)","(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 (cbrt.f64 (*.f64 1/2 (sin.f64 re))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 2)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)) (*.f64 1/2 (sin.f64 re))))","(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 re) 2)) (cbrt.f64 (sin.f64 re)))) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (cbrt.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 2)))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) 3)","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"link":["."],"name":["math.cos on complex, imaginary part"],"oracle":[44.32701587561117],"outputs":[["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))"]],"time":38.552978515625,"times":[["re",5.114990234375],["im",4.99609375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",3.123046875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",2.175048828125],["(*.f64 1/2 (sin.f64 re))",5.033935546875],["(sin.f64 re)",5.1591796875],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",1.966064453125],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",2.258056640625]],"type":"regimes"},{"compiler":[[31,24]],"inputs":[["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 im -2))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))"]],"stop":[["fuel",1]],"time":22.305908203125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[31,24]],"remove-preprocessing":[[]],"time":15.126953125,"type":"end"}]