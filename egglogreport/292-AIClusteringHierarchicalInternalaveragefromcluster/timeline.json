[{"compiler":[[8,5]],"method":["search"],"sampling":[[12,0.9224383648252115,0.07658531109336764,0.0009763240814208984],[11,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[10,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[9,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[8,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[7,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[6,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":19.583984375,"type":"analyze"},{"outcomes":[["body",256,"valid",262.4990234375,8256]],"time":270.265869140625,"type":"sample"},{"compiler":[[7,4]],"inputs":[["0","1"],["(/.f64 x (+.f64 x y))","(/.f64 y (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 x (+.f64 x y))","(/.f64 y (+.f64 y x))","(/.f64 y (+.f64 x y))"]],"symmetry":[[]],"time":57.10107421875,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 x y))"]],"time":21.222900390625,"type":"simplify"},{"compiler":[[7,4]],"time":0.18408203125,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","next",0.015625]],"compiler":[[7,4],[7,4]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.653076171875,"type":"prune"},{"compiler":[[12,4]],"locations":[["(/.f64 x (+.f64 x y))",0.015625,true]],"time":2.717041015625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.297119140625],["(/.f64 x (+.f64 x y))","y","inf",0.3349609375],["(/.f64 x (+.f64 x y))","y","0",0.235107421875],["(/.f64 x (+.f64 x y))","x","-inf",0.3369140625],["(/.f64 x (+.f64 x y))","x","inf",1.3359375],["(/.f64 x (+.f64 x y))","x","0",0.552001953125]],"time":3.18896484375,"type":"series"},{"count":[[1,58]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 x (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 0 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 x)) 1) (/.f64 (pow.f64 x 2/3) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (+.f64 x y))) (/.f64 (pow.f64 x 2/3) (neg.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (neg.f64 (pow.f64 x 2/3)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (neg.f64 (+.f64 x y)))) (/.f64 (neg.f64 (pow.f64 x 2/3)) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (/.f64 x (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (/.f64 x (neg.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) -1) (/.f64 (cbrt.f64 x) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (/.f64 x (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (+.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (/.f64 (neg.f64 x) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (pow.f64 (+.f64 x y) 2/3)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (+.f64 x y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (pow.f64 x 2/3) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x -1) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -1/3) x) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 x 2/3)) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (+.f64 x y)) 2/3)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",58]],"time":24.077880859375,"type":"rewrite"},{"count":[[82,72]],"inputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (+.f64 (pow.f64 (/.f64 x y) 4) (pow.f64 (/.f64 x y) 2)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(-.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(-.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(-.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (+.f64 (pow.f64 (/.f64 x y) 4) (pow.f64 (/.f64 x y) 2)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (+.f64 (pow.f64 (/.f64 x y) 4) (pow.f64 (/.f64 x y) 2)))"]],"time":108.425048828125,"type":"simplify"},{"compiler":[[883,362]],"time":9.637939453125,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","done",0.015625],["(*.f64 (/.f64 1 (+.f64 x y)) x)","next",0.16015625],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","fresh",0.7049116942105466]],"compiler":[[7,4],[9,6],[15,8],[9,6],[15,8]],"count":[[73,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[72,2],"picked":[1,1]}],"min-error":[0],"time":12.125,"type":"prune"},{"compiler":[[20,9]],"locations":[["(/.f64 1 (+.f64 x y))",0.00390625,true],["(*.f64 (/.f64 1 (+.f64 x y)) x)",0.16015625,true]],"time":4.628173828125,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 1 (+.f64 x y))","y","-inf",0.200927734375],["(/.f64 1 (+.f64 x y))","y","inf",0.239990234375],["(/.f64 1 (+.f64 x y))","y","0",0.22900390625],["(/.f64 1 (+.f64 x y))","x","-inf",0.2529296875],["(/.f64 1 (+.f64 x y))","x","inf",0.30810546875],["(/.f64 1 (+.f64 x y))","x","0",0.272216796875],["(*.f64 (/.f64 1 (+.f64 x y)) x)","y","-inf",0.180908203125],["(*.f64 (/.f64 1 (+.f64 x y)) x)","y","inf",0.2080078125],["(*.f64 (/.f64 1 (+.f64 x y)) x)","y","0",0.16015625],["(*.f64 (/.f64 1 (+.f64 x y)) x)","x","-inf",0.174072265625],["(*.f64 (/.f64 1 (+.f64 x y)) x)","x","inf",0.202880859375],["(*.f64 (/.f64 1 (+.f64 x y)) x)","x","0",0.2109375]],"time":2.8359375,"type":"series"},{"count":[[2,89]],"inputs":[["(*.f64 (/.f64 1 (+.f64 x y)) x)","(/.f64 1 (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 x (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 0 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (/.f64 x (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (/.f64 x (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (/.f64 x (neg.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) -1) (/.f64 (cbrt.f64 x) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (pow.f64 x 2/3) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (pow.f64 (+.f64 x y) 2/3)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (/.f64 (neg.f64 x) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (+.f64 x y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (+.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x -1) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 x 2/3)) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (pow.f64 (+.f64 x y) 2/3))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (/.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x y)) (*.f64 (/.f64 1 (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 x y)) 0) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -1/3)) (cbrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -1/3)) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (neg.f64 (pow.f64 (+.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (/.f64 (pow.f64 (+.f64 x y) -1/3) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 x y) -1/3) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 x y) -1/3) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) -1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) -1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x y) -3))))))"]],"rules":[["egg-rr",37],["egg-rr",52]],"time":26.926025390625,"type":"rewrite"},{"count":[[137,117]],"inputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(-.f64 (fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(-.f64 (fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2)))))","(fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y (pow.f64 x 2))))))","(-.f64 (fma.f64 (*.f64 y y) (pow.f64 x (neg.f64 3)) (-.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2))))","(-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))))","(fma.f64 (*.f64 x x) (pow.f64 y (neg.f64 3)) (-.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))"]],"time":147.23095703125,"type":"simplify"},{"compiler":[[1529,739]],"time":17.40087890625,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","done",0.015625],["(*.f64 (/.f64 1 (+.f64 x y)) x)","done",0.16015625],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","next",0.7049116942105466]],"compiler":[[7,4],[9,6],[15,8],[15,8]],"count":[[120,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[117,0],"picked":[1,1]}],"min-error":[0],"time":23.754150390625,"type":"prune"},{"compiler":[[37,11]],"locations":[["(cbrt.f64 (+.f64 x y))",0.1171875,true],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))",0.2421875,true],["(/.f64 x (cbrt.f64 (+.f64 x y)))",0.2578125,true],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)",0.5205650879159782,true]],"time":6.748046875,"type":"localize"},{"count":[[4,48]],"series":[["(cbrt.f64 (+.f64 x y))","y","-inf",0.219970703125],["(cbrt.f64 (+.f64 x y))","y","inf",0.25],["(cbrt.f64 (+.f64 x y))","y","0",0.3251953125],["(cbrt.f64 (+.f64 x y))","x","-inf",0.2509765625],["(cbrt.f64 (+.f64 x y))","x","inf",0.238037109375],["(cbrt.f64 (+.f64 x y))","x","0",0.35400390625],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","y","-inf",0.248046875],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","y","inf",0.22412109375],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","y","0",0.23486328125],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","x","-inf",0.235107421875],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","x","inf",0.241943359375],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","x","0",0.2490234375],["(/.f64 x (cbrt.f64 (+.f64 x y)))","y","-inf",0.51611328125],["(/.f64 x (cbrt.f64 (+.f64 x y)))","y","inf",1.755859375],["(/.f64 x (cbrt.f64 (+.f64 x y)))","y","0",0.93603515625],["(/.f64 x (cbrt.f64 (+.f64 x y)))","x","-inf",0.552978515625],["(/.f64 x (cbrt.f64 (+.f64 x y)))","x","inf",1.213134765625],["(/.f64 x (cbrt.f64 (+.f64 x y)))","x","0",1.43212890625],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","y","-inf",0.361083984375],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","y","inf",0.3828125],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","y","0",1.505126953125],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","x","-inf",0.3388671875],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","x","inf",0.68896484375],["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","x","0",1.626953125]],"time":14.75,"type":"series"},{"count":[[4,150]],"inputs":[["(pow.f64 (cbrt.f64 (+.f64 x y)) -2)","(/.f64 x (cbrt.f64 (+.f64 x y)))","(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","(cbrt.f64 (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 0) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (*.f64 0 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 0) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (*.f64 0 (/.f64 x (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (cbrt.f64 (+.f64 x y)))) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (+.f64 x y)))) (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 (+.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -1/3)) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (cbrt.f64 (pow.f64 (+.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -1/3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -1/3)) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (pow.f64 x 2/3)) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (cbrt.f64 x)) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (cbrt.f64 (neg.f64 x))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (+.f64 x y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (+.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) (*.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 0) (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) (*.f64 0 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) (-.f64 -2 1/3)) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (+.f64 x y)) (-.f64 -2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2))) (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y))))) (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)) x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)) x) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2/3) -2)) (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (neg.f64 x)) (neg.f64 (pow.f64 (+.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (neg.f64 x)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) -1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) (-.f64 -2 1/3)) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y))))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x)) (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 2/3) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) -1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (neg.f64 x)) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (neg.f64 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) x) (cbrt.f64 (neg.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 -1 -2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (+.f64 x y)) (*.f64 (cbrt.f64 (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (+.f64 x y)) 0) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (+.f64 x y)) (*.f64 0 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (+.f64 x y))))))"]],"rules":[["egg-rr",22],["egg-rr",61],["egg-rr",46],["egg-rr",21]],"time":34.39794921875,"type":"rewrite"},{"count":[[198,212]],"inputs":[["(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 x 2))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)))) (pow.f64 x 3)))))","(pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y)))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)))) (+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y))))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)))) (+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)))))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3)))) (pow.f64 y 3)))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 y 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3)))) (pow.f64 x 4)))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9)))))) (pow.f64 (pow.f64 x 2) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9)))))) (pow.f64 (pow.f64 x 2) 1/3))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)))","(+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (pow.f64 x 2)))))","(+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (pow.f64 x 2))))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(cbrt.f64 (pow.f64 y -2))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))","(fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) x) (cbrt.f64 (pow.f64 y -2)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 x 2))))","(+.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) x) (cbrt.f64 (pow.f64 y -2))) (*.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) 5/9) (*.f64 x x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) x)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)))) (pow.f64 x 3)))))","(+.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) x) (cbrt.f64 (pow.f64 y -2))) (fma.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) 5/9) (*.f64 x x) (*.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (pow.f64 y -2) (+.f64 2/27 1/27)) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 y -2)) (+.f64 -2/9 1/27)) (cbrt.f64 (pow.f64 y -4)))))) (*.f64 -4/27 (cbrt.f64 (pow.f64 y -7)))) (pow.f64 x 3))))","(pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)","(cbrt.f64 (pow.f64 x -2))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y)))","(+.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 x -11) 1/9)) y))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)))) (+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y))))","(fma.f64 (*.f64 y y) (*.f64 (pow.f64 (pow.f64 x -16) 1/9) 5/9) (+.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 x -11) 1/9)) y)))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/9)))) (+.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/9) y)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)))))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3)))) (pow.f64 y 3)))))","(fma.f64 (*.f64 y y) (*.f64 (pow.f64 (pow.f64 x -16) 1/9) 5/9) (+.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 x -11) 1/9) y) (*.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 x)) (+.f64 (*.f64 (pow.f64 x -2) (+.f64 2/27 1/27)) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 x -4))) (*.f64 (cbrt.f64 (pow.f64 x -2)) (+.f64 -2/9 1/27))))) (*.f64 -4/27 (cbrt.f64 (pow.f64 x -7)))) (pow.f64 y 3)))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 y)) x)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 x x)) (*.f64 (cbrt.f64 (/.f64 1 y)) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (+.f64 (pow.f64 y -3) (*.f64 -1/3 (pow.f64 (pow.f64 y -35) 1/9))) (pow.f64 x 3))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 x x)) (*.f64 (cbrt.f64 (/.f64 1 y)) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 y 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3)))) (pow.f64 x 4)))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) x))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (+.f64 (pow.f64 y -3) (*.f64 -1/3 (pow.f64 (pow.f64 y -35) 1/9))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 x x)) (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -13) 1/9) (+.f64 (pow.f64 y -3) (*.f64 -1/3 (pow.f64 (pow.f64 y -35) 1/9)))) (+.f64 (pow.f64 y -4) (*.f64 -1/27 (cbrt.f64 (pow.f64 y -16))))) (pow.f64 x 4))))) (*.f64 (cbrt.f64 (/.f64 1 y)) x)))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 x -7) 1/9) y) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9)))))) (pow.f64 (pow.f64 x 2) 1/3)))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 x -7) 1/9) y) (fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 y y)) (+.f64 (pow.f64 x -3) (*.f64 -1/3 (pow.f64 (pow.f64 x -35) 1/9)))) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9))))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 x 35)) 1/9)))))) (pow.f64 (pow.f64 x 2) 1/3))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 x -7) 1/9) y) (*.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 (+.f64 (pow.f64 x -4) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 x -13) 1/9) (+.f64 (pow.f64 x -3) (*.f64 -1/3 (pow.f64 (pow.f64 x -35) 1/9)))) (*.f64 -1/27 (cbrt.f64 (pow.f64 x -16))))) (pow.f64 y 3))))) (fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 y y)) (+.f64 (pow.f64 x -3) (*.f64 -1/3 (pow.f64 (pow.f64 x -35) 1/9)))) (cbrt.f64 (*.f64 x x))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (pow.f64 x 4) (pow.f64 y -4))) (pow.f64 (/.f64 x y) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (pow.f64 x 4) (pow.f64 y -4))) (pow.f64 (/.f64 x y) 2))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (pow.f64 x 4) (pow.f64 y -4))) (pow.f64 (/.f64 x y) 2))","(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)))","(+.f64 (cbrt.f64 y) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) x)))","(+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (pow.f64 x 2)))))","(+.f64 (cbrt.f64 y) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) x) (*.f64 (*.f64 -1/9 (pow.f64 (pow.f64 y -7) 1/9)) (*.f64 x x))))","(+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (pow.f64 x 2))))))","(+.f64 (cbrt.f64 y) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) x) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 y -2)) (+.f64 -2/9 1/27)) (*.f64 (pow.f64 x 3) (cbrt.f64 (pow.f64 y -2)))) (*.f64 (*.f64 -1/9 (pow.f64 (pow.f64 y -7) 1/9)) (*.f64 x x)))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (cbrt.f64 x) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y) (*.f64 (*.f64 -1/9 (pow.f64 (pow.f64 x -7) 1/9)) (*.f64 y y))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 y 3)) (*.f64 (cbrt.f64 (pow.f64 x -2)) (+.f64 -2/9 1/27))) (*.f64 (*.f64 -1/9 (pow.f64 (pow.f64 x -7) 1/9)) (*.f64 y y)))))"]],"time":192.2978515625,"type":"simplify"},{"compiler":[[5920,3140]],"time":60.906005859375,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","done",0.015625],["(*.f64 (/.f64 1 (+.f64 x y)) x)","done",0.16015625],["(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","done",0.7049116942105466]],"compiler":[[7,4],[9,6],[15,8]],"count":[[253,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[250,0],"picked":[1,1]}],"min-error":[0],"time":56.4091796875,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["(/.f64 x (+.f64 x y))",0.015625,1]],"compiler":[[3,2],[3,2],[7,4],[27,12]],"count":[[3,1]],"inputs":[["(*.f64 (/.f64 1 (+.f64 x y)) x)","(*.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))","(/.f64 x (+.f64 x y))"]],"link":["."],"name":["AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, A"],"oracle":[0.7674116942105466],"outputs":[["(/.f64 x (+.f64 x y))"]],"time":8.829833984375,"times":[["x",2.928955078125],["y",2.863037109375],["(/.f64 x (+.f64 x y))",2.367919921875]],"type":"regimes"},{"compiler":[[7,4]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 x y))"]],"stop":[["done",1]],"time":21.47119140625,"type":"simplify"},{"time":0.0029296875,"type":"soundness"},{"compiler":[[7,4]],"remove-preprocessing":[[]],"time":7.160888671875,"type":"end"}]