[{"compiler":[[15,8]],"method":["search"],"sampling":[[12,0.5036602020263672,0.010736942291259766,0.48560285568237305],[11,0.5036602020263672,0.011713027954101563,0.48462677001953125],[10,0.5036602020263672,0.011713027954101563,0.48462677001953125],[9,0.499755859375,0.01561737060546875,0.48462677001953125],[8,0.499755859375,0.01561737060546875,0.48462677001953125],[7,0.499755859375,0.0312347412109375,0.4690093994140625],[6,0.499755859375,0.062469482421875,0.437774658203125],[5,0.499755859375,0.12493896484375,0.37530517578125],[4,0.499755859375,0.2498779296875,0.2503662109375],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":3.474853515625,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.313232421875,8],["body",1024,"valid",813.59130859375,4051],["body",512,"valid",205.0244140625,1987],["body",2048,"valid",100.810791015625,435],["body",256,"valid",91.125244140625,1783]],"time":1219.1181640625,"type":"sample"},{"compiler":[[14,7]],"inputs":[["0"],["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"symmetry":[[]],"time":52.368896484375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"time":19.031982421875,"type":"simplify"},{"compiler":[[25,12]],"time":0.465087890625,"type":"eval"},{"alts":[["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","next",1.03125],["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","fresh",57.97945939329804]],"compiler":[[12,7],[14,7],[12,7],[14,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.02734375],"time":1.432861328125,"type":"prune"},{"compiler":[[29,10]],"locations":[["(fma.f64 (exp.f64 x) (exp.f64 x) 1)",0.0078125,true],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))",1.0000110042033008,true]],"time":6.283203125,"type":"localize"},{"count":[[2,24]],"series":[["(fma.f64 (exp.f64 x) (exp.f64 x) 1)","x","-inf",0.14501953125],["(fma.f64 (exp.f64 x) (exp.f64 x) 1)","x","inf",0.18701171875],["(fma.f64 (exp.f64 x) (exp.f64 x) 1)","x","0",0.19384765625],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","x","-inf",0.724853515625],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","x","inf",0.77001953125],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","x","0",0.681884765625]],"time":2.7998046875,"type":"series"},{"count":[[2,121]],"inputs":[["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 0) (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (*.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (+.f64 x x)) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2/3) (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3) (/.f64 (expm1.f64 (+.f64 x x)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (neg.f64 (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) -1) (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (pow.f64 (expm1.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) -2)) (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) -2) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) -1) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) -1) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) 1) (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (/.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) -1) (/.f64 (neg.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (neg.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (/.f64 (expm1.f64 (+.f64 x x)) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3))) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) 1) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) -1) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (*.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3) (expm1.f64 (+.f64 x x))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2/3) (cbrt.f64 (expm1.f64 (+.f64 x x)))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2/3) (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x))))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (pow.f64 (expm1.f64 (+.f64 x x)) 2/3)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 1) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2/3)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 1) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) -1) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (neg.f64 (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (/.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 0) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (*.f64 0 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6)) (/.f64 1 (+.f64 (pow.f64 (exp.f64 x) 4) (neg.f64 (expm1.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) -1) (/.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6)) (+.f64 (pow.f64 (exp.f64 x) 4) (neg.f64 (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6)) 1) (+.f64 (pow.f64 (exp.f64 x) 4) (neg.f64 (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6)) (+.f64 1 (-.f64 (pow.f64 (exp.f64 x) 4) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6)) 1) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (neg.f64 (expm1.f64 (+.f64 x x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (exp.f64 x) 6))) (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (neg.f64 (expm1.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) 2/3) (pow.f64 (exp.f64 x) 4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) 4/3) (pow.f64 (exp.f64 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))"]],"rules":[["egg-rr",47],["egg-rr",74]],"time":32.172119140625,"type":"rewrite"},{"count":[[145,138]],"inputs":[["x","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) x)","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","2","(+.f64 (*.f64 2 x) 2)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 2))","(+.f64 (*.f64 4/3 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 2)))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) x)","(fma.f64 -1/3 (pow.f64 x 3) x)","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(fma.f64 -1/3 (pow.f64 x 3) (fma.f64 2/15 (pow.f64 x 5) x))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(fma.f64 -17/315 (pow.f64 x 7) (fma.f64 -1/3 (pow.f64 x 3) (fma.f64 2/15 (pow.f64 x 5) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","2","(+.f64 (*.f64 2 x) 2)","(fma.f64 2 x 2)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 2))","(+.f64 (*.f64 x (fma.f64 2 x 2)) 2)","(+.f64 (*.f64 4/3 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 2)))","(fma.f64 4/3 (pow.f64 x 3) (+.f64 (*.f64 x (fma.f64 2 x 2)) 2))","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)","(+.f64 1 (pow.f64 (exp.f64 x) 2))","(fma.f64 (exp.f64 x) (exp.f64 x) 1)"]],"time":109.364990234375,"type":"simplify"},{"compiler":[[2621,1138]],"time":26.131103515625,"type":"eval"},{"alts":[["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","next",1.0409838011575379],["x","fresh",2.283055254365089],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 3)","fresh",1.7342340332848183],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","done",1.03125]],"compiler":[[15,11],[2,1],[15,10],[12,7],[15,11],[2,1],[15,10]],"count":[[140,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[138,3],"picked":[1,1]}],"min-error":[0.8777511951300813],"time":34.52587890625,"type":"prune"},{"compiler":[[49,18]],"locations":[["(pow.f64 (*.f64 (E.f64) (E.f64)) x)",0.012382519536884034,true],["(/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))",0.02734375,true],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))",0.9961047542033008,true],["(*.f64 (E.f64) (E.f64))",1.0,true]],"time":11.951904296875,"type":"localize"},{"count":[[4,36]],"series":[["(pow.f64 (*.f64 (E.f64) (E.f64)) x)","x","-inf",0.15283203125],["(pow.f64 (*.f64 (E.f64) (E.f64)) x)","x","inf",0.155029296875],["(pow.f64 (*.f64 (E.f64) (E.f64)) x)","x","0",0.262939453125],["(/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))","x","-inf",0.44384765625],["(/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))","x","inf",0.444091796875],["(/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))","x","0",0.6669921875],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","x","-inf",0.583984375],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","x","inf",0.619140625],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","x","0",1.35498046875]],"time":4.8720703125,"type":"series"},{"count":[[4,227]],"inputs":[["(*.f64 (E.f64) (E.f64))","(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","(/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (E.f64) (E.f64)) 0) (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (E.f64) (E.f64)) (*.f64 (*.f64 (E.f64) (E.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (E.f64) (E.f64))) (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (E.f64) (E.f64)) (*.f64 0 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (E.f64) (E.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (E.f64)) (*.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (E.f64)) (neg.f64 (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (E.f64)) (cbrt.f64 (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (E.f64)) 1) (*.f64 (neg.f64 (E.f64)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (*.f64 (E.f64) (cbrt.f64 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (E.f64) (cbrt.f64 (E.f64))) (cbrt.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (E.f64) (E.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (E.f64) (exp.f64 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (E.f64) (E.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (exp.f64 -1) (exp.f64 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (E.f64)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (E.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (E.f64) (E.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (E.f64)) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (E.f64) (neg.f64 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 0) (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (*.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2)) (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (+.f64 x x)) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (neg.f64 (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 -1 (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) -1) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 (expm1.f64 (+.f64 x x)) (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) -1) (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) (/.f64 (expm1.f64 (+.f64 x x)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3)) 1) (*.f64 (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3)) -1) (*.f64 (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3)) (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (*.f64 (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3)) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)) (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (*.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2)) (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x))))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3)) (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 (pow.f64 (exp.f64 4) x) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x)))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (expm1.f64 (+.f64 x x)))) (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 2))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 (+.f64 x x)) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (-.f64 (neg.f64 (*.f64 x x)) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (-.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) (+.f64 (*.f64 x x) (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (+.f64 x (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 -1 (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 1 (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2)) (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2)) (/.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (*.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))) (*.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)))) (*.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) -1) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))) (/.f64 1 (+.f64 (pow.f64 (exp.f64 4) x) (neg.f64 (expm1.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 1/3)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (pow.f64 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (*.f64 x x)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (*.f64 0 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (expm1.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (*.f64 x x)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) x) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) 1) (*.f64 (exp.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) -1) (*.f64 (exp.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (exp.f64 x)) (*.f64 -1 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 x) 0) (-.f64 (exp.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (exp.f64 4) x)) (+.f64 0 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 0))) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (pow.f64 (exp.f64 4) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 4) x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 4) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (neg.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4))) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 x x))) (cbrt.f64 (*.f64 8 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 x)) (*.f64 2 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 2)) (*.f64 (cbrt.f64 4) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (neg.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 2) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (+.f64 x x))) (cbrt.f64 (*.f64 (*.f64 x x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 8 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (pow.f64 (exp.f64 4) x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) (exp.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (exp.f64 4) x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) 0)))))"]],"rules":[["egg-rr",54],["egg-rr",56],["egg-rr",75],["egg-rr",42]],"time":43.491943359375,"type":"rewrite"},{"count":[[263,254]],"inputs":[["x","(+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x)","(+.f64 (*.f64 (-.f64 2/3 (+.f64 (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x))","(+.f64 (*.f64 (-.f64 2/3 (+.f64 (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 1/12 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3)) (+.f64 (*.f64 1/2 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) (-.f64 2/3 (+.f64 (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (E.f64) 2)) 2)) (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (log.f64 (pow.f64 (E.f64) 2)))))))) (*.f64 1/4 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))))) (pow.f64 x 4)) (+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","1/2","(+.f64 1/2 (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))","(+.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))))","(+.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (E.f64) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (+.f64 (*.f64 -1/16 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2))) (*.f64 1/24 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3)))) (pow.f64 x 3))) (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","1","(+.f64 1 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x) (*.f64 1/6 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3) (pow.f64 x 3))))))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x)","(fma.f64 (+.f64 1 (*.f64 -1/2 2)) (*.f64 x x) x)","(+.f64 (*.f64 (-.f64 2/3 (+.f64 (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x))","(fma.f64 (-.f64 2/3 (fma.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1/2 2)) 2) (*.f64 1/4 (*.f64 2 2)))) (pow.f64 x 3) (fma.f64 (+.f64 1 (*.f64 -1/2 2)) (*.f64 x x) x))","(+.f64 (*.f64 (-.f64 2/3 (+.f64 (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 1/12 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3)) (+.f64 (*.f64 1/2 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) (-.f64 2/3 (+.f64 (*.f64 1/4 (pow.f64 (log.f64 (pow.f64 (E.f64) 2)) 2)) (*.f64 1/2 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (log.f64 (pow.f64 (E.f64) 2)))))))) (*.f64 1/4 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (E.f64) 2)))) (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)))))) (pow.f64 x 4)) (+.f64 (*.f64 (-.f64 1 (*.f64 1/2 (log.f64 (pow.f64 (exp.f64 1) 2)))) (pow.f64 x 2)) x)))","(fma.f64 (pow.f64 x 3) (-.f64 2/3 (fma.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1/2 2)) 2) (*.f64 1/4 (*.f64 2 2)))) (fma.f64 (-.f64 1/3 (fma.f64 8 1/12 (fma.f64 1/2 (*.f64 2 (-.f64 2/3 (fma.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1/2 2)) 2) (*.f64 1/4 (*.f64 2 2))))) (*.f64 (*.f64 1/4 (+.f64 1 (*.f64 -1/2 2))) (*.f64 2 2))))) (pow.f64 x 4) (fma.f64 (+.f64 1 (*.f64 -1/2 2)) (*.f64 x x) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 (expm1.f64 (*.f64 2 x)) (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","1/2","(+.f64 1/2 (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))","(fma.f64 -1/4 (*.f64 2 x) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))))","(+.f64 1/2 (fma.f64 (neg.f64 (*.f64 (*.f64 2 2) (+.f64 1/8 -1/8))) (*.f64 x x) (*.f64 x (*.f64 -1/4 2))))","(+.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (log.f64 (pow.f64 (E.f64) 2)) 2)) (*.f64 -1/8 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (log.f64 (pow.f64 (exp.f64 1) 2))))) (log.f64 (pow.f64 (exp.f64 1) 2)))) (+.f64 (*.f64 -1/16 (*.f64 (log.f64 (pow.f64 (E.f64) 2)) (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2))) (*.f64 1/24 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3)))) (pow.f64 x 3))) (*.f64 -1/4 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))))","(+.f64 (-.f64 1/2 (*.f64 (*.f64 (*.f64 2 2) (+.f64 1/8 -1/8)) (*.f64 x x))) (fma.f64 (neg.f64 (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 2 2) (+.f64 1/8 -1/8)) 2) (*.f64 8 (+.f64 -1/16 1/24)))) (pow.f64 x 3) (*.f64 x (*.f64 -1/4 2))))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","(/.f64 1 (+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)) 1))","(/.f64 1 (+.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) 1))","1","(+.f64 1 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(fma.f64 x 2 1)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x)))","(fma.f64 (pow.f64 (*.f64 2 x) 2) 1/2 (fma.f64 x 2 1))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x) (*.f64 1/6 (*.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) 3) (pow.f64 x 3))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 2 x) 2) 1/2 1) (fma.f64 1/6 (pow.f64 (*.f64 2 x) 3) (*.f64 2 x)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)","(exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 1) 2)) x))","(pow.f64 (*.f64 (E.f64) (E.f64)) x)"]],"time":122.35009765625,"type":"simplify"},{"compiler":[[5585,2885]],"time":57.1640625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","next",1.042011279305326],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","done",1.03125],["x","fresh",2.283055254365089],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","done",1.0409838011575379]],"compiler":[[23,14],[12,7],[2,1],[15,11],[23,14],[2,1]],"count":[[258,4]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[254,2],"picked":[1,1]}],"min-error":[0.8777511951300813],"time":112.427978515625,"type":"prune"},{"compiler":[[82,39]],"locations":[["(fma.f64 (exp.f64 x) (exp.f64 x) 1)",0.0078125,false],["(/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))",0.02734375,true],["(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)",0.03582001953688403,true],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))",1.0000068771232895,true]],"time":18.26806640625,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))","x","-inf",0.2939453125],["(/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))","x","inf",0.307861328125],["(/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))","x","0",0.2041015625],["(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","x","-inf",1.408203125],["(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","x","inf",0.6318359375],["(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","x","0",0.251953125],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","x","-inf",0.217041015625],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","x","inf",0.252197265625],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","x","0",0.283935546875]],"time":3.994873046875,"type":"series"},{"count":[[3,143]],"inputs":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 0) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) (*.f64 0 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) (expm1.f64 (+.f64 x x)))) (pow.f64 (expm1.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (+.f64 x x))) (*.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (cbrt.f64 (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) -1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3)))) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (*.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (*.f64 (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (+.f64 (pow.f64 (exp.f64 x) 6) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)) (+.f64 (pow.f64 (exp.f64 x) 4) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3)))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) -1) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (expm1.f64 (+.f64 x x)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (expm1.f64 (+.f64 x x)))) (cbrt.f64 (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (/.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x)))) (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) 1) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) -1) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 x x)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) 1) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 3) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (expm1.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (expm1.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (neg.f64 (expm1.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (expm1.f64 (+.f64 x x)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (expm1.f64 (+.f64 x x))) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (expm1.f64 (+.f64 x x)) 3) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 0) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) (*.f64 0 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) 2/3) (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) 2/3) (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 0) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) (*.f64 0 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3) (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 2/3))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2) 2/3) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))))) (cbrt.f64 (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -1/3)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) 2/3)) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) -1) (cbrt.f64 (+.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2))) (cbrt.f64 (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) (-.f64 -2 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -3))))))"]],"rules":[["egg-rr",46],["egg-rr",25],["egg-rr",72]],"time":38.113037109375,"type":"rewrite"},{"count":[[179,170]],"inputs":[["x","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) x)","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","1/4","(+.f64 (*.f64 -1/2 x) 1/4)","(+.f64 (*.f64 -1/2 x) (+.f64 1/4 (*.f64 1/4 (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1/4 (*.f64 1/4 (pow.f64 x 2)))))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","1/2","(+.f64 (*.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) 1/2))","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1/2 (*.f64 -1/15 (pow.f64 x 5)))))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) x)","(fma.f64 -1/3 (pow.f64 x 3) x)","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(fma.f64 (pow.f64 x 3) -1/3 (fma.f64 2/15 (pow.f64 x 5) x))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(fma.f64 -17/315 (pow.f64 x 7) (fma.f64 (pow.f64 x 3) -1/3 (fma.f64 2/15 (pow.f64 x 5) x)))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (*.f64 2 x)) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 (neg.f64 (*.f64 -2 x))) 1) (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 (expm1.f64 (*.f64 2 x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","1/4","(+.f64 (*.f64 -1/2 x) 1/4)","(fma.f64 -1/2 x 1/4)","(+.f64 (*.f64 -1/2 x) (+.f64 1/4 (*.f64 1/4 (pow.f64 x 2))))","(fma.f64 x -1/2 (fma.f64 1/4 (*.f64 x x) 1/4))","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1/4 (*.f64 1/4 (pow.f64 x 2)))))","(fma.f64 -1/2 x (fma.f64 (pow.f64 x 3) 1/6 (fma.f64 1/4 (*.f64 x x) 1/4)))","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","(/.f64 1 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 x) 2)) 2))","(pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)","1/2","(+.f64 (*.f64 -1/2 x) 1/2)","(fma.f64 -1/2 x 1/2)","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) 1/2))","(fma.f64 -1/2 x (fma.f64 1/6 (pow.f64 x 3) 1/2))","(+.f64 (*.f64 -1/2 x) (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1/2 (*.f64 -1/15 (pow.f64 x 5)))))","(fma.f64 -1/2 x (fma.f64 (pow.f64 x 3) 1/6 (fma.f64 (pow.f64 x 5) -1/15 1/2)))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 1 (+.f64 1 (pow.f64 (exp.f64 x) 2)))","(/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"time":110.259033203125,"type":"simplify"},{"compiler":[[7190,3749]],"time":76.06689453125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","done",1.042011279305326],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","done",1.03125],["x","next",2.283055254365089],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","done",1.0409838011575379]],"compiler":[[23,14],[12,7],[2,1],[15,11],[2,1]],"count":[[284,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[280,0],"picked":[1,1]}],"min-error":[0.8777511951300813],"time":117.85498046875,"type":"prune"},{"compiler":[[2,1]],"time":0.47802734375,"type":"localize"},{"compiler":[[1,1]],"time":0.083984375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","done",1.042011279305326],["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","done",1.03125],["x","done",2.283055254365089],["(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","done",1.0409838011575379]],"compiler":[[23,14],[12,7],[2,1],[15,11]],"count":[[4,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0.8777511951300813],"time":1.38818359375,"type":"prune"},{"accuracy":[1.03125],"baseline":[1.03125],"branch":[["x",1.03125,1],["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))",1.03125,1]],"compiler":[[2,1],[14,7],[77,36]],"count":[[7,1]],"inputs":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1) -2)) (cbrt.f64 (fma.f64 (exp.f64 x) (exp.f64 x) 1))) (expm1.f64 (+.f64 x x)))","x","(*.f64 (/.f64 -1 (-.f64 -1 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (expm1.f64 (+.f64 x x)))","x","(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))) 3)","(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))","(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))"]],"link":["."],"name":["Hyperbolic tangent"],"oracle":[58.99698284883092],"outputs":[["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"time":6.77685546875,"times":[["x",3.39111328125],["(/.f64 (-.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))",1.927001953125]],"type":"regimes"},{"compiler":[[12,7]],"inputs":[["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (expm1.f64 (+.f64 x x)) (fma.f64 (exp.f64 x) (exp.f64 x) 1))"]],"stop":[["done",1]],"time":20.033935546875,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[12,7]],"remove-preprocessing":[[]],"time":8.85693359375,"type":"end"}]