[{"compiler":[[19,9]],"method":["search"],"sampling":[[12,0.33544564429485035,0.3842022786400321,0.28035207706511756],[11,0.29644033681870496,0.45636209747090106,0.24719756571039397],[10,0.2496339678473305,0.5148700586851191,0.23549597346755036],[9,0.2496339678473305,0.702095534570617,0.048270497582052485],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":81.552001953125,"type":"analyze"},{"outcomes":[["body",256,"invalid",34.050048828125,799],["body",256,"valid",348.993896484375,8256]],"time":391.5400390625,"type":"sample"},{"compiler":[[18,8]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","(+.f64 (+.f64 (+.f64 (*.f64 y x) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","(+.f64 (+.f64 (+.f64 (*.f64 z y) (*.f64 x x)) (*.f64 x x)) (*.f64 x x))","(+.f64 (+.f64 (+.f64 (*.f64 x z) (*.f64 y y)) (*.f64 y y)) (*.f64 y y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","(+.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 2 1)))","(+.f64 (+.f64 (+.f64 (*.f64 y x) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","(+.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 2 1)))","(+.f64 (+.f64 (+.f64 (*.f64 z y) (*.f64 x x)) (*.f64 x x)) (*.f64 x x))","(+.f64 (*.f64 z y) (*.f64 x (+.f64 (+.f64 x x) x)))","(+.f64 (+.f64 (+.f64 (*.f64 x z) (*.f64 y y)) (*.f64 y y)) (*.f64 y y))","(+.f64 (*.f64 x z) (*.f64 (*.f64 y y) (+.f64 1 2)))"]],"symmetry":[[]],"time":70.491943359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))"]],"time":18.54296875,"type":"simplify"},{"compiler":[[29,12]],"time":0.343994140625,"type":"eval"},{"alts":[["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","next",0.10546875],["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))","fresh",0.12109375]],"compiler":[[14,8],[18,8],[14,8],[18,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.05859375],"time":1.255126953125,"type":"prune"},{"compiler":[[35,8]],"locations":[["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))",0.00390625,true],["(*.f64 z (+.f64 (+.f64 z z) z))",0.2109375,true]],"time":6.10498046875,"type":"localize"},{"count":[[2,48]],"series":[["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","z","-inf",0.179931640625],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","z","inf",0.700927734375],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","z","0",0.251953125],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","y","-inf",0.24609375],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","y","inf",0.294189453125],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","y","0",0.343017578125],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","x","-inf",0.256103515625],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","x","inf",0.302978515625],["(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","x","0",0.56494140625],["(*.f64 z (+.f64 (+.f64 z z) z))","z","-inf",0.217041015625],["(*.f64 z (+.f64 (+.f64 z z) z))","z","inf",0.696044921875],["(*.f64 z (+.f64 (+.f64 z z) z))","z","0",0.641845703125]],"time":4.849853515625,"type":"series"},{"count":[[2,130]],"inputs":[["(*.f64 z (+.f64 (+.f64 z z) z))","(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 3) (*.f64 (*.f64 z 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 z z) 3) 0) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 3) (*.f64 (*.f64 (*.f64 z z) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 3) (*.f64 0 (*.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 z z) 3)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 3) (*.f64 0 (*.f64 (*.f64 z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (*.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (*.f64 z z)) (*.f64 z (+.f64 z z))) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) (+.f64 4 1)) (*.f64 -2 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (+.f64 (*.f64 -2 (*.f64 z z)) (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z 3) (+.f64 z z)) (*.f64 (*.f64 -3 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) (*.f64 z 3)) (*.f64 (*.f64 -3 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 z z) (+.f64 4 1)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z z) (-.f64 (*.f64 z (+.f64 z z)) (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 (*.f64 z z) (+.f64 4 1)) (*.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 4 (*.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (*.f64 z 3))) (cbrt.f64 (*.f64 9 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z 3)) (*.f64 (cbrt.f64 (*.f64 9 (*.f64 z z))) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 9 (*.f64 z z))) (*.f64 z (cbrt.f64 (*.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 z 3)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 9 (*.f64 z z))) z) (cbrt.f64 (*.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 z z) 3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)) (cbrt.f64 (*.f64 (*.f64 z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -3 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z z) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z 3) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z 3) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (*.f64 z 3) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 z) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (+.f64 (cbrt.f64 (pow.f64 z 4)) (*.f64 (+.f64 z z) (cbrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (+.f64 (*.f64 (+.f64 z z) (cbrt.f64 z)) (cbrt.f64 (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z z) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 z z) 3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 z z) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -3 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 z (+.f64 z z)) (*.f64 (*.f64 z z) (+.f64 4 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (+.f64 z z) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) z (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (pow.f64 (cbrt.f64 (+.f64 z z)) (+.f64 2 3)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z (+.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 z z) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (cbrt.f64 (*.f64 4 (*.f64 z z))) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) 2) z (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z z) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 4 (*.f64 z z))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) z) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (+.f64 z z))) (cbrt.f64 (*.f64 4 (pow.f64 z 4))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 z) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 z 4)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (+.f64 z z)) 1 (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 (*.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (+.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 z z)) (*.f64 4 (*.f64 z z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 0) (fma.f64 x y (*.f64 (*.f64 z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) (*.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x y (*.f64 (*.f64 z z) 3))) (fma.f64 x y (*.f64 (*.f64 z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) (*.f64 0 (fma.f64 x y (*.f64 (*.f64 z z) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 z (+.f64 z z))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 z z)) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (fma.f64 x y (*.f64 z (+.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (*.f64 x y)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (+.f64 (*.f64 z z) (fma.f64 z z (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 z (+.f64 z z))) 1) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 z z)) (*.f64 (fma.f64 z z (*.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (*.f64 (*.f64 z z) 3))))) (+.f64 (cbrt.f64 (*.f64 (*.f64 z z) 3)) (cbrt.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (*.f64 (*.f64 z z) 3))))) (+.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (*.f64 (*.f64 z z) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 2)) (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x y (*.f64 (*.f64 z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 z z) 3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z 3) z (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 z 3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z 3) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z 3))) (cbrt.f64 (*.f64 9 (*.f64 z z))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 z 3)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 -3 z) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z 3)) (*.f64 (cbrt.f64 (*.f64 9 (*.f64 z z))) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) 3) 2)) (cbrt.f64 (*.f64 (*.f64 z z) 3)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (+.f64 z z))) (cbrt.f64 (*.f64 4 (*.f64 z z))) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 z z)) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (+.f64 z z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (+.f64 z z))) (cbrt.f64 (*.f64 4 (pow.f64 z 4))) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 x y)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) y) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x y)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) x) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 (*.f64 z z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 z z) 3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) 3) 1 (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (+.f64 z z)) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) 1 (*.f64 (*.f64 z z) 3))))))"]],"rules":[["egg-rr",58],["egg-rr",72]],"time":27.906982421875,"type":"rewrite"},{"count":[[178,136]],"inputs":[["(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 z (+.f64 (*.f64 2 z) z))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 z (+.f64 (*.f64 2 z) z))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(*.f64 z (+.f64 (*.f64 2 z) z))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 z (+.f64 (*.f64 2 z) z))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 (*.f64 2 z) z)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))"]],"time":143.06005859375,"type":"simplify"},{"compiler":[[1978,739]],"time":19.14208984375,"type":"eval"},{"alts":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","fresh",0.046875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","next",0.03125]],"compiler":[[14,7],[18,9],[14,7],[18,9]],"count":[[138,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[136,2],"picked":[1,0]}],"min-error":[0],"time":40.017822265625,"type":"prune"},{"compiler":[[45,9]],"locations":[["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))",0.00390625,true],["(fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))",0.05859375,true]],"time":7.51513671875,"type":"localize"},{"count":[[2,48]],"series":[["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","z","-inf",0.169921875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","z","inf",0.192138671875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","z","0",0.159912109375],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","y","-inf",0.171875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","y","inf",0.198974609375],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","y","0",0.2470703125],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","x","-inf",0.2021484375],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","x","inf",0.179931640625],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","x","0",0.37890625],["(fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))","z","-inf",0.4619140625],["(fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))","z","inf",0.364990234375],["(fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))","z","0",0.468017578125]],"time":3.35595703125,"type":"series"},{"count":[[2,120]],"inputs":[["(fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))","(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (*.f64 z z)) (*.f64 z (+.f64 z z))) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) (*.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 0) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) (*.f64 0 (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 z z) (+.f64 -1 4))) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (*.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 z z) (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 4 (*.f64 z z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 z z) z) (-.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 z z) (neg.f64 z)) (-.f64 (+.f64 z z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (+.f64 (neg.f64 z) (*.f64 (+.f64 z z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (+.f64 (*.f64 (+.f64 z z) 2) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 (*.f64 (+.f64 z z) 2) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)) (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) (+.f64 -1 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) (+.f64 4 -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) (-.f64 4 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 z z) (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (pow.f64 (cbrt.f64 (+.f64 z z)) (+.f64 2 3)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) 2) z (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z (+.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (cbrt.f64 (*.f64 4 (*.f64 z z))) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (neg.f64 z) (cbrt.f64 z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) z (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 z) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 z z) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 (*.f64 z z)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (neg.f64 (*.f64 z z))) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 z 4)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z z) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) -1 (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 z z)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z z)) 1 (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (*.f64 z z)) 1 (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 z z)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (neg.f64 z) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 z (+.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (*.f64 z (+.f64 z z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 z z)) (+.f64 (*.f64 z (+.f64 z z)) (fma.f64 (neg.f64 z) z (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) (*.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 0) (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) (*.f64 0 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (*.f64 4 (*.f64 z z))) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (*.f64 z z)) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z z)) (fma.f64 x y (*.f64 4 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) z (*.f64 x y)) (*.f64 4 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 x y (*.f64 4 (*.f64 z z))) 0) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (*.f64 4 (*.f64 z z))) 1) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (*.f64 z z)) (*.f64 (fma.f64 (neg.f64 z) z (*.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 4 (*.f64 z z)) (-.f64 (*.f64 z z) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 x y (*.f64 4 (*.f64 z z))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 x y (*.f64 4 (*.f64 z z))) 0) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (+.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (cbrt.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (+.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 2)) (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x y)) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) x) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) y) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (cbrt.f64 (*.f64 x y)) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (pow.f64 (cbrt.f64 (+.f64 z z)) (+.f64 2 3)) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 (*.f64 z z))) (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) (+.f64 z z) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) 2) z (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z (+.f64 z z)) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 z z) 4)) (cbrt.f64 (*.f64 4 (*.f64 z z))) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 z z) (+.f64 -1 4)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) 1 (*.f64 (*.f64 z z) (+.f64 -1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 z z) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 (*.f64 z z)) (fma.f64 (neg.f64 z) z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 2)) (cbrt.f64 (*.f64 (*.f64 z z) (+.f64 -1 4))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z z) (+.f64 -1 4)) 1 (*.f64 x y))))))"]],"rules":[["egg-rr",57],["egg-rr",63]],"time":27.14794921875,"type":"rewrite"},{"count":[[168,127]],"inputs":[["(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (pow.f64 z 2))","(-.f64 (*.f64 4 (pow.f64 z 2)) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (*.f64 4 (pow.f64 z 2)) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(-.f64 (*.f64 4 (pow.f64 z 2)) (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (*.f64 4 (pow.f64 z 2)) (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 y x)","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(-.f64 (+.f64 (*.f64 y x) (*.f64 4 (pow.f64 z 2))) (pow.f64 z 2))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(*.f64 3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 3)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 (*.f64 z z) 3))"]],"time":151.60498046875,"type":"simplify"},{"compiler":[[1978,856]],"time":20.51318359375,"type":"eval"},{"alts":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","next",0.046875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","done",0.03125]],"compiler":[[14,7],[18,9],[14,7]],"count":[[129,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[127,0],"picked":[1,1]}],"min-error":[0],"time":34.288818359375,"type":"prune"},{"compiler":[[29,7]],"locations":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))",0.046875,true]],"time":5.7890625,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","y","-inf",0.2099609375],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","y","inf",0.17578125],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","y","0",0.238037109375],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","x","-inf",0.184814453125],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","x","inf",0.18505859375],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","x","0",0.31689453125],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","z","-inf",0.44091796875],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","z","inf",0.39501953125],["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","z","0",0.343017578125]],"time":2.623046875,"type":"series"},{"count":[[1,45]],"inputs":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (+.f64 (*.f64 (+.f64 z z) z) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 z z) z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (*.f64 x y)) (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (+.f64 z z) z) (*.f64 x y)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 z (*.f64 3 z)) -1)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (neg.f64 (*.f64 z (*.f64 3 z)))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 z (*.f64 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 z z) z) (neg.f64 (fma.f64 z z (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z z (*.f64 x y)) (*.f64 -2 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (+.f64 z z) z) (*.f64 x y)) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (*.f64 3 z)) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y))) (pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 2/3) (cbrt.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y))) (neg.f64 (pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 z z (*.f64 x y)) 2/3) (-.f64 (cbrt.f64 (*.f64 4 (pow.f64 z 4))) (*.f64 (cbrt.f64 (fma.f64 z z (*.f64 x y))) (cbrt.f64 (*.f64 (+.f64 z z) z))))) (+.f64 (cbrt.f64 (fma.f64 z z (*.f64 x y))) (cbrt.f64 (*.f64 (+.f64 z z) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 4 (pow.f64 z 4))) (-.f64 (pow.f64 (fma.f64 z z (*.f64 x y)) 2/3) (*.f64 (cbrt.f64 (*.f64 (+.f64 z z) z)) (cbrt.f64 (fma.f64 z z (*.f64 x y)))))) (+.f64 (cbrt.f64 (*.f64 (+.f64 z z) z)) (cbrt.f64 (fma.f64 z z (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (*.f64 z (*.f64 3 z))) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 z (*.f64 3 z)) (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 z z) z)) (cbrt.f64 (*.f64 4 (pow.f64 z 4))) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (+.f64 z z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 z z)) (*.f64 (pow.f64 (+.f64 z z) 2/3) z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 z z (*.f64 x y)) 2/3) (cbrt.f64 (fma.f64 z z (*.f64 x y))) (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z z (*.f64 x y))) (pow.f64 (fma.f64 z z (*.f64 x y)) 2/3) (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) (cbrt.f64 z)) (pow.f64 z 2/3) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 z z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 z z (*.f64 x y))) (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 z z) z) (fma.f64 z z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z z (*.f64 x y)) 1 (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z z (*.f64 x y)) (*.f64 (+.f64 z z) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 z z) z) 1 (fma.f64 z z (*.f64 x y)))))))"]],"rules":[["egg-rr",45]],"time":40.02490234375,"type":"rewrite"},{"count":[[81,52]],"inputs":[["(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(*.f64 3 (pow.f64 z 2))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(+.f64 (pow.f64 z 2) (*.f64 2 (pow.f64 z 2)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (*.f64 2 (pow.f64 z 2)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 3 (pow.f64 z 2))","(*.f64 3 (*.f64 z z))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (*.f64 y x) (*.f64 3 (pow.f64 z 2)))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (*.f64 2 (pow.f64 z 2)))","(*.f64 3 (*.f64 z z))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (*.f64 2 (pow.f64 z 2)))","(*.f64 3 (*.f64 z z))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(*.f64 y x)","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))","(+.f64 (pow.f64 z 2) (+.f64 (*.f64 y x) (*.f64 2 (pow.f64 z 2))))","(fma.f64 y x (*.f64 3 (*.f64 z z)))"]],"time":118.09912109375,"type":"simplify"},{"compiler":[[722,276]],"time":6.928955078125,"type":"eval"},{"alts":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","done",0.046875],["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","done",0.03125]],"compiler":[[14,7],[18,9]],"count":[[54,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[52,0],"picked":[1,1]}],"min-error":[0],"time":9.5009765625,"type":"prune"},{"accuracy":[0.03125],"baseline":[0.03125],"branch":[["x",0.03125,1],["y",0.03125,1],["z",0.03125,1],["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))",0.03125,1],["(*.f64 x y)",0.03125,1],["(*.f64 z z)",0.03125,1]],"compiler":[[4,3],[4,3],[4,3],[18,8],[6,4],[6,4],[55,17]],"count":[[4,1]],"inputs":[["(fma.f64 (+.f64 z z) z (fma.f64 z z (*.f64 x y)))","(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","(+.f64 (*.f64 x y) (*.f64 z (+.f64 (+.f64 z z) z)))","(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))"]],"link":["."],"name":["Linear.Quaternion:$c/ from linear-1.19.1.3, A"],"oracle":[0.19140625],"outputs":[["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))"]],"time":18.669921875,"times":[["x",3.074951171875],["y",3.009033203125],["z",2.9619140625],["(+.f64 (+.f64 (+.f64 (*.f64 x y) (*.f64 z z)) (*.f64 z z)) (*.f64 z z))",3.037109375],["(*.f64 x y)",3.2021484375],["(*.f64 z z)",2.284912109375]],"type":"regimes"},{"compiler":[[18,9]],"inputs":[["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 x y) (fma.f64 (+.f64 z z) (+.f64 z z) (neg.f64 (*.f64 z z))))","(fma.f64 x y (*.f64 (*.f64 z z) (+.f64 -1 4)))"]],"stop":[["done",1]],"time":18.34912109375,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[18,9]],"remove-preprocessing":[[]],"time":8.946044921875,"type":"end"}]