{"branch":"main","commit":"20697657dfbc909f3ca9f56b5ba06abcc3ea1cde","date":1677794092,"flags":["rules:arithmetic","rules:polynomials","rules:fractions","rules:exponents","rules:trigonometry","rules:hyperbolic","rules:numerics","rules:special","rules:bools","rules:branches","generate:egglog","generate:rr","generate:taylor","generate:simplify","reduce:regimes","reduce:avg-error","reduce:binary-search","reduce:branch-expressions","setup:simplify","setup:search"],"hostname":"Olivers-MacBook-Pro.local","iterations":4,"note":false,"points":256,"seed":"0","tests":[{"bits":128,"conversions":[],"cost-accuracy":"((64 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"x","link":"0-x","name":"x","output":"x","pre":"(or (== x 0.0) (== x 10.0))","prec":"binary64","preprocess":"()","spec":"x","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":340.02197265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 13.179679992497576) (78272 0.25467540387703863) ())","end":0.25467540387703863,"end-est":0.2841116987039455,"identifier":"#f","input":"(+ x (- (tan (+ y z)) (tan a)))","link":"1-tanexample","name":"tan-example","output":"(+ x (/ (- (+ (* (- (cos a)) (tan z)) (* (- (cos a)) (tan y))) (* (fma (tan z) (tan y) -1.0) (sin a))) (* (fma (tan z) (tan y) -1.0) (cos a))))","pre":"(and (and (and (or (== x 0.0) (and (<= 0.5884142 x) (<= x 505.5909))) (or (and (<= -1.796658e+308 y) (<= y -9.425585e-310)) (and (<= 1.284938e-309 y) (<= y 1.751224e+308)))) (or (and (<= -1.776707e+308 z) (<= z -8.599796e-310)) (and (<= 3.293145e-311 z) (<= z 1.725154e+308)))) (or (and (<= -1.796658e+308 a) (<= a -9.425585e-310)) (and (<= 1.284938e-309 a) (<= a 1.751224e+308))))","prec":"binary64","preprocess":"()","spec":"(+ x (- (tan (+ y z)) (tan a)))","start":13.179679992497576,"start-est":11.930621482606362,"status":"imp-start","target":false,"target-prog":"#f","time":8979.969970703125,"vars":["x","y","z","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 29.968148178121503) (26180 1.2076733334935243) ())","end":1.2076733334935243,"end-est":0.3512580307987555,"identifier":"#f","input":"(log (+ (exp a) (exp b)))","link":"2-symmetrylogofsumofexp","name":"symmetry log of sum of exp","output":"(if (<= (exp b) 0.0) (+ (/ a (+ 1.0 (exp b))) (log1p (exp b))) (+ (log1p (exp a)) (/ b (+ 1.0 (exp a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ (exp a) (exp b)))","start":29.968148178121503,"start-est":32.43922665634962,"status":"imp-start","target":false,"target-prog":"#f","time":9558.24609375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((512 0.026044925001442315) (13568 0.031976957695291214) ())","end":0.031976957695291214,"end-est":0.017910009768442016,"identifier":"#f","input":"(/ (- (+ f n)) (- f n))","link":"3-subtractionfraction","name":"subtraction fraction","output":"(- (pow (cbrt (/ f (- n f))) 3.0) (/ n (- f n)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ f n)) (- f n))","start":0.026044925001442315,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":2229.7890625,"vars":["f","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 40.88441043702031) (25984 0.041) ())","end":0.041,"end-est":0.25390625,"identifier":"#f","input":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","link":"4-sqrtexpproblem344","name":"sqrtexp (problem 3.4.4)","output":"(cbrt (pow (/ (expm1 (+ x x)) (expm1 x)) 1.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","start":40.88441043702031,"start-est":42.17590745992199,"status":"imp-start","target":false,"target-prog":"#f","time":2730.422119140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.485125) (448 0.4065855774112516) ())","end":0.4065855774112516,"end-est":0.23496757853726058,"identifier":"#f","input":"(* (sqrt (- x 1.0)) (sqrt x))","link":"5-sqrttimes","name":"sqrt times","output":"(+ (+ x -0.5) (/ -0.125 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- x 1.0)) (sqrt x))","start":0.485125,"start-est":0.46875,"status":"ex-start","target":false,"target-prog":"#f","time":534.81005859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 30.248507746384025) (6528 0.129625) ())","end":0.129625,"end-est":0.11328125,"identifier":"#f","input":"(sqrt (+ (pow x 2.0) (pow x 2.0)))","link":"6-sqrtE","name":"sqrt E","output":"(hypot x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (pow x 2.0) (pow x 2.0)))","start":30.248507746384025,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":1196.681884765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 30.248507746384025) (39104 0.3787855265643931) ())","end":0.3787855265643931,"end-est":0.33203125,"identifier":"#f","input":"(sqrt (* 2.0 (pow x 2.0)))","link":"7-sqrtD","name":"sqrt D","output":"(* (cbrt (cbrt (cbrt 4.0))) (* (* (pow 2.0 (+ 0.3333333333333333 0.05555555555555555)) (fabs x)) (pow 2.0 0.037037037037037035)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* 2.0 (pow x 2.0)))","start":30.248507746384025,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":1114.35205078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.248724867083297) (39104 0.3787855265643931) ())","end":0.3787855265643931,"end-est":0.33203125,"identifier":"#f","input":"(sqrt (* 2.0 (* x x)))","link":"8-sqrtC","name":"sqrt C","output":"(* (cbrt (cbrt (cbrt 4.0))) (* (* (pow 2.0 (+ 0.3333333333333333 0.05555555555555555)) (fabs x)) (pow 2.0 0.037037037037037035)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* 2.0 (* x x)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":1022.111083984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.2348951722095) (39104 0.3787855265643931) ())","end":0.3787855265643931,"end-est":0.33203125,"identifier":"#f","input":"(sqrt (* (* 2.0 x) x))","link":"9-sqrtB","name":"sqrt B","output":"(* (* (* (pow 2.0 (+ 0.3333333333333333 0.05555555555555555)) (fabs x)) (pow 2.0 0.037037037037037035)) (cbrt (cbrt (cbrt 4.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* 2.0 x) x))","start":30.2348951722095,"start-est":29.699794254532684,"status":"imp-start","target":false,"target-prog":"#f","time":942.166015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 30.248724867083297) (6528 0.129625) ())","end":0.129625,"end-est":0.11328125,"identifier":"#f","input":"(sqrt (+ (* x x) (* x x)))","link":"10-sqrtA","name":"sqrt A","output":"(hypot x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) (* x x)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":1009.655029296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.348899690629423) (26696 0.14061180644221474) ())","end":0.14061180644221474,"end-est":0,"identifier":"#f","input":"(/ (- x (sin x)) (- x (tan x)))","link":"11-sintanproblem345","name":"sintan (problem 3.4.5)","output":"(if (<= x -32.59303543867799) (+ (/ (sin x) (- (tan x) x)) (/ x (- x (tan x)))) (if (<= x 0.0009976555059424367) (+ (fma (* x x) 0.225 (fma -0.009642857142857142 (pow x 4.0) (* 0.00024107142857142857 (pow x 6.0)))) -0.5) (+ (/ (sin x) (- (tan x) x)) (/ x (- x (tan x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (- x (tan x)))","start":31.348899690629423,"start-est":30.06091553067967,"status":"imp-start","target":false,"target-prog":"#f","time":5446.4130859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 14.73798208383267) (39040 0.33340684137076615) ())","end":0.33340684137076615,"end-est":0.3190613281475361,"identifier":"#f","input":"(* r (/ (sin b) (cos (+ a b))))","link":"12-rsinB","name":"rsin B","output":"(/ (* r (sin b)) (fma (cos b) (cos a) (- (* (sin a) (sin b)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* r (/ (sin b) (cos (+ a b))))","start":14.73798208383267,"start-est":14.165379991000137,"status":"imp-start","target":false,"target-prog":"#f","time":3406.638916015625,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 14.738828952118546) (39040 0.33340684137076615) ())","end":0.33340684137076615,"end-est":0.3190613281475361,"identifier":"#f","input":"(/ (* r (sin b)) (cos (+ a b)))","link":"13-rsinA","name":"rsin A","output":"(/ (* r (sin b)) (fma (cos a) (cos b) (- (* (sin a) (sin b)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* r (sin b)) (cos (+ a b)))","start":14.738828952118546,"start-est":14.157567491000137,"status":"imp-start","target":false,"target-prog":"#f","time":3671.93994140625,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((270592 54.71375830993892) (65284 28.655868780943607) ())","end":28.655868780943607,"end-est":25.182260329442574,"identifier":"#f","input":"(* 180.0 (/ (atan (/ (- (- (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale) (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0)))) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale))) PI))","link":"14-rawanglefromscalerotatedellipse","name":"raw-angle from scale-rotated-ellipse","output":"(if (<= a -4.844694988633468e+25) (* 180.0 (/ (atan (* (sin (* 0.005555555555555556 (* angle PI))) (/ y-scale (* x-scale (cos (* (* (* 0.005555555555555556 angle) (cbrt PI)) (cbrt (* PI PI)))))))) PI)) (if (<= a 1.577416879952304e-211) (* 180.0 (/ (atan (- (/ (* y-scale (cos (* 0.005555555555555556 (* angle PI)))) (* x-scale (sin (* 0.005555555555555556 (* angle PI))))))) PI)) (if (<= a 1.338781692931178e-109) (* 180.0 (/ (atan (* (sin (* 0.005555555555555556 (* angle PI))) (/ y-scale (* x-scale (cos (* (* 0.005555555555555556 PI) angle)))))) PI)) (if (<= a 7.268472135076255e+30) (* 180.0 (/ (atan (- (/ (* y-scale (cos (* 0.005555555555555556 (* angle PI)))) (* x-scale (sin (* 0.005555555555555556 (* angle PI))))))) PI)) (* 180.0 (/ (atan (* (/ y-scale x-scale) (tan (* (* 0.005555555555555556 angle) PI)))) PI))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 180.0 (/ (atan (/ (- (- (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale) (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0)))) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale))) PI))","start":54.71375830993892,"start-est":56.555244378129245,"status":"imp-start","target":false,"target-prog":"#f","time":45979.52197265625,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 34.28388722548568) (13832 10.144242776365713) ())","end":10.144242776365713,"end-est":8.191130087590583,"identifier":"#f","input":"(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","link":"15-quad2pproblem321positive","name":"quad2p (problem 3.2.1, positive)","output":"(if (<= b_2 -3.65e+118) (fma -2.0 (/ b_2 a) (/ (* 0.5 c) b_2)) (if (<= b_2 1.6e-129) (- (/ (sqrt (fma b_2 b_2 (- (* a c)))) a) (/ b_2 a)) (/ (* -0.5 c) b_2)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","start":34.28388722548568,"start-est":31.753826749134422,"status":"imp-start","target":false,"target-prog":"#f","time":2436.898193359375,"vars":["a","b_2","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 34.073251251539645) (13768 10.16549078620157) ())","end":10.16549078620157,"end-est":10.512757809114886,"identifier":"#f","input":"(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","link":"16-quad2mproblem321negative","name":"quad2m (problem 3.2.1, negative)","output":"(if (<= b_2 -6.8e-83) (/ (* -0.5 c) b_2) (if (<= b_2 4.4e+151) (/ (+ b_2 (sqrt (fma b_2 b_2 (- (* c a))))) (- a)) (fma -2.0 (/ b_2 a) (/ (* 0.5 c) b_2))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","start":34.073251251539645,"start-est":32.527903220535755,"status":"imp-start","target":false,"target-prog":"#f","time":2954.059814453125,"vars":["a","b_2","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((53056 34.10267217786116) (124612 6.022569301379441) ())","end":6.022569301379441,"end-est":7.731664114797289,"identifier":"#f","input":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","link":"17-powComplexrealpart","name":"powComplex, real part","output":"(if (<= (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))) 1.0) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))) (/ (* (pow (cbrt (cos (fma (log (hypot x.re x.im)) y.im (* (atan2 x.im x.re) y.re)))) 3.0) (pow (hypot x.re x.im) y.re)) (exp (* (atan2 x.im x.re) y.im))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","start":34.10267217786116,"start-est":33.09930711045047,"status":"imp-start","target":false,"target-prog":"#f","time":4587.35888671875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((53056 34.159640083331304) (111748 6.140535848384653) ())","end":6.140535848384653,"end-est":7.946629589715094,"identifier":"#f","input":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","link":"18-powCompleximaginarypart","name":"powComplex, imaginary part","output":"(if (<= (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))) 0.0) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))) (/ (* (sin (fma (log (hypot x.re x.im)) y.im (* (atan2 x.im x.re) y.re))) (pow (hypot x.re x.im) y.re)) (exp (* y.im (atan2 x.im x.re)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","start":34.159640083331304,"start-est":33.16341918910931,"status":"imp-start","target":false,"target-prog":"#f","time":4329.199951171875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 0.3779391289007051) (51904 0.22295082956794743) ())","end":0.22295082956794743,"end-est":0.1953125,"identifier":"#f","input":"(+ (* (* (/ 1.0 6.0) (pow (* -2.0 (log u1)) 0.5)) (cos (* (* 2.0 PI) u2))) 0.5)","link":"19-normaldistribution","name":"normal distribution","output":"(fma (sqrt (* (* (* -2.0 (log u1)) (cbrt 0.027777777777777776)) (cbrt 0.0007716049382716049))) (cos (* (+ PI PI) u2)) 0.5)","pre":"(and (and (<= 0.0 u1) (<= u1 1.0)) (and (<= 0.0 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (* (/ 1.0 6.0) (pow (* -2.0 (log u1)) 0.5)) (cos (* (* 2.0 PI) u2))) 0.5)","start":0.3779391289007051,"start-est":0.36328125,"status":"ex-start","target":false,"target-prog":"#f","time":2051.052978515625,"vars":["u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.014014638164759573) (6784 0.012600919365257202) ())","end":0.012600919365257202,"end-est":0,"identifier":"#f","input":"(- (log (- (/ 1.0 x) 1.0)))","link":"20-neglog","name":"neg log","output":"(- (log (/ (- 1.0 x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (- (/ 1.0 x) 1.0)))","start":0.014014638164759573,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":617.843017578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 28.019118031355703) (73028 0.9433004848426093) ())","end":0.9433004848426093,"end-est":0.8510751857841513,"identifier":"#f","input":"(/ (cos (* 2.0 x)) (* (pow c 2.0) (* (* x (pow s 2.0)) x)))","link":"21-mixedcos","name":"mixedcos","output":"(if (<= (/ (cos (* 2.0 x)) (* (pow c 2.0) (* (* x (pow s 2.0)) x))) INFINITY) (* (cos (+ x x)) (pow (* c (* s x)) -2.0)) (+ (* (pow (* (* c s) x) -2.0) (pow (cos x) 2.0)) (* (pow (* (* c s) x) -2.0) (- (/ (/ (- (cos 0.0) (cos (+ x x))) (cbrt 4.0)) (cbrt 2.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (cos (* 2.0 x)) (* (pow c 2.0) (* (* x (pow s 2.0)) x)))","start":28.019118031355703,"start-est":30.487372482353265,"status":"imp-start","target":false,"target-prog":"#f","time":3398.708984375,"vars":["x","c","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"re_sqr","input":"(- (* re re) (* im im))","link":"22-mathsquareoncomplexrealpart","name":"math.square on complex, real part","output":"(* (+ re im) (- re im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* re re) (* im im))","start":0.007436481637041209,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":483.050048828125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.006) (320 0.024) ())","end":0.024,"end-est":0,"identifier":"im_sqr","input":"(+ (* re im) (* im re))","link":"23-mathsquareoncompleximaginarypart","name":"math.square on complex, imaginary part","output":"(* re (+ im im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* re im) (* im re))","start":0.006,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":477.156005859375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 38.89362679418264) (26884 6.51706550889833) ())","end":6.51706550889833,"end-est":6.4280448616181936,"identifier":"#f","input":"(* 0.5 (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))))","link":"24-mathsqrtoncompleximaginarypartimgreaterthan0branch","name":"math.sqrt on complex, imaginary part, im greater than 0 branch","output":"(if (<= (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))) 0.0) (* (sqrt (/ (/ 1.0 re) 4.0)) im) (sqrt (* 0.25 (* -2.0 (- re (hypot re im))))))","pre":"(> im 0.0)","prec":"binary64","preprocess":"()","spec":"(* 0.5 (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))))","start":38.89362679418264,"start-est":36.257083076443486,"status":"imp-start","target":false,"target-prog":"#f","time":1790.2890625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 0.04868872187554087) (32448 0.040147735747493696) ())","end":0.040147735747493696,"end-est":0.014003759768442016,"identifier":"#f","input":"(* (* 0.5 (sin re)) (+ (exp (- 0.0 im)) (exp im)))","link":"25-mathsinoncomplexrealpart","name":"math.sin on complex, real part","output":"(* 0.5 (fma (exp im) (sin re) (/ (sin re) (exp im))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (sin re)) (+ (exp (- 0.0 im)) (exp im)))","start":0.04868872187554087,"start-est":0.021816259768442016,"status":"ex-start","target":false,"target-prog":"#f","time":3166.7578125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 31.682930186056996) (38912 0.3466392859392128) ())","end":0.3466392859392128,"end-est":0.31640625,"identifier":"#f","input":"(/ (log (sqrt (+ (* re re) (* im im)))) (log 10.0))","link":"26-mathlog10oncomplexrealpart","name":"math.log10 on complex, real part","output":"(* (* (log (hypot re im)) (pow (log 10.0) -0.3333333333333333)) (pow (log 10.0) -0.6666666666666666))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (log (sqrt (+ (* re re) (* im im)))) (log 10.0))","start":31.682930186056996,"start-est":31.937999403585824,"status":"imp-start","target":false,"target-prog":"#f","time":1799.6669921875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.8464979328161963) (32512 0.08018872187554087) ())","end":0.08018872187554087,"end-est":0.09212875976844201,"identifier":"#f","input":"(/ (atan2 im re) (log 10.0))","link":"27-mathlog10oncompleximaginarypart","name":"math.log10 on complex, imaginary part","output":"(/ (/ (atan2 im re) (cbrt (log 0.1))) (- (pow (log 10.0) 0.6666666666666666)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (atan2 im re) (log 10.0))","start":0.8464979328161963,"start-est":0.874042529305326,"status":"ex-start","target":false,"target-prog":"#f","time":1640.283935546875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((39808 31.977374491804493) (39040 0.46417105470327635) ())","end":0.46417105470327635,"end-est":0.4209175293053261,"identifier":"#f","input":"(/ (+ (* (log (sqrt (+ (* re re) (* im im)))) (log base)) (* (atan2 im re) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","link":"28-mathlog2oncomplexrealpart","name":"math.log/2 on complex, real part","output":"(* (/ 1.0 (log base)) (log (* (cbrt (hypot re im)) (pow (hypot re im) 0.6666666666666666))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* (log (sqrt (+ (* re re) (* im im)))) (log base)) (* (atan2 im re) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","start":31.977374491804493,"start-est":30.961598718750842,"status":"imp-start","target":false,"target-prog":"#f","time":3254.328125,"vars":["re","im","base"]},{"bits":128,"conversions":[],"cost-accuracy":"((39808 31.788934587507963) (13056 0.30918872187554086) ())","end":0.30918872187554086,"end-est":0.3046875,"identifier":"#f","input":"(/ (- (* (atan2 im re) (log base)) (* (log (sqrt (+ (* re re) (* im im)))) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","link":"29-mathlog2oncompleximaginarypart","name":"math.log/2 on complex, imaginary part","output":"(/ (atan2 im re) (log base))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* (atan2 im re) (log base)) (* (log (sqrt (+ (* re re) (* im im)))) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","start":31.788934587507963,"start-est":32.496757519536885,"status":"imp-start","target":false,"target-prog":"#f","time":2279.717041015625,"vars":["re","im","base"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.380740061021974) (12928 0.000125) ())","end":0.000125,"end-est":0,"identifier":"#f","input":"(log (sqrt (+ (* re re) (* im im))))","link":"30-mathlog1oncomplexrealpart","name":"math.log/1 on complex, real part","output":"(log (hypot re im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (sqrt (+ (* re re) (* im im))))","start":31.380740061021974,"start-est":31.675583566837354,"status":"imp-start","target":false,"target-prog":"#f","time":591.6630859375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0.0005) (6528 0.0005) ())","end":0.0005,"end-est":0,"identifier":"#f","input":"(atan2 im re)","link":"31-mathlog1oncompleximaginarypart","name":"math.log/1 on complex, imaginary part","output":"(atan2 im re)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 im re)","start":0.0005,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":403.41796875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.01875) (32384 0.04348583452566407) ())","end":0.04348583452566407,"end-est":0.0078125,"identifier":"#f","input":"(* (exp re) (cos im))","link":"32-mathexponcomplexrealpart","name":"math.exp on complex, real part","output":"(* (cbrt (exp re)) (* (pow (exp re) 0.6666666666666666) (cos im)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp re) (cos im))","start":0.01875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":1513.7890625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.04007312031259015) (32384 0.06167924971301238) ())","end":0.06167924971301238,"end-est":0.015625,"identifier":"#f","input":"(* (exp re) (sin im))","link":"33-mathexponcompleximaginarypart","name":"math.exp on complex, imaginary part","output":"(* (pow (exp re) 0.6666666666666666) (* (sin im) (cbrt (exp re))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp re) (sin im))","start":0.04007312031259015,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":1441.594970703125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 0.02993872187554087) (32576 0.02827124062518029) ())","end":0.02827124062518029,"end-est":0.01953125,"identifier":"#f","input":"(* (* 0.5 (cos re)) (+ (exp (- im)) (exp im)))","link":"34-mathcosoncomplexrealpart","name":"math.cos on complex, real part","output":"(fma (* (exp im) 0.5) (cos re) (/ (* 0.5 (cos re)) (exp im)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (cos re)) (+ (exp (- im)) (exp im)))","start":0.02993872187554087,"start-est":0.03125,"status":"ex-start","target":false,"target-prog":"#f","time":3162.1171875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0.0005) (6528 0.0005) ())","end":0.0005,"end-est":0,"identifier":"#f","input":"(atan2 im re)","link":"35-mathargoncomplex","name":"math.arg on complex","output":"(atan2 im re)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 im re)","start":0.0005,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":406.684814453125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00675) (6720 0.0035) ())","end":0.0035,"end-est":0,"identifier":"modulus_sqr","input":"(+ (* re re) (* im im))","link":"36-mathabsoncomplexsquared","name":"math.abs on complex (squared)","output":"(fma im im (* re re))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* re re) (* im im))","start":0.00675,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":457.72998046875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.08033947042407) (6528 0.0035) ())","end":0.0035,"end-est":0,"identifier":"modulus","input":"(sqrt (+ (* re re) (* im im)))","link":"37-mathabsoncomplex","name":"math.abs on complex","output":"(hypot re im)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* re re) (* im im)))","start":31.08033947042407,"start-est":31.815164593812035,"status":"imp-start","target":false,"target-prog":"#f","time":485.328857421875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((7556 19.839266437028847) (7820 6.774173239445187) ())","end":6.774173239445187,"end-est":4.961082096017046,"identifier":"#f","input":"(if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))","link":"38-jeffquadraticroot2","name":"jeff quadratic root 2","output":"(if (<= b -1.3e+107) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (- b)) (* 2.0 a))) (if (<= b 6e+105) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) b)) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))","start":19.839266437028847,"start-est":19.99730401355955,"status":"imp-start","target":false,"target-prog":"#f","time":4017.839111328125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7556 19.856218065959506) (26956 7.200563405074212) ())","end":7.200563405074212,"end-est":6.408594782271894,"identifier":"#f","input":"(if (>= b 0.0) (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ (* 2.0 c) (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))))","link":"39-jeffquadraticroot1","name":"jeff quadratic root 1","output":"(if (<= b -3.984001307761773e+171) (if (>= b 0.0) (/ (* (+ b (sqrt (fma b b (* (* a c) -4.0)))) -0.5) a) (/ c (* (- (- b) b) 0.5))) (if (<= b 8.2e+104) (if (>= b 0.0) (/ (* (+ b (sqrt (fma b b (* (* a c) -4.0)))) -0.5) a) (/ c (* (- (sqrt (fma b b (* (* a c) -4.0))) b) 0.5))) (if (>= b 0.0) (/ (* (* 2.0 b) -0.5) a) (/ c (* (- (sqrt (fma (* (* a c) (cbrt -4.0)) (cbrt 16.0) (* b b))) b) 0.5)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(if (>= b 0.0) (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ (* 2.0 c) (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))))","start":19.856218065959506,"start-est":18.774779265417223,"status":"imp-start","target":false,"target-prog":"#f","time":3241.966064453125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (fabs (- a b)) 2.0)","link":"40-fabsfraction2","name":"fabs fraction 2","output":"(/ (fabs (- a b)) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (fabs (- a b)) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":412.336181640625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 1.433746815008286) (14984 0.16041524101186092) ())","end":0.16041524101186092,"end-est":0.09603500976844201,"identifier":"#f","input":"(fabs (- (/ (+ x 4.0) y) (* (/ x y) z)))","link":"41-fabsfraction1","name":"fabs fraction 1","output":"(if (<= (- (/ (+ x 4.0) y) (* (/ x y) z)) -50.0) (fabs (fma (- z) (/ x y) (+ (/ x y) (* (/ 1.0 y) 4.0)))) (if (<= (- (/ (+ x 4.0) y) (* (/ x y) z)) 2e+105) (fabs (- (/ (+ x 4.0) y) (* x (/ z y)))) (fabs (fma (- z) (/ x y) (/ (+ x 4.0) y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (- (/ (+ x 4.0) y) (* (/ x y) z)))","start":1.433746815008286,"start-est":1.2552797300709377,"status":"imp-start","target":false,"target-prog":"#f","time":2109.283935546875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((32320 59.44704431919968) (103232 59.43719634067324) ())","end":59.43719634067324,"end-est":60.30408600097734,"identifier":"#f","input":"(* (fmod (exp x) (sqrt (cos x))) (exp (- x)))","link":"42-expfmod","name":"expfmod","output":"(* (cbrt (pow (/ (fmod (exp x) (cbrt (pow (cos x) 1.5))) (exp x)) 0.6666666666666666)) (pow (cbrt (/ (fmod (exp x) (cbrt (pow (cos x) 1.5))) (exp x))) 2.3333333333333335))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (fmod (exp x) (sqrt (cos x))) (exp (- x)))","start":59.44704431919968,"start-est":60.33705327885785,"status":"apx-start","target":false,"target-prog":"#f","time":6204.808837890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 0.26453528017751426) (19520 0.26453528017751426) ())","end":0.26453528017751426,"end-est":0.1823535542098672,"identifier":"#f","input":"(* (exp (- w)) (pow l (exp w)))","link":"43-expwcrasher","name":"exp-w crasher","output":"(* (exp (- w)) (pow l (exp w)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- w)) (pow l (exp w)))","start":0.26453528017751426,"start-est":0.1823535542098672,"status":"ex-start","target":false,"target-prog":"#f","time":6237.694091796875,"vars":["w","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.018193071443900116) (13184 0.02249862157234782) ())","end":0.02249862157234782,"end-est":0.03724716943992501,"identifier":"#f","input":"(exp (- (- 1.0 (* x x))))","link":"44-expnegsub","name":"exp neg sub","output":"(pow (exp (- 1.0 (* x x))) -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (- (- 1.0 (* x x))))","start":0.018193071443900116,"start-est":0.04891250171767081,"status":"ex-start","target":false,"target-prog":"#f","time":901.52001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.76703785338461) (46472 0.5118564383651205) ())","end":0.5118564383651205,"end-est":0.2412598216540684,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (* x x))","link":"45-cos2problem341","name":"cos2 (problem 3.4.1)","output":"(if (<= x -23902.966836370517) (/ (* (pow x -2.0) (- 1.0 (/ (* (cos x) (+ (cos (+ x x)) (cos 0.0))) 2.0))) (fma (cos x) (+ 1.0 (cos x)) 1.0)) (if (<= x 0.06917246512513657) (+ 0.5 (fma -0.041666666666666664 (* x x) (fma -2.48015873015873e-5 (pow x 6.0) (* 0.001388888888888889 (pow x 4.0))))) (/ (* (pow x -2.0) (- 1.0 (+ (* 0.5 (cos x)) (* (* 0.5 (cos (+ x x))) (cos x))))) (fma (cos x) (+ 1.0 (cos x)) 1.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (* x x))","start":31.76703785338461,"start-est":31.462158312468016,"status":"imp-start","target":false,"target-prog":"#f","time":2661.693115234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.07751204570071307) (14016 0.0666345046010408) ())","end":0.0666345046010408,"end-est":0.01953125,"identifier":"#f","input":"(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))","link":"46-bparameterofrenormalizedbetadistribution","name":"b parameter of renormalized beta distribution","output":"(+ (+ (* -2.0 (/ (pow m 2.0) v)) (/ (pow m 3.0) v)) (+ (+ (/ m v) m) -1.0))","pre":"(and (and (< 0.0 m) (< 0.0 v)) (< v 0.25))","prec":"binary64","preprocess":"()","spec":"(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))","start":0.07751204570071307,"start-est":0.05859375,"status":"ex-start","target":false,"target-prog":"#f","time":2314.90087890625,"vars":["m","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((239808 63.970144588149914) (388 50.00130608395088) ())","end":50.00130608395088,"end-est":46.85173150505253,"identifier":"#f","input":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (- (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","link":"47-bfromscalerotatedellipse","name":"b from scale-rotated-ellipse","output":"(if (<= b 2.4379592956928403e-96) (- (* x-scale a)) (* x-scale a))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (- (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","start":63.970144588149914,"start-est":63.956685202949195,"status":"imp-start","target":false,"target-prog":"#f","time":67036.833984375,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.013125) (20416 0.009625) ())","end":0.009625,"end-est":0,"identifier":"#f","input":"(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))","link":"48-arccos","name":"arccos","output":"(* 2.0 (atan (sqrt (/ (- (/ (+ -1.0 (pow x 3.0)) (- -1.0 x))) (+ (* x (- -1.0 x)) -1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))","start":0.013125,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":1379.067138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((512 15.819283073268599) (6720 0.3040522562546875) ())","end":0.3040522562546875,"end-est":0.30697250976844204,"identifier":"#f","input":"(- (* (* (* a a) b) b))","link":"49-abangleABCFD","name":"ab-angle->ABCF D","output":"(- (pow (* a b) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* (* a a) b) b))","start":15.819283073268599,"start-est":14.299365513458902,"status":"imp-start","target":false,"target-prog":"#f","time":1266.325927734375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 20.13332433763928) (65152 20.15684792877253) ())","end":20.15684792877253,"end-est":21.55386044816252,"identifier":"#f","input":"(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))","link":"50-abangleABCFC","name":"ab-angle->ABCF C","output":"(+ (pow (* a (pow (cbrt (cos (* (* 0.005555555555555556 angle) PI))) 3.0)) 2.0) (pow (* b (sin (* (sqrt 0.005555555555555556) (* (* PI angle) (sqrt 0.005555555555555556))))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))","start":20.13332433763928,"start-est":21.606716098665466,"status":"apx-start","target":false,"target-prog":"#f","time":4918.88818359375,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((39488 31.358781767513296) (65792 21.72821013526503) ())","end":21.72821013526503,"end-est":23.493144197290714,"identifier":"#f","input":"(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))","link":"51-abangleABCFB","name":"ab-angle->ABCF B","output":"(+ (* (- a) (* (sin (* (* (* (cbrt 0.0001234567901234568) angle) (cbrt (* PI (cbrt 0.011111111111111112)))) (pow (* PI (cbrt 0.011111111111111112)) 0.6666666666666666))) (+ b a))) (* b (* (sin (* (* angle 0.011111111111111112) PI)) (+ b a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))","start":31.358781767513296,"start-est":34.707903262547894,"status":"imp-start","target":false,"target-prog":"#f","time":4897.751953125,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 20.002535434886326) (71808 19.99381723425874) ())","end":19.99381723425874,"end-est":20.978546139331684,"identifier":"#f","input":"(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))","link":"52-abangleABCFA","name":"ab-angle->ABCF A","output":"(+ (pow (* a (sin (* (* 0.005555555555555556 angle) PI))) 2.0) (pow (* b (* (cbrt (cos (* (* angle PI) 0.005555555555555556))) (pow (cbrt (- (cos (* (* angle PI) 0.005555555555555556)))) 2.0))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))","start":20.002535434886326,"start-est":21.09421523058784,"status":"apx-start","target":false,"target-prog":"#f","time":4869.464111328125,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.18439777504328728) (7104 0.17896149691882812) ())","end":0.17896149691882812,"end-est":0.12890625,"identifier":"#f","input":"(* (- (/ (* m (- 1.0 m)) v) 1.0) m)","link":"53-aparameterofrenormalizedbetadistribution","name":"a parameter of renormalized beta distribution","output":"(fma (/ (+ (- (* m m)) m) v) m (- m))","pre":"(and (and (< 0.0 m) (< 0.0 v)) (< v 0.25))","prec":"binary64","preprocess":"()","spec":"(* (- (/ (* m (- 1.0 m)) v) 1.0) m)","start":0.18439777504328728,"start-est":0.15625,"status":"ex-start","target":false,"target-prog":"#f","time":1810.338134765625,"vars":["m","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((239808 63.50988330440551) (53068 50.323802597933835) ())","end":50.323802597933835,"end-est":48.61777942193326,"identifier":"#f","input":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (+ (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","link":"54-afromscalerotatedellipse","name":"a from scale-rotated-ellipse","output":"(if (<= y-scale -2.4298888467191855e+22) (* 0.25 (* y-scale (* b 4.0))) (if (<= y-scale 2.7595985866446953e-97) (* 0.25 (* (* x-scale (sqrt 8.0)) (sqrt (* 2.0 (+ (pow (* b (sin (* 0.005555555555555556 (* angle PI)))) 2.0) (pow (* a (cos (* 0.005555555555555556 (* angle PI)))) 2.0)))))) (if (<= y-scale 1.1e+84) (* 0.25 (* y-scale (* b 4.0))) (* 0.25 (* (* y-scale (sqrt 8.0)) (sqrt (* 2.0 (+ (pow (* (cos (* 0.005555555555555556 (* angle PI))) b) 2.0) (pow (* a (sin (* 0.005555555555555556 (* angle PI)))) 2.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (+ (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","start":63.50988330440551,"start-est":62.59270227741885,"status":"imp-start","target":false,"target-prog":"#f","time":24992.538818359375,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01075) (6784 0.00525) ())","end":0.00525,"end-est":0,"identifier":"#f","input":"(- (* x.re y.re) (* x.im y.im))","link":"55-_multiplyComplexrealpart","name":"_multiplyComplex, real part","output":"(fma x.im (- y.im) (* x.re y.re))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x.re y.re) (* x.im y.im))","start":0.01075,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":947.869873046875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01264624062518029) (6720 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(+ (* x.re y.im) (* x.im y.re))","link":"56-_multiplyCompleximaginarypart","name":"_multiplyComplex, imaginary part","output":"(fma x.re y.im (* x.im y.re))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x.re y.im) (* x.im y.re))","start":0.01264624062518029,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":741.92578125,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.316150161480284) (14032 13.464789869402251) ())","end":13.464789869402251,"end-est":10.041740501654273,"identifier":"#f","input":"(/ (+ (* x.re y.re) (* x.im y.im)) (+ (* y.re y.re) (* y.im y.im)))","link":"57-_divideComplexrealpart","name":"_divideComplex, real part","output":"(if (<= y.re -3.545257717590779e+128) (+ (/ x.re y.re) (/ (/ (* y.im x.im) y.re) y.re)) (if (<= y.re -2.4694316967363955e-75) (/ (fma x.re y.re (* x.im y.im)) (fma y.re y.re (* y.im y.im))) (if (<= y.re 8.638100142156033e-101) (+ (/ (/ (* x.re y.re) y.im) y.im) (/ x.im y.im)) (if (<= y.re 1.4995493709397212e+98) (/ (fma x.re y.re (* x.im y.im)) (fma y.re y.re (* y.im y.im))) (/ x.re y.re)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* x.re y.re) (* x.im y.im)) (+ (* y.re y.re) (* y.im y.im)))","start":26.316150161480284,"start-est":25.700878010057604,"status":"imp-start","target":false,"target-prog":"#f","time":3218.093017578125,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.2216266805803) (20880 12.475124586860462) ())","end":12.475124586860462,"end-est":7.876500012333013,"identifier":"#f","input":"(/ (- (* x.im y.re) (* x.re y.im)) (+ (* y.re y.re) (* y.im y.im)))","link":"58-_divideCompleximaginarypart","name":"_divideComplex, imaginary part","output":"(if (<= y.im -3.435710736515236e+157) (- (/ (/ (* y.re x.im) y.im) y.im) (/ x.re y.im)) (if (<= y.im -1.1067770179738948e-82) (fma x.re (/ (- y.im) (fma y.re y.re (* y.im y.im))) (/ (* x.im y.re) (fma y.re y.re (* y.im y.im)))) (if (<= y.im 2.3212537516074044e-97) (- (/ x.im y.re) (/ (/ (* x.re y.im) y.re) y.re)) (if (<= y.im 3.1198454695800192e+128) (fma x.re (/ (- y.im) (fma y.re y.re (* y.im y.im))) (/ (* x.im y.re) (fma y.re y.re (* y.im y.im)))) (- (/ (/ (* y.re x.im) y.im) y.im) (/ x.re y.im))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x.im y.re) (* x.re y.im)) (+ (* y.re y.re) (* y.im y.im)))","start":26.2216266805803,"start-est":28.5832726450607,"status":"imp-start","target":false,"target-prog":"#f","time":3123.469970703125,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19904 17.1434419026188) (111040 1.6736410703020852) ())","end":1.6736410703020852,"end-est":1.0075472957012093,"identifier":"#f","input":"(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))","link":"59-VandenBroeckandKellerEquation6","name":"VandenBroeck and Keller, Equation (6)","output":"(- (* PI l) (/ (/ (sin (* PI l)) F) (* (* (cbrt (pow (fma -0.5 (pow (* l PI) 2.0) 1.0) 2.0)) F) (+ (fma (* -0.3333333333333333 (pow l 6.0)) (* (pow PI 6.0) 0.023148148148148147) 1.0) (fma -0.16666666666666666 (pow (* l PI) 2.0) (* -0.027777777777777776 (pow (* l PI) 4.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))","start":17.1434419026188,"start-est":14.971856246640142,"status":"imp-start","target":false,"target-prog":"#f","time":4205.029052734375,"vars":["F","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((13440 0.26088191530356086) (13312 0.18513142192027046) ())","end":0.18513142192027046,"end-est":0.18359375,"identifier":"#f","input":"(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))","link":"60-VandenBroeckandKellerEquation24","name":"VandenBroeck and Keller, Equation (24)","output":"(/ (+ (* (- x) (cos B)) 1.0) (sin B))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))","start":0.26088191530356086,"start-est":0.24285126953688405,"status":"ex-start","target":false,"target-prog":"#f","time":2716.927978515625,"vars":["B","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((20736 13.648049769827308) (39496 0.28315826663469) ())","end":0.28315826663469,"end-est":0.162441259768442,"identifier":"#f","input":"(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))","link":"61-VandenBroeckandKellerEquation23","name":"VandenBroeck and Keller, Equation (23)","output":"(if (<= F -2.05e+18) (+ (- (/ (* (cos B) x) (sin B))) (/ -1.0 (sin B))) (if (<= F 4100000000000.0) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ (- x) (tan B))) (/ (+ 1.0 (* (- x) (cos B))) (sin B))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))","start":13.648049769827308,"start-est":14.553872698456248,"status":"imp-start","target":false,"target-prog":"#f","time":5961.18896484375,"vars":["F","B","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((65728 61.52801343501069) (124480 2.148005666835326) ())","end":2.148005666835326,"end-est":1.8963810228684679,"identifier":"#f","input":"(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))","link":"62-VandenBroeckandKellerEquation20","name":"VandenBroeck and Keller, Equation (20)","output":"(fma -2.0 (/ (+ (* (fma (* PI 0.5) (fma 0.0625 (/ (* PI PI) (* PI 0.5)) (* -2.0 (* (* (pow PI 3.0) 0.005208333333333333) (pow (* PI 0.5) -2.0)))) (* -0.25 (pow (* (* PI 0.5) 0.0) 2.0))) (* f f)) (* (* (* PI 0.5) f) 0.0)) PI) (/ (* -4.0 (- (log (/ 2.0 (* PI 0.5))) (log f))) PI))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))","start":61.52801343501069,"start-est":61.875885114912336,"status":"imp-start","target":false,"target-prog":"#f","time":6240.5400390625,"vars":["f"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.024125) (6720 0.016049039677847345) ())","end":0.016049039677847345,"end-est":0.015625,"identifier":"#f","input":"(+ (- 1.0 ux) (* ux maxCos))","link":"63-UniformSampleConez","name":"UniformSampleCone, z","output":"(fma ux (+ maxCos -1.0) 1.0)","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- 1.0 ux) (* ux maxCos))","start":0.024125,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":1586.218017578125,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((20608 12.488624311952575) (189376 0.5521159578586707) ())","end":0.5521159578586707,"end-est":0.5116363594693615,"identifier":"#f","input":"(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","link":"64-UniformSampleConey","name":"UniformSampleCone, y","output":"(* (cbrt (+ (* (* (sin (* uy PI)) (cos (* uy PI))) (* (fma (fma -2.0 maxCos 2.0) ux (- (pow (* ux (- 1.0 maxCos)) 2.0))) (sin (* uy (+ PI PI))))) (* (* (cos (* uy PI)) (sin (* uy PI))) (* (fma (fma -2.0 maxCos 2.0) ux (- (pow (* ux (- 1.0 maxCos)) 2.0))) (sin (* uy (+ PI PI))))))) (cbrt (* (sin (* uy (+ PI PI))) (sqrt (fma (fma -2.0 maxCos 2.0) ux (- (pow (* ux (- 1.0 maxCos)) 2.0)))))))","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","start":12.488624311952575,"start-est":12.152283556089811,"status":"imp-start","target":false,"target-prog":"#f","time":2939.85107421875,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((20608 12.501123526935936) (39744 0.4047371146604352) ())","end":0.4047371146604352,"end-est":0.34264599860737494,"identifier":"#f","input":"(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","link":"65-UniformSampleConex","name":"UniformSampleCone, x","output":"(* (cos (* uy (+ PI PI))) (sqrt (+ (* (- 2.0 (* 2.0 maxCos)) ux) (* -1.0 (* (pow (- maxCos 1.0) 2.0) (pow ux 2.0))))))","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","start":12.501123526935936,"start-est":12.132140884313674,"status":"imp-start","target":false,"target-prog":"#f","time":2763.662841796875,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((42176 0.3598385167928085) (67904 0.36309188714067314) ())","end":0.36309188714067314,"end-est":0.3239250488422101,"identifier":"#f","input":"(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))","link":"66-UniformSampleCone2","name":"UniformSampleCone 2","output":"(+ (+ (* (* (cos (* (* (+ uy uy) (cbrt PI)) (cbrt (* PI PI)))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))","pre":"(and (and (and (and (and (and (<= -10000.0 xi) (<= xi 10000.0)) (and (<= -10000.0 yi) (<= yi 10000.0))) (and (<= -10000.0 zi) (<= zi 10000.0))) (and (<= 2.328306437e-10 ux) (<= ux 1.0))) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))","start":0.3598385167928085,"start-est":0.3317375488422101,"status":"ex-start","target":false,"target-prog":"#f","time":4452.513916015625,"vars":["xi","yi","zi","ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((138688 0.5157453897675705) (91904 0.1307893913289421) ())","end":0.1307893913289421,"end-est":0.10384750976844201,"identifier":"#f","input":"(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))","link":"67-TrowbridgeReitzSamplesamplesurfacenormalcosTheta","name":"Trowbridge-Reitz Sample, sample surface normal, cosTheta","output":"(pow (pow (+ 1.0 (/ (/ u0 (- 1.0 u0)) (+ (pow (/ (cos (atan (* (/ alphay alphax) (/ -1.0 (tan (* (+ PI PI) u1)))))) alphax) 2.0) (pow (/ (sin (atan (* (/ alphay alphax) (/ -1.0 (tan (* (+ PI PI) u1)))))) alphay) 2.0)))) 1.5) (- 0.3333333333333333))","pre":"(and (and (and (and (<= 2.328306437e-10 u0) (<= u0 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 0.5))) (and (<= 0.0001 alphax) (<= alphax 1.0))) (and (<= 0.0001 alphay) (<= alphay 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))","start":0.5157453897675705,"start-est":0.5045700195368841,"status":"ex-start","target":false,"target-prog":"#f","time":7580.629150390625,"vars":["u0","u1","alphax","alphay"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.49288640034045605) (39360 0.5246682849216399) ())","end":0.5246682849216399,"end-est":0.5056038574528623,"identifier":"#f","input":"(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))","link":"68-TrowbridgeReitzSamplenearnormalslope_y","name":"Trowbridge-Reitz Sample, near normal, slope_y","output":"(* (sqrt (/ (cbrt (/ (pow u1 3.0) (- 1.0 u1))) (cbrt (pow (- 1.0 u1) 2.0)))) (sin (* 6.28318530718 u2)))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))","start":0.49288640034045605,"start-est":0.5196076172213042,"status":"ex-start","target":false,"target-prog":"#f","time":3229.953857421875,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.3977620432136168) (72640 0.48229014323543556) ())","end":0.48229014323543556,"end-est":0.3855709852231658,"identifier":"#f","input":"(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))","link":"69-TrowbridgeReitzSamplenearnormalslope_x","name":"Trowbridge-Reitz Sample, near normal, slope_x","output":"(* (sqrt (/ (* (cbrt (/ u1 (- 1.0 u1))) (cbrt (* u1 u1))) (cbrt (/ (/ (* (- 1.0 u1) (- 1.0 (pow u1 3.0))) (cbrt (fma (+ 1.0 u1) u1 1.0))) (cbrt (pow (fma (+ 1.0 u1) u1 1.0) 2.0)))))) (cos (* 6.28318530718 u2)))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))","start":0.3977620432136168,"start-est":0.4028172254547238,"status":"ex-start","target":false,"target-prog":"#f","time":2696.5908203125,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((26304 0.43906299181442754) (6592 0.07825) ())","end":0.07825,"end-est":0.01953125,"identifier":"#f","input":"(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))","link":"70-TrigonometryB","name":"Trigonometry B","output":"(cos (* 2.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))","start":0.43906299181442754,"start-est":0.43852136707707645,"status":"ex-start","target":false,"target-prog":"#f","time":2869.575927734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.1381462406251803) (77952 0.15476917344137622) ())","end":0.15476917344137622,"end-est":0.13671875,"identifier":"#f","input":"(/ (* e (sin v)) (+ 1.0 (* e (cos v))))","link":"71-TrigonometryA","name":"Trigonometry A","output":"(* (pow (pow (fma e (cos v) 1.0) -0.6666666666666666) 0.6666666666666666) (/ (* (* (sin v) e) (cbrt (pow (fma e (cos v) 1.0) -0.6666666666666666))) (cbrt (fma e (cos v) 1.0))))","pre":"(and (<= 0.0 e) (<= e 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* e (sin v)) (+ 1.0 (* e (cos v))))","start":0.1381462406251803,"start-est":0.15234375,"status":"ex-start","target":false,"target-prog":"#f","time":2985.592041015625,"vars":["e","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14400 42.930012680015146) (34000 11.660698637011443) ())","end":11.660698637011443,"end-est":7.5402289188956795,"identifier":"#f","input":"(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))","link":"72-TonioloandLinderEquation7","name":"Toniolo and Linder, Equation (7)","output":"(if (<= t -1.723423578103978e+41) (/ (* (sqrt 2.0) t) (* (- (* (sqrt 2.0) t)) (sqrt (+ 1.0 (/ 2.0 x))))) (if (<= t -7.2e-163) (/ (* (sqrt 2.0) t) (sqrt (* 2.0 (+ (/ (+ (* l l) (* 2.0 (* t t))) x) (* t t))))) (if (<= t -8e-213) (/ (* (sqrt 2.0) t) (* (- (* (sqrt 2.0) t)) (sqrt (+ 1.0 (/ 2.0 x))))) (if (<= t 2.868285057570977e-36) (/ (* (* t (sqrt (sqrt 2.0))) (sqrt (sqrt 2.0))) (sqrt (* 2.0 (+ (/ (+ (* l l) (* 2.0 (* t t))) x) (* t t))))) (/ (* (sqrt 2.0) t) (* (* (sqrt 2.0) t) (sqrt (+ 1.0 (/ 2.0 x)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))","start":42.930012680015146,"start-est":41.15653935243795,"status":"imp-start","target":false,"target-prog":"#f","time":3886.302978515625,"vars":["x","l","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((45376 4.026825900358688) (32384 0.23063721875540852) ())","end":0.23063721875540852,"end-est":0.244472509768442,"identifier":"#f","input":"(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))","link":"73-TonioloandLinderEquation3breal","name":"Toniolo and Linder, Equation (3b), real","output":"(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))","start":4.026825900358688,"start-est":4.1293534268313925,"status":"imp-start","target":false,"target-prog":"#f","time":5623.462158203125,"vars":["kx","ky","th"]},{"bits":128,"conversions":[],"cost-accuracy":"((46208 1.006) (58560 1.006) ())","end":1.006,"end-est":0.5078125,"identifier":"#f","input":"(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))","link":"74-TonioloandLinderEquation3a","name":"Toniolo and Linder, Equation (3a)","output":"(sqrt (+ 0.5 (/ 0.5 (sqrt (fma (fma (sin ky) (sin ky) (pow (sin kx) 2.0)) (pow (/ l (* Om 0.5)) 2.0) 1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))","start":1.006,"start-est":0.5078125,"status":"apx-start","target":false,"target-prog":"#f","time":4135.618896484375,"vars":["l","Om","kx","ky"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 10.043337827580215) (40260 2.834654321545995) ())","end":2.834654321545995,"end-est":2.8925013104564306,"identifier":"#f","input":"(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))","link":"75-TonioloandLinderEquation2","name":"Toniolo and Linder, Equation (2)","output":"(if (<= (/ t l) -2e+145) (asin (* (sqrt (- 1.0 (/ (* Om Om) (* Omc Omc)))) (+ (/ (* (- l) (sqrt 0.5)) t) (* 0.125 (pow (/ (/ l (cbrt (sqrt 0.5))) t) 3.0))))) (if (<= (/ t l) 2e+128) (asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))) (asin (* (/ (* (sqrt 0.5) l) t) (sqrt (- 1.0 (/ (pow Om 2.0) (pow Omc 2.0))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))","start":10.043337827580215,"start-est":9.668981787408526,"status":"imp-start","target":false,"target-prog":"#f","time":4539.39990234375,"vars":["t","l","Om","Omc"]},{"bits":128,"conversions":[],"cost-accuracy":"((14464 33.885554262847215) (27412 28.01335941908952) ())","end":28.01335941908952,"end-est":22.60231962992187,"identifier":"#f","input":"(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))","link":"76-TonioloandLinderEquation13","name":"Toniolo and Linder, Equation (13)","output":"(if (<= l -2.6e+102) (- (* (* (sqrt 2.0) l) (sqrt (* n (* U (- (/ (* n (- U* U)) (* Om Om)) (/ 2.0 Om))))))) (if (<= l -2.05e-85) (sqrt (* 2.0 (+ (- (/ (* (* n (* l l)) (* (+ 2.0 (- (/ (* n (- U* U)) Om))) U)) Om)) (* n (* t U))))) (if (<= l 2.3e-167) (sqrt (* (* (+ U U) n) (+ t (fma -2.0 (* l (/ l Om)) (* (- U* U) (* n (pow (/ l Om) 2.0))))))) (if (<= l 1e+75) (sqrt (* 2.0 (* U (* n (+ t (* (/ l Om) (+ (* -2.0 l) (/ (* (* (- U* U) n) l) Om)))))))) (if (<= l 1.3e+150) (sqrt (* (* (+ U U) n) (+ t (fma -2.0 (* l (/ l Om)) (* (- U* U) (* n (pow (/ l Om) 2.0))))))) (* (* (sqrt 2.0) l) (sqrt (* n (* U (fma (* n (- U* U)) (pow Om -2.0) (/ -2.0 Om)))))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))","start":33.885554262847215,"start-est":31.20662440390003,"status":"imp-start","target":false,"target-prog":"#f","time":6905.219970703125,"vars":["n","U","t","l","Om","U*"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 48.2964571894633) (20616 3.7884750083267615) ())","end":3.7884750083267615,"end-est":3.4782695577644116,"identifier":"#f","input":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","link":"77-TonioloandLinderEquation10","name":"Toniolo and Linder, Equation (10-)","output":"(if (<= l -3.9387580694777374e-193) (/ 2.0 (* (* (* (- t) (pow (sin k) 2.0)) (/ k l)) (/ (- k) (* l (cos k))))) (if (<= l 1.0330464929796363e-219) (/ 2.0 (* (/ (* (pow (sin k) 2.0) (/ t l)) (cos k)) (/ (* k k) l))) (/ 2.0 (* (- (/ k l)) (/ (* (* (- t) (pow (sin k) 2.0)) (/ k l)) (cos k))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","start":48.2964571894633,"start-est":51.26727956166699,"status":"imp-start","target":false,"target-prog":"#f","time":11097.927001953125,"vars":["t","l","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 32.07610228822193) (98572 19.627603132550217) ())","end":19.627603132550217,"end-est":17.364270521068345,"identifier":"#f","input":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","link":"78-TonioloandLinderEquation10","name":"Toniolo and Linder, Equation (10+)","output":"(if (<= k -8000000000.0) (/ 2.0 (/ (* (pow k 2.0) (* (pow (sin k) 2.0) t)) (* (cos k) (pow l 2.0)))) (if (<= k -2.4e-160) (/ 2.0 (* (* (* (* (/ (* t t) l) (/ t l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) (if (<= k 2.4e-57) (/ 2.0 (* (pow (* (cbrt (pow l -2.0)) (* (* (cbrt (sin k)) t) (cbrt (* (tan k) (+ 2.0 (pow (/ k t) 2.0)))))) 2.0) (* (* (* t (cbrt (pow l -2.0))) (cbrt (sin k))) (cbrt (* (tan k) (+ 2.0 (pow (/ k t) 2.0))))))) (/ 2.0 (/ (+ (* (pow (* k (sin k)) 2.0) t) (* 2.0 (* (pow (sin k) 2.0) (pow t 3.0)))) (* (cos k) (* l l)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","start":32.07610228822193,"start-est":36.40860211637047,"status":"imp-start","target":false,"target-prog":"#f","time":5146.884033203125,"vars":["t","l","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01175) (6720 0.007198120312590144) ())","end":0.007198120312590144,"end-est":0.01171875,"identifier":"#f","input":"(* (+ x y) z)","link":"79-TextParsecTokenmakeTokenParserfromparsec319B","name":"Text.Parsec.Token:makeTokenParser from parsec-3.1.9, B","output":"(fma y z (* z x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) z)","start":0.01175,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":883.47607421875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01425) (320 0.01425) ())","end":0.01425,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x y) 10.0)","link":"80-TextParsecTokenmakeTokenParserfromparsec319A","name":"Text.Parsec.Token:makeTokenParser from parsec-3.1.9, A","output":"(/ (+ x y) 10.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 10.0)","start":0.01425,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":1338.072021484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.035875) (448 0.035875) ())","end":0.035875,"end-est":0,"identifier":"#f","input":"(* 0.5 (- (* x x) y))","link":"81-SystemRandomMWCDistributionsstandardfrommwcrandom0","name":"System.Random.MWC.Distributions:standard from mwc-random-0.13.3.2","output":"(* -0.5 (- y (* x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.5 (- (* x x) y))","start":0.035875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":469.675048828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 0.5) x)","link":"82-SystemRandomMWCDistributionsblocksfrommwcrandom013","name":"System.Random.MWC.Distributions:blocks from mwc-random-0.13.3.2","output":"(* (* x 0.5) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 0.5) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":369.70703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01425) (6720 0.006375) ())","end":0.006375,"end-est":0,"identifier":"#f","input":"(+ x (* y (- z x)))","link":"83-SynthBasicsoscSampleBasedAuxfromYampaSynth02","name":"SynthBasics:oscSampleBasedAux from YampaSynth-0.2","output":"(fma y (- z x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (- z x)))","start":0.01425,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":590.22119140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0860212406251803) (448 0.0860212406251803) ())","end":0.0860212406251803,"end-est":0.08203125,"identifier":"#f","input":"(+ x (* (* y z) z))","link":"84-StatisticsSamplerobustSumVarWeightedfrommathfuncti","name":"Statistics.Sample:robustSumVarWeighted from math-functions-0.1.5.2","output":"(+ x (* (* y z) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* y z) z))","start":0.0860212406251803,"start-est":0.08203125,"status":"ex-start","target":false,"target-prog":"#f","time":1667.912841796875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.018536540204100255) (448 0.018536540204100255) ())","end":0.018536540204100255,"end-est":0.0234375,"identifier":"#f","input":"(+ x (/ (- y x) z))","link":"85-StatisticsSampleswelfordMeanfrommathfunctions0152","name":"Statistics.Sample:$swelfordMean from math-functions-0.1.5.2","output":"(+ x (/ (- y x) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- y x) z))","start":0.018536540204100255,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":1779.8271484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.08982312031259014) (6848 0.08982312031259014) ())","end":0.08982312031259014,"end-est":0.0859375,"identifier":"#f","input":"(- (- (* x (log y)) z) y)","link":"86-StatisticsDistributionPoissonclogProbabilityfromma","name":"Statistics.Distribution.Poisson:$clogProbability from math-functions-0.1.5.2","output":"(- (- (* x (log y)) z) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (* x (log y)) z) y)","start":0.08982312031259014,"start-est":0.0859375,"status":"ex-start","target":false,"target-prog":"#f","time":1909.10009765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.26425) (6848 0.27332312031259015) ())","end":0.27332312031259015,"end-est":0.27734375,"identifier":"#f","input":"(* x (log x))","link":"87-StatisticsDistributionBinomialdirectEntropyfrommat","name":"Statistics.Distribution.Binomial:directEntropy from math-functions-0.1.5.2","output":"(* -1.0 (* (log (/ 1.0 x)) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (log x))","start":0.26425,"start-est":0.28125,"status":"ex-start","target":false,"target-prog":"#f","time":1240.39306640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.09689624062518029) (448 0.09507312031259015) ())","end":0.09507312031259015,"end-est":0.12890625,"identifier":"#f","input":"(* (* x y) (- 1.0 y))","link":"88-StatisticsDistributionBinomialcvariancefrommathfun","name":"Statistics.Distribution.Binomial:$cvariance from math-functions-0.1.5.2","output":"(* (* (- 1.0 y) x) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x y) (- 1.0 y))","start":0.09689624062518029,"start-est":0.13671875,"status":"ex-start","target":false,"target-prog":"#f","time":1343.260009765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 0.02275) (13888 0.017122159990437487) ())","end":0.017122159990437487,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (- x (* (- y 1.0) z)) (* (- t 1.0) a)) (* (- (+ y t) 2.0) b))","link":"89-StatisticsDistributionBetacentropyfrommathfunction","name":"Statistics.Distribution.Beta:$centropy from math-functions-0.1.5.2","output":"(+ (+ (fma (- b z) y (fma b (+ t -2.0) x)) z) (* (- 1.0 t) a))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- x (* (- y 1.0) z)) (* (- t 1.0) a)) (* (- (+ y t) 2.0) b))","start":0.02275,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":3158.640869140625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 7.479345844923594) (19968 0.106125) ())","end":0.106125,"end-est":0.12890625,"identifier":"#f","input":"(- (+ (* (- x 1.0) (log y)) (* (- z 1.0) (log (- 1.0 y)))) t)","link":"90-StatisticsDistributionBetacdensityfrommathfunction","name":"Statistics.Distribution.Beta:$cdensity from math-functions-0.1.5.2","output":"(- (fma (log1p (- y)) (+ z -1.0) (* (+ x -1.0) (log y))) t)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (* (- x 1.0) (log y)) (* (- z 1.0) (log (- 1.0 y)))) t)","start":7.479345844923594,"start-est":7.692460263978648,"status":"imp-start","target":false,"target-prog":"#f","time":3157.19091796875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((39232 16.784043658252138) (64960 4.018392532711943) ())","end":4.018392532711943,"end-est":3.108087380878147,"identifier":"#f","input":"(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)","link":"91-Sphericallawofcosines","name":"Spherical law of cosines","output":"(* (acos (+ (* (cos phi2) (* (fma (sin lambda2) (sin lambda1) (* (cos lambda2) (cos lambda1))) (cos phi1))) (* (sin phi1) (sin phi2)))) R)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)","start":16.784043658252138,"start-est":17.073821475543955,"status":"imp-start","target":false,"target-prog":"#f","time":7773.762939453125,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((159040 41.1862861392996) (1088 10.64229021034542) ())","end":10.64229021034542,"end-est":9.737476967381207,"identifier":"#f","input":"(- (* (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale)) (* (* 4.0 (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)))","link":"92-Simplificationofdiscriminantfromscalerotatedellips","name":"Simplification of discriminant from scale-rotated-ellipse","output":"(/ (* (/ (* a (* b -4.0)) x-scale) (/ (* a b) y-scale)) (* x-scale y-scale))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale)) (* (* 4.0 (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)))","start":41.1862861392996,"start-est":40.66446381520047,"status":"imp-start","target":false,"target-prog":"#f","time":31578.27197265625,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((46720 0.3379648064851102) (152448 0.3559983689634137) ())","end":0.3559983689634137,"end-est":0.31737008046286386,"identifier":"#f","input":"(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))","link":"93-Sampletrimmedlogisticonpipi","name":"Sample trimmed logistic on [-pi, pi]","output":"(* (- s) (log (* (cbrt (+ (pow (+ (/ u (+ 1.0 (exp (- (/ PI s))))) (/ (- 1.0 u) (+ 1.0 (exp (/ PI s))))) -3.0) -1.0)) (/ (cbrt (pow (+ (pow (+ (/ u (+ 1.0 (exp (- (/ PI s))))) (/ (- 1.0 u) (+ 1.0 (exp (/ PI s))))) -3.0) -1.0) 2.0)) (+ (pow (+ (/ (+ u -1.0) (+ 1.0 (exp (/ PI s)))) (/ u (- -1.0 (exp (- (/ PI s)))))) -2.0) (+ 1.0 (/ -1.0 (+ (/ (+ u -1.0) (+ 1.0 (exp (/ PI s)))) (/ u (- -1.0 (exp (- (/ PI s)))))))))))))","pre":"(and (and (<= 2.328306437e-10 u) (<= u 1.0)) (and (<= 0.0 s) (<= s 1.0651631)))","prec":"binary64","preprocess":"()","spec":"(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))","start":0.3379648064851102,"start-est":0.3245888183790942,"status":"ex-start","target":false,"target-prog":"#f","time":11748.739013671875,"vars":["u","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((28096 58.136380241123696) (6976 57.07672465115294) ())","end":57.07672465115294,"end-est":57.07672465114967,"identifier":"#f","input":"(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))","link":"94-RumpsexpressionfromStadtherrsawardspeech","name":"Rump's expression from Stadtherr's award speech","output":"(fma -2.0 (* x x) (/ (* 0.5 x) y))","pre":"(and (== x 77617.0) (== y 33096.0))","prec":"binary64","preprocess":"()","spec":"-0.8273960599468214","start":58.136380241123696,"start-est":58.1363802411197,"status":"imp-start","target":false,"target-prog":"#f","time":744.757080078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.932196568877607) (20672 0.19580993938488336) ())","end":0.19580993938488336,"end-est":0.1442375488422101,"identifier":"#f","input":"(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)","link":"95-RosasTurbineBenchmark","name":"Rosa's TurbineBenchmark","output":"(- (- 1.5 (fma 2.0 (pow r -2.0) (* (* (* -0.125 r) w) (* (* w r) (/ (fma 2.0 v -3.0) (+ -1.0 v)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)","start":12.932196568877607,"start-est":12.416978021883866,"status":"imp-start","target":false,"target-prog":"#f","time":4531.81103515625,"vars":["v","w","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((8128 0.5114115556102915) (108672 0.279628623973914) ())","end":0.279628623973914,"end-est":0.28347136208351764,"identifier":"#f","input":"(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))","link":"96-RosasFloatVsDoubleBenchmark","name":"Rosa's FloatVsDoubleBenchmark","output":"(+ x1 (fma (/ (- (fma (* 3.0 x1) x1 (* -2.0 x2)) x1) (fma x1 x1 1.0)) 3.0 (+ (fma (fma (/ (* (* 2.0 x1) (- (fma (* 3.0 x1) x1 (* 2.0 x2)) x1)) (fma x1 x1 1.0)) (+ (/ (- (fma (* 3.0 x1) x1 (* 2.0 x2)) x1) (fma x1 x1 1.0)) -3.0) (+ (* (* (/ (* 4.0 (fma x1 (* 3.0 x1) (- (+ x2 x2) x1))) (fma x1 x1 1.0)) x1) x1) (* (* -6.0 x1) x1))) (fma x1 x1 1.0) (fma (* 3.0 x1) (/ (* x1 (- (fma (* 3.0 x1) x1 (* 2.0 x2)) x1)) (fma x1 x1 1.0)) (pow x1 3.0))) x1)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))","start":0.5114115556102915,"start-est":0.46765156259014473,"status":"ex-start","target":false,"target-prog":"#f","time":7336.794921875,"vars":["x1","x2"]},{"bits":128,"conversions":[],"cost-accuracy":"((768 18.31632523089784) (7504 8.052756824833978) ())","end":8.052756824833978,"end-est":5.330182959107707,"identifier":"#f","input":"(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))","link":"97-RosasDopplerBench","name":"Rosa's DopplerBench","output":"(if (<= t1 -2.9893943816363404e+181) (- (/ v t1)) (if (<= t1 -1e-195) (* (- v) (* t1 (pow (+ t1 u) -2.0))) (if (<= t1 1e-224) (- (/ (/ (* t1 v) u) u)) (if (<= t1 4.35003362469482e+146) (* (- v) (* t1 (pow (+ t1 u) -2.0))) (- (/ v t1))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))","start":18.31632523089784,"start-est":18.257004625019658,"status":"imp-start","target":false,"target-prog":"#f","time":2344.376953125,"vars":["u","v","t1"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.264636842188131) (19840 0.2563962406251803) ())","end":0.2563962406251803,"end-est":0.1640625,"identifier":"#f","input":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","link":"98-RosasBenchmark","name":"Rosa's Benchmark","output":"(+ (* (cbrt -0.12900613773279798) (* (cbrt 0.016642583572733644) (pow x 3.0))) (* 0.954929658551372 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","start":0.264636842188131,"start-est":0.21484375,"status":"ex-start","target":false,"target-prog":"#f","time":1283.623046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.004375) (13120 0.004375) ())","end":0.004375,"end-est":0,"identifier":"#f","input":"(- (pow x 4.0) (pow y 4.0))","link":"99-Radioactiveexchangebetweentwosurfaces","name":"Radioactive exchange between two surfaces","output":"(- (pow x 4.0) (pow y 4.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (pow x 4.0) (pow y 4.0))","start":0.004375,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":608.905029296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 52.3953059013445) (60288 1.5526315493755907) ())","end":1.5526315493755907,"end-est":1.7232786130491413,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"100-Quadraticrootswiderange","name":"Quadratic roots, wide range","output":"(- (fma -0.25 (/ (fma 16.0 (pow (* c a) 4.0) (* (* -2.0 -2.0) (pow (* c a) 4.0))) (* a (pow b 7.0))) (fma (/ (* (pow c 3.0) (* a a)) (pow b 5.0)) -2.0 (- (/ c b)))) (* (/ a b) (pow (/ c b) 2.0)))","pre":"(and (and (and (< 4.930380657631324e-32 a) (< a 2.028240960365167e+31)) (and (< 4.930380657631324e-32 b) (< b 2.028240960365167e+31))) (and (< 4.930380657631324e-32 c) (< c 2.028240960365167e+31)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":52.3953059013445,"start-est":51.587776776545184,"status":"imp-start","target":false,"target-prog":"#f","time":3023.89501953125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 28.222799155908085) (67780 5.307282283692126) ())","end":5.307282283692126,"end-est":4.510158492933571,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"101-Quadraticrootsnarrowrange","name":"Quadratic roots, narrow range","output":"(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -160.0) (* (pow (cbrt (- b (sqrt (fma b b (* (* -4.0 c) a))))) 3.0) (/ -0.5 a)) (- (fma -0.25 (/ (fma 16.0 (pow (* c a) 4.0) (* (* -2.0 -2.0) (pow (* c a) 4.0))) (* a (pow b 7.0))) (fma (/ (* (pow c 3.0) (* a a)) (pow b 5.0)) -2.0 (- (/ c b)))) (* (/ a b) (pow (/ c b) 2.0))))","pre":"(and (and (and (< 1.0536712127723509e-8 a) (< a 94906265.62425156)) (and (< 1.0536712127723509e-8 b) (< b 94906265.62425156))) (and (< 1.0536712127723509e-8 c) (< c 94906265.62425156)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":28.222799155908085,"start-est":29.935455856740628,"status":"imp-start","target":false,"target-prog":"#f","time":3532.702880859375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 43.89522514236943) (73600 3.0558331598768227) ())","end":3.0558331598768227,"end-est":2.9464197424173046,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"102-Quadraticrootsmediumrange","name":"Quadratic roots, medium range","output":"(+ (* -1.0 (/ (* (pow c 2.0) a) (pow b 3.0))) (+ (* -1.0 (/ c b)) (+ (* -0.25 (/ (* (+ (pow (* -2.0 (/ (pow c 2.0) (pow b 3.0))) 2.0) (* 16.0 (/ (pow c 4.0) (pow b 6.0)))) (pow a 3.0)) b)) (* -2.0 (/ (* (pow c 3.0) (pow a 2.0)) (pow b 5.0))))))","pre":"(and (and (and (< 1.1102230246251565e-16 a) (< a 9007199254740992.0)) (and (< 1.1102230246251565e-16 b) (< b 9007199254740992.0))) (and (< 1.1102230246251565e-16 c) (< c 9007199254740992.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":43.89522514236943,"start-est":44.34121136442408,"status":"imp-start","target":false,"target-prog":"#f","time":3532.723876953125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35858459675237) (7688 11.153524866678929) ())","end":11.153524866678929,"end-est":8.107225346096225,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"103-Quadraticrootsfullrange","name":"Quadratic roots, full range","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (/ c b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.35858459675237,"start-est":36.50359847605632,"status":"imp-start","target":false,"target-prog":"#f","time":3021.357177734375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009948120312590146) (448 0.009948120312590146) ())","end":0.009948120312590146,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x 1.0) (- 1.0 x))","link":"104-Preludeatanhfromfaybase02001","name":"Prelude:atanh from fay-base-0.20.0.1","output":"(/ (- -1.0 x) (+ -1.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) (- 1.0 x))","start":0.009948120312590146,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":1389.282958984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00075) (320 0.00075) ())","end":0.00075,"end-est":0,"identifier":"#f","input":"(+ (+ x y) z)","link":"105-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, I","output":"(+ (+ x y) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x y) z)","start":0.00075,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":471.97998046875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.016625) (7040 0.014613361324451067) ())","end":0.014613361324451067,"end-est":0.00390625,"identifier":"#f","input":"(* (+ x y) (- 1.0 z))","link":"106-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, H","output":"(fma (- 1.0 z) y (+ x (- (* z x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) (- 1.0 z))","start":0.016625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1383.473876953125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.017625) (6976 0.015) ())","end":0.015,"end-est":0.0078125,"identifier":"#f","input":"(* (+ x y) (+ z 1.0))","link":"107-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, G","output":"(fma (+ z 1.0) y (* (+ z 1.0) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) (+ z 1.0))","start":0.017625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1127.84521484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.0065) (12992 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(sqrt (fabs (- x y)))","link":"108-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, C","output":"(sqrt (fabs (- y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (fabs (- x y)))","start":0.0065,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":435.390869140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.050902386813532846) (576 0.019875) ())","end":0.019875,"end-est":0.015625,"identifier":"#f","input":"(/ (- (+ x y) z) (* t 2.0))","link":"109-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, B","output":"(/ (* 0.5 (- y (- z x))) t)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ x y) z) (* t 2.0))","start":0.050902386813532846,"start-est":0.2535330431922998,"status":"ex-start","target":false,"target-prog":"#f","time":2169.27197265625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.007625) (6592 0.007625) ())","end":0.007625,"end-est":0,"identifier":"#f","input":"(sqrt (+ x y))","link":"110-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, A","output":"(sqrt (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ x y))","start":0.007625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":421.078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7616 0.13716177026409107) (33088 0.11777004057379657) ())","end":0.11777004057379657,"end-est":0.0859375,"identifier":"#f","input":"(* (- a (/ 1.0 3.0)) (+ 1.0 (* (/ 1.0 (sqrt (* 9.0 (- a (/ 1.0 3.0))))) rand)))","link":"111-Octave38oct_fill_randg","name":"Octave 3.8, oct_fill_randg","output":"(fma a (+ 1.0 (/ rand (sqrt (fma a 9.0 -3.0)))) (+ -0.3333333333333333 (/ (* -0.3333333333333333 rand) (sqrt (fma a 9.0 -3.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (- a (/ 1.0 3.0)) (+ 1.0 (* (/ 1.0 (sqrt (* 9.0 (- a (/ 1.0 3.0))))) rand)))","start":0.13716177026409107,"start-est":0.11556625976844201,"status":"ex-start","target":false,"target-prog":"#f","time":2141.81201171875,"vars":["a","rand"]},{"bits":128,"conversions":[],"cost-accuracy":"((1600 46.42157353910291) (13188 0.08059508177404524) ())","end":0.08059508177404524,"end-est":0.00390625,"identifier":"#f","input":"(/ (/ (* (* i i) (* i i)) (* (* 2.0 i) (* 2.0 i))) (- (* (* 2.0 i) (* 2.0 i)) 1.0))","link":"112-Octave38jcobi4ascalled","name":"Octave 3.8, jcobi/4, as called","output":"(if (<= i 14.773869287503453) (/ (* (* i i) 0.25) (fma (* i 4.0) i -1.0)) (fma 0.015625 (pow i -2.0) 0.0625))","pre":"(> i 0.0)","prec":"binary64","preprocess":"()","spec":"(/ (/ (* (* i i) (* i i)) (* (* 2.0 i) (* 2.0 i))) (- (* (* 2.0 i) (* 2.0 i)) 1.0))","start":46.42157353910291,"start-est":47.64517434819054,"status":"imp-start","target":false,"target-prog":"#f","time":983.526123046875,"vars":["i"]},{"bits":128,"conversions":[],"cost-accuracy":"((3392 54.179509012945275) (38340 10.021180847712621) ())","end":10.021180847712621,"end-est":11.230862746900128,"identifier":"#f","input":"(/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i)))) (- (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i))) 1.0))","link":"113-Octave38jcobi4","name":"Octave 3.8, jcobi/4","output":"(if (<= (/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i)))) (- (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i))) 1.0)) INFINITY) (/ (* (/ (* i (+ (+ alpha beta) i)) (fma 2.0 i (+ alpha beta))) (/ (/ (fma beta alpha (* i (+ (+ alpha beta) i))) (fma 2.0 i (+ alpha beta))) (+ alpha (+ beta (fma i 2.0 -1.0))))) (+ (fma 2.0 i (+ alpha beta)) 1.0)) (- (+ 0.0625 (* 0.0625 (/ (* 2.0 (+ beta alpha)) i))) (/ (* 0.125 (+ beta alpha)) i)))","pre":"(and (and (> alpha -1.0) (> beta -1.0)) (> i 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i)))) (- (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i))) 1.0))","start":54.179509012945275,"start-est":54.547538769536885,"status":"imp-start","target":false,"target-prog":"#f","time":3670.903076171875,"vars":["alpha","beta","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((2240 3.692413550395336) (1600 0.11617274531980178) ())","end":0.11617274531980178,"end-est":0.09441376953688403,"identifier":"#f","input":"(/ (/ (/ (+ (+ (+ alpha beta) (* beta alpha)) 1.0) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ (+ alpha beta) (* 2.0 1.0)) 1.0))","link":"114-Octave38jcobi3","name":"Octave 3.8, jcobi/3","output":"(/ (/ (* (/ (+ alpha 1.0) (+ (+ alpha beta) 3.0)) (- -1.0 beta)) (- -2.0 (+ alpha beta))) (+ (+ alpha beta) 2.0))","pre":"(and (> alpha -1.0) (> beta -1.0))","prec":"binary64","preprocess":"()","spec":"(/ (/ (/ (+ (+ (+ alpha beta) (* beta alpha)) 1.0) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ (+ alpha beta) (* 2.0 1.0)) 1.0))","start":3.692413550395336,"start-est":2.116230029305326,"status":"imp-start","target":false,"target-prog":"#f","time":3790.383056640625,"vars":["alpha","beta"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 24.013618228548797) (42756 1.1096745323875423) ())","end":1.1096745323875423,"end-est":1.03515625,"identifier":"#f","input":"(/ (+ (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) 1.0) 2.0)","link":"115-Octave38jcobi2","name":"Octave 3.8, jcobi/2","output":"(if (<= (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) -0.5) (/ (/ (+ 2.0 (fma (- 2.0 (/ (* 2.0 (- beta alpha)) (+ beta alpha))) i (* 2.0 beta))) (+ (fma 2.0 i (+ beta alpha)) 2.0)) 2.0) (/ (+ (/ (* (+ beta alpha) (fma (cbrt (/ beta (fma 2.0 i (+ beta alpha)))) (pow (cbrt (/ beta (fma 2.0 i (+ beta alpha)))) 2.0) (/ alpha (- (* -2.0 i) (+ beta alpha))))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) 1.0) 2.0))","pre":"(and (and (> alpha -1.0) (> beta -1.0)) (> i 0.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) 1.0) 2.0)","start":24.013618228548797,"start-est":25.247646648282803,"status":"imp-start","target":false,"target-prog":"#f","time":5408.429931640625,"vars":["alpha","beta","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 16.194358153300033) (7104 0.049875) ())","end":0.049875,"end-est":0.03125,"identifier":"#f","input":"(/ (+ (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 1.0) 2.0)","link":"116-Octave38jcobi1","name":"Octave 3.8, jcobi/1","output":"(/ (/ (fma 2.0 beta 2.0) (+ (+ alpha beta) 2.0)) 2.0)","pre":"(and (> alpha -1.0) (> beta -1.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 1.0) 2.0)","start":16.194358153300033,"start-est":15.652698386118857,"status":"imp-start","target":false,"target-prog":"#f","time":2234.22119140625,"vars":["alpha","beta"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0014240396778473449) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* (* x x) 2.0) 1.0)","link":"117-NumericSpecFunctionslogGammaCorrectionfrommathfunc","name":"Numeric.SpecFunctions:logGammaCorrection from math-functions-0.1.5.2","output":"(fma x (+ x x) -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* x x) 2.0) 1.0)","start":0.0014240396778473449,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":378.404052734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.009375) (6976 0.006) ())","end":0.006,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (* x (- y 1.0)) (* y 0.5)) 0.918938533204673)","link":"118-NumericSpecFunctionslogGammafrommathfunctions0152A","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, A","output":"(+ (fma x (+ y -1.0) (* -0.5 y)) 0.918938533204673)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- y 1.0)) (* y 0.5)) 0.918938533204673)","start":0.009375,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":784.51513671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((2112 29.063097435038472) (61828 11.679422424536257) ())","end":11.679422424536257,"end-est":9.798496270890405,"identifier":"#f","input":"(/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i))","link":"119-NumericSpecFunctionslogGammafrommathfunctions0152","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2","output":"(if (<= (/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i)) 1e+304) (/ (fma y (+ (pow (sqrt 230661.510616) 2.0) (+ (* y (pow (cbrt (* y (* y x))) 3.0)) (+ (* (pow y 2.0) z) (* 27464.7644705 y)))) t) (fma (fma y (fma (+ y a) y b) c) y i)) (- (+ (/ z y) x) (/ (* a x) y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i))","start":29.063097435038472,"start-est":28.264581953314092,"status":"imp-start","target":false,"target-prog":"#f","time":5645.880126953125,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((14016 0.11613667719554849) (32832 0.10067597485627774) ())","end":0.10067597485627774,"end-est":0.09375,"identifier":"#f","input":"(+ (+ (+ (+ (+ (* x (log y)) z) t) a) (* (- b 0.5) (log c))) (* y i))","link":"120-NumericSpecFunctionslogBetafrommathfunctions0152B","name":"Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, B","output":"(fma y i (fma (+ b -0.5) (log c) (+ (fma (log y) x (+ z t)) a)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ (+ (* x (log y)) z) t) a) (* (- b 0.5) (log c))) (* y i))","start":0.11613667719554849,"start-est":0.1015625,"status":"ex-start","target":false,"target-prog":"#f","time":4731.152099609375,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0105) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* x (- 1.0 (* x 0.5)))","link":"121-NumericSpecFunctionslog1pfrommathfunctions0152B","name":"Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, B","output":"(fma x (* -0.5 x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* x 0.5)))","start":0.0105,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":495.965087890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.097125) (448 0.08919812031259014) ())","end":0.08919812031259014,"end-est":0.09765625,"identifier":"#f","input":"(* x (- 1.0 (* x y)))","link":"122-NumericSpecFunctionslog1pfrommathfunctions0152A","name":"Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, A","output":"(- x (* x (* x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* x y)))","start":0.097125,"start-est":0.109375,"status":"ex-start","target":false,"target-prog":"#f","time":1274.981201171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.015352619458047539) (52544 0.017508075048700205) ())","end":0.017508075048700205,"end-est":0.01171875,"identifier":"#f","input":"(- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x)","link":"123-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, C","output":"(- (* (cbrt (/ -1.0 (fma x (fma x 0.04481 0.99229) 1.0))) (/ (fma 0.27061 x 2.30753) (- (cbrt (pow (fma x (fma x 0.04481 0.99229) 1.0) 2.0))))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x)","start":0.015352619458047539,"start-est":0.024101269536884032,"status":"ex-start","target":false,"target-prog":"#f","time":1907.698974609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.11087848824957125) (832 0.11483272226222149) ())","end":0.11483272226222149,"end-est":0.09375,"identifier":"#f","input":"(- 1.0 (* x (+ 0.253 (* x 0.12))))","link":"124-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, A","output":"(+ (* (- x) 0.253) (- (* (- x) (* 0.12 x)) -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* x (+ 0.253 (* x 0.12))))","start":0.11087848824957125,"start-est":0.109375,"status":"ex-start","target":false,"target-prog":"#f","time":1406.897216796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.1341221599904375) (6848 0.0801462406251803) ())","end":0.0801462406251803,"end-est":0.0703125,"identifier":"#f","input":"(/ (- (* x x) 3.0) 6.0)","link":"125-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, H","output":"(fma x (/ x (/ 1.0 0.16666666666666666)) -0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x x) 3.0) 6.0)","start":0.1341221599904375,"start-est":0.33203125,"status":"ex-start","target":false,"target-prog":"#f","time":1064.787841796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.0897259193652572) (13120 0.0868509193652572) ())","end":0.0868509193652572,"end-est":0.12109375,"identifier":"#f","input":"(+ (- 1.0 x) (* y (sqrt x)))","link":"126-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, E","output":"(fma y (sqrt x) (- 1.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- 1.0 x) (* y (sqrt x)))","start":0.0897259193652572,"start-est":0.12109375,"status":"ex-start","target":false,"target-prog":"#f","time":1427.0458984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.015352619458047539) (52544 0.017508075048700205) ())","end":0.017508075048700205,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* (+ 0.99229 (* x 0.04481)) x))))","link":"127-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, D","output":"(- x (* (cbrt (/ -1.0 (fma (fma 0.04481 x 0.99229) x 1.0))) (/ (fma x 0.27061 2.30753) (- (cbrt (pow (fma (fma 0.04481 x 0.99229) x 1.0) 2.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* (+ 0.99229 (* x 0.04481)) x))))","start":0.015352619458047539,"start-est":0.024101269536884032,"status":"ex-start","target":false,"target-prog":"#f","time":1945.09814453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 0.08837811628052147) (52672 0.09208737444913676) ())","end":0.09208737444913676,"end-est":0.11166000976844201,"identifier":"#f","input":"(* 0.70711 (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x))","link":"128-NumericSpecFunctionsinvErfcfrommathfunctions0152B","name":"Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, B","output":"(* -0.70711 (- x (* (cbrt (/ -1.0 (fma (fma 0.04481 x 0.99229) x 1.0))) (/ (fma x 0.27061 2.30753) (- (cbrt (pow (fma (fma 0.04481 x 0.99229) x 1.0) 2.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.70711 (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x))","start":0.08837811628052147,"start-est":0.12404252930532605,"status":"ex-start","target":false,"target-prog":"#f","time":1901.016845703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.08872896288740177) (51776 0.12180864162747869) ())","end":0.12180864162747869,"end-est":0.078125,"identifier":"#f","input":"(+ (- (- (* x (log y)) y) z) (log t))","link":"129-NumericSpecFunctionsincompleteGammafrommathfunctio","name":"Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, A","output":"(fma (cbrt (pow (log t) 2.0)) (cbrt (log t)) (fma x (log y) (- (+ y z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- (* x (log y)) y) z) (log t))","start":0.08872896288740177,"start-est":0.0859375,"status":"ex-start","target":false,"target-prog":"#f","time":1960.873046875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 2.082725098503925) (84864 0.3304851698872868) ())","end":0.3304851698872868,"end-est":0.25390625,"identifier":"#f","input":"(* x (exp (+ (* y (- (log z) t)) (* a (- (log (- 1.0 z)) b)))))","link":"130-NumericSpecFunctionsincompleteBetaApproxfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, B","output":"(* (* x (cbrt (exp (fma y (- (log z) t) (* a (- (log1p (- z)) b)))))) (cbrt (pow (exp (* (fma y (- (log z) t) (* a (- (log1p (- z)) b))) (cbrt 2.0))) (cbrt 4.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (exp (+ (* y (- (log z) t)) (* a (- (log (- 1.0 z)) b)))))","start":2.082725098503925,"start-est":1.3496273758713984,"status":"imp-start","target":false,"target-prog":"#f","time":7617.97998046875,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 14.244554410108467) (16460 5.999914021955596) ())","end":5.999914021955596,"end-est":5.652236507649072,"identifier":"#f","input":"(+ x (* (- y z) (/ (- t x) (- a z))))","link":"131-NumericSignalinterpolatefromhsignal0271","name":"Numeric.Signal:interpolate   from hsignal-0.2.7.1","output":"(if (<= (+ x (* (- y z) (/ (- t x) (- a z)))) (- INFINITY)) (+ (/ (* t (- y z)) (- a z)) (* -1.0 (* (- (/ y (- a z)) (+ (/ z (- a z)) 1.0)) x))) (if (<= (+ x (* (- y z) (/ (- t x) (- a z)))) -200.0) (fma (- y z) (/ (- x t) (- z a)) x) (if (<= (+ x (* (- y z) (/ (- t x) (- a z)))) 2e+23) (+ (/ (* t (- y z)) (- a z)) (* -1.0 (* (- (/ y (- a z)) (+ (/ z (- a z)) 1.0)) x))) (fma (- y z) (fma x (/ -1.0 (- a z)) (/ t (- a z))) x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y z) (/ (- t x) (- a z))))","start":14.244554410108467,"start-est":14.310070949473271,"status":"imp-start","target":false,"target-prog":"#f","time":3926.806884765625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.1799693609377704) (39552 0.19061391094642408) ())","end":0.19061391094642408,"end-est":0.1458587890737681,"identifier":"#f","input":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","link":"132-NumericLogclog1pfromlogdomain01021B","name":"Numeric.Log:$clog1p from log-domain-0.10.2.1, B","output":"(/ (/ x (- (cbrt (+ x 1.0)) (+ (pow (sqrt (sqrt (+ x 1.0))) 0.6666666666666666) -1.0))) (+ 1.0 (cbrt (sqrt (+ x 1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","start":0.1799693609377704,"start-est":0.171875,"status":"ex-start","target":false,"target-prog":"#f","time":2225.5830078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009448120312590146) (6720 0.000125) ())","end":0.000125,"end-est":0,"identifier":"#f","input":"(+ (+ (* x y) x) y)","link":"133-NumericLogcexpm1fromlogdomain01021B","name":"Numeric.Log:$cexpm1 from log-domain-0.10.2.1, B","output":"(fma y x (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x y) x) y)","start":0.009448120312590146,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":449.998046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.015875) (13120 0.015875) ())","end":0.015875,"end-est":0.0078125,"identifier":"#f","input":"(/ (fabs (- x y)) (fabs y))","link":"134-NumericLinearAlgebraUtilformatSparsefromhmatrix016","name":"Numeric.LinearAlgebra.Util:formatSparse from hmatrix-0.16.1.5","output":"(/ (fabs (- x y)) (fabs y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (fabs (- x y)) (fabs y))","start":0.015875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":1464.572998046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.012125) (320 0.0005731203125901445) ())","end":0.0005731203125901445,"end-est":0,"identifier":"#f","input":"(/ (* x y) 2.0)","link":"135-NumericIntervalInternalscalefromintervals071B","name":"Numeric.Interval.Internal:scale from intervals-0.7.1, B","output":"(* y (* 0.5 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) 2.0)","start":0.012125,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":622.288818359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.024) (320 0.024) ())","end":0.024,"end-est":0,"identifier":"#f","input":"(* x (+ y y))","link":"136-NumericIntegrationTanhSinhsimpsonfromintegration02","name":"Numeric.Integration.TanhSinh:simpson  from integration-0.2.1","output":"(* x (+ y y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ y y))","start":0.024,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":427.955078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.007625) (320 0.007625) ())","end":0.007625,"end-est":0,"identifier":"#f","input":"(/ x (- 1.0 x))","link":"137-NumericIntegrationTanhSinhnonNegativefromintegrati","name":"Numeric.Integration.TanhSinh:nonNegative from integration-0.2.1","output":"(/ x (- 1.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (- 1.0 x))","start":0.007625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":339.886962890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7680 14.103396295159616) (32896 0.2526490609435394) ())","end":0.2526490609435394,"end-est":0.21388627930532603,"identifier":"#f","input":"(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))","link":"138-NMSESection61mentionedB","name":"NMSE Section 6.1 mentioned, B","output":"(/ (* (cbrt (* 0.5 PI)) (/ (cbrt (* 0.25 (* PI PI))) (* a b))) (+ a b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))","start":14.103396295159616,"start-est":14.71463498957843,"status":"imp-start","target":false,"target-prog":"#f","time":2508.868896484375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((14528 29.763045460163216) (13632 0.5066904890860359) ())","end":0.5066904890860359,"end-est":0.1900033739033163,"identifier":"#f","input":"(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)","link":"139-NMSESection61mentionedA","name":"NMSE Section 6.1 mentioned, A","output":"(/ (* (+ (/ 1.0 (exp x)) (/ x (exp x))) (- 1.0 -1.0)) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)","start":29.763045460163216,"start-est":30.27462146584641,"status":"imp-start","target":false,"target-prog":"#f","time":2723.254150390625,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 0.565666920335669) (32704 0.46380300938924385) ())","end":0.46380300938924385,"end-est":0.36527255861065216,"identifier":"#f","input":"(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))","link":"140-MigdaletalEquation64","name":"Migdal et al, Equation (64)","output":"(* (cos th) (* (* (fma a1 a1 (* a2 a2)) (cbrt (sqrt 0.5))) (cbrt 0.5)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))","start":0.565666920335669,"start-est":0.5228500976844203,"status":"ex-start","target":false,"target-prog":"#f","time":3363.593994140625,"vars":["a1","a2","th"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.4833406033525246) (32576 0.44613532323294214) ())","end":0.44613532323294214,"end-est":0.3558138618120567,"identifier":"#f","input":"(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))","link":"141-MigdaletalEquation51","name":"Migdal et al, Equation (51)","output":"(* (pow (* n (+ PI PI)) (fma -0.5 k 0.5)) (pow k -0.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))","start":0.4833406033525246,"start-est":0.39972133966101653,"status":"ex-start","target":false,"target-prog":"#f","time":2892.113037109375,"vars":["k","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((39296 0.8389652048254582) (123072 0.25124211792045675) ())","end":0.25124211792045675,"end-est":0.2547580908424292,"identifier":"#f","input":"(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))","link":"142-Midpointonagreatcircle","name":"Midpoint on a great circle","output":"(+ lambda1 (atan2 (* (cos phi2) (- (* (cos lambda2) (sin lambda1)) (* (cos lambda1) (sin lambda2)))) (fma (cos phi2) (fma (cbrt (* (cos lambda2) (cos lambda1))) (cbrt (pow (* (cos lambda2) (cos lambda1)) 2.0)) (* (sin lambda2) (sin lambda1))) (cos phi1))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))","start":0.8389652048254582,"start-est":1.3885002406302862,"status":"ex-start","target":false,"target-prog":"#f","time":6158.3701171875,"vars":["lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((19968 16.871039175453067) (52352 0.34663457577287965) ())","end":0.34663457577287965,"end-est":0.19252921287164762,"identifier":"#f","input":"(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)","link":"143-MaksimovandKolovskyEquation4","name":"Maksimov and Kolovsky, Equation (4)","output":"(fma (fma 0.3333333333333333 (pow l 3.0) (fma (pow l 5.0) 0.016666666666666666 (fma 0.0003968253968253968 (pow l 7.0) (+ l l)))) (* J (cos (* K 0.5))) U)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)","start":16.871039175453067,"start-est":16.90019690074558,"status":"imp-start","target":false,"target-prog":"#f","time":4687.897216796875,"vars":["J","l","K","U"]},{"bits":128,"conversions":[],"cost-accuracy":"((27200 15.715875280677407) (32960 1.2639846796126797) ())","end":1.2639846796126797,"end-est":0.8951957840018394,"identifier":"#f","input":"(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))","link":"144-MaksimovandKolovskyEquation32","name":"Maksimov and Kolovsky, Equation (32)","output":"(* (cos M) (exp (- (- (fabs (- n m)) l) (pow (fma (+ m n) 0.5 (- M)) 2.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))","start":15.715875280677407,"start-est":13.734338736241272,"status":"imp-start","target":false,"target-prog":"#f","time":3355.091064453125,"vars":["K","m","n","M","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((26880 18.07881372187554) (20880 9.125248850459517) ())","end":9.125248850459517,"end-est":6.598055416931814,"identifier":"#f","input":"(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))","link":"145-MaksimovandKolovskyEquation3","name":"Maksimov and Kolovsky, Equation (3)","output":"(if (<= J -1.4861515777192972e-152) (* (* (hypot 1.0 (/ (* U 0.5) (* J (cos (* K 0.5))))) (* -2.0 J)) (cos (* K 0.5))) (if (<= J -1.306477816240861e-172) U (if (<= J -1.8885869417417532e-235) (* (* (hypot 1.0 (/ (* U 0.5) (* J (cos (* K 0.5))))) (* -2.0 J)) (cos (* K 0.5))) (if (<= J 6.366851530521697e-240) (- U) (* (* (hypot 1.0 (/ (* U 0.5) (* J (cos (* K 0.5))))) (* -2.0 J)) (cos (* K 0.5)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))","start":18.07881372187554,"start-est":20.828125,"status":"imp-start","target":false,"target-prog":"#f","time":5092.9990234375,"vars":["J","K","U"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ (+ (+ x x) x) x) x)","link":"146-Mainifrom","name":"Main:i from ","output":"(* x (+ 4.0 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ x x) x) x) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":359.745849609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.014073120312590144) (13120 0.00425) ())","end":0.00425,"end-est":0.0078125,"identifier":"#f","input":"(+ x (* y (+ z x)))","link":"147-Mainbigenough2fromA","name":"Main:bigenough2 from A","output":"(fma x y (fma z y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (+ z x)))","start":0.014073120312590144,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":1232.81201171875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.011165241011860921) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (* x x))","link":"148-Mainbigenough1fromB","name":"Main:bigenough1 from B","output":"(fma x x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* x x))","start":0.011165241011860921,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":379.3388671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 29.51315031896346) (26568 0.29382130763790076) ())","end":0.29382130763790076,"end-est":0,"identifier":"#f","input":"(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)","link":"149-LogisticfunctionfromLakshayGarg","name":"Logistic function from Lakshay Garg","output":"(if (<= (* -2.0 x) -1000000.0) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0) (if (<= (* -2.0 x) 0.0002) (fma -0.3333333333333333 (pow x 3.0) (fma 0.13333333333333333 (pow x 5.0) x)) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)","start":29.51315031896346,"start-est":27.720908701775,"status":"imp-start","target":false,"target-prog":"#f","time":1253.4912109375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.019888253465039876) (6912 0.019888253465039876) ())","end":0.019888253465039876,"end-est":0.01171875,"identifier":"#f","input":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","link":"150-Logisticfunction","name":"Logistic function","output":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","pre":"(and (<= 0.0 s) (<= s 1.0651631))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","start":0.019888253465039876,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":1920.218017578125,"vars":["x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((39680 0.045952204181578034) (32832 0.05358394602149798) ())","end":0.05358394602149798,"end-est":0.0661418243755965,"identifier":"#f","input":"(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))","link":"151-Logisticdistribution","name":"Logistic distribution","output":"(/ (/ (pow (+ 1.0 (exp (/ (fabs x) (- s)))) -2.0) s) (exp (/ (fabs x) s)))","pre":"(and (<= 0.0 s) (<= s 1.0651631))","prec":"binary64","preprocess":"()","spec":"(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))","start":0.045952204181578034,"start-est":0.0723911828802945,"status":"ex-start","target":false,"target-prog":"#f","time":2461.8271484375,"vars":["x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.026686481637041213) (19776 0.015464280689708267) ())","end":0.015464280689708267,"end-est":0.0078125,"identifier":"#f","input":"(+ (+ (+ (* x y) (* z t)) (* a b)) (* c i))","link":"152-LinearV4cdotfromlinear11913C","name":"Linear.V4:$cdot from linear-1.19.1.3, C","output":"(fma i c (fma b a (fma x y (* z t))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x y) (* z t)) (* a b)) (* c i))","start":0.026686481637041213,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":2475.0078125,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0095) (6784 0.00425) ())","end":0.00425,"end-est":0,"identifier":"#f","input":"(- (* x y) (* z t))","link":"153-LinearV3crossfromlinear11913","name":"Linear.V3:cross from linear-1.19.1.3","output":"(fma x y (- (* z t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x y) (* z t))","start":0.0095,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":740.35400390625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.01652124062518029) (13248 0.008625) ())","end":0.008625,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* x y) (* z t)) (* a b))","link":"154-LinearV3cdotfromlinear11913B","name":"Linear.V3:$cdot from linear-1.19.1.3, B","output":"(fma a b (fma x y (* z t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x y) (* z t)) (* a b))","start":0.01652124062518029,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":1356.468994140625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.010375) (6720 0.005125) ())","end":0.005125,"end-est":0,"identifier":"#f","input":"(+ (* x y) (* z t))","link":"155-LinearV2cdotfromlinear11913A","name":"Linear.V2:$cdot from linear-1.19.1.3, A","output":"(fma x y (* z t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* z t))","start":0.010375,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":733.99609375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.028615601562950725) (13120 0.028615601562950725) ())","end":0.028615601562950725,"end-est":0.02734375,"identifier":"#f","input":"(* (cos x) (/ (sinh y) y))","link":"156-LinearQuaternioncsinfromlinear11913","name":"Linear.Quaternion:$csin from linear-1.19.1.3","output":"(* (cos x) (/ (sinh y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (cos x) (/ (sinh y) y))","start":0.028615601562950725,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":2330.076171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.1333840021785685) (6720 0.1333840021785685) ())","end":0.1333840021785685,"end-est":0.140625,"identifier":"#f","input":"(* x (/ (sin y) y))","link":"157-LinearQuaternioncexpfromlinear11913","name":"Linear.Quaternion:$cexp from linear-1.19.1.3","output":"(* x (/ (sin y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (/ (sin y) y))","start":0.1333840021785685,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":1835.72607421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.05839624062518029) (13120 0.05839624062518029) ())","end":0.05839624062518029,"end-est":0.27181625976844204,"identifier":"#f","input":"(* (sin x) (/ (sinh y) y))","link":"158-LinearQuaternionccosfromlinear11913","name":"Linear.Quaternion:$ccos from linear-1.19.1.3","output":"(* (sin x) (/ (sinh y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (sin x) (/ (sinh y) y))","start":0.05839624062518029,"start-est":0.27181625976844204,"status":"ex-start","target":false,"target-prog":"#f","time":2767.80419921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.065125) (13120 0.059375) ())","end":0.059375,"end-est":0.0546875,"identifier":"#f","input":"(+ (* (+ (* x y) z) y) t)","link":"159-LanguageHaskellHsColourColourHighlightunbasefromhs","name":"Language.Haskell.HsColour.ColourHighlight:unbase from hscolour-1.23","output":"(fma (fma x y z) y t)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (+ (* x y) z) y) t)","start":0.065125,"start-est":0.0546875,"status":"ex-start","target":false,"target-prog":"#f","time":1755.906982421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 0.711383356810698) (78400 0.7722400085383176) ())","end":0.7722400085383176,"end-est":0.812910065897579,"identifier":"#f","input":"(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))","link":"160-Lanczoskernel","name":"Lanczos kernel","output":"(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (pow (/ (/ (/ (pow (sin (* x PI)) 3.0) (pow (* x PI) 2.0)) (* PI (cbrt x))) (cbrt (* x x))) 0.3333333333333333))","pre":"(and (and (<= 1e-5 x) (<= x 1.0)) (and (<= 1.0 tau) (<= tau 5.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))","start":0.711383356810698,"start-est":0.8336824779294654,"status":"ex-start","target":false,"target-prog":"#f","time":2325.321044921875,"vars":["x","tau"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(if (== (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0)))) 0.0) 1.0 (/ (- (exp (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))) 1.0) (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))))","link":"161-KahansUnumTargetedMonster","name":"Kahan's Unum-Targeted Monster","output":"#f","pre":"(and (<= 1.0 y) (<= y 9999.0))","prec":"binary64","preprocess":"()","spec":"(if (== (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0)))) 0.0) 1.0 (/ (- (exp (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))) 1.0) (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":2102.31591796875,"vars":["y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(if (== (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) 0.0) 1.0 (/ (- (exp (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))) 1.0) (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))))","link":"162-KahansMonster","name":"Kahan's Monster","output":"#f","pre":"(and (<= 1.0 y) (<= y 9999.0))","prec":"binary64","preprocess":"()","spec":"(if (== (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) 0.0) 1.0 (/ (- (exp (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))) 1.0) (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":1029.066162109375,"vars":["y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 0.017625) (33408 0.01839624062518029) ())","end":0.01839624062518029,"end-est":0.00390625,"identifier":"#f","input":"(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))","link":"163-Kahanp13Example3","name":"Kahan p13 Example 3","output":"(+ 1.0 (/ 1.0 (- -2.0 (pow (pow (+ 2.0 (/ (/ 2.0 t) (* (/ (- -1.0 t) (cbrt t)) (pow (cbrt t) -2.0)))) 6.0) 0.3333333333333333))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))","start":0.017625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2090.074951171875,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((3264 0.024) (14656 0.024) ())","end":0.024,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))","link":"164-Kahanp13Example2","name":"Kahan p13 Example 2","output":"(/ (- -1.0 (pow (+ 2.0 (/ (/ 2.0 t) (+ -1.0 (/ -1.0 t)))) 2.0)) (- -2.0 (pow (+ 2.0 (/ (/ 2.0 t) (+ -1.0 (/ -1.0 t)))) 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))","start":0.024,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3821.404052734375,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((2240 0.032625) (14144 0.008625) ())","end":0.008625,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))","link":"165-Kahanp13Example1","name":"Kahan p13 Example 1","output":"(/ (- -1.0 (pow (/ t (* (+ 1.0 t) 0.5)) 2.0)) (- -2.0 (pow (/ t (* (+ 1.0 t) 0.5)) 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))","start":0.032625,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2176.39306640625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 0.256875) (77440 0.02010620312590145) ())","end":0.02010620312590145,"end-est":0,"identifier":"#f","input":"(- (log x) (log (log x)))","link":"166-JmatReallambertwestimator","name":"Jmat.Real.lambertw, estimator","output":"(log (pow (/ (cbrt (/ (* x (pow (log x) -0.6666666666666666)) (cbrt (cbrt (log x))))) (cbrt (cbrt (pow (log x) 0.6666666666666666)))) 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log x) (log (log x)))","start":0.256875,"start-est":0.28125,"status":"ex-start","target":false,"target-prog":"#f","time":1340.218994140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((52224 1.7049328259142864) (63488 0.48040972658974607) ())","end":0.48040972658974607,"end-est":0.38185502930532605,"identifier":"#f","input":"(* (/ PI (sin (* PI z))) (* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5) (+ (- (- 1.0 z) 1.0) 0.5))) (exp (- (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- (- 1.0 z) 1.0) 1.0))) (/ -1259.1392167224028 (+ (- (- 1.0 z) 1.0) 2.0))) (/ 771.3234287776531 (+ (- (- 1.0 z) 1.0) 3.0))) (/ -176.6150291621406 (+ (- (- 1.0 z) 1.0) 4.0))) (/ 12.507343278686905 (+ (- (- 1.0 z) 1.0) 5.0))) (/ -0.13857109526572012 (+ (- (- 1.0 z) 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- (- 1.0 z) 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- (- 1.0 z) 1.0) 8.0)))))","link":"167-JmatRealgammabranchzlessthan05","name":"Jmat.Real.gamma, branch z less than 0.5","output":"(* (/ PI (sin (* PI z))) (* (pow (cbrt (* (* (sqrt (* PI 2.0)) (pow (- 7.5 z) (- 0.5 z))) (exp (+ z -7.5)))) 3.0) (+ (+ (+ (+ (+ (+ (+ (+ (/ 676.5203681218851 (- 1.0 z)) (/ 1259.1392167224028 (+ -2.0 z))) 0.9999999999998099) (/ 771.3234287776531 (+ (- (- 1.0 z) 1.0) 3.0))) (/ -176.6150291621406 (+ (- (- 1.0 z) 1.0) 4.0))) (/ 12.507343278686905 (+ (- (- 1.0 z) 1.0) 5.0))) (/ -0.13857109526572012 (+ (- (- 1.0 z) 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- (- 1.0 z) 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- (- 1.0 z) 1.0) 8.0)))))","pre":"(<= z 0.5)","prec":"binary64","preprocess":"()","spec":"(* (/ PI (sin (* PI z))) (* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5) (+ (- (- 1.0 z) 1.0) 0.5))) (exp (- (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- (- 1.0 z) 1.0) 1.0))) (/ -1259.1392167224028 (+ (- (- 1.0 z) 1.0) 2.0))) (/ 771.3234287776531 (+ (- (- 1.0 z) 1.0) 3.0))) (/ -176.6150291621406 (+ (- (- 1.0 z) 1.0) 4.0))) (/ 12.507343278686905 (+ (- (- 1.0 z) 1.0) 5.0))) (/ -0.13857109526572012 (+ (- (- 1.0 z) 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- (- 1.0 z) 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- (- 1.0 z) 1.0) 8.0)))))","start":1.7049328259142864,"start-est":1.7005735317583799,"status":"imp-start","target":false,"target-prog":"#f","time":308140.10986328125,"vars":["z"]},{"bits":128,"conversions":[],"cost-accuracy":"((31360 3.85759668890742) (96196 2.4090285414885177) ())","end":2.4090285414885177,"end-est":2.3070805445575586,"identifier":"#f","input":"(* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- z 1.0) 7.0) 0.5) (+ (- z 1.0) 0.5))) (exp (- (+ (+ (- z 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- z 1.0) 1.0))) (/ -1259.1392167224028 (+ (- z 1.0) 2.0))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0))))","link":"168-JmatRealgammabranchzgreaterthan05","name":"Jmat.Real.gamma, branch z greater than 0.5","output":"(if (<= (- z 1.0) 140.0) (* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- z 1.0) 7.0) 0.5) (+ (- z 1.0) 0.5))) (exp (- (+ (+ (- z 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (fma -1259.1392167224028 (/ -1.0 (- -1.0 z)) (+ 0.9999999999998099 (/ 676.5203681218851 z))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0)))) (* (* (* (sqrt 2.0) (exp (fma (- (log (+ 6.5 z))) (- 0.5 z) (- -6.5 z)))) (sqrt PI)) (+ (+ (+ (+ (+ (+ (* (+ (cbrt (pow (/ 1259.1392167224028 (- -1.0 z)) 2.0)) (- (cbrt (pow (+ 0.9999999999998099 (/ 676.5203681218851 z)) 2.0)) (* (cbrt (/ 1259.1392167224028 (- -1.0 z))) (cbrt (+ 0.9999999999998099 (/ 676.5203681218851 z)))))) (+ (cbrt (/ 1259.1392167224028 (- -1.0 z))) (cbrt (+ 0.9999999999998099 (/ 676.5203681218851 z))))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0)))))","pre":"(> z 0.5)","prec":"binary64","preprocess":"()","spec":"(* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- z 1.0) 7.0) 0.5) (+ (- z 1.0) 0.5))) (exp (- (+ (+ (- z 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- z 1.0) 1.0))) (/ -1259.1392167224028 (+ (- z 1.0) 2.0))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0))))","start":3.85759668890742,"start-est":3.965808209414727,"status":"imp-start","target":false,"target-prog":"#f","time":4425.950927734375,"vars":["z"]},{"bits":128,"conversions":[],"cost-accuracy":"((124672 0.15421033906799878) (124672 0.15421033906799878) ())","end":0.15421033906799878,"end-est":0.12175751953688403,"identifier":"#f","input":"(fabs (* (/ 1.0 (sqrt PI)) (+ (+ (+ (* 2.0 (fabs x)) (* (/ 2.0 3.0) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1.0 5.0) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1.0 21.0) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x))))))","link":"169-JmatRealerfibranchxlessthanorequalto05","name":"Jmat.Real.erfi, branch x less than or equal to 0.5","output":"(fabs (* (/ 1.0 (sqrt PI)) (+ (+ (+ (* 2.0 (fabs x)) (* (/ 2.0 3.0) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1.0 5.0) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1.0 21.0) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x))))))","pre":"(<= x 0.5)","prec":"binary64","preprocess":"()","spec":"(fabs (* (/ 1.0 (sqrt PI)) (+ (+ (+ (* 2.0 (fabs x)) (* (/ 2.0 3.0) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1.0 5.0) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1.0 21.0) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x))))))","start":0.15421033906799878,"start-est":0.12175751953688403,"status":"ex-start","target":false,"target-prog":"#f","time":2473.927001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((139648 2.7870201590198582) (72384 1.2022752855585002) ())","end":1.2022752855585002,"end-est":1.1799767657364042,"identifier":"#f","input":"(* (* (/ 1.0 (sqrt PI)) (exp (* (fabs x) (fabs x)))) (+ (+ (+ (/ 1.0 (fabs x)) (* (/ 1.0 2.0) (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 3.0 4.0) (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 15.0 8.0) (* (* (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))))","link":"170-JmatRealerfibranchxgreaterthanorequalto5","name":"Jmat.Real.erfi, branch x greater than or equal to 5","output":"(* (/ (pow (exp x) x) (cbrt (pow PI 1.5))) (+ (/ (+ (/ 0.5 (* x x)) 1.0) (fabs x)) (+ (* 1.875 (/ 1.0 (* (pow (fabs x) 5.0) (pow x 2.0)))) (* 0.75 (/ 1.0 (pow (fabs x) 5.0))))))","pre":"(>= x 0.5)","prec":"binary64","preprocess":"()","spec":"(* (* (/ 1.0 (sqrt PI)) (exp (* (fabs x) (fabs x)))) (+ (+ (+ (/ 1.0 (fabs x)) (* (/ 1.0 2.0) (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 3.0 4.0) (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 15.0 8.0) (* (* (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))))","start":2.7870201590198582,"start-est":2.7453276732938745,"status":"imp-start","target":false,"target-prog":"#f","time":3110.31396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((54784 13.252700621361882) (1053568 11.582307748111692) ())","end":11.582307748111692,"end-est":11.71965793459533,"identifier":"#f","input":"(- 1.0 (* (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 0.254829592 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -0.284496736 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 1.421413741 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -1.453152027 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) 1.061405429))))))))) (exp (- (* (fabs x) (fabs x))))))","link":"171-JmatRealerf","name":"Jmat.Real.erf","output":"(/ (* (cbrt (+ 1.0 (fma (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (/ (exp (- (* x x))) (fma 0.3275911 (fabs x) 1.0)) (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0)))) (* (cbrt (cbrt (pow (+ (+ 1.0 (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x))))) (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0)) 4.0))) (- (cbrt (pow (+ (+ 1.0 (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x))))) (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0)) 0.6666666666666666)) (* (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (fma 1.061405429 (/ 1.0 (fma 0.3275911 (fabs x) 1.0)) -1.453152027) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 3.0) (cbrt (pow (+ (+ 1.0 (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x))))) (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0)) 0.6666666666666666)))))) (* (+ 1.0 (+ (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0) (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))))) (+ 1.0 (+ (pow (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x)))) 2.0) (/ (+ 0.254829592 (/ (+ -0.284496736 (/ (+ 1.421413741 (/ (+ -1.453152027 (/ 1.061405429 (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (fma 0.3275911 (fabs x) 1.0))) (* (fma 0.3275911 (fabs x) 1.0) (exp (* x x))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 0.254829592 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -0.284496736 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 1.421413741 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -1.453152027 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) 1.061405429))))))))) (exp (- (* (fabs x) (fabs x))))))","start":13.252700621361882,"start-est":13.435704225619446,"status":"imp-start","target":false,"target-prog":"#f","time":26858.693115234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((11072 29.10773086133742) (100936 0.22134417843669707) ())","end":0.22134417843669707,"end-est":0.01171875,"identifier":"#f","input":"(* (/ (+ (+ (+ (+ (+ 1.0 (* 0.1049934947 (* x x))) (* 0.0424060604 (* (* x x) (* x x)))) (* 0.0072644182 (* (* (* x x) (* x x)) (* x x)))) (* 0.0005064034 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0001789971 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (+ (+ (+ (+ (+ (+ 1.0 (* 0.7715471019 (* x x))) (* 0.2909738639 (* (* x x) (* x x)))) (* 0.0694555761 (* (* (* x x) (* x x)) (* x x)))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0008327945 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (* (* 2.0 0.0001789971) (* (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)) (* x x))))) x)","link":"172-JmatRealdawson","name":"Jmat.Real.dawson","output":"(if (<= x -447766.36172659305) (fma 0.2514179000665374 (pow x -3.0) (/ 0.5 x)) (if (<= x 9.544882123799739e-5) (/ (* (fma (pow (* x x) (+ 3.0 2.0)) 0.0001789971 (fma (pow (* x x) (* 2.0 2.0)) 0.0005064034 (fma 0.0072644182 (pow (* x x) 3.0) (+ 1.0 (* (* x x) (+ 0.1049934947 (* 0.0424060604 (* x x)))))))) x) (fma 0.0003579942 (pow (pow (* x x) 2.0) 3.0) (fma 0.0008327945 (pow (* x x) (+ 3.0 2.0)) (fma (pow (* x x) (* 2.0 2.0)) 0.0140005442 (fma (pow (* x x) 3.0) 0.0694555761 (+ 1.0 (* (* x x) (+ 0.7715471019 (* 0.2909738639 (* x x)))))))))) (fma 0.2514179000665374 (pow x -3.0) (/ 0.5 x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (+ (+ (+ (+ (+ 1.0 (* 0.1049934947 (* x x))) (* 0.0424060604 (* (* x x) (* x x)))) (* 0.0072644182 (* (* (* x x) (* x x)) (* x x)))) (* 0.0005064034 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0001789971 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (+ (+ (+ (+ (+ (+ 1.0 (* 0.7715471019 (* x x))) (* 0.2909738639 (* (* x x) (* x x)))) (* 0.0694555761 (* (* (* x x) (* x x)) (* x x)))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0008327945 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (* (* 2.0 0.0001789971) (* (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)) (* x x))))) x)","start":29.10773086133742,"start-est":29.034761036748776,"status":"imp-start","target":false,"target-prog":"#f","time":1823.0400390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 58.29895103969635) (26048 0.6837618421881312) ())","end":0.6837618421881312,"end-est":1.03125,"identifier":"#f","input":"(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))","link":"173-Hyperbolictangent","name":"Hyperbolic tangent","output":"(/ (expm1 (+ x x)) (fma (exp x) (exp x) 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))","start":58.29895103969635,"start-est":57.97945939329804,"status":"imp-start","target":false,"target-prog":"#f","time":2261.636962890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 58.15460392095439) (39296 0.5444019776931798) ())","end":0.5444019776931798,"end-est":0.8234452043711029,"identifier":"#f","input":"(/ (- (exp x) (exp (- x))) 2.0)","link":"174-Hyperbolicsine","name":"Hyperbolic sine","output":"(* (fma (pow x 7.0) -0.0003968253968253968 (fma -0.016666666666666666 (pow x 5.0) (fma (pow x 3.0) -0.3333333333333333 (* -2.0 x)))) -0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) (exp (- x))) 2.0)","start":58.15460392095439,"start-est":57.32349011589512,"status":"imp-start","target":false,"target-prog":"#f","time":1799.484130859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0.008198120312590144) (45568 0.014474248439933906) ())","end":0.014474248439933906,"end-est":0,"identifier":"#f","input":"(/ 2.0 (+ (exp x) (exp (- x))))","link":"175-Hyperbolicsecant","name":"Hyperbolic secant","output":"(* (cbrt (/ 8.0 (+ (exp x) (exp (- x))))) (pow (cbrt (+ (exp x) (exp (- x)))) -2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (+ (exp x) (exp (- x))))","start":0.008198120312590144,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":667.9638671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.56975) (19840 0.28227789701734524) ())","end":0.28227789701734524,"end-est":0.06315267529745984,"identifier":"#f","input":"(log (+ x (sqrt (- (* x x) 1.0))))","link":"176-Hyperbolicarccosine","name":"Hyperbolic arc-cosine","output":"(log (+ x (- x (fma 0.125 (pow x -3.0) (/ 0.5 x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (- (* x x) 1.0))))","start":31.56975,"start-est":35.25,"status":"imp-start","target":false,"target-prog":"#f","time":1197.705078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 58.62269972683793) (39296 0.15279292604536956) ())","end":0.15279292604536956,"end-est":0.06505924734522824,"identifier":"#f","input":"(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))","link":"177-Hyperbolicarccotangent","name":"Hyperbolic arc-(co)tangent","output":"(* 0.5 (fma 2.0 x (fma 0.2857142857142857 (pow x 7.0) (fma 0.6666666666666666 (pow x 3.0) (* 0.4 (pow x 5.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))","start":58.62269972683793,"start-est":58.91045238156443,"status":"imp-start","target":false,"target-prog":"#f","time":2123.8330078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 0.026625) (32448 0.00254024101186092) ())","end":0.00254024101186092,"end-est":0,"identifier":"#f","input":"(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))","link":"178-Hyperbolicarccosecant","name":"Hyperbolic arc-(co)secant","output":"(- (log (/ x (exp (log1p (sqrt (fma (- x) x 1.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))","start":0.026625,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":1089.928955078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13824 14.19571754254738) (27784 8.99437240306069) ())","end":8.99437240306069,"end-est":9.572597509768443,"identifier":"#f","input":"(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))","link":"179-HenrywoodandAgarwalEquation9a","name":"Henrywood and Agarwal, Equation (9a)","output":"(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (* (/ (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) h)) (cbrt l)) (pow (cbrt l) -2.0))))) (if (<= (/ h l) -2e-197) (* w0 (sqrt (- 1.0 (* (pow (* M (/ D (+ d d))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) h)) (cbrt l)) (pow (cbrt l) -2.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))","start":14.19571754254738,"start-est":14.54296875,"status":"imp-start","target":false,"target-prog":"#f","time":4325.39208984375,"vars":["w0","M","D","h","l","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 19.36076188503966) (27408 13.236672343805385) ())","end":13.236672343805385,"end-est":12.596139885888068,"identifier":"#f","input":"(* c0 (sqrt (/ A (* V l))))","link":"180-HenrywoodandAgarwalEquation3","name":"Henrywood and Agarwal, Equation (3)","output":"(if (<= (* V l) -5e+307) (* c0 (sqrt (/ (/ (/ (/ A V) (cbrt l)) (cbrt l)) (cbrt l)))) (if (<= (* V l) -1e-299) (* c0 (sqrt (* (- A) (/ 1.0 (- (* l V)))))) (if (<= (* V l) 0.0) (* c0 (pow (exp (* 0.25 (+ (log (/ 1.0 V)) (log (/ A l))))) 2.0)) (if (<= (* V l) 5e+276) (* c0 (pow (exp (* 0.25 (+ (log (/ 1.0 (* V l))) (log A)))) 2.0)) (* (* (cbrt (/ (/ A l) V)) c0) (cbrt (sqrt (/ (/ A l) V))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* c0 (sqrt (/ A (* V l))))","start":19.36076188503966,"start-est":19.942158949779635,"status":"imp-start","target":false,"target-prog":"#f","time":2548.1318359375,"vars":["c0","A","V","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((9664 59.54886385466321) (14472 24.853554236887238) ())","end":24.853554236887238,"end-est":23.39367264808314,"identifier":"#f","input":"(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))","link":"181-HenrywoodandAgarwalEquation13","name":"Henrywood and Agarwal, Equation (13)","output":"(if (<= c0 -4e+153) (fma (/ (* (pow (* D M) 2.0) h) (* d d)) 0.25 (/ (* -0.5 0.0) w)) (if (<= c0 2.3e+48) (fma (/ (* (/ (pow (* D M) 2.0) d) (- h)) (- d)) 0.25 (/ (* -0.5 (* 0.0 (* c0 c0))) w)) (fma (/ (* (pow (* D M) 2.0) h) (* d d)) 0.25 (/ (* -0.5 0.0) w))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))","start":59.54886385466321,"start-est":60.694312619541094,"status":"imp-start","target":false,"target-prog":"#f","time":6414.962890625,"vars":["c0","w","h","D","d","M"]},{"bits":128,"conversions":[],"cost-accuracy":"((21248 26.77714369342738) (15300 22.77442419649407) ())","end":22.77442419649407,"end-est":20.196501298322413,"identifier":"#f","input":"(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))","link":"182-HenrywoodandAgarwalEquation12","name":"Henrywood and Agarwal, Equation (12)","output":"(if (<= d 1.5e+134) (* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* h (* (* (/ 0.5 l) (/ (* M (* D 0.5)) d)) (/ (* M (* D 0.5)) d))))) (* (sqrt (/ 1.0 (* l h))) d))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))","start":26.77714369342738,"start-est":28.25547775351223,"status":"imp-start","target":false,"target-prog":"#f","time":7154.1259765625,"vars":["d","h","l","M","D"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 8.899127111153938) (4424 1.8160815181000571) ())","end":1.8160815181000571,"end-est":1.2265434423085588,"identifier":"#f","input":"(+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x)))","link":"183-HakyllWebTagsrenderTagCloudfromhakyll4723","name":"Hakyll.Web.Tags:renderTagCloud from hakyll-4.7.2.3","output":"(if (<= (+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x))) -1e-308) (+ (* (- (+ 1.0 (/ z (- (+ 1.0 t) z))) (/ y (- (+ 1.0 t) z))) x) (* a (- (/ y (- (+ 1.0 t) z)) (/ z (- (+ 1.0 t) z))))) (if (<= (+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x))) 0.0) (+ a (* -1.0 (/ (- (+ (* y a) (* (- (+ 1.0 t) y) x)) (* a (+ 1.0 t))) z))) (+ (* (- (+ 1.0 (/ z (- (+ 1.0 t) z))) (/ y (- (+ 1.0 t) z))) x) (* a (- (/ y (- (+ 1.0 t) z)) (/ z (- (+ 1.0 t) z)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x)))","start":8.899127111153938,"start-est":10.347301214943622,"status":"imp-start","target":false,"target-prog":"#f","time":4599.10888671875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 0.021309884708358432) (45440 0.02133297062839725) ())","end":0.02133297062839725,"end-est":0.00390625,"identifier":"#f","input":"(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))","link":"184-HairBSDFsample_fcosTheta","name":"HairBSDF, sample_f, cosTheta","output":"(fma v (log (fma (pow (exp (cbrt -2.0)) (/ (cbrt 4.0) v)) (- 1.0 u) u)) 1.0)","pre":"(and (and (<= 1e-5 u) (<= u 1.0)) (and (<= 0.0 v) (<= v 109.746574)))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))","start":0.021309884708358432,"start-est":0.006191259768442017,"status":"ex-start","target":false,"target-prog":"#f","time":1342.225830078125,"vars":["u","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 7.124190665301528) (13376 0.40127907567884297) ())","end":0.40127907567884297,"end-est":0.296552103893743,"identifier":"#f","input":"(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))","link":"185-HairBSDFgammaforarefractedray","name":"HairBSDF, gamma for a refracted ray","output":"(asin (/ h (fma -0.5 (* (/ sinTheta_O eta) sinTheta_O) eta)))","pre":"(and (and (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0)) (and (<= -1.0 h) (<= h 1.0))) (and (<= 0.0 eta) (<= eta 10.0)))","prec":"binary64","preprocess":"()","spec":"(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))","start":7.124190665301528,"start-est":6.013072670686637,"status":"imp-start","target":false,"target-prog":"#f","time":3579.841064453125,"vars":["sinTheta_O","h","eta"]},{"bits":128,"conversions":[],"cost-accuracy":"((14080 0.459888493054738) (14144 0.3914064761402307) ())","end":0.3914064761402307,"end-est":0.3282013672213042,"identifier":"#f","input":"(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))","link":"186-HairBSDFMpupper","name":"HairBSDF, Mp, upper","output":"(* (/ (* cosTheta_i (/ cosTheta_O v)) (exp (/ (* sinTheta_i sinTheta_O) v))) (/ (/ 1.0 v) (* (sinh (/ 1.0 v)) 2.0)))","pre":"(and (and (and (and (and (and (<= -1.0 cosTheta_i) (<= cosTheta_i 1.0)) (and (<= -1.0 cosTheta_O) (<= cosTheta_O 1.0))) (and (<= -1.0 sinTheta_i) (<= sinTheta_i 1.0))) (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0))) (< 0.1 v)) (<= v 1.5707964))","prec":"binary64","preprocess":"()","spec":"(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))","start":0.459888493054738,"start-est":0.4621639056974155,"status":"ex-start","target":false,"target-prog":"#f","time":3687.2451171875,"vars":["cosTheta_i","cosTheta_O","sinTheta_i","sinTheta_O","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14272 0.024119969420238977) (13504 0.022782083570450865) ())","end":0.022782083570450865,"end-est":0,"identifier":"#f","input":"(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))","link":"187-HairBSDFMplower","name":"HairBSDF, Mp, lower","output":"(/ (* 0.5 (exp (+ 0.6931 (/ (fma cosTheta_O cosTheta_i -1.0) v)))) v)","pre":"(and (and (and (and (and (<= -1.0 cosTheta_i) (<= cosTheta_i 1.0)) (and (<= -1.0 cosTheta_O) (<= cosTheta_O 1.0))) (and (<= -1.0 sinTheta_i) (<= sinTheta_i 1.0))) (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0))) (and (<= -1.5707964 v) (<= v 0.1)))","prec":"binary64","preprocess":"()","spec":"(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))","start":0.024119969420238977,"start-est":0.25,"status":"ex-start","target":false,"target-prog":"#f","time":2332.593994140625,"vars":["cosTheta_i","cosTheta_O","sinTheta_i","sinTheta_O","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.08583928068970828) (13504 0.03977124062518029) ())","end":0.03977124062518029,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x (+ (+ (+ (+ y z) z) y) t)) (* y 5.0))","link":"188-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, B","output":"(fma y 5.0 (fma (* (+ y z) 2.0) x (* x t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (+ (+ (+ (+ y z) z) y) t)) (* y 5.0))","start":0.08583928068970828,"start-est":0.046875,"status":"ex-start","target":false,"target-prog":"#f","time":1775.16015625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.06271936093777043) (13120 0.000625) ())","end":0.000625,"end-est":0,"identifier":"#f","input":"(+ (+ (+ (+ (+ x y) y) x) z) x)","link":"189-GraphicsRenderingPlotRenderPlotLegendrenderLegendI","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendInside from plot-0.2.3.4","output":"(fma 3.0 x (fma 2.0 y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ (+ x y) y) x) z) x)","start":0.06271936093777043,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":967.0419921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.05058405316774643) (13120 0.05058405316774643) ())","end":0.05058405316774643,"end-est":0.06640625,"identifier":"#f","input":"(+ x (/ (fabs (- y x)) 2.0))","link":"190-GraphicsRenderingChartPlotAreaSpotsrenderSpotLegen","name":"Graphics.Rendering.Chart.Plot.AreaSpots:renderSpotLegend from Chart-1.5.3","output":"(fma (fabs (- x y)) 0.5 x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (fabs (- y x)) 2.0))","start":0.05058405316774643,"start-est":0.06640625,"status":"ex-start","target":false,"target-prog":"#f","time":1538.260009765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.013625) (6848 0.00725) ())","end":0.00725,"end-est":0,"identifier":"#f","input":"(+ (* x y) (* (- x 1.0) z))","link":"191-GraphicsRenderingChartDrawingdrawTextsRfromChart15","name":"Graphics.Rendering.Chart.Drawing:drawTextsR from Chart-1.5.3","output":"(fma x y (* (+ x -1.0) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* (- x 1.0) z))","start":0.013625,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":797.47314453125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.056323120312590146) (13248 0.056323120312590146) ())","end":0.056323120312590146,"end-est":0.05078125,"identifier":"#f","input":"(+ (+ x (sin y)) (* z (cos y)))","link":"192-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, C","output":"(+ (+ x (sin y)) (* z (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x (sin y)) (* z (cos y)))","start":0.056323120312590146,"start-est":0.05078125,"status":"ex-start","target":false,"target-prog":"#f","time":2659.718994140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.05919812031259015) (19584 0.057198120312590146) ())","end":0.057198120312590146,"end-est":0.0625,"identifier":"#f","input":"(- (+ x (cos y)) (* z (sin y)))","link":"193-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, B","output":"(fma (- z) (sin y) (+ x (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x (cos y)) (* z (sin y)))","start":0.05919812031259015,"start-est":0.06640625,"status":"ex-start","target":false,"target-prog":"#f","time":2297.58203125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0005) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* x x) 1.0)","link":"194-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, A","output":"(fma x x 1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x x) 1.0)","start":0.0005,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":379.842041015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00325) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* y y))","link":"195-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1","output":"(fma (- y) y x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* y y))","start":0.00325,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":434.540771484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.031375) (6848 0.06075) ())","end":0.06075,"end-est":0,"identifier":"#f","input":"(- (* x x) (* (* y 4.0) z))","link":"196-GraphicsRasterificQuadraticFormuladiscriminantfrom","name":"Graphics.Rasterific.QuadraticFormula:discriminant from Rasterific-0.6.1","output":"(fma y (* -4.0 z) (* x x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* (* y 4.0) z))","start":0.031375,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":793.423095703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00675) (6720 0.0035) ())","end":0.0035,"end-est":0,"identifier":"#f","input":"(+ (* x x) (* y y))","link":"197-GraphicsRasterificLinearcquadrancefromRasterific06","name":"Graphics.Rasterific.Linear:$cquadrance from Rasterific-0.6.1","output":"(fma y y (* x x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x x) (* y y))","start":0.00675,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":448.078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 16.0) x)","link":"198-GraphicsRasterificCubicBezierisSufficientlyFlatfro","name":"Graphics.Rasterific.CubicBezier:isSufficientlyFlat from Rasterific-0.6.1","output":"(* (* x 16.0) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 16.0) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":365.68994140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13440 15.355034758625209) (45892 0.1471809916743553) ())","end":0.1471809916743553,"end-est":0,"identifier":"#f","input":"(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))","link":"199-GivensRotationSVDexamplesimplified","name":"Given's Rotation SVD example, simplified","output":"(if (<= (hypot 1.0 x) 2.0) (fma (* 0.125 x) x (fma (pow x 6.0) 0.0673828125 (fma -0.0859375 (pow x 4.0) (* -0.056243896484375 (pow x 8.0))))) (* (+ 1.0 (+ (/ -0.5 (hypot -1.0 x)) -0.5)) (/ 1.0 (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot -1.0 x))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))","start":15.355034758625209,"start-est":16.0194705902668,"status":"imp-start","target":false,"target-prog":"#f","time":2523.863037109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((14208 0.44852481407809575) (58880 0.4539532281836127) ())","end":0.4539532281836127,"end-est":0.38864005115753786,"identifier":"#f","input":"(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))","link":"200-GTR1distribution","name":"GTR1 distribution","output":"(/ (/ (fma alpha alpha -1.0) (* 2.0 (* (cbrt (* PI PI)) (+ (log alpha) (* (log alpha) (* (fma alpha alpha -1.0) (* cosTheta cosTheta))))))) (cbrt PI))","pre":"(and (and (<= 0.0 cosTheta) (<= cosTheta 1.0)) (and (<= 0.0001 alpha) (<= alpha 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))","start":0.44852481407809575,"start-est":0.44664003907376815,"status":"ex-start","target":false,"target-prog":"#f","time":3388.680908203125,"vars":["cosTheta","alpha"]},{"bits":128,"conversions":[],"cost-accuracy":"((28160 58.136380241123696) (28160 58.136380241123696) ())","end":58.136380241123696,"end-est":58.1363802411197,"identifier":"#f","input":"(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))","link":"201-FromWarwickTuckersValidatedNumerics","name":"From Warwick Tucker's Validated Numerics","output":"(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))","start":58.136380241123696,"start-est":58.1363802411197,"status":"apx-start","target":false,"target-prog":"#f","time":1048.14892578125,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 61.99859042973555) (19904 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))","link":"202-FromRumpina1983paperrewritten","name":"From Rump in a 1983 paper, rewritten","output":"(fma (* y y) (- (fma y y -2.0)) (* 9.0 (pow x 4.0)))","pre":"(and (== x 10864.0) (== y 18817.0))","prec":"binary64","preprocess":"()","spec":"(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))","start":61.99859042973555,"start-est":61.99859042974503,"status":"imp-start","target":false,"target-prog":"#f","time":693.840087890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 52.0) (20160 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))","link":"203-FromRumpina1983paper","name":"From Rump in a 1983 paper","output":"(fma (* y y) 2.0 (fma (- (* y y)) (* y y) (* 9.0 (pow x 4.0))))","pre":"(and (== x 10864.0) (== y 18817.0))","prec":"binary64","preprocess":"()","spec":"(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))","start":52.0,"start-est":52.0,"status":"imp-start","target":false,"target-prog":"#f","time":746.639892578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13952 0.9837712406251803) (59264 0.01765828632589338) ())","end":0.01765828632589338,"end-est":0.00390625,"identifier":"#f","input":"(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))","link":"204-FalknerandBoettcherEquation22","name":"Falkner and Boettcher, Equation (22+)","output":"(* (/ (cbrt (* (pow (fma (* -6.0 v) v 2.0) -0.5) -1.3333333333333333)) -1.0) (/ (pow (cbrt (* (pow (fma (* -6.0 v) v 2.0) -0.5) -1.3333333333333333)) 2.0) (- PI (* PI (* v v)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))","start":0.9837712406251803,"start-est":0.9921875,"status":"ex-start","target":false,"target-prog":"#f","time":1838.088134765625,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14464 0.44344181570887553) (33152 0.11689868437626202) ())","end":0.11689868437626202,"end-est":0.09765625,"identifier":"#f","input":"(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))","link":"205-FalknerandBoettcherEquation2013","name":"Falkner and Boettcher, Equation (20:1,3)","output":"(/ (/ (/ (/ (fma (* 5.0 v) v -1.0) PI) (sqrt (fma (* v v) -6.0 2.0))) t) (fma v v -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))","start":0.44344181570887553,"start-est":0.38185502930532605,"status":"ex-start","target":false,"target-prog":"#f","time":2591.483154296875,"vars":["v","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 0.012990601562950722) (39680 0.01154248125036058) ())","end":0.01154248125036058,"end-est":0.00390625,"identifier":"#f","input":"(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))","link":"206-FalknerandBoettcherAppendixB2","name":"Falkner and Boettcher, Appendix B, 2","output":"(* (* (cbrt (* (fma (* -3.0 v) v 1.0) 0.125)) (fma v (- v) 1.0)) (cbrt (sqrt (* (fma (* -3.0 v) v 1.0) 0.125))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))","start":0.012990601562950722,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":951.827880859375,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.5343139335257057) (32704 0.5344762828254319) ())","end":0.5344762828254319,"end-est":0.32306127723449507,"identifier":"#f","input":"(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))","link":"207-FalknerandBoettcherAppendixB1","name":"Falkner and Boettcher, Appendix B, 1","output":"(pow (pow (acos (/ (fma -5.0 (* v v) 1.0) (fma v v -1.0))) 3.0) 0.3333333333333333)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))","start":0.5343139335257057,"start-est":0.32700994032127806,"status":"ex-start","target":false,"target-prog":"#f","time":3019.615966796875,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 1.9543071398020158) (13440 1.9378802601146061) ())","end":1.9378802601146061,"end-est":1.2466182248680318,"identifier":"#f","input":"(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))","link":"208-FalknerandBoettcherAppendixA","name":"Falkner and Boettcher, Appendix A","output":"(/ (* a (pow k m)) (fma k (+ 10.0 k) 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))","start":1.9543071398020158,"start-est":1.2466182248680318,"status":"apx-start","target":false,"target-prog":"#f","time":4277.01318359375,"vars":["a","k","m"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 39.33560284013568) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* (+ x 1.0) (+ x 1.0)) 1.0)","link":"209-Expandingasquare","name":"Expanding a square","output":"(fma x x (+ x x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (+ x 1.0) (+ x 1.0)) 1.0)","start":39.33560284013568,"start-est":40.35326525728827,"status":"imp-start","target":false,"target-prog":"#f","time":740.407958984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* x x) (* y y))","link":"210-ExamplesBasicsBasicTestsf2fromsbv44","name":"Examples.Basics.BasicTests:f2 from sbv-4.4","output":"(* (+ x y) (- x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* y y))","start":0.007436481637041209,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":483.30712890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.001) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(* (+ x y) (- x y))","link":"211-ExamplesBasicsBasicTestsf1fromsbv44","name":"Examples.Basics.BasicTests:f1 from sbv-4.4","output":"(* (+ x y) (- x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) (- x y))","start":0.001,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":463.932861328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((58816 0.12746936093777045) (77952 0.1287830828133113) ())","end":0.1287830828133113,"end-est":0.11328125,"identifier":"#f","input":"(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))","link":"212-ExamplefromRobby","name":"Example from Robby","output":"(fabs (fma (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))) (* (* ew (sin t)) (pow (cbrt (cos (atan (/ (/ eh ew) (tan t))))) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))","start":0.12746936093777045,"start-est":0.1171875,"status":"ex-start","target":false,"target-prog":"#f","time":5287.40087890625,"vars":["eh","ew","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((58944 0.12832312031259016) (65280 0.1282712406251803) ())","end":0.1282712406251803,"end-est":0.11328125,"identifier":"#f","input":"(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))","link":"213-Example2fromRobby","name":"Example 2 from Robby","output":"(fabs (fma (* eh (sin t)) (sin (atan (* (tan t) (- (/ eh ew))))) (* (- ew) (* (cos t) (cos (atan (* (tan t) (- (/ eh ew)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))","start":0.12832312031259016,"start-est":0.1171875,"status":"ex-start","target":false,"target-prog":"#f","time":6340.899169921875,"vars":["eh","ew","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((21056 39.528697041883795) (39872 0.125980888065392) ())","end":0.125980888065392,"end-est":0.11003876953688403,"identifier":"#f","input":"(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))","link":"214-Equirectangularapproximationtodistanceonagreatcirc","name":"Equirectangular approximation to distance on a great circle","output":"(* R (hypot (* (fma (cos (* 0.5 phi1)) (cos (* 0.5 phi2)) (- (* (sin (* 0.5 phi2)) (sin (* 0.5 phi1))))) (- lambda1 lambda2)) (- phi1 phi2)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))","start":39.528697041883795,"start-est":36.154644581512464,"status":"imp-start","target":false,"target-prog":"#f","time":5817.2939453125,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 14.25682807947797) (19584 0.012511098529839615) ())","end":0.012511098529839615,"end-est":0.00390625,"identifier":"#f","input":"(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))","link":"215-Eccentricityofanellipse","name":"Eccentricity of an ellipse","output":"(sqrt (fabs (+ (pow (/ b a) 2.0) -1.0)))","pre":"(and (and (<= 0.0 b) (<= b a)) (<= a 1.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))","start":14.25682807947797,"start-est":13.7578125,"status":"imp-start","target":false,"target-prog":"#f","time":1318.822021484375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 7.795304762161844) (13248 0.249875) ())","end":0.249875,"end-est":0.23046875,"identifier":"#f","input":"(/ 10.0 (- 1.0 (* x x)))","link":"216-ENASection14MentionedB","name":"ENA, Section 1.4, Mentioned, B","output":"(/ (cbrt (/ 100.0 -0.1)) (fma x x -1.0))","pre":"(and (<= 0.999 x) (<= x 1.001))","prec":"binary64","preprocess":"()","spec":"(/ 10.0 (- 1.0 (* x x)))","start":7.795304762161844,"start-est":7.76062034513366,"status":"imp-start","target":false,"target-prog":"#f","time":1087.386962890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 7.265665543106895) (53448 0.3179932019479763) ())","end":0.3179932019479763,"end-est":0.3145779863758146,"identifier":"#f","input":"(- (pow (+ x eps) 5.0) (pow x 5.0))","link":"217-ENASection14Exercise4bn5","name":"ENA, Section 1.4, Exercise 4b, n=5","output":"(if (<= (- (pow (+ x eps) 5.0) (pow x 5.0)) -2e-316) (- (pow (+ x eps) 5.0) (pow x 5.0)) (if (<= (- (pow (+ x eps) 5.0) (pow x 5.0)) 0.0) (fma (* eps eps) (fma 4.0 (pow x 3.0) (* (* (* x x) 6.0) x)) (* eps (* 5.0 (pow x 4.0)))) (- (pow (+ x eps) 5.0) (pow x 5.0))))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x eps) 5.0) (pow x 5.0))","start":7.265665543106895,"start-est":7.611930366391315,"status":"imp-start","target":false,"target-prog":"#f","time":1740.875,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 15.770962424259192) (6848 0.006125) ())","end":0.006125,"end-est":0.01171875,"identifier":"#f","input":"(- (pow (+ x eps) 2.0) (pow x 2.0))","link":"218-ENASection14Exercise4bn2","name":"ENA, Section 1.4, Exercise 4b, n=2","output":"(fma eps eps (* eps (+ x x)))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x eps) 2.0) (pow x 2.0))","start":15.770962424259192,"start-est":14.354868393754275,"status":"imp-start","target":false,"target-prog":"#f","time":1233.06689453125,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 3.5284684767396053) (58176 1.7487958728229136) ())","end":1.7487958728229136,"end-est":1.7877009550748653,"identifier":"#f","input":"(* (cos x) (exp (* 10.0 (* x x))))","link":"219-ENASection14Exercise1","name":"ENA, Section 1.4, Exercise 1","output":"(* (cbrt (pow (pow (exp x) x) 20.0)) (* (cos x) (cbrt (pow (pow (exp 10.0) x) x))))","pre":"(and (<= 1.99 x) (<= x 2.01))","prec":"binary64","preprocess":"()","spec":"(* (cos x) (exp (* 10.0 (* x x))))","start":3.5284684767396053,"start-est":3.579024396718685,"status":"imp-start","target":false,"target-prog":"#f","time":1743.5068359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((99200 24.53964798666605) (171136 13.381468435307458) ())","end":13.381468435307458,"end-est":11.746845026184765,"identifier":"#f","input":"(* R (* 2.0 (atan2 (sqrt (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0))))) (sqrt (- 1.0 (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0)))))))))","link":"220-Distanceonagreatcircle","name":"Distance on a great circle","output":"(* R (* 2.0 (atan2 (sqrt (+ (pow (fma (cos (* -0.5 phi2)) (sin (* 0.5 phi1)) (* (cos (* 0.5 phi1)) (sin (* -0.5 phi2)))) 2.0) (* (cos phi2) (* (cos phi1) (pow (+ (* (sin (* 0.5 lambda1)) (cos (- (* lambda2 0.5)))) (* (cos (* 0.5 lambda1)) (sin (- (* lambda2 0.5))))) 2.0))))) (sqrt (- 1.0 (+ (pow (fma (sin (* phi1 0.5)) (cos (* phi2 0.5)) (- (* (cos (* phi1 0.5)) (sin (* phi2 0.5))))) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* R (* 2.0 (atan2 (sqrt (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0))))) (sqrt (- 1.0 (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0)))))))))","start":24.53964798666605,"start-est":22.12457552658597,"status":"imp-start","target":false,"target-prog":"#f","time":15008.306884765625,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 1.3243588834077693) (13248 0.6658553325608146) ())","end":0.6658553325608146,"end-est":0.7059662122126602,"identifier":"#f","input":"(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))","link":"221-DisneyBSSRDFsamplescatteringprofileupper","name":"Disney BSSRDF, sample scattering profile, upper","output":"(* (* s (log1p (fma u -1.3333333333333333 0.3333333333333333))) -3.0)","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (<= 0.25 u) (<= u 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))","start":1.3243588834077693,"start-est":1.3783629863701992,"status":"apx-start","target":false,"target-prog":"#f","time":2269.18212890625,"vars":["s","u"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 13.232435078421902) (6784 0.252625) ())","end":0.252625,"end-est":0.24609375,"identifier":"#f","input":"(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))","link":"222-DisneyBSSRDFsamplescatteringprofilelower","name":"Disney BSSRDF, sample scattering profile, lower","output":"(* (- s) (log1p (* -4.0 u)))","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (<= 2.328306437e-10 u) (<= u 0.25)))","prec":"binary64","preprocess":"()","spec":"(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))","start":13.232435078421902,"start-est":13.073227070665022,"status":"imp-start","target":false,"target-prog":"#f","time":2628.153076171875,"vars":["s","u"]},{"bits":128,"conversions":[],"cost-accuracy":"((27456 0.03787531181555719) (27456 0.03681707931454356) ())","end":0.03681707931454356,"end-est":0.04923382078844846,"identifier":"#f","input":"(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))","link":"223-DisneyBSSRDFPDFofscatteringprofile","name":"Disney BSSRDF, PDF of scattering profile","output":"(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* 6.0 (* s (* r PI)))))","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (< 1e-6 r) (< r 1000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))","start":0.03787531181555719,"start-est":0.05704632078844846,"status":"ex-start","target":false,"target-prog":"#f","time":2442.096923828125,"vars":["s","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((72896 0.4708448001138101) (150336 0.476735489107731) ())","end":0.476735489107731,"end-est":0.4271851562950723,"identifier":"#f","input":"(/ (+ 2.0 (* (* (* (sqrt 2.0) (- (sin x) (/ (sin y) 16.0))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)))))","link":"224-DiagramsTwoDPathMetafontInternalhobbyFfromdiagrams","name":"Diagrams.TwoD.Path.Metafont.Internal:hobbyF from diagrams-contrib-1.3.0.5","output":"(/ (+ 2.0 (* (* (* (+ (sin x) (* (sin y) -0.0625)) (+ (sin y) (* (sin x) -0.0625))) (sqrt 2.0)) (* (+ (cbrt (pow (cos x) 2.0)) (+ (cbrt (pow (cos y) 2.0)) (* (cbrt (cos x)) (cbrt (cos y))))) (- (cbrt (cos x)) (cbrt (cos y)))))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 2.0 (* (* (* (sqrt 2.0) (- (sin x) (/ (sin y) 16.0))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)))))","start":0.4708448001138101,"start-est":0.44833764652663033,"status":"ex-start","target":false,"target-prog":"#f","time":5853.107177734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.003875) (13120 0.005125) ())","end":0.005125,"end-est":0,"identifier":"#f","input":"(sqrt (- 1.0 (* x x)))","link":"225-DiagramsTwoDEllipseellipsefromdiagramslib1303","name":"Diagrams.TwoD.Ellipse:ellipse from diagrams-lib-1.3.0.3","output":"(pow (fma x (- x) 1.0) 0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (- 1.0 (* x x)))","start":0.003875,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":472.14794921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01425) (448 0.01425) ())","end":0.01425,"end-est":0.00390625,"identifier":"#f","input":"(/ (- x y) (- 1.0 y))","link":"226-DiagramsTrailsplitAtParamfromdiagramslib1303C","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, C","output":"(/ (- y x) (+ -1.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- 1.0 y))","start":0.01425,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":811.68994140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.13019812031259018) (13248 0.13019812031259018) ())","end":0.13019812031259018,"end-est":0.109375,"identifier":"#f","input":"(+ (* x (cos y)) (* z (sin y)))","link":"227-DiagramsThreeDTransformaboutYfromdiagramslib1303","name":"Diagrams.ThreeD.Transform:aboutY from diagrams-lib-1.3.0.3","output":"(+ (* x (cos y)) (* z (sin y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (cos y)) (* z (sin y)))","start":0.13019812031259018,"start-est":0.109375,"status":"ex-start","target":false,"target-prog":"#f","time":2294.796142578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.12844812031259017) (19520 0.12325) ())","end":0.12325,"end-est":0.1328125,"identifier":"#f","input":"(+ (* x (sin y)) (* z (cos y)))","link":"228-DiagramsThreeDTransformaboutXfromdiagramslib1303B","name":"Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, B","output":"(fma x (sin y) (* z (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (sin y)) (* z (cos y)))","start":0.12844812031259017,"start-est":0.13671875,"status":"ex-start","target":false,"target-prog":"#f","time":2632.135986328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.12825) (19584 0.125125) ())","end":0.125125,"end-est":0.109375,"identifier":"#f","input":"(- (* x (cos y)) (* z (sin y)))","link":"229-DiagramsThreeDTransformaboutXfromdiagramslib1303A","name":"Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, A","output":"(fma (- (sin y)) z (* x (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x (cos y)) (* z (sin y)))","start":0.12825,"start-est":0.1171875,"status":"ex-start","target":false,"target-prog":"#f","time":2450.81396484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.015573120312590146) (6720 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(+ x (* (- y x) z))","link":"230-DiagramsThreeDShapesfrustumfromdiagramslib1303B","name":"Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, B","output":"(fma (- y x) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y x) z))","start":0.015573120312590146,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":584.846923828125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.178375) (320 0.178375) ())","end":0.178375,"end-est":0.21875,"identifier":"#f","input":"(* (* x 3.0) x)","link":"231-DiagramsTangentcatParamfromdiagramslib1303F","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, F","output":"(* (* x 3.0) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 3.0) x)","start":0.178375,"start-est":0.21875,"status":"ex-start","target":false,"target-prog":"#f","time":880.9189453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (/ y 4.0))","link":"232-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, E","output":"(fma y -0.25 x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y 4.0))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":415.653076171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.037625) (6848 0.037625) ())","end":0.037625,"end-est":0,"identifier":"#f","input":"(- (/ (* x y) 2.0) (/ z 8.0))","link":"233-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, D","output":"(fma (* x y) 0.5 (* z -0.125))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ (* x y) 2.0) (/ z 8.0))","start":0.037625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":639.3701171875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.12275) (13632 0.119875) ())","end":0.119875,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (+ (* x y) (/ (* z t) 16.0)) (/ (* a b) 4.0)) c)","link":"234-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, C","output":"(+ (fma y x (fma (* z t) 0.0625 (* (* a b) -0.25))) c)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (* x y) (/ (* z t) 16.0)) (/ (* a b) 4.0)) c)","start":0.12275,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2653.22607421875,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.08816524101186092) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* (/ 3.0 8.0) y))","link":"235-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, A","output":"(fma -0.375 y x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* (/ 3.0 8.0) y))","start":0.08816524101186092,"start-est":0.09765625,"status":"ex-start","target":false,"target-prog":"#f","time":631.24609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.03732949236706545) (320 0.03732949236706545) ())","end":0.03732949236706545,"end-est":0,"identifier":"#f","input":"(/ x (* y 2.0))","link":"236-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, C","output":"(/ x (+ y y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y 2.0))","start":0.03732949236706545,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":465.269775390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0.13725) (13120 0.13575) ())","end":0.13575,"end-est":0.11328125,"identifier":"#f","input":"(* (/ 1.0 2.0) (+ x (* y (sqrt z))))","link":"237-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, B","output":"(* 0.5 (fma (sqrt z) y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (+ x (* y (sqrt z))))","start":0.13725,"start-est":0.11328125,"status":"ex-start","target":false,"target-prog":"#f","time":1825.614013671875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.06294812031259014) (6720 0.056) ())","end":0.056,"end-est":0,"identifier":"#f","input":"(- x (* (* y 4.0) z))","link":"238-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, A","output":"(fma (* -4.0 y) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* (* y 4.0) z))","start":0.06294812031259014,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":562.801025390625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.33775) (320 0.311125) ())","end":0.311125,"end-est":0.2109375,"identifier":"#f","input":"(* (* x 27.0) y)","link":"239-DiagramsSolvePolynomialcubFormfromdiagramssolve01F","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, F","output":"(* (* 27.0 y) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 27.0) y)","start":0.33775,"start-est":0.4921875,"status":"ex-start","target":false,"target-prog":"#f","time":1181.197998046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.129875) (6528 0.001375) ())","end":0.001375,"end-est":0,"identifier":"#f","input":"(* (* x x) x)","link":"240-DiagramsSegmentcatParamfromdiagramslib1303C","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, C","output":"(pow x 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) x)","start":0.129875,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":368.865966796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.015948120312590144) (6848 0.008875) ())","end":0.008875,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x y) (* (- 1.0 x) z))","link":"241-DiagramsBackendRasterificcrenderfromdiagramsraster","name":"Diagrams.Backend.Rasterific:$crender from diagrams-rasterific-1.3.1.3","output":"(fma x y (* z (- 1.0 x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* (- 1.0 x) z))","start":0.015948120312590144,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":1013.931884765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((84480 0.14946264495637207) (90752 0.1499107652689622) ())","end":0.1499107652689622,"end-est":0.16831394711805486,"identifier":"#f","input":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))","link":"242-Destinationgivenbearingonagreatcircle","name":"Destination given bearing on a great circle","output":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin (asin (fma (cos theta) (* (cos phi1) (sin delta)) (* (sin phi1) (cos delta))))) (sin phi1)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))","start":0.14946264495637207,"start-est":0.16831394711805486,"status":"ex-start","target":false,"target-prog":"#f","time":7906.053955078125,"vars":["lambda1","phi1","phi2","delta","theta"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.5949434028191372) (832 0.6554695644503525) ())","end":0.6554695644503525,"end-est":0.078125,"identifier":"#f","input":"(- 1.0 (/ x (* (- y z) (- y t))))","link":"243-DataRandomDistributionTriangulartriangularCDFfromr","name":"Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, A","output":"(+ 1.0 (* (/ (/ -1.0 (- z y)) (- t y)) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (/ x (* (- y z) (- y t))))","start":0.5949434028191372,"start-est":0.09161534323313197,"status":"ex-start","target":false,"target-prog":"#f","time":2725.8349609375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.006412940441233937) (6720 0.006412940441233937) ())","end":0.006412940441233937,"end-est":0,"identifier":"#f","input":"(exp (* (* x y) y))","link":"244-DataRandomDistributionNormalnormalFfromrandomfu026","name":"Data.Random.Distribution.Normal:normalF from random-fu-0.2.6.2","output":"(exp (* (* x y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (* (* x y) y))","start":0.006412940441233937,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":621.9638671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ x x) 1.0)","link":"245-DataRandomDistributionNormaldoubleStdNormalZfromra","name":"Data.Random.Distribution.Normal:doubleStdNormalZ from random-fu-0.2.6.2","output":"(fma 2.0 x -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x x) 1.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":358.715087890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0009481203125901445) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x x) 1.0)","link":"246-DataRandomDicerollfromdice01","name":"Data.Random.Dice:roll from dice-0.1","output":"(fma x x -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) 1.0)","start":0.0009481203125901445,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":421.72314453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.036778602336311986) (6976 0.036778602336311986) ())","end":0.036778602336311986,"end-est":0.12258214846976202,"identifier":"#f","input":"(- x (/ y (+ 1.0 (/ (* x y) 2.0))))","link":"247-DataNumberErfcinvnormcdffromerf2000B","name":"Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, B","output":"(- x (/ y (fma (* x y) 0.5 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y (+ 1.0 (/ (* x y) 2.0))))","start":0.036778602336311986,"start-est":0.12258214846976202,"status":"ex-start","target":false,"target-prog":"#f","time":1899.72509765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.16875) (320 0.16875) ())","end":0.16875,"end-est":0.21484375,"identifier":"#f","input":"(* (* x y) y)","link":"248-DataHyperLogLogConfighllfromhyperloglog034","name":"Data.HyperLogLog.Config:hll from hyperloglog-0.3.4","output":"(* (* x y) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x y) y)","start":0.16875,"start-est":0.21484375,"status":"ex-start","target":false,"target-prog":"#f","time":1118.31396484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.008125) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x y) x)","link":"249-DataHistogramBinLogBinDcbinSizeNfromhistogramfill0","name":"Data.Histogram.Bin.LogBinD:$cbinSizeN from histogram-fill-0.8.4.1","output":"(fma y x (- x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x y) x)","start":0.008125,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":589.56689453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.009755549264919807) (6720 0.004375) ())","end":0.004375,"end-est":0,"identifier":"#f","input":"(+ (+ (/ x 2.0) (* y x)) z)","link":"250-DataHistogramBinBinFcfromIndexfromhistogramfill084","name":"Data.Histogram.Bin.BinF:$cfromIndex from histogram-fill-0.8.4.1","output":"(fma x (+ 0.5 y) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (/ x 2.0) (* y x)) z)","start":0.009755549264919807,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":585.802978515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.010094360937770434) (6720 0.0052193609377704335) ())","end":0.0052193609377704335,"end-est":0,"identifier":"#f","input":"(- (* (+ x 1.0) y) x)","link":"251-DataColourSRGBtransferFunctionfromcolour233","name":"Data.Colour.SRGB:transferFunction from colour-2.3.3","output":"(- (fma y x y) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (+ x 1.0) y) x)","start":0.010094360937770434,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":485.425048828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012875) (448 0.012875) ())","end":0.012875,"end-est":0.0078125,"identifier":"#f","input":"(/ (+ x y) (+ y 1.0))","link":"252-DataColourSRGBinvTransferFunctionfromcolour233","name":"Data.Colour.SRGB:invTransferFunction from colour-2.3.3","output":"(/ (+ x y) (+ y 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (+ y 1.0))","start":0.012875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":939.10693359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 3.5543231203125902) (7304 0.540652444810742) ())","end":0.540652444810742,"end-est":0.1171875,"identifier":"#f","input":"(* x (- 1.0 (* y z)))","link":"253-DataColourRGBSpaceHSVhsvfromcolour233I","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, I","output":"(if (<= (* y z) -1e+253) (fma (- y) (* z x) x) (if (<= (* y z) 5e+104) (* x (fma (- z) y 1.0)) (fma (- y) (* z x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* y z)))","start":3.5543231203125902,"start-est":4.87109375,"status":"imp-start","target":false,"target-prog":"#f","time":1659.093994140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0095) (320 0.008375) ())","end":0.008375,"end-est":0.0078125,"identifier":"#f","input":"(* x (- 1.0 y))","link":"254-DataColourRGBSpaceHSVhsvfromcolour233H","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, H","output":"(- x (* x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 y))","start":0.0095,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":794.116943359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.010875) (192 0.010875) ())","end":0.010875,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ 1.0 3.0))","link":"255-DataColourRGBSpaceHSLhslfromcolour233G","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, G","output":"(+ x -0.3333333333333333)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ 1.0 3.0))","start":0.010875,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":735.278076171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.009375) (58688 0.01302124062518029) ())","end":0.01302124062518029,"end-est":0.01171875,"identifier":"#f","input":"(+ x (/ 1.0 3.0))","link":"256-DataColourRGBSpaceHSLhslfromcolour233F","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, F","output":"(+ (* (* (cbrt x) (+ (cbrt x) (cbrt -0.3333333333333333))) (cbrt 0.3333333333333333)) (+ 0.3333333333333333 (+ x (* (cbrt x) (fma (cbrt x) (cbrt -0.3333333333333333) (cbrt 0.1111111111111111))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ 1.0 3.0))","start":0.009375,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":1235.697021484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.41489248282485014) (19968 0.14979248125036057) ())","end":0.14979248125036057,"end-est":0.10546875,"identifier":"#f","input":"(+ x (* (* (- y x) 6.0) (- (/ 2.0 3.0) z)))","link":"257-DataColourRGBSpaceHSLhslfromcolour233D","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, D","output":"(fma x -3.0 (fma (- z) (fma 6.0 y (* -6.0 x)) (* 4.0 y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* (- y x) 6.0) (- (/ 2.0 3.0) z)))","start":0.41489248282485014,"start-est":0.3551750488422101,"status":"ex-start","target":false,"target-prog":"#f","time":2902.25,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x 2.0) y)","link":"258-DataColourRGBSpaceHSLhslfromcolour233C","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, C","output":"(- (* x 2.0) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x 2.0) y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":424.4970703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0085) (448 0.0085) ())","end":0.0085,"end-est":0,"identifier":"#f","input":"(- (+ x y) (* x y))","link":"259-DataColourRGBSpaceHSLhslfromcolour233A","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, A","output":"(- (+ x y) (* x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) (* x y))","start":0.0085,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":429.0380859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ x y) 2.0)","link":"260-DataColourRGBhslsvfromcolour233A","name":"Data.Colour.RGB:hslsv from colour-2.3.3, A","output":"(* (+ x y) 0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":435.6259765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.008615601562950723) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x 116.0) 16.0)","link":"261-DataColourCIElightnessfromcolour233","name":"Data.Colour.CIE:lightness from colour-2.3.3","output":"(fma x 116.0 -16.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x 116.0) 16.0)","start":0.008615601562950723,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":452.31396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.03325) (6720 0.017214280689708265) ())","end":0.017214280689708265,"end-est":0.00390625,"identifier":"#f","input":"(* 200.0 (- x y))","link":"262-DataColourCIEcieLABViewfromcolour233C","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, C","output":"(fma 200.0 x (* -200.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 200.0 (- x y))","start":0.03325,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":940.7099609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01675) (6720 0.009573120312590146) ())","end":0.009573120312590146,"end-est":0.01171875,"identifier":"#f","input":"(* 500.0 (- x y))","link":"263-DataColourCIEcieLABViewfromcolour233B","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, B","output":"(fma y -500.0 (* 500.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 500.0 (- x y))","start":0.01675,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":757.672119140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.07793648163704121) (6592 0.07554903967784733) ())","end":0.07554903967784733,"end-est":0.0703125,"identifier":"#f","input":"(+ (* (/ 841.0 108.0) x) (/ 4.0 29.0))","link":"264-DataColourCIEcieLABViewfromcolour233A","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, A","output":"(fma 7.787037037037037 x 0.13793103448275862)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (/ 841.0 108.0) x) (/ 4.0 29.0))","start":0.07793648163704121,"start-est":0.0703125,"status":"ex-start","target":false,"target-prog":"#f","time":875.670166015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.007674039677847345) (320 0.007674039677847345) ())","end":0.007674039677847345,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ y 200.0))","link":"265-DataColourCIEcieLABfromcolour233D","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, D","output":"(- x (/ y 200.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y 200.0))","start":0.007674039677847345,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":707.036865234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0073231203125901445) (320 0.0073231203125901445) ())","end":0.0073231203125901445,"end-est":0.00390625,"identifier":"#f","input":"(+ x (/ y 500.0))","link":"266-DataColourCIEcieLABfromcolour233C","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, C","output":"(+ x (/ y 500.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ y 500.0))","start":0.0073231203125901445,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":709.573974609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00725) (320 0.00725) ())","end":0.00725,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ x 16.0) 116.0)","link":"267-DataColourCIEcieLABfromcolour233B","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, B","output":"(/ (+ x 16.0) 116.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x 16.0) 116.0)","start":0.00725,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":680.802001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.000875) (320 0.00075) ())","end":0.00075,"end-est":0,"identifier":"#f","input":"(- (- 1.0 x) y)","link":"268-DataColourCIEChromaticitychromaCoordsfromcolour233","name":"Data.Colour.CIE.Chromaticity:chromaCoords from colour-2.3.3","output":"(- 1.0 (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- 1.0 x) y)","start":0.000875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":394.181884765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.0965) (1088 0.020625) ())","end":0.020625,"end-est":0.0078125,"identifier":"#f","input":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.25)) z)) y))","link":"269-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, C","output":"(+ 1.0 (+ (* -4.0 (/ z y)) (* 4.0 (/ (+ (* 0.25 y) x) y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.25)) z)) y))","start":0.0965,"start-est":0.26953125,"status":"ex-start","target":false,"target-prog":"#f","time":1669.85400390625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.161125) (832 0.0135) ())","end":0.0135,"end-est":0.00390625,"identifier":"#f","input":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.75)) z)) y))","link":"270-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, A","output":"(+ 1.0 (* 4.0 (+ (- 0.75 (/ z y)) (/ x y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.75)) z)) y))","start":0.161125,"start-est":0.5625,"status":"ex-start","target":false,"target-prog":"#f","time":1338.844970703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 0.4559594298923382) (34432 0.3406100514288162) ())","end":0.3406100514288162,"end-est":0.22916237994555383,"identifier":"#f","input":"(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))","link":"271-Curveintersectionscalewidthbasedonribbonorientatio","name":"Curve intersection, scale width based on ribbon orientation","output":"(+ (* (+ (* (* -0.16666666666666666 (+ (pow (- 1.0 u) 3.0) (+ u -1.0))) (* normAngle normAngle)) (- 1.0 u)) n0_i) (* (+ (* -0.16666666666666666 (/ (* (pow u 3.0) (pow normAngle 3.0)) (sin normAngle))) (/ (* u normAngle) (sin normAngle))) n1_i))","pre":"(and (and (and (and (<= 0.0 normAngle) (<= normAngle (/ PI 2.0))) (and (<= -1.0 n0_i) (<= n0_i 1.0))) (and (<= -1.0 n1_i) (<= n1_i 1.0))) (and (<= 2.328306437e-10 u) (<= u 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))","start":0.4559594298923382,"start-est":0.46119851489691627,"status":"ex-start","target":false,"target-prog":"#f","time":4279.26708984375,"vars":["normAngle","u","n0_i","n1_i"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 52.43419072798439) (66752 1.5219958975943315) ())","end":1.5219958975943315,"end-est":1.6252408327365553,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"272-Cubiccriticalwiderange","name":"Cubic critical, wide range","output":"(fma -0.5625 (/ (* (pow c 3.0) (* a a)) (pow b 5.0)) (fma -0.16666666666666666 (/ (fma (pow (* c a) 4.0) 5.0625 (* (pow (* c a) 4.0) (* -1.125 -1.125))) (* a (pow b 7.0))) (fma -0.5 (/ c b) (/ (* -0.375 (* (* c c) a)) (pow b 3.0)))))","pre":"(and (and (and (< 4.930380657631324e-32 a) (< a 2.028240960365167e+31)) (and (< 4.930380657631324e-32 b) (< b 2.028240960365167e+31))) (and (< 4.930380657631324e-32 c) (< c 2.028240960365167e+31)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":52.43419072798439,"start-est":51.594050466988485,"status":"imp-start","target":false,"target-prog":"#f","time":3589.36279296875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 28.40231257286644) (74244 5.339294693781758) ())","end":5.339294693781758,"end-est":4.009275174281605,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"273-Cubiccriticalnarrowrange","name":"Cubic critical, narrow range","output":"(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -200.0) (* (* (- (sqrt (fma -3.0 (* a c) (* b b))) b) (cbrt (/ 0.3333333333333333 a))) (pow (cbrt (* 3.0 a)) -2.0)) (fma -0.5625 (/ (* (pow c 3.0) (* a a)) (pow b 5.0)) (fma -0.16666666666666666 (/ (fma (pow (* c a) 4.0) 5.0625 (* (* -1.125 -1.125) (pow (* c a) 4.0))) (* a (pow b 7.0))) (fma -0.5 (/ c b) (/ (* -0.375 (* (* c c) a)) (pow b 3.0))))))","pre":"(and (and (and (< 1.0536712127723509e-8 a) (< a 94906265.62425156)) (and (< 1.0536712127723509e-8 b) (< b 94906265.62425156))) (and (< 1.0536712127723509e-8 c) (< c 94906265.62425156)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":28.40231257286644,"start-est":29.791476765804404,"status":"imp-start","target":false,"target-prog":"#f","time":3168.096923828125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 43.925406672528574) (66752 3.0431616806845887) ())","end":3.0431616806845887,"end-est":2.3681548837120956,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"274-Cubiccriticalmediumrange","name":"Cubic critical, medium range","output":"(fma -0.5625 (/ (* (pow c 3.0) (* a a)) (pow b 5.0)) (fma -0.16666666666666666 (/ (fma (pow (* c a) 4.0) 5.0625 (* (* -1.125 -1.125) (pow (* c a) 4.0))) (* a (pow b 7.0))) (fma -0.5 (/ c b) (/ (* -0.375 (* (* c c) a)) (pow b 3.0)))))","pre":"(and (and (and (< 1.1102230246251565e-16 a) (< a 9007199254740992.0)) (and (< 1.1102230246251565e-16 b) (< b 9007199254740992.0))) (and (< 1.1102230246251565e-16 c) (< c 9007199254740992.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":43.925406672528574,"start-est":45.24483962062715,"status":"imp-start","target":false,"target-prog":"#f","time":3691.673095703125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.39822533787267) (13960 11.373729232593035) ())","end":11.373729232593035,"end-est":8.211112970736279,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"275-Cubiccritical","name":"Cubic critical","output":"(if (<= b -2.9e+94) (/ (* -0.6666666666666666 b) a) (if (<= b 3e-158) (/ (+ (- b) (sqrt (fma c (* -3.0 a) (* b b)))) (* 3.0 a)) (/ (* -0.5 c) b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":34.39822533787267,"start-est":36.56801711318677,"status":"imp-start","target":false,"target-prog":"#f","time":3173.80712890625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.015164669951762516) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ (+ x y) z) (+ x (+ y z)))","link":"276-Commuteandassociate","name":"Commute and associate","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (+ x y) z) (+ x (+ y z)))","start":0.015164669951762516,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1136.173828125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 29.1165038001713) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ 1.0 x) x)","link":"277-Cancelliketerms","name":"Cancel like terms","output":"1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ 1.0 x) x)","start":29.1165038001713,"start-est":29.55792200167556,"status":"imp-start","target":false,"target-prog":"#f","time":420.2119140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((14656 0.025403970356125953) (27520 0.02954568991781649) ())","end":0.02954568991781649,"end-est":0.015625,"identifier":"#f","input":"(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))","link":"278-BulmashinitializePoisson","name":"Bulmash initializePoisson","output":"(+ (* (/ 1.0 (+ 1.0 (exp (/ (- (+ (+ EDonor mu) Vef) Ec) KbT)))) NdChar) (/ NaChar (+ 1.0 (pow (cbrt (exp (/ (- (+ (+ Ev Vef) EAccept) mu) KbT))) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))","start":0.025403970356125953,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":6129.77099609375,"vars":["NdChar","Ec","Vef","EDonor","mu","KbT","NaChar","Ev","EAccept"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 0.1857376250461718) (26560 0.008) ())","end":0.008,"end-est":0.0078125,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)","link":"279-BoulandandAaronsonEquation26","name":"Bouland and Aaronson, Equation (26)","output":"(+ (+ (pow b 4.0) (fma (fma (* a a) 2.0 4.0) (* b b) (pow a 4.0))) -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)","start":0.1857376250461718,"start-est":0.16863251953688405,"status":"ex-start","target":false,"target-prog":"#f","time":1503.4619140625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((8320 0.18420605577291005) (27648 0.01980988963855028) ())","end":0.01980988963855028,"end-est":0.00390625,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)","link":"280-BoulandandAaronsonEquation25","name":"Bouland and Aaronson, Equation (25)","output":"(- (+ (+ (fma 2.0 (pow (* a b) 2.0) (pow b 4.0)) (pow a 4.0)) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)","start":0.18420605577291005,"start-est":0.14681625976844204,"status":"ex-start","target":false,"target-prog":"#f","time":2043.610107421875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((8192 0.1848302740249568) (40064 0.022315133313348112) ())","end":0.022315133313348112,"end-est":0.01953125,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)","link":"281-BoulandandAaronsonEquation24","name":"Bouland and Aaronson, Equation (24)","output":"(- (+ (fma (* b b) (fma 2.0 (* a a) (* 4.0 (+ 3.0 a))) (pow b 4.0)) (fma 4.0 (- (* a a) (pow a 3.0)) (pow a 4.0))) 1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)","start":0.1848302740249568,"start-est":0.1797748742696424,"status":"ex-start","target":false,"target-prog":"#f","time":2458.982177734375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 0.39504138458650956) (26944 0.3066756257749645) ())","end":0.3066756257749645,"end-est":0.32421875,"identifier":"#f","input":"(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))","link":"282-BeckmannSamplenormalizationfactor","name":"Beckmann Sample, normalization factor","output":"(/ 1.0 (+ (+ 1.0 c) (* (* (sqrt (- 1.0 (+ cosTheta cosTheta))) (/ (sqrt (/ 1.0 PI)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))","pre":"(and (and (< 0.0 cosTheta) (< cosTheta 0.9999)) (and (< -1.0 c) (< c 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))","start":0.39504138458650956,"start-est":0.35546875,"status":"ex-start","target":false,"target-prog":"#f","time":2378.970947265625,"vars":["cosTheta","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 12.58268773560407) (64832 0.47351625921355905) ())","end":0.47351625921355905,"end-est":0.4951964943537116,"identifier":"#f","input":"(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))","link":"283-BeckmannSamplenearnormalslope_y","name":"Beckmann Sample, near normal, slope_y","output":"(cbrt (* (* (pow (- (log1p (- u1))) 1.5) (pow (sin (* (+ PI PI) u2)) 2.0)) (sin (* (+ PI PI) u2))))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))","start":12.58268773560407,"start-est":11.546442450529,"status":"imp-start","target":false,"target-prog":"#f","time":1988.18212890625,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 12.586837969289629) (58688 0.3239917857142409) ())","end":0.3239917857142409,"end-est":0.291817188976809,"identifier":"#f","input":"(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))","link":"284-BeckmannSamplenearnormalslope_x","name":"Beckmann Sample, near normal, slope_x","output":"(cbrt (/ (* (* (pow (- (log1p (- u1))) 1.5) (cos (* (+ PI PI) u2))) (+ (cos (* (* PI u2) 4.0)) (cos 0.0))) 2.0))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))","start":12.586837969289629,"start-est":11.52897205062917,"status":"imp-start","target":false,"target-prog":"#f","time":1917.575927734375,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 13.257613344967439) (6848 0.34327612812734365) ())","end":0.34327612812734365,"end-est":0.3483200195368841,"identifier":"#f","input":"(* (* (- alpha) alpha) (log (- 1.0 u0)))","link":"285-BeckmannDistributionsampletan2thetaalphaxalphay","name":"Beckmann Distribution sample, tan2theta, alphax == alphay","output":"(* (- (* alpha alpha)) (log1p (- u0)))","pre":"(and (and (<= 0.0001 alpha) (<= alpha 1.0)) (and (<= 2.328306437e-10 u0) (<= u0 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (* (- alpha) alpha) (log (- 1.0 u0)))","start":13.257613344967439,"start-est":13.661415832208254,"status":"imp-start","target":false,"target-prog":"#f","time":2052.026123046875,"vars":["alpha","u0"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 13.225288077342466) (20032 0.5524909456636428) ())","end":0.5524909456636428,"end-est":0.5723614741034082,"identifier":"#f","input":"(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))","link":"286-BeckmannDistributionsampletan2thetaalphaxalphayu10","name":"Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5","output":"(- (/ (log1p (- u0)) (+ (/ cos2phi (pow alphax 2.0)) (/ sin2phi (pow alphay 2.0)))))","pre":"(and (and (and (and (and (<= 0.0001 alphax) (<= alphax 1.0)) (and (<= 0.0001 alphay) (<= alphay 1.0))) (and (<= 2.328306437e-10 u0) (<= u0 1.0))) (and (<= 0.0 cos2phi) (<= cos2phi 1.0))) (<= 0.0 sin2phi))","prec":"binary64","preprocess":"()","spec":"(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))","start":13.225288077342466,"start-est":11.771495550979543,"status":"imp-start","target":false,"target-prog":"#f","time":3648.60498046875,"vars":["alphax","alphay","u0","cos2phi","sin2phi"]},{"bits":128,"conversions":[],"cost-accuracy":"((52224 12.856149689211612) (110784 0.17512834311388278) ())","end":0.17512834311388278,"end-est":0.17178624970117154,"identifier":"#f","input":"(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))","link":"287-Bearingonagreatcircle","name":"Bearing on a great circle","output":"(atan2 (+ (* (cos phi2) (* (sin lambda1) (cos lambda2))) (* (cos phi2) (* (cos lambda1) (sin (- lambda2))))) (- (* (cos phi1) (sin phi2)) (+ (* (* (sin phi1) (* (cos phi2) (cos lambda1))) (cos lambda2)) (* (sin phi1) (* (cos phi2) (* (sin lambda1) (sin lambda2)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))","start":12.856149689211612,"start-est":10.875979509007689,"status":"imp-start","target":false,"target-prog":"#f","time":7758.748046875,"vars":["lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 29.129358188954537) (21700 0.24120197970092158) ())","end":0.24120197970092158,"end-est":0.01171875,"identifier":"#f","input":"(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))","link":"288-AsymptoteC","name":"Asymptote C","output":"(if (<= (- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0))) 4e-10) (- (+ (fma 3.0 (pow x -3.0) (pow x -2.0)) (/ 3.0 x))) (fma x (/ 1.0 (+ 1.0 x)) (- (/ (- 1.0 x) (pow (+ -1.0 x) 2.0)) (/ (* (+ -1.0 x) x) (pow (+ -1.0 x) 2.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))","start":29.129358188954537,"start-est":27.185551827362957,"status":"imp-start","target":false,"target-prog":"#f","time":1989.22998046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.012125) (13568 0.0199624062518029) ())","end":0.0199624062518029,"end-est":0.01171875,"identifier":"#f","input":"(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))","link":"289-AsymptoteB","name":"Asymptote B","output":"(pow (cbrt (+ (/ -1.0 (- 1.0 x)) (/ x (+ 1.0 x)))) 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))","start":0.012125,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1392.432861328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 14.500338363949538) (576 0.073125) ())","end":0.073125,"end-est":0.07421875,"identifier":"#f","input":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))","link":"290-AsymptoteA","name":"Asymptote A","output":"(/ (/ 2.0 (- -1.0 x)) (+ x -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))","start":14.500338363949538,"start-est":14.767992358644088,"status":"imp-start","target":false,"target-prog":"#f","time":1757.1669921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0155) (320 0.0155) ())","end":0.0155,"end-est":0.015625,"identifier":"#f","input":"(/ x (+ y x))","link":"291-AIClusteringHierarchicalInternalaveragefromcluster","name":"AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, B","output":"(/ x (+ y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ y x))","start":0.0155,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1146.512939453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0155) (320 0.0155) ())","end":0.0155,"end-est":0.015625,"identifier":"#f","input":"(/ x (+ x y))","link":"292-AIClusteringHierarchicalInternalaveragefromcluster","name":"AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, A","output":"(/ x (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ x y))","start":0.0155,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":1154.952880859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((40576 52.551931321792466) (40716 44.44913019130504) ())","end":44.44913019130504,"end-est":38.78527707907848,"identifier":"#f","input":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","link":"293-ABCFabangleb","name":"ABCF->ab-angle b","output":"(if (<= B -2.15e-152) (* (sqrt (* (* -2.0 (- (- (hypot B (- A C)) A) C)) (* (fma A (* C -4.0) (* B B)) F))) (/ -1.0 (fma A (* C -4.0) (* B B)))) (if (<= B -2.2e-245) (/ (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (+ A (+ (/ (* -0.5 (- (pow (hypot B A) 2.0) (* A A))) C) A)))))) (fma (* 4.0 A) C (- (* B B)))) (if (<= B -2.4e-257) (/ (sqrt (* 2.0 (* (- (+ A C) (hypot B (- A C))) (pow (cbrt (* (fma B B (* -4.0 (* A C))) F)) 3.0)))) (fma (* 4.0 A) C (- (* B B)))) (if (<= B 1.16e-209) (/ (sqrt (* 2.0 (* -4.0 (* A (* (+ A A) (* C F)))))) (fma (* 4.0 A) C (- (* B B)))) (if (<= B 3.2e+54) (* (sqrt (* (* -2.0 (- (- (hypot B (- A C)) A) C)) (* (fma A (* C -4.0) (* B B)) F))) (/ -1.0 (fma A (* C -4.0) (* B B)))) (- (/ (sqrt (* 2.0 (* (- A (hypot B A)) F))) B)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","start":52.551931321792466,"start-est":51.39819220198114,"status":"imp-start","target":false,"target-prog":"#f","time":7563.256103515625,"vars":["A","B","C","F"]},{"bits":128,"conversions":[],"cost-accuracy":"((33152 29.09792090408139) (20164 13.154845213982222) ())","end":13.154845213982222,"end-est":11.377610396135397,"identifier":"#f","input":"(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))","link":"294-ABCFabangleangle","name":"ABCF->ab-angle angle","output":"(if (<= A -8.552181262531476e+189) (* (atan (* 0.5 (/ B A))) (/ 180.0 PI)) (* (atan (/ (- C (+ A (hypot (- A C) B))) B)) (/ 180.0 PI)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))","start":29.09792090408139,"start-est":27.765596084282794,"status":"imp-start","target":false,"target-prog":"#f","time":4389.760986328125,"vars":["A","B","C"]},{"bits":128,"conversions":[],"cost-accuracy":"((40576 52.52668574538774) (66948 45.38796143416641) ())","end":45.38796143416641,"end-est":36.048290606814575,"identifier":"#f","input":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","link":"295-ABCFabanglea","name":"ABCF->ab-angle a","output":"(if (<= B -23000000.0) (* (* (pow (* (sqrt 2.0) 1.0) 0.3333333333333333) (exp (* 0.16666666666666666 (+ (log F) (* -3.0 (log (/ -1.0 B))))))) (/ (* (cbrt (* 2.0 (fma B B (* -4.0 (* A C))))) (cbrt (* F (+ (+ A C) (hypot B (- A C)))))) (fma (* 4.0 A) C (- (* B B))))) (if (<= B -6e-138) (/ (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (fma 2.0 C (/ (* -0.5 (* B B)) A)))))) (fma (* 4.0 A) C (- (* B B)))) (if (<= B -1.9e-292) (* (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (fma 2.0 A (/ (* B B) (/ (- A C) 0.5))))))) (/ -1.0 (fma B B (* -4.0 (* A C))))) (if (<= B 1.65e-231) (/ (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (fma 2.0 C (/ (* -0.5 (* B B)) A)))))) (fma (* 4.0 A) C (- (* B B)))) (if (<= B 1.6e-106) (* (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (fma 2.0 A (/ (* B B) (/ (- A C) 0.5))))))) (/ -1.0 (fma B B (* -4.0 (* A C))))) (if (<= B 3.05e+56) (/ (sqrt (* 2.0 (* (fma B B (* -4.0 (* A C))) (* F (+ (+ A C) (hypot B (- A C))))))) (fma (* 4.0 A) C (- (* B B)))) (- (/ (sqrt (* 2.0 (* (+ A (hypot A B)) F))) B))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","start":52.52668574538774,"start-est":51.84964267216948,"status":"imp-start","target":false,"target-prog":"#f","time":8325.63818359375,"vars":["A","B","C","F"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 32.41392515379551) (94420 11.748850688366929) ())","end":11.748850688366929,"end-est":8.815022571655039,"identifier":"#f","input":"(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))","link":"296-2nthrtproblem346","name":"2nthrt (problem 3.4.6)","output":"(if (<= n -492907840.3761622) (- (+ (fma 0.5 (pow (/ (log1p x) n) 2.0) (/ (log (/ (+ 1.0 x) x)) n)) (* (* -0.16666666666666666 (- (pow (log x) 3.0) (pow (log1p x) 3.0))) (pow n -3.0))) (* 0.5 (pow (/ (log x) n) 2.0))) (if (<= n 1.0) (- (exp (/ (log1p x) n)) (exp (/ (log x) n))) (if (<= n 1.035405431623576e+22) (+ (* (* (exp (/ (log x) n)) (fma 0.5 (pow n -2.0) (/ -0.5 n))) (pow x -2.0)) (/ (exp (/ (log x) n)) (* n x))) (if (<= n 1.920372343687909e+133) (- (+ (fma 0.5 (pow (/ (log1p x) n) 2.0) (/ (log (/ (+ 1.0 x) x)) n)) (* (* -0.16666666666666666 (- (pow (log x) 3.0) (pow (log1p x) 3.0))) (pow n -3.0))) (* 0.5 (pow (/ (log x) n) 2.0))) (if (<= n 8.056263945040677e+180) (+ (+ (* 0.16666666666666666 (+ (* (+ (* (log x) (- 1.0 (log x))) (fma -0.5 (pow (log x) 2.0) (- (* (log x) -2.0)))) (/ (pow n -3.0) (* x x))) (/ (* 3.0 (pow (log x) 2.0)) (* (pow n 3.0) x)))) (fma 0.5 (/ (* (pow n -2.0) (- 1.0 (log x))) (* x x)) (+ (/ (log x) (* (* n n) x)) (/ 1.0 (* n x))))) (/ -0.5 (* n (* x x)))) (- (+ (fma 0.5 (pow (/ (log1p x) n) 2.0) (/ (log (/ (+ 1.0 x) x)) n)) (* (* -0.16666666666666666 (- (pow (log x) 3.0) (pow (log1p x) 3.0))) (pow n -3.0))) (* 0.5 (pow (/ (log x) n) 2.0))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))","start":32.41392515379551,"start-est":33.20623557247954,"status":"imp-start","target":false,"target-prog":"#f","time":6513.9990234375,"vars":["x","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.955645868126744) (27076 0.06781408312547513) ())","end":0.06781408312547513,"end-est":0.01171875,"identifier":"#f","input":"(- (log (+ N 1.0)) (log N))","link":"297-2logproblem336","name":"2log (problem 3.3.6)","output":"(if (<= (- (log (+ N 1.0)) (log N)) 5e-5) (+ (* -0.25 (pow N -4.0)) (+ (/ 1.0 N) (* (pow N -2.0) (- (/ 0.3333333333333333 N) 0.5)))) (- (log1p N) (log N)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (+ N 1.0)) (log N))","start":28.955645868126744,"start-est":29.64113548263881,"status":"imp-start","target":false,"target-prog":"#f","time":1742.80908203125,"vars":["N"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.528223310931253) (448 0.07069812031259015) ())","end":0.07069812031259015,"end-est":0.0625,"identifier":"#f","input":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","link":"298-2fracproblem331","name":"2frac (problem 3.3.1)","output":"(/ (/ -1.0 x) (+ x 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","start":14.528223310931253,"start-est":13.616993713721426,"status":"imp-start","target":false,"target-prog":"#f","time":1373.81103515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 39.286488152601216) (92420 0.7352892885347526) ())","end":0.7352892885347526,"end-est":0.42325164656317327,"identifier":"#f","input":"(- (cos (+ x eps)) (cos x))","link":"299-2cosproblem335","name":"2cos (problem 3.3.5)","output":"(if (<= x -1.7433029154870626e-13) (- (fma (cbrt (cos eps)) (* (cbrt (/ (+ (pow 0.5 3.0) (pow (* 0.5 (cos (+ eps eps))) 3.0)) (+ (* 0.5 0.5) (- (* (* 0.5 (cos (+ eps eps))) (* 0.5 (cos (+ eps eps)))) (* 0.5 (* 0.5 (cos (+ eps eps)))))))) (cos x)) (- (cos x))) (* (sin x) (sin eps))) (if (<= x 2.386200410518542e-73) (* (sin (* eps 0.5)) (* -2.0 (sin (* (+ (+ x eps) x) 0.5)))) (fma (cos x) (+ (cos eps) -1.0) (- (* (sin x) (sin eps))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (cos (+ x eps)) (cos x))","start":39.286488152601216,"start-est":39.744630232718805,"status":"imp-start","target":false,"target-prog":"#f","time":3888.444091796875,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.46205848613323) (71872 29.464648093858766) ())","end":29.464648093858766,"end-est":30.175929147524492,"identifier":"#f","input":"(- (cbrt (+ x 1.0)) (cbrt x))","link":"300-2cbrtproblem334","name":"2cbrt (problem 3.3.4)","output":"(pow (fma (- (cbrt (+ x 1.0)) (cbrt x)) (* (cbrt x) (- (cbrt x) (cbrt (+ x 1.0)))) (* (cbrt (+ x 1.0)) (pow (- (cbrt (+ x 1.0)) (cbrt x)) 2.0))) 0.3333333333333333)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (cbrt (+ x 1.0)) (cbrt x))","start":29.46205848613323,"start-est":30.197137076704923,"status":"apx-start","target":false,"target-prog":"#f","time":2129.06787109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 15.822870837009331) (26176 0.3969297000057695) ())","end":0.3969297000057695,"end-est":0.3662300293053261,"identifier":"#f","input":"(cbrt (/ g (* 2.0 a)))","link":"301-2ancestrymixingzerodiscriminant","name":"2-ancestry mixing, zero discriminant","output":"(* (cbrt (/ g (cbrt 2.0))) (cbrt (/ (/ 1.0 a) (cbrt 4.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(cbrt (/ g (* 2.0 a)))","start":15.822870837009331,"start-est":17.325554927748072,"status":"imp-start","target":false,"target-prog":"#f","time":1007.58203125,"vars":["g","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((27712 36.09946298150404) (13056 2.348219254066787) ())","end":2.348219254066787,"end-est":1.4376588778139516,"identifier":"#f","input":"(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))","link":"302-2ancestrymixingpositivediscriminant","name":"2-ancestry mixing, positive discriminant","output":"(/ (cbrt (- g)) (cbrt a))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))","start":36.09946298150404,"start-est":38.255120495860474,"status":"imp-start","target":false,"target-prog":"#f","time":1904.546875,"vars":["g","h","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.9925902265701635) (65472 0.04238721875540865) ())","end":0.04238721875540865,"end-est":0.045253759768442016,"identifier":"#f","input":"(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))","link":"303-2ancestrymixingnegativediscriminant","name":"2-ancestry mixing, negative discriminant","output":"(* 2.0 (- (* (cos (* 0.3333333333333333 PI)) (cos (* 0.3333333333333333 (+ PI (acos (- (/ g h))))))) (* (sin (* 0.3333333333333333 PI)) (sin (* 0.3333333333333333 (+ PI (acos (- (/ g h)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))","start":0.9925902265701635,"start-est":1.0013275390737681,"status":"ex-start","target":false,"target-prog":"#f","time":2287.011962890625,"vars":["g","h"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 61.998113490722915) (256 51.969745178315875) ())","end":51.969745178315875,"end-est":51.96652907144435,"identifier":"#f","input":"(/ (- x lo) (- hi lo))","link":"304-xlohilo","name":"(/ (- x lo) (- hi lo))","output":"(- (/ lo hi))","pre":"(and (< lo -1e+308) (> hi 1e+308))","prec":"binary64","preprocess":"()","spec":"(/ (- x lo) (- hi lo))","start":61.998113490722915,"start-est":62.01279314736873,"status":"imp-start","target":false,"target-prog":"#f","time":1174.302978515625,"vars":["lo","hi","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 14.672047602240252) (13512 0.733472770243517) ())","end":0.733472770243517,"end-est":0.0078125,"identifier":"#f","input":"(/ x (+ (* x x) 1.0))","link":"305-xx21","name":"x / (x^2 + 1)","output":"(if (<= x -6040261615.299245) (- (/ 1.0 x) (pow x -3.0)) (if (<= x 9.544882123799739e-5) (- (+ (pow x 5.0) x) (pow x 3.0)) (- (/ 1.0 x) (pow x -3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ (* x x) 1.0))","start":14.672047602240252,"start-est":13.932598847809244,"status":"eq-target","target":0.09219812031259014,"target-prog":"(/ 1.0 (+ x (/ 1.0 x)))","time":778.87890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.888523411934745) (13248 0.17320996250072113) ())","end":0.17320996250072113,"end-est":0.19921875,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (sin x))","link":"306-tanhfexample34","name":"tanhf (example 3.4)","output":"(/ (sin (* 0.5 x)) (cos (* 0.5 x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (sin x))","start":29.888523411934745,"start-est":28.783673387641333,"status":"eq-target","target":0.22325282031835922,"target-prog":"(tan (/ x 2.0))","time":3876.697021484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 32.02220385542953) (6720 0.008) ())","end":0.008,"end-est":0,"identifier":"#f","input":"(- (/ x x) (* (/ 1.0 x) (sqrt (* x x))))","link":"307-sqrtsqr","name":"sqrt sqr","output":"(/ (- x (fabs x)) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x x) (* (/ 1.0 x) (sqrt (* x x))))","start":32.02220385542953,"start-est":30.649855487758856,"status":"eq-target","target":0,"target-prog":"(if (< x 0.0) 2.0 0.0)","time":940.553955078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 45.131060686163956) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (fma x y z) (+ 1.0 (+ (* x y) z)))","link":"308-simplefmatest","name":"simple fma test","output":"-1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (fma x y z) (+ 1.0 (+ (* x y) z)))","start":45.131060686163956,"start-est":45.81064491022098,"status":"eq-target","target":0,"target-prog":"-1.0","time":1006.51611328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35819812078519) (7688 11.161138390711747) ())","end":11.161138390711747,"end-est":8.126291519514776,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"309-quadpp42positive","name":"quadp (p42, positive)","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- (/ c b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.35819812078519,"start-est":36.52266464947487,"status":"gt-target","target":21.487900506318958,"target-prog":"(if (< b 0.0) (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (/ c (* a (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))))","time":3029.658935546875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.20065493770275) (39880 10.677584389160028) ())","end":10.677584389160028,"end-est":9.177455950493998,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"310-quadmp42negative","name":"quadm (p42, negative)","output":"(if (<= b -6.7e-112) (- (/ c b)) (if (<= b 2.4e+91) (/ (* (fma (cbrt (sqrt (fma b b (* (* c -4.0) a)))) (cbrt (fma b b (* (* c -4.0) a))) b) -0.5) a) (- (/ b a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.20065493770275,"start-est":34.0148828873389,"status":"gt-target","target":20.897235592582238,"target-prog":"(if (< b 0.0) (/ c (* a (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))) (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))","time":3261.94921875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 61.345336999236395) (13056 0.023575564063671887) ())","end":0.023575564063671887,"end-est":0.037441259768442016,"identifier":"#f","input":"(/ (log (- 1.0 x)) (log (+ 1.0 x)))","link":"311-qlogexample310","name":"qlog (example 3.10)","output":"(/ (log1p (- x)) (log1p x))","pre":"(and (< -1.0 x) (< x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (log (- 1.0 x)) (log (+ 1.0 x)))","start":61.345336999236395,"start-est":59.71430173934616,"status":"eq-target","target":0.3638129519277175,"target-prog":"(- (+ (+ (+ 1.0 x) (/ (* x x) 2.0)) (* 0.4166666666666667 (pow x 3.0))))","time":3807.7109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 38.362725568095286) (27012 10.382509246684224) ())","end":10.382509246684224,"end-est":10.401663909712745,"identifier":"#f","input":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re))))","link":"312-mathsqrtoncomplexrealpart","name":"math.sqrt on complex, real part","output":"(if (<= (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re))) 0.0) (sqrt (* (* 2.0 (* -0.5 (/ (pow im 2.0) re))) 0.25)) (sqrt (* (* 2.0 (+ (hypot re im) re)) 0.25)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re))))","start":38.362725568095286,"start-est":38.14747123803534,"status":"gt-target","target":33.32562589381907,"target-prog":"(if (< re 0.0) (* 0.5 (* (sqrt 2.0) (sqrt (/ (* im im) (- (sqrt (+ (* re re) (* im im))) re))))) (* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re)))))","time":2441.323974609375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 57.85455957458004) (45824 0.7692809565995365) ())","end":0.7692809565995365,"end-est":0.5904064167880401,"identifier":"#f","input":"(* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im)))","link":"313-mathsinoncompleximaginarypart","name":"math.sin on complex, imaginary part","output":"(* 0.5 (* (cos re) (fma -0.0003968253968253968 (pow im 7.0) (fma im -2.0 (fma -0.016666666666666666 (pow im 5.0) (* -0.3333333333333333 (pow im 3.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im)))","start":57.85455957458004,"start-est":58.34261844355968,"status":"eq-target","target":0.24885302883983715,"target-prog":"(if (< (fabs im) 1.0) (- (* (cos re) (+ (+ im (* (* (* 0.16666666666666666 im) im) im)) (* (* (* (* (* 0.008333333333333333 im) im) im) im) im)))) (* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im))))","time":4110.079833984375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.129875) (6528 0.001375) ())","end":0.001375,"end-est":0,"identifier":"#f","input":"(* (* x x) x)","link":"314-mathcubeonreal","name":"math.cube on real","output":"(pow x 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) x)","start":0.129875,"start-est":0.140625,"status":"eq-target","target":0.001375,"target-prog":"(pow x 3.0)","time":368.703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 7.399872159990437) (7360 0.20379024101186094) ())","end":0.20379024101186094,"end-est":0.17578125,"identifier":"#f","input":"(- (* (- (* x.re x.re) (* x.im x.im)) x.re) (* (+ (* x.re x.im) (* x.im x.re)) x.im))","link":"315-mathcubeoncomplexrealpart","name":"math.cube on complex, real part","output":"(fma (* -2.0 x.im) (* x.re x.im) (* (+ x.re x.im) (* (- x.re x.im) x.re)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (- (* x.re x.re) (* x.im x.im)) x.re) (* (+ (* x.re x.im) (* x.im x.re)) x.im))","start":7.399872159990437,"start-est":8.1640625,"status":"eq-target","target":0.25231860937770434,"target-prog":"(+ (* (* x.re x.re) (- x.re x.im)) (* (* x.re x.im) (- x.re (* 3.0 x.im))))","time":2297.5068359375,"vars":["x.re","x.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 7.521198120312591) (14272 0.1312712406251803) ())","end":0.1312712406251803,"end-est":0.15625,"identifier":"#f","input":"(+ (* (- (* x.re x.re) (* x.im x.im)) x.im) (* (+ (* x.re x.im) (* x.im x.re)) x.re))","link":"316-mathcubeoncompleximaginarypart","name":"math.cube on complex, imaginary part","output":"(+ (fma x.re (* x.re (+ x.im x.im)) (* x.re (* (- x.re x.im) x.im))) (+ (- (pow x.im 3.0)) (* (* x.im x.im) x.re)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (- (* x.re x.re) (* x.im x.im)) x.im) (* (+ (* x.re x.im) (* x.im x.re)) x.re))","start":7.521198120312591,"start-est":9.1640625,"status":"eq-target","target":0.24579736875252392,"target-prog":"(+ (* (* x.re x.im) (* 2.0 x.re)) (* (* x.im (- x.re x.im)) (+ x.re x.im)))","time":2288.444091796875,"vars":["x.re","x.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 43.581352877935316) (46208 0.7819370552672299) ())","end":0.7819370552672299,"end-est":0.5730776568427052,"identifier":"#f","input":"(* (* 0.5 (sin re)) (- (exp (- im)) (exp im)))","link":"317-mathcosoncompleximaginarypart","name":"math.cos on complex, imaginary part","output":"(+ (* (* 0.5 (sin re)) (fma (pow im 7.0) -0.0003968253968253968 (* im -2.0))) (* (* 0.5 (sin re)) (fma -0.016666666666666666 (pow im 5.0) (* -0.3333333333333333 (pow im 3.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (sin re)) (- (exp (- im)) (exp im)))","start":43.581352877935316,"start-est":43.65388110127927,"status":"eq-target","target":0.2619207414550207,"target-prog":"(if (< (fabs im) 1.0) (- (* (sin re) (+ (+ im (* (* (* 0.16666666666666666 im) im) im)) (* (* (* (* (* 0.008333333333333333 im) im) im) im) im)))) (* (* 0.5 (sin re)) (- (exp (- im)) (exp im))))","time":3980.343994140625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 63.00970925069711) (12992 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)","link":"318-logsexample38","name":"logs (example 3.8)","output":"(fma 0.0 n (log n))","pre":"(> n 6.8e+15)","prec":"binary64","preprocess":"()","spec":"(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)","start":63.00970925069711,"start-est":62.98030791109286,"status":"eq-target","target":0,"target-prog":"(- (log (+ n 1.0)) (- (/ 1.0 (* 2.0 n)) (- (/ 1.0 (* 3.0 (* n n))) (/ 4.0 (pow n 3.0)))))","time":1657.56298828125,"vars":["n"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 58.63234895728534) (39168 0.15279292604536845) ())","end":0.15279292604536845,"end-est":0.06505924734522824,"identifier":"#f","input":"(log (/ (- 1.0 eps) (+ 1.0 eps)))","link":"319-logqproblem343","name":"logq (problem 3.4.3)","output":"(fma -2.0 eps (fma -0.4 (pow eps 5.0) (fma -0.2857142857142857 (pow eps 7.0) (* -0.6666666666666666 (pow eps 3.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (/ (- 1.0 eps) (+ 1.0 eps)))","start":58.63234895728534,"start-est":58.9023254419129,"status":"eq-target","target":0.20961226694348029,"target-prog":"(* -2.0 (+ (+ eps (/ (pow eps 3.0) 3.0)) (/ (pow eps 5.0) 5.0)))","time":2205.112060546875,"vars":["eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 39.06500429743133) (6464 0.000125) ())","end":0.000125,"end-est":0,"identifier":"#f","input":"(log (+ 1.0 x))","link":"320-ln1x","name":"ln(1 + x)","output":"(log1p x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 x))","start":39.06500429743133,"start-est":40.84416115613398,"status":"eq-target","target":0.2485,"target-prog":"(if (== (+ 1.0 x) 1.0) x (/ (* x (log (+ 1.0 x))) (- (+ 1.0 x) 1.0)))","time":1188.81884765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 59.92936623011567) (20352 0.0045) ())","end":0.0045,"end-est":0,"identifier":"#f","input":"(- (/ 1.0 x) (/ 1.0 (tan x)))","link":"321-invcotexample39","name":"invcot (example 3.9)","output":"(+ (/ x 3.0) (+ (* 0.0021164021164021165 (pow x 5.0)) (+ (* 0.022222222222222223 (pow x 3.0)) (* 0.00021164021164021165 (pow x 7.0)))))","pre":"(and (< -0.026 x) (< x 0.026))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 x) (/ 1.0 (tan x)))","start":59.92936623011567,"start-est":59.96451796393683,"status":"eq-target","target":0.0674463485084159,"target-prog":"(if (< (fabs x) 0.026) (* (/ x 3.0) (+ 1.0 (/ (* x x) 15.0))) (- (/ 1.0 x) (/ 1.0 (tan x))))","time":5550.2548828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 64.0) (320 0.302875) ())","end":0.302875,"end-est":0.30078125,"identifier":"#f","input":"(- (* 1.7e+308 t) 1.7e+308)","link":"322-fma_test2","name":"fma_test2","output":"(* 1.7e+308 (+ -1.0 t))","pre":"(and (<= 1.9 t) (<= t 2.1))","prec":"binary64","preprocess":"()","spec":"(- (* 1.7e+308 t) 1.7e+308)","start":64.0,"start-est":64.0,"status":"eq-target","target":0.302875,"target-prog":"(fma 1.7e+308 t (- 1.7e+308))","time":1153.008056640625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 61.843252599384606) (19520 0.353875) ())","end":0.353875,"end-est":0.37109375,"identifier":"#f","input":"(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))","link":"323-fma_test1","name":"fma_test1","output":"(cbrt (* (pow t 6.0) (pow 4e-32 3.0)))","pre":"(and (<= 0.9 t) (<= t 1.1))","prec":"binary64","preprocess":"()","spec":"(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))","start":61.843252599384606,"start-est":61.84322916352899,"status":"gt-target","target":50.55748504121275,"target-prog":"(fma (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16)) (- -1.0 (* 2.0 (* t 2e-16))))","time":1041.84619140625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((20544 60.2609295546856) (61384 0.20532872818556025) ())","end":0.20532872818556025,"end-est":0.01953125,"identifier":"#f","input":"(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))","link":"324-expq3problem342","name":"expq3 (problem 3.4.2)","output":"(if (<= (/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0))) (- INFINITY)) (+ (/ 1.0 b) (/ 1.0 a)) (if (<= (/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0))) 2e-13) (/ (* eps (expm1 (* (+ a b) eps))) (* (expm1 (* a eps)) (expm1 (* b eps)))) (+ (/ 1.0 b) (/ 1.0 a))))","pre":"(and (< -1.0 eps) (< eps 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))","start":60.2609295546856,"start-est":60.560961164635984,"status":"gt-target","target":15.356675657496833,"target-prog":"(/ (+ a b) (* a b))","time":5464.655029296875,"vars":["a","b","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 41.19760355192374) (12992 0.3877193609377705) ())","end":0.3877193609377705,"end-est":0.2578125,"identifier":"#f","input":"(/ (exp x) (- (exp x) 1.0))","link":"325-expq2section311","name":"expq2 (section 3.11)","output":"(/ (exp x) (expm1 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp x) (- (exp x) 1.0))","start":41.19760355192374,"start-est":41.85498152272795,"status":"gt-target","target":40.82575978557078,"target-prog":"(/ 1.0 (- 1.0 (exp (- x))))","time":1515.884033203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 58.61592291719038) (6464 0.00025) ())","end":0.00025,"end-est":0,"identifier":"#f","input":"(- (exp x) 1.0)","link":"326-expm1example37","name":"expm1 (example 3.7)","output":"(expm1 x)","pre":"(< -0.00017 x)","prec":"binary64","preprocess":"()","spec":"(- (exp x) 1.0)","start":58.61592291719038,"start-est":58.72985941678107,"status":"eq-target","target":0.5063472117212211,"target-prog":"(* x (+ (+ 1.0 (/ x 2.0)) (/ (* x x) 6.0)))","time":939.501953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 29.73614103727864) (6592 0.021026765241568292) ())","end":0.021026765241568292,"end-est":0.00390625,"identifier":"#f","input":"(- (exp (* a x)) 1.0)","link":"327-expaxsection35","name":"expax (section 3.5)","output":"(expm1 (* a x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (exp (* a x)) 1.0)","start":29.73614103727864,"start-est":28.748252547817856,"status":"eq-target","target":0.17768162939552956,"target-prog":"(if (< (fabs (* a x)) 0.1) (* (* a x) (+ 1.0 (+ (/ (* a x) 2.0) (/ (pow (* a x) 2.0) 6.0)))) (- (exp (* a x)) 1.0))","time":1186.921142578125,"vars":["a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 29.989813345818956) (39168 0.5306401933501635) ())","end":0.5306401933501635,"end-est":0.8049304773746091,"identifier":"#f","input":"(+ (- (exp x) 2.0) (exp (- x)))","link":"328-exp2problem337","name":"exp2 (problem 3.3.7)","output":"(fma 0.002777777777777778 (pow x 6.0) (fma x x (fma 0.08333333333333333 (pow x 4.0) (* 4.96031746031746e-5 (pow x 8.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (exp x) 2.0) (exp (- x)))","start":29.989813345818956,"start-est":28.929898395059208,"status":"eq-target","target":0.0404979328161959,"target-prog":"(* 4.0 (pow (sinh (/ x 2.0)) 2.0))","time":3302.27294921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.20065493770275) (39880 10.677584389160028) ())","end":10.677584389160028,"end-est":9.177455950493998,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"329-Thequadraticformular2","name":"The quadratic formula (r2)","output":"(if (<= b -6.7e-112) (- (/ c b)) (if (<= b 2.4e+91) (/ (* (fma (cbrt (sqrt (fma b b (* (* c -4.0) a)))) (cbrt (fma b b (* (* c -4.0) a))) b) -0.5) a) (- (/ b a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.20065493770275,"start-est":34.0148828873389,"status":"gt-target","target":20.897235592582238,"target-prog":"(if (< b 0.0) (/ c (* a (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))) (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))","time":3202.6650390625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35858459675237) (7688 11.153524866678929) ())","end":11.153524866678929,"end-est":8.107225346096225,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"330-Thequadraticformular1","name":"The quadratic formula (r1)","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (/ c b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.35858459675237,"start-est":36.50359847605632,"status":"gt-target","target":21.487914553483446,"target-prog":"(if (< b 0.0) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ c (* a (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))))","time":3469.157958984375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 24.702050892998237) (79888 1.0505173681167213) ())","end":1.0505173681167213,"end-est":0.04296875,"identifier":"#f","input":"(- x (/ (log (+ (- 1.0 y) (* y (exp z)))) t))","link":"331-SystemRandomMWCDistributionstruncatedExpfrommwcran","name":"System.Random.MWC.Distributions:truncatedExp from mwc-random-0.13.3.2","output":"(if (<= (/ (log (+ (- 1.0 y) (* y (exp z)))) t) (- INFINITY)) (- x (/ (log1p (* y z)) t)) (if (<= (/ (log (+ (- 1.0 y) (* y (exp z)))) t) -2e-258) (- x (/ (log1p (fma y (exp z) (- y))) t)) (if (<= (/ (log (+ (- 1.0 y) (* y (exp z)))) t) 0.0) (- x (* (expm1 z) (/ y t))) (if (<= (/ (log (+ (- 1.0 y) (* y (exp z)))) t) 2e+173) (fma (log1p (fma y (exp z) (- y))) (/ -1.0 t) x) (- x (/ (log1p (* y z)) t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (log (+ (- 1.0 y) (* y (exp z)))) t))","start":24.702050892998237,"start-est":25.370484795629334,"status":"gt-target","target":16.440789859130234,"target-prog":"(if (< z -2.8874623088207947e+119) (- (- x (/ (/ (- 0.5) (* y t)) (* z z))) (* (/ (- 0.5) (* y t)) (/ (/ 2.0 z) (* z z)))) (- x (/ (log (+ 1.0 (* z y))) t)))","time":4991.031982421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 0.08645996250072116) (13376 0.08049060156295072) ())","end":0.08049060156295072,"end-est":0.09375,"identifier":"#f","input":"(+ (* x 0.5) (* y (+ (- 1.0 z) (log z))))","link":"332-SystemRandomMWCDistributionsgammafrommwcrandom0133","name":"System.Random.MWC.Distributions:gamma from mwc-random-0.13.3.2","output":"(fma y (+ (- 1.0 z) (log z)) (* x 0.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x 0.5) (* y (+ (- 1.0 z) (log z))))","start":0.08645996250072116,"start-est":0.09994125976844202,"status":"eq-target","target":0.11454268476294266,"target-prog":"(- (+ y (* 0.5 x)) (* y (- z (log z))))","time":2132.39794921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 4.826510656414858) (26368 1.49095831127053) ())","end":1.49095831127053,"end-est":1.378133465305189,"identifier":"#f","input":"(+ x (* (* y z) (- (tanh (/ t y)) (tanh (/ x y)))))","link":"333-SynthBasicsmoogVCFfromYampaSynth02","name":"SynthBasics:moogVCF from YampaSynth-0.2","output":"(fma z (fma (tanh (/ t y)) y (- (* (tanh (/ x y)) y))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* y z) (- (tanh (/ t y)) (tanh (/ x y)))))","start":4.826510656414858,"start-est":3.436847378762578,"status":"eq-target","target":2.0114009228921566,"target-prog":"(+ x (* y (* z (- (tanh (/ t y)) (tanh (/ x y))))))","time":4466.4169921875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.100648413331932) (448 0.091875) ())","end":0.091875,"end-est":0.09375,"identifier":"#f","input":"(- (/ x (* y y)) 3.0)","link":"334-StatisticsSampleskurtosisfrommathfunctions0152","name":"Statistics.Sample:$skurtosis from math-functions-0.1.5.2","output":"(- (/ (/ x y) y) 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x (* y y)) 3.0)","start":5.100648413331932,"start-est":3.620993806991428,"status":"eq-target","target":0.091875,"target-prog":"(- (/ (/ x y) y) 3.0)","time":1349.849853515625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 24.429558595904464) (33480 7.234546925691581) ())","end":7.234546925691581,"end-est":6.474019941710723,"identifier":"#f","input":"(/ (* (* x y) z) (sqrt (- (* z z) (* t a))))","link":"335-StatisticsMathRootFindingriddersfrommathfunctions0","name":"Statistics.Math.RootFinding:ridders from math-functions-0.1.5.2","output":"(if (<= z -1.660796358661029e+112) (- (* y x)) (if (<= z 3.035675077955773e+68) (/ (* x (/ (* y z) (cbrt (fma z z (- (* a t)))))) (cbrt (sqrt (fma z z (- (* a t)))))) (* y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (* x y) z) (sqrt (- (* z z) (* t a))))","start":24.429558595904464,"start-est":23.48835011319649,"status":"eq-target","target":7.646968911673519,"target-prog":"(if (< z -3.1921305903852764e+46) (- (* y x)) (if (< z 5.976268120920894e+90) (/ (* x z) (/ (sqrt (- (* z z) (* a t))) y)) (* y x)))","time":3460.60791015625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.006904188118605655) (13248 0.006904188118605655) ())","end":0.006904188118605655,"end-est":0,"identifier":"#f","input":"(exp (- (+ x (* y (log y))) z))","link":"336-StatisticsDistributionPoissonInternalprobabilityfr","name":"Statistics.Distribution.Poisson.Internal:probability from math-functions-0.1.5.2","output":"(exp (- (+ x (* y (log y))) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (- (+ x (* y (log y))) z))","start":0.006904188118605655,"start-est":0,"status":"eq-target","target":0.006904188118605655,"target-prog":"(exp (+ (- x z) (* (log y) y)))","time":1112.453857421875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 6.467844112551865) (6976 3.8260330213636897) ())","end":3.8260330213636897,"end-est":4.4747889929498115,"identifier":"#f","input":"(/ (/ 1.0 x) (* y (+ 1.0 (* z z))))","link":"337-StatisticsDistributionCauchyLorentzcdensityfrommat","name":"Statistics.Distribution.CauchyLorentz:$cdensity from math-functions-0.1.5.2","output":"(/ (/ 1.0 x) (fma (* y z) z y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (/ 1.0 x) (* y (+ 1.0 (* z z))))","start":6.467844112551865,"start-est":6.811433675725763,"status":"gt-target","target":5.670626185315907,"target-prog":"(if (< (* y (+ 1.0 (* z z))) (- INFINITY)) (/ (/ 1.0 y) (* (+ 1.0 (* z z)) x)) (if (< (* y (+ 1.0 (* z z))) 8.680743250567252e+305) (/ (/ 1.0 x) (* (+ 1.0 (* z z)) y)) (/ (/ 1.0 y) (* (+ 1.0 (* z z)) x))))","time":1910.3349609375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 14.908414738009514) (704 3.1619302418658215) ())","end":3.1619302418658215,"end-est":1.621311838582797,"identifier":"#f","input":"(/ (* x y) (* (* z z) (+ z 1.0)))","link":"338-StatisticsDistributionBetacvariancefrommathfunctio","name":"Statistics.Distribution.Beta:$cvariance from math-functions-0.1.5.2","output":"(/ (* x (/ (/ y z) (+ z 1.0))) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) (* (* z z) (+ z 1.0)))","start":14.908414738009514,"start-est":13.902067095363186,"status":"eq-target","target":3.98564588403894,"target-prog":"(if (< z 249.6182814532307) (/ (* y (/ x z)) (+ z (* z z))) (/ (* (/ (/ y z) (+ 1.0 z)) x) z))","time":2071.58984375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01075) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* x (- x 1.0))","link":"339-StatisticsCorrelationKendallnumOfTiesByfrommathfun","name":"Statistics.Correlation.Kendall:numOfTiesBy from math-functions-0.1.5.2","output":"(fma x x (- x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- x 1.0))","start":0.01075,"start-est":0.01171875,"status":"eq-target","target":0.006875,"target-prog":"(- (* x x) x)","time":543.220947265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 100.0 (/ (- x x) x))","link":"340-ReportTypesexplainFloatfromgipeda0121","name":"ReportTypes:explainFloat from gipeda-0.1.2.1","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 100.0 (/ (- x x) x))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"0.0","time":329.123046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))","link":"341-Rectangularparallelepipedofdimensionabc","name":"Rectangular parallelepiped of dimension a×b×c","output":"0.4691358024691358","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(+ (+ (* (* (/ 1.0 9.0) 1.0) 2.0) (* 2.0 (* (/ 1.0 9.0) (/ 1.0 9.0)))) (* 2.0 (* 1.0 (/ 1.0 9.0))))","time":526.151123046875,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 0.5957712406251803) (19904 0.9785329550882852) ())","end":0.9785329550882852,"end-est":0.3854675034501867,"identifier":"#f","input":"(/ (exp a) (+ (exp a) (exp b)))","link":"342-Quotientofsumofexps","name":"Quotient of sum of exps","output":"(/ (exp a) (+ (fma (* a a) 0.5 1.0) (+ a (exp b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp a) (+ (exp a) (exp b)))","start":0.5957712406251803,"start-est":0.515625,"status":"eq-target","target":0.01713739792625991,"target-prog":"(/ 1.0 (+ 1.0 (exp (- b a))))","time":2057.70703125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 11.026430014198537) (1996 4.379947070828431) ())","end":4.379947070828431,"end-est":1.6510107765184658,"identifier":"#f","input":"(/ (* a1 a2) (* b1 b2))","link":"343-Quotientofproducts","name":"Quotient of products","output":"(if (<= (/ (* a1 a2) (* b1 b2)) -5e-312) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b1) (/ a2 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+275) (/ (* a1 a2) (* b1 b2)) (/ (* a2 (/ a1 b2)) b1))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* a1 a2) (* b1 b2))","start":11.026430014198537,"start-est":8.36046894093571,"status":"gt-target","target":11.56325335543942,"target-prog":"(* (/ a1 b1) (/ a2 b2))","time":2043.94091796875,"vars":["a1","a2","b1","b2"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 10.23516417063087) (320 0.17875) ())","end":0.17875,"end-est":0.17578125,"identifier":"#f","input":"(/ x (* y y))","link":"344-PhysicsForceLayoutcoulombForcefromforcelayout0402","name":"Physics.ForceLayout:coulombForce from force-layout-0.4.0.2","output":"(/ (/ x y) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y y))","start":10.23516417063087,"start-est":8.857365164819884,"status":"eq-target","target":0.17875,"target-prog":"(/ (/ x y) y)","time":1399.251953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.10390104449816) (7112 1.359069121099315) ())","end":1.359069121099315,"end-est":0.150722509768442,"identifier":"#f","input":"(- x (/ (* y (- z t)) a))","link":"345-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, F","output":"(if (<= a -2.9215722702753097e+96) (+ (* (- (/ t a) (/ z a)) y) x) (if (<= a 1e-82) (- x (/ (* y (- z t)) a)) (fma (/ y a) (- t z) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (* y (- z t)) a))","start":6.10390104449816,"start-est":4.38671875,"status":"eq-target","target":0.7356426800102036,"target-prog":"(if (< y -1.0761266216389975e-10) (- x (/ 1.0 (/ (/ a (- z t)) y))) (if (< y 2.894426862792089e-49) (- x (/ (* y (- z t)) a)) (- x (/ y (/ a (- z t))))))","time":2747.737060546875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.103704257651568) (1480 0.905120850445287) ())","end":0.905120850445287,"end-est":0.140625,"identifier":"#f","input":"(+ x (/ (* y (- z t)) a))","link":"346-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, E","output":"(if (<= (* y (- z t)) -5e+306) (+ (* (- (/ z a) (/ t a)) y) x) (if (<= (* y (- z t)) 1e+116) (+ x (/ (* y (- z t)) a)) (+ (* (- (/ z a) (/ t a)) y) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) a))","start":6.103704257651568,"start-est":4.3828125,"status":"eq-target","target":0.7394118948676032,"target-prog":"(if (< y -1.0761266216389975e-10) (+ x (/ 1.0 (/ (/ a (- z t)) y))) (if (< y 2.894426862792089e-49) (+ x (/ (* y (- z t)) a)) (+ x (/ y (/ a (- z t))))))","time":2517.9140625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.135339203263691) (14728 1.1098392032636912) ())","end":1.1098392032636912,"end-est":0.6100305258134963,"identifier":"#f","input":"(+ x (/ (* y (- z x)) t))","link":"347-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, D","output":"(if (<= (+ x (/ (* y (- z x)) t)) -1e+301) (fma y (/ (- z x) t) x) (if (<= (+ x (/ (* y (- z x)) t)) 1e+300) (+ (/ (* y z) t) (+ x (* -1.0 (/ (* y x) t)))) (fma y (fma z (/ 1.0 t) (- (/ x t))) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z x)) t))","start":7.135339203263691,"start-est":7.848311775813497,"status":"eq-target","target":1.908726560884393,"target-prog":"(- x (+ (* x (/ y t)) (* (- z) (/ y t))))","time":2151.077880859375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 0.11085620312590146) (13376 0.08466748125036057) ())","end":0.08466748125036057,"end-est":0.07421875,"identifier":"#f","input":"(- (+ (- x (* (+ y 0.5) (log y))) y) z)","link":"348-NumericSpecFunctionsstirlingErrorfrommathfunctions","name":"Numeric.SpecFunctions:stirlingError from math-functions-0.1.5.2","output":"(- x (fma (+ y 0.5) (log y) (- z y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (- x (* (+ y 0.5) (log y))) y) z)","start":0.11085620312590146,"start-est":0.11556625976844202,"status":"eq-target","target":0.11178308281331131,"target-prog":"(- (- (+ y x) z) (* (+ y 0.5) (log y)))","time":2291.864990234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.26077019662631146) (58432 0.29129067312254064) ())","end":0.29129067312254064,"end-est":0.2737375609259798,"identifier":"#f","input":"(+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t)))","link":"349-NumericSpecFunctionslogGammaLfrommathfunctions0152","name":"Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2","output":"(fma (cbrt (log z)) (cbrt (pow (log z) 2.0)) (+ (fma (+ a -0.5) (log t) (- t)) (log (+ x y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t)))","start":0.26077019662631146,"start-est":0.3008414650483855,"status":"eq-target","target":0.2584545890305742,"target-prog":"(+ (log (+ x y)) (+ (- (log z) t) (* (- a 0.5) (log t))))","time":4949.946044921875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((2368 29.92939682070506) (46536 2.4521830139717444) ())","end":2.4521830139717444,"end-est":0.9485174266924685,"identifier":"#f","input":"(+ x (/ (* y (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)) (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771)))","link":"350-NumericSpecFunctionslogGammafrommathfunctions0152D","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, D","output":"(if (<= z -6.587780488420653e+72) (+ x (* 3.13060547623 y)) (if (<= z 1.8e+18) (+ x (* y (/ (fma (fma z (fma z (fma z 3.13060547623 11.1667541262) t) a) z b) (fma (fma (fma (+ z 15.234687407) z 31.4690115749) z 11.9400905721) z 0.607771387771)))) (+ x (* 3.13060547623 y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)) (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771)))","start":29.92939682070506,"start-est":27.111660009768443,"status":"lt-target","target":1.1381629273599854,"target-prog":"(if (< z -6.499344996252632e+53) (+ x (* (+ (- 3.13060547623 (/ 36.527041698806414 z)) (/ t (* z z))) (/ y 1.0))) (if (< z 7.066965436914287e+59) (+ x (/ y (/ (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771) (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)))) (+ x (* (+ (- 3.13060547623 (/ 36.527041698806414 z)) (/ t (* z z))) (/ y 1.0)))))","time":3306.003173828125,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((2368 26.90364941894305) (59784 0.927980898969327) ())","end":0.927980898969327,"end-est":0.34279252930532605,"identifier":"#f","input":"(/ (* (- x 2.0) (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z)) (+ (* (+ (* (+ (* (+ x 43.3400022514) x) 263.505074721) x) 313.399215894) x) 47.066876606))","link":"351-NumericSpecFunctionslogGammafrommathfunctions0152C","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, C","output":"(if (<= x -1.8923897149137027e+55) (- (- (fma 4.16438922228 x (/ 3655.1204654076414 x)) (/ (- 130977.50649958357 y) (* x x))) 110.1139242984811) (if (<= x 2.8170607507181647e+55) (/ (* (+ -8.0 (pow x 3.0)) (/ (fma (fma x (fma (fma x 4.16438922228 78.6994924154) x 137.519416416) y) x z) (fma x (fma (fma (+ x 43.3400022514) x 263.505074721) x 313.399215894) 47.066876606))) (fma x (+ x 2.0) 4.0)) (- (- (fma 4.16438922228 x (/ 3655.1204654076414 x)) (/ (- 130977.50649958357 y) (* x x))) 110.1139242984811)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- x 2.0) (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z)) (+ (* (+ (* (+ (* (+ x 43.3400022514) x) 263.505074721) x) 313.399215894) x) 47.066876606))","start":26.90364941894305,"start-est":24.900722509768443,"status":"eq-target","target":0.9389993333672358,"target-prog":"(if (< x -3.326128725870005e+62) (- (+ (/ y (* x x)) (* 4.16438922228 x)) 110.1139242984811) (if (< x 9.429991714554673e+55) (* (/ (- x 2.0) 1.0) (/ (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z) (+ (* (+ (+ (* 263.505074721 x) (+ (* 43.3400022514 (* x x)) (* x (* x x)))) 313.399215894) x) 47.066876606))) (- (+ (/ y (* x x)) (* 4.16438922228 x)) 110.1139242984811)))","time":4157.487060546875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 20.739156571019052) (20424 0.16550304418548123) ())","end":0.16550304418548123,"end-est":0.10775375976844202,"identifier":"#f","input":"(+ x (/ (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))","link":"352-NumericSpecFunctionslogGammafrommathfunctions0152B","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, B","output":"(if (<= z -4.6215803158842533e+20) (+ x (* (* y (cbrt 0.0692910599291889)) (pow 0.0692910599291889 0.6666666666666666))) (if (<= z 1319827911.3249626) (+ x (* y (/ (fma (fma z 0.0692910599291889 0.4917317610505968) z 0.279195317918525) (fma (+ z 6.012459259764103) z 3.350343815022304)))) (+ x (* (cbrt 0.0692910599291889) (* y (cbrt 0.004801250986110448))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))","start":20.739156571019052,"start-est":17.672538769536885,"status":"eq-target","target":0.3687404229830953,"target-prog":"(if (< z -8120153.652456675) (- (* (+ (/ 0.07512208616047561 z) 0.0692910599291889) y) (- (/ (* 0.40462203869992125 y) (* z z)) x)) (if (< z 6.576118972787377e+20) (+ x (* (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (/ 1.0 (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))) (- (* (+ (/ 0.07512208616047561 z) 0.0692910599291889) y) (- (/ (* 0.40462203869992125 y) (* z z)) x))))","time":1737.14501953125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7360 0.0949791112517706) (7552 0.07017723156436075) ())","end":0.07017723156436075,"end-est":0.078125,"identifier":"#f","input":"(+ (- (+ (+ x y) z) (* z (log t))) (* (- a 0.5) b))","link":"353-NumericSpecFunctionslogBetafrommathfunctions0152A","name":"Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, A","output":"(- (- (+ (+ x y) (* z (- 1.0 (log t)))) (* 0.5 b)) (- (* a b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (+ x y) z) (* z (log t))) (* (- a 0.5) b))","start":0.0949791112517706,"start-est":0.10546875,"status":"eq-target","target":0.3222872082563998,"target-prog":"(+ (+ (+ x y) (/ (* (- 1.0 (pow (log t) 2.0)) z) (+ 1.0 (log t)))) (* (- a 0.5) b))","time":3602.14599609375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.21101184218813096) (7232 0.21526184218813096) ())","end":0.21526184218813096,"end-est":0.18359375,"identifier":"#f","input":"(- (- 1.0 (/ 1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x))))","link":"354-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, D","output":"(- (- 1.0 (/ (/ -1.0 x) -9.0)) (/ y (* 3.0 (sqrt x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- 1.0 (/ 1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x))))","start":0.21101184218813096,"start-est":0.18359375,"status":"eq-target","target":0.21526184218813096,"target-prog":"(- (- 1.0 (/ (/ 1.0 x) 9.0)) (/ y (* 3.0 (sqrt x))))","time":2092.918212890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 18.710408037836388) (7620 0.09238569775175527) ())","end":0.09238569775175527,"end-est":0.0078125,"identifier":"#f","input":"(- 1.0 (log (- 1.0 (/ (- x y) (- 1.0 y)))))","link":"355-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, B","output":"(if (<= (/ (- x y) (- 1.0 y)) 0.8) (- 1.0 (log1p (/ (- x y) (+ -1.0 y)))) (- 1.0 (+ (log (/ (+ x -1.0) y)) (/ 1.0 y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (log (- 1.0 (/ (- x y) (- 1.0 y)))))","start":18.710408037836388,"start-est":16.635185414317228,"status":"eq-target","target":0.09814989054288809,"target-prog":"(if (< y -81284752.61947241) (- 1.0 (log (- (/ x (* y y)) (- (/ 1.0 y) (/ x y))))) (if (< y 3.0094271212461764e+25) (log (/ (exp 1.0) (- 1.0 (/ (- x y) (- 1.0 y))))) (- 1.0 (log (- (/ x (* y y)) (- (/ 1.0 y) (/ x y)))))))","time":4112.643798828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((14784 4.10979786421018) (39808 2.2881102866925063) ())","end":2.2881102866925063,"end-est":1.9569982131971562,"identifier":"#f","input":"(/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))","link":"356-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, I","output":"(/ x (fma (pow (* E E) (fma z (/ (sqrt (+ t a)) t) (* (- c b) (- a (+ (/ 0.6666666666666666 t) -0.8333333333333334))))) y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))","start":4.10979786421018,"start-est":3.5031482240304803,"status":"eq-target","target":3.034436573794318,"target-prog":"(if (< t -2.118326644891581e-50) (/ x (+ x (* y (exp (* 2.0 (- (+ (* a c) (* 0.8333333333333334 c)) (* a b))))))) (if (< t 5.196588770651547e-123) (/ x (+ x (* y (exp (* 2.0 (/ (- (* (* z (sqrt (+ t a))) (* (* 3.0 t) (- a (/ 5.0 6.0)))) (* (- (* (+ (/ 5.0 6.0) a) (* 3.0 t)) 2.0) (* (- a (/ 5.0 6.0)) (* (- b c) t)))) (* (* (* t t) 3.0) (- a (/ 5.0 6.0))))))))) (/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))))","time":3961.699951171875,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 6.478940796614227) (33928 2.092138715422798) ())","end":2.092138715422798,"end-est":0.8074175198472052,"identifier":"#f","input":"(+ x (/ (exp (* y (log (/ y (+ z y))))) y))","link":"357-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, G","output":"(if (<= (+ x (/ (exp (* y (log (/ y (+ z y))))) y)) -1e+19) (+ x (/ 1.0 y)) (if (<= (+ x (/ (exp (* y (log (/ y (+ z y))))) y)) 2e-33) (+ x (/ (exp (- z)) y)) (+ x (/ 1.0 y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (exp (* y (log (/ y (+ z y))))) y))","start":6.478940796614227,"start-est":5.440442030053174,"status":"lt-target","target":1.05678961395075,"target-prog":"(if (< (/ y (+ z y)) 7.11541576e-315) (+ x (/ (exp (/ -1.0 z)) y)) (+ x (/ (exp (log (pow (/ y (+ y z)) y))) y)))","time":3050.8740234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 11.409595285687818) (7048 0.3239751172375727) ())","end":0.3239751172375727,"end-est":0.7775713586814843,"identifier":"#f","input":"(/ (exp (* x (log (/ x (+ x y))))) x)","link":"358-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, F","output":"(if (<= x -0.017) (* (/ 1.0 x) (exp (- y))) (if (<= x 4.5) (/ 1.0 x) (* (/ 1.0 x) (exp (- y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp (* x (log (/ x (+ x y))))) x)","start":11.409595285687818,"start-est":13.976253471971566,"status":"gt-target","target":8.106348974842854,"target-prog":"(if (< y -3.7311844206647956e+94) (/ (exp (/ -1.0 y)) x) (if (< y 2.817959242728288e+37) (/ (pow (/ x (+ y x)) x) x) (if (< y 2.347387415166998e+178) (log (exp (/ (pow (/ x (+ y x)) x) x))) (/ (exp (/ -1.0 y)) x))))","time":2804.530029296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 4.524311496380748) (16076 0.7183454505023606) ())","end":0.7183454505023606,"end-est":0.2176871892756375,"identifier":"#f","input":"(* x (- (/ y z) (/ t (- 1.0 z))))","link":"359-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, C","output":"(if (<= (- (/ y z) (/ t (- 1.0 z))) (- INFINITY)) (fma (* x t) (/ 1.0 (+ -1.0 z)) (/ (* x y) z)) (if (<= (- (/ y z) (/ t (- 1.0 z))) -1e-242) (* x (- (/ y z) (/ t (- 1.0 z)))) (if (<= (- (/ y z) (/ t (- 1.0 z))) 5e-241) (+ (/ (* (+ y t) x) z) (+ (/ (* t x) (pow z 3.0)) (/ (* t x) (pow z 2.0)))) (if (<= (- (/ y z) (/ t (- 1.0 z))) 2e+145) (* x (fma t (/ 1.0 (+ -1.0 z)) (/ y z))) (fma y (/ x z) (/ (* x t) (+ -1.0 z)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- (/ y z) (/ t (- 1.0 z))))","start":4.524311496380748,"start-est":6.266019470859463,"status":"gt-target","target":3.9576077633354303,"target-prog":"(if (< (* x (- (/ y z) (/ t (- 1.0 z)))) -7.623226303312042e-196) (* x (- (/ y z) (* t (/ 1.0 (- 1.0 z))))) (if (< (* x (- (/ y z) (/ t (- 1.0 z)))) 1.4133944927702302e-211) (+ (/ (* y x) z) (- (/ (* t x) (- 1.0 z)))) (* x (- (/ y z) (* t (/ 1.0 (- 1.0 z)))))))","time":2836.3291015625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 9.41768901330132) (26048 0.11482312031259015) ())","end":0.11482312031259015,"end-est":0.0859375,"identifier":"#f","input":"(- (+ (* x (log y)) (* z (log (- 1.0 y)))) t)","link":"360-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, B","output":"(fma z (log1p (- y)) (fma x (log y) (- t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (* x (log y)) (* z (log (- 1.0 y)))) t)","start":9.41768901330132,"start-est":9.517650867418748,"status":"eq-target","target":0.22450614164422122,"target-prog":"(- (* (- z) (+ (+ (* 0.5 (* y y)) y) (* (/ 0.3333333333333333 (* 1.0 (* 1.0 1.0))) (* y (* y y))))) (- t (* x (log y))))","time":3336.08203125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 3.2313654686373656) (13508 0.29208425216730394) ())","end":0.29208425216730394,"end-est":0.05078125,"identifier":"#f","input":"(+ x (/ y (- (* 1.1283791670955126 (exp z)) (* x y))))","link":"361-NumericSpecFunctionsinvErfcfrommathfunctions0152A","name":"Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, A","output":"(if (<= z -8.611849697529846e+36) (+ x (/ -1.0 x)) (- x (/ y (fma x y (* (exp z) -1.1283791670955126)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ y (- (* 1.1283791670955126 (exp z)) (* x y))))","start":3.2313654686373656,"start-est":3.5987177816016116,"status":"eq-target","target":0.05289075584698257,"target-prog":"(+ x (/ 1.0 (- (* (/ 1.1283791670955126 y) (exp z)) x)))","time":2585.427978515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.4031000015744897) (20032 0.40040170820720355) ())","end":0.40040170820720355,"end-est":0.262382519536884,"identifier":"#f","input":"(* (* 3.0 (sqrt x)) (- (+ y (/ 1.0 (* x 9.0))) 1.0))","link":"362-NumericSpecFunctionsincompleteGammafrommathfunctio","name":"Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, B","output":"(fma (sqrt (* x 9.0)) (/ (- 0.1111111111111111 x) x) (* (sqrt (* x 9.0)) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 (sqrt x)) (- (+ y (/ 1.0 (* x 9.0))) 1.0))","start":0.4031000015744897,"start-est":0.4388275390737681,"status":"eq-target","target":0.39076748282484997,"target-prog":"(* 3.0 (+ (* y (sqrt x)) (* (- (/ 1.0 (* x 9.0)) 1.0) (sqrt x))))","time":2000.289794921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 1.9168671864515523) (32896 1.9158536514431017) ())","end":1.9158536514431017,"end-est":1.3266251417959882,"identifier":"#f","input":"(/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y)","link":"363-NumericSpecFunctionsincompleteBetaWorkerfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaWorker from math-functions-0.1.5.2, A","output":"(/ (* x (exp (- (+ (* y (log z)) (fma t (log a) (- (log a)))) b))) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y)","start":1.9168671864515523,"start-est":1.336836046285569,"status":"gt-target","target":11.152899782278448,"target-prog":"(if (< t -0.8845848504127471) (/ (* x (/ (pow a (- t 1.0)) y)) (- (+ b 1.0) (* y (log z)))) (if (< t 852031.2288374073) (/ (* (/ x y) (pow a (- t 1.0))) (exp (- b (* (log z) y)))) (/ (* x (/ (pow a (- t 1.0)) y)) (- (+ b 1.0) (* y (log z))))))","time":6912.965087890625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 19.748457628416332) (27340 7.406124844256555) ())","end":7.406124844256555,"end-est":7.39327853112404,"identifier":"#f","input":"(/ (* x y) (* (* (+ x y) (+ x y)) (+ (+ x y) 1.0)))","link":"364-NumericSpecFunctionsincompleteBetaApproxfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, A","output":"(if (<= x -5.557255440701011e-146) (* (pow (+ x y) -2.0) (* (/ y (cbrt (+ 1.0 (+ x y)))) (/ x (cbrt (pow (+ 1.0 (+ x y)) 2.0))))) (if (<= x 1.4610749151403416e-142) (/ x (* y (+ 1.0 y))) (if (<= x 4.3646095585197394e+169) (* (pow (+ x y) -2.0) (* (/ y (cbrt (+ 1.0 (+ x y)))) (/ x (cbrt (pow (+ 1.0 (+ x y)) 2.0))))) (* (* (cbrt (/ 1.0 (+ 1.0 x))) (/ y x)) (pow (cbrt (+ 1.0 (+ x y))) -2.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) (* (* (+ x y) (+ x y)) (+ (+ x y) 1.0)))","start":19.748457628416332,"start-est":20.747113564854292,"status":"lt-target","target":0.14505734726943303,"target-prog":"(/ (/ (/ x (+ (+ y 1.0) x)) (+ y x)) (/ 1.0 (/ y (+ y x))))","time":2837.365966796875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 12.343737003327718) (8912 0.9967923568537896) ())","end":0.9967923568537896,"end-est":0.08041000976844201,"identifier":"#f","input":"(/ (* x (+ y z)) z)","link":"365-NumericSpecFunctionschoosefrommathfunctions0152","name":"Numeric.SpecFunctions:choose from math-functions-0.1.5.2","output":"(if (<= (/ (* x (+ y z)) z) (- INFINITY)) (fma y (/ x z) x) (if (<= (/ (* x (+ y z)) z) -2e+153) (/ (* x (+ y z)) z) (if (<= (/ (* x (+ y z)) z) 5e-56) (fma x (/ y z) x) (if (<= (/ (* x (+ y z)) z) 4e+279) (fma (* x y) (/ 1.0 z) x) (fma x (/ y z) x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ y z)) z)","start":12.343737003327718,"start-est":10.988984066735751,"status":"gt-target","target":3.1701879770447223,"target-prog":"(/ x (/ z (+ y z)))","time":1538.198974609375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7872 6.31502943715376) (26820 2.668311815456387) ())","end":2.668311815456387,"end-est":2.5104033199332125,"identifier":"#f","input":"(+ (+ (- (* (- x 0.5) (log x)) x) 0.91893853320467) (/ (+ (* (- (* (+ y 0.0007936500793651) z) 0.0027777777777778) z) 0.083333333333333) x))","link":"366-NumericSpecFunctionsslogFactorialfrommathfunctions","name":"Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, B","output":"(if (<= x 1e+30) (+ (- (fma (+ x -0.5) (log x) 0.91893853320467) x) (/ (fma (fma (+ y 0.0007936500793651) z -0.0027777777777778) z 0.083333333333333) x)) (if (<= x 7.4316061656686256e+196) (+ (fma (log x) (+ x -0.5) (- 0.91893853320467 x)) (+ (/ (fma -0.0027777777777778 z 0.083333333333333) x) (* (/ (+ 0.0007936500793651 y) x) (* z z)))) (+ (fma (log x) (+ x -0.5) (- 0.91893853320467 x)) (+ (* 0.083333333333333 (/ 1.0 x)) (* -0.0027777777777778 (/ z x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (- (* (- x 0.5) (log x)) x) 0.91893853320467) (/ (+ (* (- (* (+ y 0.0007936500793651) z) 0.0027777777777778) z) 0.083333333333333) x))","start":6.31502943715376,"start-est":8.055351269536885,"status":"lt-target","target":1.2214833722355498,"target-prog":"(+ (+ (+ (* (- x 0.5) (log x)) (- 0.91893853320467 x)) (/ 0.083333333333333 x)) (* (/ z x) (- (* z (+ y 0.0007936500793651)) 0.0027777777777778)))","time":3124.51513671875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.5697675424034196) (6528 0.001375) ())","end":0.001375,"end-est":0,"identifier":"#f","input":"(/ 1.0 (* x x))","link":"367-NumericSpecFunctionsslogFactorialfrommathfunctions","name":"Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, A","output":"(pow x -2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (* x x))","start":0.5697675424034196,"start-est":0.33092515430673014,"status":"eq-target","target":0.1745,"target-prog":"(/ (/ 1.0 x) x)","time":390.3349609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 15.63355491686514) (13636 0.3320648623085375) ())","end":0.3320648623085375,"end-est":0.27326635917053294,"identifier":"#f","input":"(- (* x (log (/ x y))) z)","link":"368-NumericSpecFunctionsExtrabd0frommathfunctions0152","name":"Numeric.SpecFunctions.Extra:bd0 from math-functions-0.1.5.2","output":"(if (<= x 0.0) (- (* (+ (log (/ -1.0 y)) (log (* -1.0 x))) x) z) (- (* (+ (* -1.0 (log y)) (log x)) x) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x (log (/ x y))) z)","start":15.63355491686514,"start-est":14.33984375,"status":"gt-target","target":7.971301486686755,"target-prog":"(if (< y 7.595077799083773e-308) (- (* x (log (/ x y))) z) (- (* x (- (log x) (log y))) z))","time":2191.154052734375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 2.1050395212320328) (7496 2.1235713900539195) ())","end":2.1235713900539195,"end-est":0.5834990882366679,"identifier":"#f","input":"(* (/ (- x y) (- z y)) t)","link":"369-NumericSignalMultichannelcputfromhsignal0271","name":"Numeric.Signal.Multichannel:$cput from hsignal-0.2.7.1","output":"(if (<= y 1e-235) (+ (* (/ x (- z y)) t) (* (/ y (- y z)) t)) (if (<= y 3.994923810701523e-47) (* (- x y) (/ t (- z y))) (* (fma x (/ -1.0 (- y z)) (/ y (- y z))) t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (- x y) (- z y)) t)","start":2.1050395212320328,"start-est":1.836332818938797,"status":"eq-target","target":2.086709310168366,"target-prog":"(/ t (/ (- z y) (- x y)))","time":3480.0498046875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 1.7569815696172815) (7112 1.8770449894632746) ())","end":1.8770449894632746,"end-est":0.8494632173505163,"identifier":"#f","input":"(+ (* (/ x y) (- z t)) t)","link":"370-NumericSignalMultichannelcgetfromhsignal0271","name":"Numeric.Signal.Multichannel:$cget from hsignal-0.2.7.1","output":"(if (<= t -1.12022160803714e-251) (fma (/ x y) (- z t) t) (if (<= t 2.1307364653386946e-172) (+ (* (- (/ z y) (/ t y)) x) t) (fma (/ x y) (- z t) t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (/ x y) (- z t)) t)","start":1.7569815696172815,"start-est":2.3253742467294547,"status":"eq-target","target":2.0777018131336984,"target-prog":"(if (< z 2.759456554562692e-282) (+ (* (/ x y) (- z t)) t) (if (< z 2.326994450874436e-110) (+ (* x (/ (- z t) y)) t) (+ (* (/ x y) (- z t)) t)))","time":3156.9990234375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.013073120312590145) (13248 0.001375) ())","end":0.001375,"end-est":0.0078125,"identifier":"#f","input":"(+ (+ (* x 2.0) (* x x)) (* y y))","link":"371-NumericLogclog1pfromlogdomain01021A","name":"Numeric.Log:$clog1p from log-domain-0.10.2.1, A","output":"(fma y y (fma x x (+ x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x 2.0) (* x x)) (* y y))","start":0.013073120312590145,"start-est":0.029628759768442016,"status":"eq-target","target":0.013073120312590145,"target-prog":"(+ (* y y) (+ (* 2.0 x) (* x x)))","time":972.69189453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 2.0) x)","link":"372-NumericLogcexpm1fromlogdomain01021A","name":"Numeric.Log:$cexpm1 from log-domain-0.10.2.1, A","output":"(* (+ x x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 2.0) x)","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(* (* 2.0 x) x)","time":368.7421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012447414492197502) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (/ (- y x) 2.0))","link":"373-NumericIntervalInternalbisectfromintervals071A","name":"Numeric.Interval.Internal:bisect from intervals-0.7.1, A","output":"(* 0.5 (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- y x) 2.0))","start":0.012447414492197502,"start-est":0.00390625,"status":"eq-target","target":0,"target-prog":"(* 0.5 (+ x y))","time":576.14013671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.206) (6720 0.082) ())","end":0.082,"end-est":0.12109375,"identifier":"#f","input":"(* x (+ 1.0 (* y y)))","link":"374-NumericIntegrationTanhSinheverywherefromintegratio","name":"Numeric.Integration.TanhSinh:everywhere from integration-0.2.1","output":"(fma y (* y x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ 1.0 (* y y)))","start":5.206,"start-est":4.33984375,"status":"eq-target","target":0.084375,"target-prog":"(+ x (* (* x y) y))","time":1250.571044921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.830177056537211) (8264 1.5413464095573084) ())","end":1.5413464095573084,"end-est":0.3446087753139631,"identifier":"#f","input":"(+ x (/ (* (- y x) z) t))","link":"375-NumericHistogrambinBoundsfromChart153","name":"Numeric.Histogram:binBounds from Chart-1.5.3","output":"(if (<= (+ x (/ (* (- y x) z) t)) 1e-239) (fma (- y x) (/ z t) x) (if (<= (+ x (/ (* (- y x) z) t)) 5e+297) (fma (* (- y x) z) (/ 1.0 t) x) (+ (* (- (/ y t) (/ x t)) z) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y x) z) t))","start":6.830177056537211,"start-est":6.473034382889811,"status":"eq-target","target":1.977628526292232,"target-prog":"(if (< x -9.025511195533005e-135) (- x (* (/ z t) (- x y))) (if (< x 4.275032163700715e-250) (+ x (* (/ (- y x) t) z)) (+ x (/ (- y x) (/ t z)))))","time":2339.9580078125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 11.81834415705272) (7888 2.009241524998507) ())","end":2.009241524998507,"end-est":1.8743205123235902,"identifier":"#f","input":"(- x (/ (* (* y 2.0) z) (- (* (* z 2.0) z) (* y t))))","link":"376-NumericADRank1HalleyfindZerofromad424","name":"Numeric.AD.Rank1.Halley:findZero from ad-4.2.4","output":"(if (<= z -3.5609361294793226e+95) (+ x (- (/ y z))) (if (<= z -8.483333175209617e-156) (+ x (* z (/ (+ y y) (fma t y (* z (* -2.0 z)))))) (if (<= z 4.036421214909982e-177) (+ x (/ (* 2.0 z) t)) (if (<= z 1.4629709916416835e+99) (+ x (* z (/ (+ y y) (fma t y (* z (* -2.0 z)))))) (+ x (- (/ y z)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (* (* y 2.0) z) (- (* (* z 2.0) z) (* y t))))","start":11.81834415705272,"start-est":16.185433491700543,"status":"lt-target","target":0.07345772226222148,"target-prog":"(- x (/ 1.0 (- (/ z y) (/ (/ t 2.0) z))))","time":2153.60693359375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((52672 4.952788831483142) (52672 4.952788831483142) ())","end":4.952788831483142,"end-est":4.416260013693683,"identifier":"#f","input":"(+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t)))","link":"377-Mainzfrom","name":"Main:z from ","output":"(+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t)))","start":4.952788831483142,"start-est":4.416260013693683,"status":"eq-start","target":1.3820350499433915,"target-prog":"(+ (+ (+ (/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x))) (/ 1.0 (+ (sqrt (+ y 1.0)) (sqrt y)))) (/ 1.0 (+ (sqrt (+ z 1.0)) (sqrt z)))) (- (sqrt (+ t 1.0)) (sqrt t)))","time":5148.85302734375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.485905139390646) (13376 0.16348364687698316) ())","end":0.16348364687698316,"end-est":0.19140625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"378-Mainbigenough3fromC","name":"Main:bigenough3 from C","output":"(/ 1.0 (+ (sqrt (+ 0.5 (+ 0.5 x))) (sqrt x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":29.485905139390646,"start-est":29.550838072395354,"status":"eq-target","target":0.16330676718957327,"target-prog":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","time":1759.89697265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.517698316962573) (19456 0.4815) ())","end":0.4815,"end-est":0.25390625,"identifier":"#f","input":"(- (log (+ 1.0 (exp x))) (* x y))","link":"379-Logisticregression2","name":"Logistic regression 2","output":"(fma (- x) y (log1p (exp x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (+ 1.0 (exp x))) (* x y))","start":0.517698316962573,"start-est":0.26171875,"status":"eq-target","target":0.041884595087031934,"target-prog":"(if (<= x 0.0) (- (log (+ 1.0 (exp x))) (* x y)) (- (log (+ 1.0 (exp (- x)))) (* (- x) (- 1.0 y))))","time":2732.673095703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 2.568159748966524) (20424 0.19116727397019642) ())","end":0.19116727397019642,"end-est":0.14681625976844204,"identifier":"#f","input":"(/ (* x (/ (sin y) y)) z)","link":"380-LinearQuaternionctanhfromlinear11913","name":"Linear.Quaternion:$ctanh from linear-1.19.1.3","output":"(if (<= (* x (/ (sin y) y)) -5e-285) (/ (* x (/ (sin y) y)) z) (if (<= (* x (/ (sin y) y)) 2e-319) (* (/ (/ (sin y) y) z) x) (/ (* x (/ (sin y) y)) z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (/ (sin y) y)) z)","start":2.568159748966524,"start-est":3.967228939535031,"status":"eq-target","target":0.30924656286876356,"target-prog":"(if (< z -4.2173720203427147e-29) (/ (* x (/ 1.0 (/ y (sin y)))) z) (if (< z 4.446702369113811e+64) (/ x (* z (/ y (sin y)))) (/ (* x (/ 1.0 (/ y (sin y)))) z)))","time":2413.5869140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 7.5786793234384895) (21192 0.5876817429732556) ())","end":0.5876817429732556,"end-est":0.453125,"identifier":"#f","input":"(/ (* (cosh x) (/ y x)) z)","link":"381-LinearQuaternionctanfromlinear11913","name":"Linear.Quaternion:$ctan from linear-1.19.1.3","output":"(if (<= z -1.6e-41) (/ (* (cosh x) y) (* x z)) (if (<= z 6.356807180506271e+59) (/ (/ (* (cosh x) y) x) z) (+ (/ y (* z x)) (fma 0.5 (/ (* y x) z) (/ (+ (* 0.041666666666666664 (* y (pow x 3.0))) (* 0.001388888888888889 (* y (pow x 5.0)))) z)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (cosh x) (/ y x)) z)","start":7.5786793234384895,"start-est":6.4765625,"status":"eq-target","target":0.4778100841184878,"target-prog":"(if (< y -4.618902267687042e-52) (* (/ (/ y z) x) (cosh x)) (if (< y 1.038530535935153e-39) (/ (/ (* (cosh x) y) x) z) (* (/ (/ y z) x) (cosh x))))","time":2537.080078125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.12775960194963137) (13120 0.12775960194963137) ())","end":0.12775960194963137,"end-est":0.1171875,"identifier":"#f","input":"(* (cosh x) (/ (sin y) y))","link":"382-LinearQuaternioncsinhfromlinear11913","name":"Linear.Quaternion:$csinh from linear-1.19.1.3","output":"(* (cosh x) (/ (sin y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (cosh x) (/ (sin y) y))","start":0.12775960194963137,"start-est":0.1171875,"status":"eq-target","target":0.12634436093777043,"target-prog":"(/ (* (cosh x) (sin y)) y)","time":2720.648193359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 20.740375) (13256 0.1603392734924472) ())","end":0.1603392734924472,"end-est":0.0078125,"identifier":"#f","input":"(sqrt (+ (* x x) y))","link":"383-LinearQuaternionclogfromlinear11913","name":"Linear.Quaternion:$clog from linear-1.19.1.3","output":"(if (<= x -1.7526032698725896e+154) (fma -0.5 (/ y x) (- x)) (if (<= x 4.3388556039437286e+102) (sqrt (fma x x y)) (fma 0.5 (/ y x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) y))","start":20.740375,"start-est":24.2578125,"status":"eq-target","target":0.4591363595262356,"target-prog":"(if (< x -1.5097698010472593e+153) (- (+ (* 0.5 (/ y x)) x)) (if (< x 5.582399551122541e+57) (sqrt (+ (* x x) y)) (+ (* 0.5 (/ y x)) x)))","time":1743.572021484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 14.495082293402213) (13120 0.10591748125036059) ())","end":0.10591748125036059,"end-est":0.10546875,"identifier":"#f","input":"(/ (* (sin x) (sinh y)) x)","link":"384-LinearQuaternionccoshfromlinear11913","name":"Linear.Quaternion:$ccosh from linear-1.19.1.3","output":"(* (sinh y) (/ (sin x) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (sin x) (sinh y)) x)","start":14.495082293402213,"start-est":12.93165753032931,"status":"eq-target","target":0.20766748125036055,"target-prog":"(* (sin x) (/ (sinh y) x))","time":2379.4541015625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.14119116562662265) (13376 0.056875) ())","end":0.056875,"end-est":0.046875,"identifier":"#f","input":"(+ (+ (+ (* x x) (* y y)) (* y y)) (* y y))","link":"385-LinearQuaternioncfromlinear11913E","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, E","output":"(fma y y (fma x x (* y (+ y y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x x) (* y y)) (* y y)) (* y y))","start":0.14119116562662265,"start-est":0.1171875,"status":"eq-target","target":0.12425,"target-prog":"(+ (* x x) (* y (+ y (+ y y))))","time":1193.005859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 12.989216340727873) (384 0.0125) ())","end":0.0125,"end-est":0.00390625,"identifier":"#f","input":"(- (+ (- (* x y) (* y y)) (* y y)) (* y z))","link":"386-LinearQuaternioncfromlinear11913D","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, D","output":"(- (* y (- z x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (- (* x y) (* y y)) (* y y)) (* y z))","start":12.989216340727873,"start-est":13.01656383987639,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":1191.38916015625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 17.83725677328059) (6784 0.007415241011860921) ())","end":0.007415241011860921,"end-est":0,"identifier":"#f","input":"(- (- (+ (* x y) (* y y)) (* y z)) (* y y))","link":"387-LinearQuaternioncfromlinear11913C","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, C","output":"(fma y x (- (* z y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (+ (* x y) (* y y)) (* y z)) (* y y))","start":17.83725677328059,"start-est":18.75111491369989,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":1259.159912109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 17.83711390353636) (6784 0.007415241011860921) ())","end":0.007415241011860921,"end-est":0,"identifier":"#f","input":"(+ (- (- (* x y) (* y z)) (* y y)) (* y y))","link":"388-LinearQuaternioncfromlinear11913B","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, B","output":"(fma y x (- (* z y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- (* x y) (* y z)) (* y y)) (* y y))","start":17.83711390353636,"start-est":18.75111491369989,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":1044.35791015625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.12310620312590145) (7296 0.028) ())","end":0.028,"end-est":0.03125,"identifier":"#f","input":"(+ (+ (+ (* x y) (* z z)) (* z z)) (* z z))","link":"389-LinearQuaternioncfromlinear11913A","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, A","output":"(+ (* x y) (fma (+ z z) (+ z z) (- (* z z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x y) (* z z)) (* z z)) (* z z))","start":0.12310620312590145,"start-est":0.12109375,"status":"eq-target","target":0.106125,"target-prog":"(+ (* (* 3.0 z) z) (* y x))","time":1278.196044921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.91844014420503) (20356 0.8580202886581351) ())","end":0.8580202886581351,"end-est":0.02734375,"identifier":"#f","input":"(/ (* (* x 2.0) y) (- x y))","link":"390-LinearProjectionperspectivefromlinear11913B","name":"Linear.Projection:perspective from linear-1.19.1.3, B","output":"(if (<= y -9.679743729693019e+116) (* (+ x x) (* (cbrt (/ y (- x y))) (cbrt (pow (/ y (- x y)) 2.0)))) (if (<= y 1.221997360927531e-92) (* (/ (+ x x) (- x y)) y) (* (+ x x) (/ y (- x y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (* x 2.0) y) (- x y))","start":14.91844014420503,"start-est":13.097266994459217,"status":"eq-target","target":0.29188192251819656,"target-prog":"(if (< x -1.7210442634149447e+81) (* (/ (* 2.0 x) (- x y)) y) (if (< x 83645045635564430.0) (/ (* x 2.0) (/ (- x y) y)) (* (/ (* 2.0 x) (- x y)) y)))","time":1665.81591796875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.026044925001442315) (13568 0.031976957695291214) ())","end":0.031976957695291214,"end-est":0.017910009768442016,"identifier":"#f","input":"(/ (+ x y) (- x y))","link":"391-LinearProjectionperspectivefromlinear11913A","name":"Linear.Projection:perspective from linear-1.19.1.3, A","output":"(+ (/ y (- x y)) (pow (cbrt (/ x (- x y))) 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (- x y))","start":0.026044925001442315,"start-est":0.02734375,"status":"eq-target","target":0.025743248826614547,"target-prog":"(/ 1.0 (- (/ x (+ x y)) (/ y (+ x y))))","time":2132.0859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.67147182709287) (448 0.014198120312590145) ())","end":0.014198120312590145,"end-est":0.01953125,"identifier":"#f","input":"(/ (+ x y) (* (* x 2.0) y))","link":"392-LinearProjectioninversePerspectivefromlinear11913C","name":"Linear.Projection:inversePerspective from linear-1.19.1.3, C","output":"(+ (/ 0.5 y) (/ 0.5 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (* (* x 2.0) y))","start":15.67147182709287,"start-est":14.81204757690762,"status":"eq-target","target":0.014198120312590145,"target-prog":"(+ (/ 0.5 x) (/ 0.5 y))","time":1065.30615234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.670594877653832) (448 0.014065445244507126) ())","end":0.014065445244507126,"end-est":0.015625,"identifier":"#f","input":"(/ (- x y) (* (* x 2.0) y))","link":"393-LinearProjectioninversePerspectivefromlinear11913B","name":"Linear.Projection:inversePerspective from linear-1.19.1.3, B","output":"(+ (/ 0.5 y) (/ -0.5 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (* (* x 2.0) y))","start":15.670594877653832,"start-est":14.8175750598401,"status":"eq-target","target":0.014065445244507126,"target-prog":"(- (/ 0.5 y) (/ 0.5 x))","time":1380.6240234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.929141552464674) (1608 1.5077614551959218) ())","end":1.5077614551959218,"end-est":0.6874358762296017,"identifier":"#f","input":"(* (- (* x y) (* z y)) t)","link":"394-LinearProjectioninverseInfinitePerspectivefromline","name":"Linear.Projection:inverseInfinitePerspective from linear-1.19.1.3","output":"(if (<= (- (* x y) (* z y)) (- INFINITY)) (* (* t y) (- x z)) (if (<= (- (* x y) (* z y)) 1e+193) (* (- (* x y) (* z y)) t) (* (* t y) (- x z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (- (* x y) (* z y)) t)","start":6.929141552464674,"start-est":5.929623376229602,"status":"gt-target","target":3.2823363900240388,"target-prog":"(if (< t -9.231879582886777e-80) (* (* y t) (- x z)) (if (< t 2.543067051564877e+83) (* y (* t (- x z))) (* (* y (- x z)) t)))","time":1803.095947265625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 7.151013001761037) (2640 0.5054614827492248) ())","end":0.5054614827492248,"end-est":0.12890625,"identifier":"#f","input":"(/ (* x 2.0) (- (* y z) (* t z)))","link":"395-LinearProjectioninfinitePerspectivefromlinear11913","name":"Linear.Projection:infinitePerspective from linear-1.19.1.3, A","output":"(if (<= (- (* y z) (* t z)) -5e+247) (* (/ x z) (/ 2.0 (- y t))) (if (<= (- (* y z) (* t z)) -5e-185) (/ (+ x x) (* (- y t) z)) (if (<= (- (* y z) (* t z)) 5e-169) (/ (/ x z) (* (- y t) 0.5)) (if (<= (- (* y z) (* t z)) 1e+192) (/ (+ x x) (* (- y t) z)) (* (/ x z) (/ 2.0 (- y t)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x 2.0) (- (* y z) (* t z)))","start":7.151013001761037,"start-est":7.90671972535238,"status":"gt-target","target":2.2582801954273886,"target-prog":"(if (< (/ (* x 2.0) (- (* y z) (* t z))) -2.559141628295061e-13) (* (/ x (* (- y t) z)) 2.0) (if (< (/ (* x 2.0) (- (* y z) (* t z))) 1.045027827330126e-269) (/ (* (/ x z) 2.0) (- y t)) (* (/ x (* (- y t) z)) 2.0)))","time":1848.342041015625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01854024101186092) (6976 0.005573120312590146) ())","end":0.005573120312590146,"end-est":0,"identifier":"#f","input":"(* 2.0 (+ (* x x) (* x y)))","link":"396-LinearMatrixfromQuaternionfromlinear11913B","name":"Linear.Matrix:fromQuaternion from linear-1.19.1.3, B","output":"(fma (+ x x) x (* (+ x x) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (+ (* x x) (* x y)))","start":0.01854024101186092,"start-est":0.015625,"status":"eq-target","target":0.009375,"target-prog":"(* (* x 2.0) (+ x y))","time":616.018798828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.017698120312590146) (448 0.03175) ())","end":0.03175,"end-est":0.0078125,"identifier":"#f","input":"(* 2.0 (- (* x x) (* x y)))","link":"397-LinearMatrixfromQuaternionfromlinear11913A","name":"Linear.Matrix:fromQuaternion from linear-1.19.1.3, A","output":"(* x (* (- x y) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (- (* x x) (* x y)))","start":0.017698120312590146,"start-est":0.015625,"status":"eq-target","target":0.00775,"target-prog":"(* (* x 2.0) (- x y))","time":991.630859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6080 26.669136525537326) (119496 19.985291970019) ())","end":19.985291970019,"end-est":15.719269244699593,"identifier":"#f","input":"(+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))","link":"398-LinearMatrixdet44fromlinear11913","name":"Linear.Matrix:det44 from linear-1.19.1.3","output":"(if (<= (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0)))) (- INFINITY)) (fma a (* (fma t y2 (- (* y y3))) y5) (- (+ (* (- (+ (* (- (* y1 i) (* y0 b)) x) (* y4 (+ (* t b) (* -1.0 (* y1 y3))))) (+ (* -1.0 (* y0 (* y3 y5))) (* i (* t y5)))) j) (+ (* (- (+ (* k (* y1 y2)) (* -1.0 (* k (* y b)))) (* c (- (* t y2) (* y y3)))) y4) (+ (* (- (* y x) (* t z)) (- (* a b) (* c i))) (+ (* (- (* x y2) (* y3 z)) (- (* c y0) (* y1 a))) (* -1.0 (* k (* z (- (* y1 i) (* y0 b))))))))) (+ (* k (* y0 (* y5 y2))) (* -1.0 (* k (* i (* y y5))))))) (if (<= (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0)))) 2e+303) (fma (fma y4 y1 (- (* y5 y0))) (fma k y2 (- (* j y3))) (+ (fma (fma x y2 (- (* z y3))) (fma y0 c (- (* y1 a))) (fma (fma x y (- (* z t))) (fma a b (- (* c i))) (* (fma x j (- (* z k))) (fma i y1 (- (* y0 b)))))) (fma (fma t j (- (* y k))) (fma y4 b (- (* y5 i))) (* (fma t y2 (- (* y y3))) (fma y5 a (- (* y4 c))))))) (if (<= (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0)))) INFINITY) (fma a (* (fma t y2 (- (* y y3))) y5) (- (+ (* y4 (- (+ (* (- (* t j) (* k y)) b) (* y1 (- (* k y2) (* y3 j)))) (* c (- (* t y2) (* y y3))))) (+ (* -1.0 (* t (* z (- (* a b) (* c i))))) (+ (* (+ (* y (- (* a b) (* c i))) (+ (* (- (* c y0) (* y1 a)) y2) (* j (- (* y1 i) (* y0 b))))) x) (+ (* -1.0 (* (- (* c y0) (* y1 a)) (* y3 z))) (* -1.0 (* k (* z (- (* y1 i) (* y0 b))))))))) (+ (* i (* (- (* t j) (* k y)) y5)) (* y0 (* y5 (- (* k y2) (* y3 j))))))) (fma a (* (fma t y2 (- (* y y3))) y5) (- (* (- (+ (- (* (fma y1 i (- (* y0 b))) x)) (* y4 (fma y1 y3 (- (* t b))))) (+ (- (* i (* t y5))) (* y0 (* y3 y5)))) j))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))","start":26.669136525537326,"start-est":25.459316259768443,"status":"gt-target","target":30.463279790476886,"target-prog":"(if (< y4 -7.206256231996481e+60) (- (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))))) (- (/ (- (* y2 t) (* y3 y)) (/ 1.0 (- (* y4 c) (* y5 a)))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (if (< y4 -3.364603505246317e-66) (+ (- (- (- (* (* t c) (* i z)) (* (* a t) (* b z))) (* (* y c) (* i x))) (* (- (* b y0) (* i y1)) (- (* j x) (* k z)))) (- (* (- (* y0 c) (* a y1)) (- (* x y2) (* z y3))) (- (* (- (* t y2) (* y y3)) (- (* y4 c) (* a y5))) (* (- (* y1 y4) (* y5 y0)) (- (* k y2) (* j y3)))))) (if (< y4 -1.2000065055686116e-105) (+ (+ (- (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))) (* (* y3 y) (- (* y5 a) (* y4 c)))) (+ (* (* y5 a) (* t y2)) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* x y2) (* z y3)) (- (* c y0) (* a y1))) (- (* (- (* b y0) (* i y1)) (- (* j x) (* k z))) (* (- (* y x) (* z t)) (- (* b a) (* i c)))))) (if (< y4 6.718963124057495e-279) (+ (- (- (- (* (* k y) (* y5 i)) (* (* y b) (* y4 k))) (* (* y5 t) (* i j))) (- (* (- (* y2 t) (* y3 y)) (- (* y4 c) (* y5 a))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* y2 x) (* y3 z)) (- (* c y0) (* y1 a)))))) (if (< y4 4.77962681403792e-222) (+ (+ (- (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))) (* (* y3 y) (- (* y5 a) (* y4 c)))) (+ (* (* y5 a) (* t y2)) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* x y2) (* z y3)) (- (* c y0) (* a y1))) (- (* (- (* b y0) (* i y1)) (- (* j x) (* k z))) (* (- (* y x) (* z t)) (- (* b a) (* i c)))))) (if (< y4 2.2852241541266835e-175) (+ (- (- (- (* (* k y) (* y5 i)) (* (* y b) (* y4 k))) (* (* y5 t) (* i j))) (- (* (- (* y2 t) (* y3 y)) (- (* y4 c) (* y5 a))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* y2 x) (* y3 z)) (- (* c y0) (* y1 a)))))) (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (- (* k (* i (* z y1))) (+ (* j (* i (* x y1))) (* y0 (* k (* z b)))))) (- (* z (* y3 (* a y1))) (+ (* y2 (* x (* a y1))) (* y0 (* z (* c y3)))))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))))))))","time":26174.2041015625,"vars":["x","y","z","t","a","b","c","i","j","k","y0","y1","y2","y3","y4","y5"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.755924491404958) (37256 3.5721985720397025) ())","end":3.5721985720397025,"end-est":2.2481772610898565,"identifier":"#f","input":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y))))","link":"399-LinearMatrixdet33fromlinear11913","name":"Linear.Matrix:det33 from linear-1.19.1.3","output":"(if (<= (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y)))) (- INFINITY)) (fma t (fma c j (- (* a x))) (fma i (fma a b (- (* y j))) (fma y (* z x) (- (* c (* z b)))))) (if (<= (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y)))) 2e+291) (fma (fma c t (- (* y i))) j (fma x (fma y z (- (* a t))) (* (fma i a (- (* c z))) b))) (+ (* (+ (* y x) (* -1.0 (* c b))) z) (+ (* t (- (* c j) (* a x))) (+ (* -1.0 (* i (* y j))) (* a (* i b)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y))))","start":12.755924491404958,"start-est":11.740364761089857,"status":"gt-target","target":16.96784609300897,"target-prog":"(if (< t -8.120978919195912e-33) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j))) (if (< t -4.712553818218485e-169) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (/ (* j (- (pow (* c t) 2.0) (pow (* i y) 2.0))) (+ (* c t) (* i y)))) (if (< t -7.633533346031584e-308) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j))) (if (< t 1.0535888557455487e-139) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (/ (* j (- (pow (* c t) 2.0) (pow (* i y) 2.0))) (+ (* c t) (* i y)))) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j)))))))","time":7326.614990234375,"vars":["x","y","z","t","a","b","c","i","j"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 39.544092627487835) (6592 0.010625) ())","end":0.010625,"end-est":0.0078125,"identifier":"#f","input":"(/ (- (exp x) 1.0) x)","link":"400-Kahansexpquotient","name":"Kahan's exp quotient","output":"(/ (expm1 x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) 1.0) x)","start":39.544092627487835,"start-est":40.439957439819686,"status":"gt-target","target":39.955375,"target-prog":"(if (and (< x 1.0) (> x -1.0)) (/ (- (exp x) 1.0) (log (exp x))) (/ (- (exp x) 1.0) x))","time":1154.77001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 20.7724737471046) (32900 6.3031423517361365) ())","end":6.3031423517361365,"end-est":4.3627751268886525,"identifier":"#f","input":"(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))","link":"401-Kahanp9Example","name":"Kahan p9 Example","output":"(if (<= y -7.87095430644601e+161) (fma (pow (/ x y) 2.0) 2.0 (fma -2.0 (pow (pow (/ x y) 2.0) 2.0) -1.0)) (if (<= y -1.247350253355688e-145) (pow (cbrt (/ (* (- x y) (+ x y)) (fma x x (* y y)))) 3.0) (if (<= y 4.05711182701215e-163) (fma -2.0 (pow (/ y x) 2.0) (+ 1.0 (* 2.0 (pow (/ y x) 4.0)))) (pow (cbrt (/ (* (- x y) (+ x y)) (fma x x (* y y)))) 3.0))))","pre":"(and (and (< 0.0 x) (< x 1.0)) (< y 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))","start":20.7724737471046,"start-est":22.2578125,"status":"lt-target","target":0.07310169219101559,"target-prog":"(if (and (< 0.5 (fabs (/ x y))) (< (fabs (/ x y)) 2.0)) (/ (* (- x y) (+ x y)) (+ (* x x) (* y y))) (- 1.0 (/ 2.0 (+ 1.0 (* (/ x y) (/ x y))))))","time":1948.527099609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 13.52227128631196) (54016 1.8682275741200607) ())","end":1.8682275741200607,"end-est":1.1753076994278795,"identifier":"#f","input":"(- wj (/ (- (* wj (exp wj)) x) (+ (exp wj) (* wj (exp wj)))))","link":"402-JmatReallambertwnewtonloopstep","name":"Jmat.Real.lambertw, newton loop step","output":"(fma (+ (* -1.5 x) (fma (+ 1.0 (* 2.0 x)) 2.0 -1.0)) (* wj wj) (fma (+ (fma 2.0 (+ (- 1.0 (* -1.5 x)) (* (fma -2.0 x -1.0) 2.0)) (fma -0.6666666666666666 x (+ 1.5 (* (* 2.0 x) 1.5)))) -0.5) (pow wj 3.0) (fma -2.0 (* wj x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- wj (/ (- (* wj (exp wj)) x) (+ (exp wj) (* wj (exp wj)))))","start":13.52227128631196,"start-est":14.030664636487524,"status":"gt-target","target":12.718893717596696,"target-prog":"(- wj (- (/ wj (+ wj 1.0)) (/ x (+ (exp wj) (* wj (exp wj))))))","time":3321.240966796875,"vars":["wj","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 53.292084896964994) (26184 0.2623908709678023) ())","end":0.2623908709678023,"end-est":0.18524384291297372,"identifier":"#f","input":"(log (+ x (sqrt (+ (* x x) 1.0))))","link":"403-Hyperbolicarcsine","name":"Hyperbolic arcsine","output":"(if (<= x -10640.765013896878) (log (fma 0.125 (pow x -3.0) (/ -0.5 x))) (if (<= x 4.397566801236614e-7) (fma -0.16666666666666666 (pow x 3.0) x) (log (pow (cbrt (+ x (hypot x -1.0))) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (+ (* x x) 1.0))))","start":53.292084896964994,"start-est":55.429844981022455,"status":"gt-target","target":45.278137270350676,"target-prog":"(if (< x 0.0) (log (/ -1.0 (- x (sqrt (+ (* x x) 1.0))))) (log (+ x (sqrt (+ (* x x) 1.0)))))","time":2085.046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((53440 5.927538056995075) (26884 2.4884219623912913) ())","end":2.4884219623912913,"end-est":1.5397944767757714,"identifier":"#f","input":"(/ (* (pow (/ 1.0 (+ 1.0 (exp (- s)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- s))))) c_n)) (* (pow (/ 1.0 (+ 1.0 (exp (- t)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- t))))) c_n)))","link":"404-Harleysexample","name":"Harley's example","output":"(if (<= (- s) 2.6e+39) 1.0 (/ (pow (/ 1.0 (+ 1.0 (exp (- s)))) c_p) (+ 1.0 (* c_p (- (log (+ 1.0 (exp (- t)))))))))","pre":"(and (< 0.0 c_p) (< 0.0 c_n))","prec":"binary64","preprocess":"()","spec":"(/ (* (pow (/ 1.0 (+ 1.0 (exp (- s)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- s))))) c_n)) (* (pow (/ 1.0 (+ 1.0 (exp (- t)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- t))))) c_n)))","start":5.927538056995075,"start-est":5.980452231598578,"status":"eq-target","target":2.166233406941696,"target-prog":"(* (pow (/ (+ 1.0 (exp (- t))) (+ 1.0 (exp (- s)))) c_p) (pow (/ (+ 1.0 (exp t)) (+ 1.0 (exp s))) c_n))","time":137741.0791015625,"vars":["c_p","c_n","t","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.06057312031259014) (6848 0.01875) ())","end":0.01875,"end-est":0.0078125,"identifier":"#f","input":"(+ (* x (+ y z)) (* z 5.0))","link":"405-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, C","output":"(fma z 5.0 (* x (+ y z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (+ y z)) (* z 5.0))","start":0.06057312031259014,"start-est":0.0546875,"status":"eq-target","target":0.05775,"target-prog":"(+ (* (+ x 5.0) z) (* x y))","time":1346.114013671875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.018875) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ x y) x)","link":"406-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, A","output":"(+ (+ x x) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x y) x)","start":0.018875,"start-est":0.015625,"status":"eq-target","target":0,"target-prog":"(+ y (* 2.0 x))","time":412.522216796875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 2.015005561621178) (6848 2.0127316118898357) ())","end":2.0127316118898357,"end-est":1.3648771650523426,"identifier":"#f","input":"(+ x (* (- y x) (/ z t)))","link":"407-GraphicsRenderingPlotRenderPlotAxistickPositionfro","name":"Graphics.Rendering.Plot.Render.Plot.Axis:tickPosition from plot-0.2.3.4","output":"(fma (/ z t) (- y x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y x) (/ z t)))","start":2.015005561621178,"start-est":1.3726896650523426,"status":"eq-target","target":2.1943588370716522,"target-prog":"(if (< (* (- y x) (/ z t)) -1013646692435.8867) (+ x (/ (- y x) (/ t z))) (if (< (* (- y x) (/ z t)) 0.0) (+ x (/ (* (- y x) z) t)) (+ x (/ (- y x) (/ t z)))))","time":2662.707763671875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.620424254225126) (13764 0.5807498623288899) ())","end":0.5807498623288899,"end-est":0.2994672514806582,"identifier":"#f","input":"(+ x (/ (* y (- z t)) (- a t)))","link":"408-GraphicsRenderingPlotRenderPlotAxisrenderAxisTicks","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, B","output":"(if (<= y -1.6245718036745385e-60) (fma (fma z (/ -1.0 (- t a)) (/ t (- t a))) y x) (if (<= y 5.496840460686529e-136) (+ (/ (* y t) (- t a)) (+ (- (/ (* y z) (- t a))) x)) (fma (/ (- z t) (- a t)) y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) (- a t)))","start":10.620424254225126,"start-est":7.59375,"status":"eq-target","target":1.1045808384901772,"target-prog":"(+ x (/ y (/ (- a t) (- z t))))","time":3460.958984375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.63087506276876) (33796 0.5133425509610028) ())","end":0.5133425509610028,"end-est":0.0703125,"identifier":"#f","input":"(+ x (/ (* y (- z t)) (- z a)))","link":"409-GraphicsRenderingPlotRenderPlotAxisrenderAxisTicks","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, A","output":"(if (<= (/ (* y (- z t)) (- z a)) (- INFINITY)) (fma y (/ (* (cbrt (- t z)) (cbrt (pow (/ (- t z) (- a z)) 2.0))) (cbrt (- a z))) x) (if (<= (/ (* y (- z t)) (- z a)) 1e+298) (+ (+ x (/ (* y z) (- z a))) (/ (* y t) (- a z))) (fma y (/ (- z t) (- z a)) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) (- z a)))","start":10.63087506276876,"start-est":8.3203125,"status":"eq-target","target":1.1588526894725966,"target-prog":"(+ x (/ y (/ (- z a) (- z t))))","time":3929.2998046875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 16.39775566413597) (21188 6.629171189043589) ())","end":6.629171189043589,"end-est":2.78519829198136,"identifier":"#f","input":"(- (+ x y) (/ (* (- z t) y) (- a t)))","link":"410-GraphicsRenderingPlotRenderPlotAxisrenderAxisTickf","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, B","output":"(if (<= (- (+ x y) (/ (* (- z t) y) (- a t))) (- INFINITY)) (fma y (fma z (/ -1.0 (- a t)) (- (+ (pow (/ a t) 2.0) (/ a t)))) x) (+ (/ (* y z) (- t a)) (fma y (+ 1.0 (/ t (- a t))) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) (/ (* (- z t) y) (- a t)))","start":16.39775566413597,"start-est":13.310948839189669,"status":"gt-target","target":8.100679151626704,"target-prog":"(if (< (- (+ x y) (/ (* (- z t) y) (- a t))) -1.3664970889390727e-7) (- (+ y x) (* (* (- z t) (/ 1.0 (- a t))) y)) (if (< (- (+ x y) (/ (* (- z t) y) (- a t))) 1.4754293444577233e-239) (/ (- (* y (- a z)) (* x t)) (- a t)) (- (+ y x) (* (* (- z t) (/ 1.0 (- a t))) y))))","time":3868.864990234375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.616422701686078) (7240 0.6336353924861242) ())","end":0.6336353924861242,"end-est":0.07421875,"identifier":"#f","input":"(+ x (/ (* (- y z) t) (- a z)))","link":"411-GraphicsRenderingPlotRenderPlotAxisrenderAxisTickf","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, A","output":"(if (<= t -6.7997067365034e+20) (fma t (/ (- y z) (- a z)) x) (if (<= t 3.817522808621204e-124) (+ (/ (* t (- z y)) (- z a)) x) (fma t (/ (- y z) (- a z)) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y z) t) (- a z)))","start":10.616422701686078,"start-est":10.31640625,"status":"eq-target","target":0.6552603924861242,"target-prog":"(if (< t -1.0682974490174067e-39) (+ x (* (/ (- y z) (- a z)) t)) (if (< t 3.9110949887586375e-141) (+ x (/ (* (- y z) t) (- a z))) (+ x (* (/ (- y z) (- a z)) t))))","time":3185.263916015625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 1.2156367417544713) (7556 0.5806248623288899) ())","end":0.5806248623288899,"end-est":0.2994672514806582,"identifier":"#f","input":"(+ x (* y (/ (- z t) (- a t))))","link":"412-GraphicsRenderingPlotRenderPlotAxisrenderAxisLinef","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, B","output":"(if (<= y -1.6245718036745385e-60) (fma (+ (* (/ -1.0 (- a t)) (- z)) (/ t (- t a))) y x) (if (<= y 5.496840460686529e-136) (+ (/ (* y t) (- t a)) (+ (/ (* y z) (- a t)) x)) (fma (/ (- t z) (- t a)) y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (/ (- z t) (- a t))))","start":1.2156367417544713,"start-est":1.8033735014806582,"status":"eq-target","target":0.46115535691736925,"target-prog":"(if (< y -8.508084860551241e-17) (+ x (* y (/ (- z t) (- a t)))) (if (< y 2.894426862792089e-49) (+ x (* (* y (- z t)) (/ 1.0 (- a t)))) (+ x (* y (/ (- z t) (- a t))))))","time":4002.43896484375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 1.2395858090768164) (7240 0.4528358910288484) ())","end":0.4528358910288484,"end-est":0.29045315817864903,"identifier":"#f","input":"(+ x (* y (/ (- z t) (- z a))))","link":"413-GraphicsRenderingPlotRenderPlotAxisrenderAxisLinef","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, A","output":"(if (<= y -1.6200860812512272e-63) (fma y (/ (- t z) (- a z)) x) (if (<= y 4.49072903864277e-21) (+ (* -1.0 (/ (* y t) (- z a))) (+ (/ (* y z) (- z a)) x)) (fma y (/ (- t z) (- a z)) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (/ (- z t) (- z a))))","start":1.2395858090768164,"start-est":1.5482656581786491,"status":"eq-target","target":1.1588526894725966,"target-prog":"(+ x (/ y (/ (- z a) (- z t))))","time":3754.091796875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 2.1227740416967973) (1344 0.3253332434029211) ())","end":0.3253332434029211,"end-est":0.35599556805425847,"identifier":"#f","input":"(- x (/ (- y z) (/ (+ (- t z) 1.0) a)))","link":"414-GraphicsRenderingChartSparkLinerenderSparkLinefrom","name":"Graphics.Rendering.Chart.SparkLine:renderSparkLine from Chart-1.5.3","output":"(+ (+ (* a (/ z (- (+ 1.0 t) z))) (* a (/ y (- z (+ 1.0 t))))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (- y z) (/ (+ (- t z) 1.0) a)))","start":2.1227740416967973,"start-est":1.6629903733469236,"status":"eq-target","target":0.3255313637155112,"target-prog":"(- x (* (/ (- y z) (+ (- t z) 1.0)) a))","time":3960.273193359375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.85449506491106) (576 0.0043231203125901445) ())","end":0.0043231203125901445,"end-est":0.00390625,"identifier":"#f","input":"(+ x (* (- 1.0 x) (- 1.0 y)))","link":"415-GraphicsRenderingChartPlotVectorsrenderPlotVectors","name":"Graphics.Rendering.Chart.Plot.Vectors:renderPlotVectors from Chart-1.5.3","output":"(- 1.0 (- (- (* y x)) (- y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- 1.0 x) (- 1.0 y)))","start":15.85449506491106,"start-est":15.463400315908315,"status":"eq-target","target":0.004573120312590145,"target-prog":"(- (* y x) (- y 1.0))","time":1162.31494140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 29.39181404787259) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ x y) x)","link":"416-GraphicsRenderingChartPlotPierenderPiefromChart153","name":"Graphics.Rendering.Chart.Plot.Pie:renderPie from Chart-1.5.3","output":"y","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) x)","start":29.39181404787259,"start-est":27.70879030963593,"status":"eq-target","target":0,"target-prog":"(- y 0.0)","time":536.5380859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 11.29144831125165) (7496 2.3472099662571617) ())","end":2.3472099662571617,"end-est":0.862134835280093,"identifier":"#f","input":"(/ (* x (- y z)) (- t z))","link":"417-GraphicsRenderingChartPlotAreaSpotsrenderAreaSpots","name":"Graphics.Rendering.Chart.Plot.AreaSpots:renderAreaSpots4D from Chart-1.5.3","output":"(if (<= x -265550142.1674508) (* (- y z) (/ x (- t z))) (if (<= x -1.4238458864781713e-270) (/ (* x (- y z)) (- t z)) (* x (fma y (/ 1.0 (- t z)) (/ z (- z t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (- y z)) (- t z))","start":11.29144831125165,"start-est":11.041527996448902,"status":"eq-target","target":2.4164131564944227,"target-prog":"(/ x (/ (- t z) (- y z)))","time":3217.629150390625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.282954105136836) (2640 1.9031778591197464) ())","end":1.9031778591197464,"end-est":0.49898471919670506,"identifier":"#f","input":"(* x (/ (* (/ y z) t) t))","link":"418-GraphicsRenderingChartBackendDiagramscalcFontMetri","name":"Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, B","output":"(if (<= (/ (* (/ y z) t) t) -1e+178) (* (/ x z) y) (if (<= (/ (* (/ y z) t) t) -1e-156) (* x (/ (* (/ y z) t) t)) (if (<= (/ (* (/ y z) t) t) 5e-72) (* (/ x z) y) (if (<= (/ (* (/ y z) t) t) 2e+278) (* x (/ (* (/ y z) t) t)) (* (/ x z) y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (/ (* (/ y z) t) t))","start":14.282954105136836,"start-est":14.385566746740608,"status":"eq-target","target":1.564099364001545,"target-prog":"(if (< (/ (* (/ y z) t) t) -1.20672205123045e+245) (/ y (/ z x)) (if (< (/ (* (/ y z) t) t) -5.907522236933906e-275) (* x (/ y z)) (if (< (/ (* (/ y z) t) t) 5.658954423153415e-65) (/ y (/ z x)) (if (< (/ (* (/ y z) t) t) 2.0087180502407133e+217) (* x (/ y z)) (/ (* y x) z)))))","time":1642.528076171875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.702036497087167) (8712 0.5195486875654505) ())","end":0.5195486875654505,"end-est":0.06640625,"identifier":"#f","input":"(/ (+ x y) (- 1.0 (/ y z)))","link":"419-GraphicsRenderingChartBackendDiagramscalcFontMetri","name":"Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, A","output":"(if (<= (/ (+ x y) (- 1.0 (/ y z))) -1e-252) (/ (+ x y) (- 1.0 (/ y z))) (if (<= (/ (+ x y) (- 1.0 (/ y z))) 0.0) (- (- (- z) (/ (* z (+ x z)) y)) (* (/ z y) (/ (* z (+ x z)) y))) (+ (* x (/ z (- z y))) (* (pow (/ (- z y) z) -1.0) y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (- 1.0 (/ y z)))","start":7.702036497087167,"start-est":8.893762559347234,"status":"gt-target","target":4.070447258539773,"target-prog":"(if (< y -3.7429310762689856e+171) (* (/ (+ y x) (- y)) z) (if (< y 3.5534662456086734e+168) (/ (+ x y) (- 1.0 (/ y z))) (* (/ (+ y x) (- y)) z)))","time":2500.93896484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 24.076745585802207) (31504 6.6308746420542715) ())","end":6.6308746420542715,"end-est":5.605801601265595,"identifier":"#f","input":"(+ x (/ (* (- y x) (- z t)) (- a t)))","link":"420-GraphicsRenderingChartAxisTypeslinMapfromChart153","name":"Graphics.Rendering.Chart.Axis.Types:linMap from Chart-1.5.3","output":"(if (<= (+ x (/ (* (- y x) (- z t)) (- a t))) (- INFINITY)) (+ (* (* z (cbrt (/ (- y x) (- a t)))) (cbrt (pow (/ (- y x) (- a t)) 2.0))) (+ x (* -1.0 (* (+ (/ x (- t a)) (/ y (- a t))) t)))) (if (<= (+ x (/ (* (- y x) (- z t)) (- a t))) -1e-245) (+ (/ (* y (- z t)) (- a t)) (* -1.0 (* (- (/ z (- a t)) (+ 1.0 (/ t (- a t)))) x))) (if (<= (+ x (/ (* (- y x) (- z t)) (- a t))) 0.0) (+ (* -1.0 (/ (* z (- y x)) t)) (+ (/ (* a (- y x)) t) y)) (if (<= (+ x (/ (* (- y x) (- z t)) (- a t))) 5e+289) (+ x (/ (* (- y x) (- z t)) (- a t))) (+ (* (fma (cbrt (/ 1.0 (- a t))) (/ y (cbrt (pow (- a t) 2.0))) (/ x (- t a))) z) (+ x (* -1.0 (* (+ (/ x (- t a)) (/ y (- a t))) t))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y x) (- z t)) (- a t)))","start":24.076745585802207,"start-est":24.187941194885553,"status":"gt-target","target":8.863746150417333,"target-prog":"(if (< a -1.6153062845442575e-142) (+ x (* (/ (- y x) 1.0) (/ (- z t) (- a t)))) (if (< a 3.774403170083174e-182) (- y (* (/ z t) (- y x))) (+ x (* (/ (- y x) 1.0) (/ (- z t) (- a t))))))","time":4171.416015625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 24.2491951816857) (1600 0.9742318772583265) ())","end":0.9742318772583265,"end-est":1.3530822624170238,"identifier":"#f","input":"(+ x (/ (* (- y z) (- t x)) (- a z)))","link":"421-GraphicsRenderingChartAxisTypesinvLinMapfromChart1","name":"Graphics.Rendering.Chart.Axis.Types:invLinMap from Chart-1.5.3","output":"(+ (* (/ (- y a) (- z a)) x) (* (+ (/ z (- z a)) (* -1.0 (/ y (- z a)))) t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y z) (- t x)) (- a z)))","start":24.2491951816857,"start-est":26.859385055326896,"status":"gt-target","target":11.872975674379008,"target-prog":"(if (< z -1.2536131056095036e+188) (- t (* (/ y z) (- t x))) (if (< z 4.446702369113811e+64) (+ x (/ (- y z) (/ (- a z) (- t x)))) (- t (* (/ y z) (- t x)))))","time":3983.5,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.089875) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (/ (- x y) 2.0))","link":"422-GraphicsRenderingChartAxisTypeshBufferRectfromChar","name":"Graphics.Rendering.Chart.Axis.Types:hBufferRect from Chart-1.5.3","output":"(fma x 1.5 (* -0.5 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- x y) 2.0))","start":0.089875,"start-est":0.08203125,"status":"eq-target","target":0.08907312031259015,"target-prog":"(- (* 1.5 x) (* 0.5 y))","time":752.06494140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 14.657048971163796) (20032 0.3067849656496994) ())","end":0.3067849656496994,"end-est":0.3004875488422101,"identifier":"#f","input":"(/ (* (* (/ 8.0 3.0) (sin (* x 0.5))) (sin (* x 0.5))) (sin x))","link":"423-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, A","output":"(/ (* (* (sin (* x 0.5)) -8.0) (/ (sin (* x 0.5)) (sin x))) -3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (* (/ 8.0 3.0) (sin (* x 0.5))) (sin (* x 0.5))) (sin x))","start":14.657048971163796,"start-est":14.359669141861522,"status":"eq-target","target":0.3099879734644533,"target-prog":"(/ (/ (* 8.0 (sin (* x 0.5))) 3.0) (/ (sin x) (sin (* x 0.5))))","time":3500.298095703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 33.5531896762362) (13376 0.42074342188131025) ())","end":0.42074342188131025,"end-est":0.4225387695368841,"identifier":"#f","input":"(+ (/ (* x x) (* y y)) (/ (* z z) (* t t)))","link":"424-GraphicsRasterificSvgPathConverterarcToSegmentsfro","name":"Graphics.Rasterific.Svg.PathConverter:arcToSegments from rasterific-svg-0.2.3.1","output":"(+ (pow (/ x y) 2.0) (pow (/ z t) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ (* x x) (* y y)) (/ (* z z) (* t t)))","start":33.5531896762362,"start-est":33.575045439293845,"status":"eq-target","target":0.42074342188131025,"target-prog":"(+ (pow (/ x y) 2.0) (pow (/ z t) 2.0))","time":2398.22802734375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 5.743561481637042) (26560 0.18317761313076159) ())","end":0.18317761313076159,"end-est":0.17482377930532605,"identifier":"#f","input":"(- (* x x) (* (* y 4.0) (- (* z z) t)))","link":"425-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, B","output":"(fma (cbrt -4.0) (* (* (* (cbrt 16.0) y) z) z) (fma (* 4.0 y) t (* x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* (* y 4.0) (- (* z z) t)))","start":5.743561481637042,"start-est":5.828125,"status":"gt-target","target":5.738844564450351,"target-prog":"(- (* x x) (* 4.0 (* y (- (* z z) t))))","time":2792.16796875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.025625) (448 0.025625) ())","end":0.025625,"end-est":0.015625,"identifier":"#f","input":"(/ (- x y) (- z y))","link":"426-GraphicsRasterificShadingsgradientColorAtfromRaste","name":"Graphics.Rasterific.Shading:$sgradientColorAt from Rasterific-0.6.1","output":"(/ (- x y) (- z y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- z y))","start":0.025625,"start-est":0.015625,"status":"eq-target","target":0.019125,"target-prog":"(- (/ x (- z y)) (/ y (- z y)))","time":2179.1279296875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 2.3219602733617086) (14088 0.41798209400219305) ())","end":0.41798209400219305,"end-est":0.27576160433956376,"identifier":"#f","input":"(+ (+ (+ x (* y z)) (* t a)) (* (* a z) b))","link":"427-GraphicsRasterificCubicBeziercachedBezierAtfromRas","name":"Graphics.Rasterific.CubicBezier:cachedBezierAt from Rasterific-0.6.1","output":"(if (<= b -1.0178059652661675e-13) (+ (+ (+ x (* y z)) (* t a)) (* (* a z) b)) (if (<= b 2.646728315384553e+58) (+ (fma z y (fma t a x)) (* (* z b) a)) (+ (+ (+ x (* y z)) (* t a)) (pow (cbrt (* (* a z) b)) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ x (* y z)) (* t a)) (* (* a z) b))","start":2.3219602733617086,"start-est":2.287480354339564,"status":"eq-target","target":0.30784436093777046,"target-prog":"(if (< z -11820553527347888000.0) (+ (* z (+ (* b a) y)) (+ x (* t a))) (if (< z 4.7589743188364287e-122) (+ (* (+ (* b z) t) a) (+ (* z y) x)) (+ (* z (+ (* b a) y)) (+ x (* t a)))))","time":2012.952880859375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 13.723123768128694) (40196 6.911185919649118) ())","end":6.911185919649118,"end-est":7.902520176878497,"identifier":"#f","input":"(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))","link":"428-GivensRotationSVDexample","name":"Given's Rotation SVD example","output":"(if (<= (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))) -0.999999996) (- (/ p x)) (sqrt (/ (+ (* (cbrt 0.5) 2.0) (* (cbrt 4.0) (/ x (hypot (+ p p) x)))) (* (cbrt 4.0) 2.0))))","pre":"(and (< 1e-150 (fabs x)) (< (fabs x) 1e+150))","prec":"binary64","preprocess":"()","spec":"(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))","start":13.723123768128694,"start-est":16.21845430820683,"status":"gt-target","target":13.718058210910481,"target-prog":"(sqrt (+ 0.5 (/ (copysign 0.5 x) (hypot 1.0 (/ (* 2.0 p) x)))))","time":3525.2509765625,"vars":["p","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 0.1264945820410299) (6528 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* d1 (* (* (* (* (* d1 (* d1 d1)) d1) d1) (* d1 d1)) d1)) d1)","link":"429-FastMathtest5","name":"FastMath test5","output":"(pow d1 10.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* d1 (* (* (* (* (* d1 (* d1 d1)) d1) d1) (* d1 d1)) d1)) d1)","start":0.1264945820410299,"start-est":0.16281132814753613,"status":"eq-target","target":0,"target-prog":"(pow d1 10.0)","time":529.77490234375,"vars":["d1"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.07265834831758686) (6848 0.035625) ())","end":0.035625,"end-est":0.03125,"identifier":"#f","input":"(+ (+ (* d1 3.0) (* d1 d2)) (* d1 d3))","link":"430-FastMathtest3","name":"FastMath test3","output":"(fma (+ 3.0 d2) d1 (* d1 d3))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* d1 3.0) (* d1 d2)) (* d1 d3))","start":0.07265834831758686,"start-est":0.05859375,"status":"eq-target","target":0.06675,"target-prog":"(* d1 (+ (+ 3.0 d2) d3))","time":1199.756103515625,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.18448836132445107) (448 0.027125) ())","end":0.027125,"end-est":0.03125,"identifier":"#f","input":"(+ (+ (* d1 10.0) (* d1 d2)) (* d1 20.0))","link":"431-FastMathtest2","name":"FastMath test2","output":"(* d1 (+ (+ 10.0 d2) 20.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* d1 10.0) (* d1 d2)) (* d1 20.0))","start":0.18448836132445107,"start-est":0.1875,"status":"eq-target","target":0.0265,"target-prog":"(* d1 (+ 30.0 d2))","time":1663.476806640625,"vars":["d1","d2"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.269625) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* d 10.0) (* d 20.0))","link":"432-FastMathtest1","name":"FastMath test1","output":"(* d 30.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* d 10.0) (* d 20.0))","start":0.269625,"start-est":0.30078125,"status":"eq-target","target":0,"target-prog":"(* d 30.0)","time":361.587890625,"vars":["d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.13304248125036058) (6528 0.000625) ())","end":0.000625,"end-est":0,"identifier":"#f","input":"(* (* (* d1 d1) d1) d1)","link":"433-FastMathrepmul","name":"FastMath repmul","output":"(pow d1 4.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* d1 d1) d1) d1)","start":0.13304248125036058,"start-est":0.15234375,"status":"eq-target","target":0.000625,"target-prog":"(pow d1 4.0)","time":388.662109375,"vars":["d1"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.025811481637041212) (13568 0.018391160377118118) ())","end":0.018391160377118118,"end-est":0.0078125,"identifier":"#f","input":"(- (+ (- (* d1 d2) (* d1 d3)) (* d4 d1)) (* d1 d1))","link":"434-FastMathdist4","name":"FastMath dist4","output":"(- (fma d2 d1 (fma d1 d4 (- (* d3 d1)))) (* d1 d1))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (- (* d1 d2) (* d1 d3)) (* d4 d1)) (* d1 d1))","start":0.025811481637041212,"start-est":0.0234375,"status":"eq-target","target":0.025125,"target-prog":"(* d1 (- (+ (- d2 d3) d4) d1))","time":2198.762939453125,"vars":["d1","d2","d3","d4"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.04024715999043749) (13248 0.011875) ())","end":0.011875,"end-est":0.0078125,"identifier":"#f","input":"(+ (+ (* d1 d2) (* (+ d3 5.0) d1)) (* d1 32.0))","link":"435-FastMathdist3","name":"FastMath dist3","output":"(fma 37.0 d1 (fma d1 d3 (* d1 d2)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* d1 d2) (* (+ d3 5.0) d1)) (* d1 32.0))","start":0.04024715999043749,"start-est":0.02734375,"status":"eq-target","target":0.022375,"target-prog":"(* d1 (+ (+ 37.0 d3) d2))","time":1829.77197265625,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0125) (6720 0.006375) ())","end":0.006375,"end-est":0.00390625,"identifier":"#f","input":"(+ (* d1 d2) (* d1 d3))","link":"436-FastMathdist","name":"FastMath dist","output":"(fma d1 d2 (* d1 d3))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* d1 d2) (* d1 d3))","start":0.0125,"start-est":0.0078125,"status":"eq-target","target":0.01275,"target-prog":"(* d1 (+ d2 d3))","time":900.408935546875,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 37.39919399158225) (7056 9.143056909245386) ())","end":9.143056909245386,"end-est":5.808074990892656,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"437-FRPYampaVector3vector3RhofromYampa0102","name":"FRP.Yampa.Vector3:vector3Rho from Yampa-0.10.2","output":"(if (<= x -7.232319708152293e+85) (hypot y x) (if (<= x 8.99323767110918e+78) (hypot y z) (if (<= x 1.3169715640039038e+137) (hypot y x) (if (<= x 1.5186199444692294e+157) (hypot y z) (hypot y x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":37.39919399158225,"start-est":39.89759423361397,"status":"gt-target","target":25.01478122160983,"target-prog":"(if (< z -6.396479394109776e+136) (- z) (if (< z 7.320293694404182e+117) (sqrt (+ (+ (* z z) (* x x)) (* y y))) z))","time":1233.830078125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 3.6273094710110096) (576 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (+ a (+ b (+ c d))) 2.0)","link":"438-Expressionp6","name":"Expression, p6","output":"(* (+ (+ d a) (+ b c)) 2.0)","pre":"(and (and (and (and (<= -14.0 a) (<= a -13.0)) (and (<= -3.0 b) (<= b -2.0))) (and (<= 3.0 c) (<= c 3.5))) (and (<= 12.5 d) (<= d 13.5)))","prec":"binary64","preprocess":"()","spec":"(* (+ a (+ b (+ c d))) 2.0)","start":3.6273094710110096,"start-est":3.616794287259021,"status":"gt-target","target":3.815947913265965,"target-prog":"(+ (* (+ a b) 2.0) (* (+ c d) 2.0))","time":1002.366943359375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.036625) (13248 0.020125) ())","end":0.020125,"end-est":0.0078125,"identifier":"#f","input":"(* a (+ (+ b c) d))","link":"439-Expressionp14","name":"Expression, p14","output":"(fma a b (fma a c (* a d)))","pre":"(and (and (and (and (<= 56789.0 a) (<= a 98765.0)) (and (<= 0.0 b) (<= b 1.0))) (and (<= 0.0 c) (<= c 0.0016773))) (and (<= 0.0 d) (<= d 0.0016773)))","prec":"binary64","preprocess":"()","spec":"(* a (+ (+ b c) d))","start":0.036625,"start-est":0.0234375,"status":"eq-target","target":0.039625,"target-prog":"(+ (* a b) (* a (+ c d)))","time":1769.638916015625,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.021344360937770434) (6976 0.0105) ())","end":0.0105,"end-est":0,"identifier":"#f","input":"(* (+ a b) (+ a b))","link":"440-Expression4p15","name":"Expression 4, p15","output":"(fma (+ a b) a (* (+ a b) b))","pre":"(and (and (<= 5.0 a) (<= a 10.0)) (and (<= 0.0 b) (<= b 0.001)))","prec":"binary64","preprocess":"()","spec":"(* (+ a b) (+ a b))","start":0.021344360937770434,"start-est":0.0078125,"status":"eq-target","target":0.012875,"target-prog":"(+ (+ (+ (* b a) (* b b)) (* b a)) (* a a))","time":800.10498046875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01425) (13056 0.00025) ())","end":0.00025,"end-est":0,"identifier":"#f","input":"(+ (* x (* x x)) (* x x))","link":"441-Expression3p15","name":"Expression 3, p15","output":"(fma x x (pow x 3.0))","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(+ (* x (* x x)) (* x x))","start":0.01425,"start-est":0.0078125,"status":"eq-target","target":0.023646240625180292,"target-prog":"(* (* (+ 1.0 x) x) x)","time":435.429931640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00025) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (* x x))","link":"442-Expression2p15","name":"Expression 2, p15","output":"(fma x x x)","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(+ x (* x x))","start":0.00025,"start-est":0.00390625,"status":"eq-target","target":0.019875,"target-prog":"(* (+ 1.0 x) x)","time":410.80810546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.39853101562950743) (26368 0.2525) ())","end":0.2525,"end-est":0.1796875,"identifier":"#f","input":"(+ (+ (+ (+ e d) c) b) a)","link":"443-Expression1p15","name":"Expression 1, p15","output":"(+ d (+ e (fma (cbrt (+ c a)) (cbrt (pow (+ c a) 2.0)) b)))","pre":"(and (and (and (and (and (and (and (and (and (<= 1.0 a) (<= a 2.0)) (<= 2.0 b)) (<= b 4.0)) (<= 4.0 c)) (<= c 8.0)) (<= 8.0 d)) (<= d 16.0)) (<= 16.0 e)) (<= e 32.0))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ e d) c) b) a)","start":0.39853101562950743,"start-est":0.38804628907376815,"status":"eq-target","target":0.237,"target-prog":"(+ (+ d (+ c (+ a b))) e)","time":2916.591064453125,"vars":["a","b","c","d","e"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 5.636072065573669) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(exp (+ (log a) (log b)))","link":"444-Expofsumoflogs","name":"Exp of sum of logs","output":"(* a b)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (+ (log a) (log b)))","start":5.636072065573669,"start-est":5.6341642812732085,"status":"eq-target","target":0,"target-prog":"(* a b)","time":715.6640625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.016245723035582763) (13248 0.00825) ())","end":0.00825,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* x x) (* (* x 2.0) y)) (* y y))","link":"445-ExamplesBasicsProofTestsf4fromsbv44","name":"Examples.Basics.ProofTests:f4 from sbv-4.4","output":"(fma y y (* x (fma 2.0 y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x x) (* (* x 2.0) y)) (* y y))","start":0.016245723035582763,"start-est":0.015625,"status":"eq-target","target":0.01650960194963135,"target-prog":"(+ (* x x) (+ (* y y) (* (* x y) 2.0)))","time":795.64306640625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.026490601562950727) (6656 0.028240601562950725) ())","end":0.028240601562950725,"end-est":0.02734375,"identifier":"#f","input":"(* (+ x y) (+ x y))","link":"446-ExamplesBasicsBasicTestsf3fromsbv44","name":"Examples.Basics.BasicTests:f3 from sbv-4.4","output":"(pow (+ x y) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) (+ x y))","start":0.026490601562950727,"start-est":0.02734375,"status":"eq-target","target":0.018476722648902127,"target-prog":"(+ (* x x) (+ (* y y) (* 2.0 (* y x))))","time":1189.200927734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 30.221760840145652) (26304 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- 1.0 (cos x))","link":"447-ENASection14MentionedA","name":"ENA, Section 1.4, Mentioned, A","output":"(fma (* 0.5 x) x (fma -0.041666666666666664 (pow x 4.0) (* 0.001388888888888889 (pow x 6.0))))","pre":"(and (<= -0.01 x) (<= x 0.01))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (cos x))","start":30.221760840145652,"start-est":29.82562376746964,"status":"eq-target","target":0.016761842188131013,"target-prog":"(/ (* (sin x) (sin x)) (+ 1.0 (cos x)))","time":2235.7099609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 24.444510212086485) (20100 1.2609293825578565) ())","end":1.2609293825578565,"end-est":0.8883952604002915,"identifier":"#f","input":"(- x (sqrt (- (* x x) eps)))","link":"448-ENASection14Exercise4d","name":"ENA, Section 1.4, Exercise 4d","output":"(if (<= (- x (sqrt (- (* x x) eps))) -2e-153) (- x (sqrt (fma x x (- eps)))) (* 0.5 (/ eps x)))","pre":"(and (and (<= 0.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- x (sqrt (- (* x x) eps)))","start":24.444510212086485,"start-est":24.214644929817577,"status":"eq-target","target":0.29557312031259014,"target-prog":"(/ eps (+ x (sqrt (- (* x x) eps))))","time":1960.259033203125,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.033899687909695) (13440 0.4010987195506152) ())","end":0.4010987195506152,"end-est":0.29526552903992576,"identifier":"#f","input":"(/ (- x (sin x)) (tan x))","link":"449-ENASection14Exercise4a","name":"ENA, Section 1.4, Exercise 4a","output":"(fma (pow x 4.0) -0.06388888888888888 (/ (* x x) (/ 1.0 0.16666666666666666)))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (tan x))","start":30.033899687909695,"start-est":31.807563089926195,"status":"eq-target","target":0.8288043793180473,"target-prog":"(* 0.16666666666666666 (* x x))","time":8145.660888671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* a a) (* b b))","link":"450-Differenceofsquares","name":"Difference of squares","output":"(* (+ a b) (- a b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* a a) (* b b))","start":0.007436481637041209,"start-est":0.01171875,"status":"eq-target","target":0.001,"target-prog":"(* (+ a b) (- a b))","time":476.297119140625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.017448120312590146) (6720 0.00625) ())","end":0.00625,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x y) (* z (- 1.0 y)))","link":"451-DiagramsTwoDSegmentbezierClipfromdiagramslib1303","name":"Diagrams.TwoD.Segment:bezierClip from diagrams-lib-1.3.0.3","output":"(fma y (- x z) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* z (- 1.0 y)))","start":0.017448120312590146,"start-est":0.028601281620653757,"status":"eq-target","target":0.015698120312590144,"target-prog":"(- z (* (- z x) y))","time":990.9189453125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 10.60707312031259) (20484 0.890264285939213) ())","end":0.890264285939213,"end-est":0.09765625,"identifier":"#f","input":"(/ (* x (+ (- y z) 1.0)) z)","link":"452-DiagramsTwoDSegmentBernsteinevaluateBernsteinfromd","name":"Diagrams.TwoD.Segment.Bernstein:evaluateBernstein from diagrams-lib-1.3.0.3","output":"(if (<= z -1.2322825847954898e+26) (* (* (cbrt (pow (/ (- 1.0 (- z y)) z) 2.0)) x) (cbrt (/ (- 1.0 (- z y)) z))) (if (<= z 5.253583507499386e+41) (/ (fma x (- y z) x) z) (* x (/ (- y (+ z -1.0)) z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ (- y z) 1.0)) z)","start":10.60707312031259,"start-est":9.16015625,"status":"eq-target","target":0.39222262713661626,"target-prog":"(if (< x -2.71483106713436e-162) (- (* (+ 1.0 y) (/ x z)) x) (if (< x 3.874108816439546e-197) (* (* x (+ (- y z) 1.0)) (/ 1.0 z)) (- (* (+ 1.0 y) (/ x z)) x)))","time":2084.541015625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 36.093560222496926) (6848 28.908082350749464) ())","end":28.908082350749464,"end-est":26.788476240080062,"identifier":"#f","input":"(/ (tan (/ x (* y 2.0))) (sin (/ x (* y 2.0))))","link":"453-DiagramsTwoDLayoutCirclePackingapproxRadiusfromdia","name":"Diagrams.TwoD.Layout.CirclePacking:approxRadius from diagrams-contrib-1.3.0.5","output":"(/ 1.0 (cos (/ (* x 0.5) y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (tan (/ x (* y 2.0))) (sin (/ x (* y 2.0))))","start":36.093560222496926,"start-est":34.5346012119073,"status":"eq-target","target":29.142185663148542,"target-prog":"(if (< y -1.2303690911306994e+114) 1.0 (if (< y -9.102852406811914e-222) (/ (sin (/ x (* y 2.0))) (* (sin (/ x (* y 2.0))) (log (exp (cos (/ x (* y 2.0))))))) 1.0))","time":3406.630126953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 5.4503796835353215) (1280 0.16244490368631934) ())","end":0.16244490368631934,"end-est":0.12728500976844204,"identifier":"#f","input":"(/ (* (- 1.0 x) (- 3.0 x)) (* y 3.0))","link":"454-DiagramsTwoDArcbezierFromSweepQ1fromdiagramslib130","name":"Diagrams.TwoD.Arc:bezierFromSweepQ1 from diagrams-lib-1.3.0.3","output":"(- (/ 1.0 y) (- (/ (* x 0.3333333333333333) y) (* (/ (* (+ -3.0 x) -0.3333333333333333) y) (- x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- 1.0 x) (- 3.0 x)) (* y 3.0))","start":5.4503796835353215,"start-est":6.41418824639842,"status":"eq-target","target":0.13060620312590146,"target-prog":"(* (/ (- 1.0 x) y) (/ (- 3.0 x) 3.0))","time":2447.302978515625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 31.15082786643515) (28176 15.487964764036477) ())","end":15.487964764036477,"end-est":9.842778247098174,"identifier":"#f","input":"(/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y)))","link":"455-DiagramsTwoDArcarcBetweenfromdiagramslib1303","name":"Diagrams.TwoD.Arc:arcBetween from diagrams-lib-1.3.0.3","output":"(if (<= (* (* y 4.0) y) 2e-280) 1.0 (if (<= (* (* y 4.0) y) 5e-217) (pow (cbrt (/ (fma x x (* -4.0 (* y y))) (fma x x (* (* y y) 4.0)))) 3.0) (if (<= (* (* y 4.0) y) 1e-106) 1.0 (if (<= (* (* y 4.0) y) 2e+96) (pow (cbrt (/ (fma x x (* -4.0 (* y y))) (fma x x (* (* y y) 4.0)))) 3.0) (if (<= (* (* y 4.0) y) 2e+235) 1.0 -1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y)))","start":31.15082786643515,"start-est":32.76171875,"status":"gt-target","target":30.875954410525633,"target-prog":"(if (< (/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y))) 0.9743233849626781) (- (/ (* x x) (+ (* x x) (* (* y y) 4.0))) (/ (* (* y y) 4.0) (+ (* x x) (* (* y y) 4.0)))) (- (pow (/ x (sqrt (+ (* x x) (* (* y y) 4.0)))) 2.0) (/ (* (* y y) 4.0) (+ (* x x) (* (* y y) 4.0)))))","time":1540.159912109375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 24.440167670790427) (7108 12.72837592319805) ())","end":12.72837592319805,"end-est":14.499790176929974,"identifier":"#f","input":"(* x (sqrt (- (* y y) (* z z))))","link":"456-DiagramsTwoDApollonianinitialConfigfromdiagramscon","name":"Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, B","output":"(if (<= y -6.2e-245) (* x (sqrt (* (+ y z) (- y z)))) (* y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (sqrt (- (* y y) (* z z))))","start":24.440167670790427,"start-est":27.388738445078967,"status":"lt-target","target":0.43133648208388586,"target-prog":"(if (< y 2.5816096488251695e-278) (- (* x y)) (* x (* (sqrt (+ y z)) (sqrt (- y z)))))","time":1528.07080078125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 28.452011159615218) (14024 6.644129189272715) ())","end":6.644129189272715,"end-est":7.3345790757281435,"identifier":"#f","input":"(/ (- (+ (* x x) (* y y)) (* z z)) (* y 2.0))","link":"457-DiagramsTwoDApollonianinitialConfigfromdiagramscon","name":"Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, A","output":"(if (<= y -1.4934684986280894e+145) (* 0.5 y) (if (<= y 1.8e+95) (fma (fma x x (* y y)) (/ 0.5 y) (* (/ z y) (* z -0.5))) (* 0.5 y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (* x x) (* y y)) (* z z)) (* y 2.0))","start":28.452011159615218,"start-est":28.095253781706372,"status":"lt-target","target":0.15247180468885219,"target-prog":"(- (* y 0.5) (* (* (/ 0.5 y) (+ z x)) (- z x)))","time":2493.001953125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 19.921030859233202) (7232 19.921030859233202) ())","end":19.921030859233202,"end-est":22.602389184835417,"identifier":"#f","input":"(* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z))))","link":"458-DiagramsTwoDApolloniandescartesfromdiagramscontrib","name":"Diagrams.TwoD.Apollonian:descartes from diagrams-contrib-1.3.0.5","output":"(* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z))))","start":19.921030859233202,"start-est":22.602389184835417,"status":"eq-start","target":18.860850192337708,"target-prog":"(if (< z 7.636950090573675e+176) (* 2.0 (sqrt (+ (* (+ x y) z) (* x y)))) (* (* (+ (* 0.25 (* (* (pow y -0.75) (* (pow z -0.75) x)) (+ y z))) (* (pow z 0.25) (pow y 0.25))) (+ (* 0.25 (* (* (pow y -0.75) (* (pow z -0.75) x)) (+ y z))) (* (pow z 0.25) (pow y 0.25)))) 2.0))","time":3180.611083984375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 22.855326094697844) (20936 0.15087052163700457) ())","end":0.15087052163700457,"end-est":0.01171875,"identifier":"#f","input":"(- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0)))","link":"459-DiagramsTrailsplitAtParamfromdiagramslib1303D","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, D","output":"(if (<= y -17044193038341.664) (- (+ (/ 1.0 y) (+ (pow y -3.0) (+ (/ (/ (+ x -1.0) y) y) x))) (fma x (pow y -3.0) (/ x y))) (if (<= y 3441.068712305571) (- 1.0 (* (* (/ 1.0 (+ y 1.0)) y) (- 1.0 x))) (- (+ (/ 1.0 y) (+ (pow y -3.0) (+ (/ (/ (+ x -1.0) y) y) x))) (fma x (pow y -3.0) (/ x y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0)))","start":22.855326094697844,"start-est":22.05326767883602,"status":"eq-target","target":0.278013960397578,"target-prog":"(if (< y -3693.8482788297247) (- (/ 1.0 y) (- (/ x y) x)) (if (< y 6799310503.41891) (- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0))) (- (/ 1.0 y) (- (/ x y) x))))","time":2421.23095703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 8.182125) (448 0.016198120312590145) ())","end":0.016198120312590145,"end-est":0.0078125,"identifier":"#f","input":"(/ (* x y) (+ y 1.0))","link":"460-DiagramsTrailsplitAtParamfromdiagramslib1303B","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, B","output":"(* (/ y (+ y 1.0)) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) (+ y 1.0))","start":8.182125,"start-est":8.0546875,"status":"eq-target","target":0.03658759969044097,"target-prog":"(if (< y -3693.8482788297247) (- (/ x (* y y)) (- (/ x y) x)) (if (< y 6799310503.41891) (/ (* x y) (+ y 1.0)) (- (/ x (* y y)) (- (/ x y) x))))","time":1113.43896484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 7.509991600845941) (15236 2.0622285913505283) ())","end":2.0622285913505283,"end-est":1.0321758000818295,"identifier":"#f","input":"(/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0))","link":"461-DiagramsTrailsplitAtParamfromdiagramslib1303A","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, A","output":"(if (<= (/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0)) 4e+190) (/ (+ x (fma y (/ z (fma t z (- x))) (/ x (- x (* t z))))) (+ x 1.0)) (+ (/ (+ (- (/ x (* (+ 1.0 x) z))) (/ y (+ 1.0 x))) t) (/ x (+ 1.0 x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0))","start":7.509991600845941,"start-est":7.00092580008183,"status":"lt-target","target":0.3494693609377705,"target-prog":"(/ (+ x (- (/ y (- t (/ x z))) (/ x (- (* t z) x)))) (+ x 1.0))","time":4332.450927734375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 6.402233385814737) (20360 1.4112531453511754) ())","end":1.4112531453511754,"end-est":0.4208565660920043,"identifier":"#f","input":"(* 2.0 (- (+ (* x y) (* z t)) (* (* (+ a (* b c)) c) i)))","link":"462-DiagramsThreeDShapesfrustumfromdiagramslib1303A","name":"Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, A","output":"(if (<= i -1.2346218592112333e-163) (* -2.0 (fma (fma c b a) (* c i) (- (fma x y (* z t))))) (if (<= i 6.627614071967799e-213) (* -2.0 (fma (+ (* i a) (* c (* i b))) c (- (fma x y (* z t))))) (* -2.0 (fma (fma c b a) (* c i) (- (fma t z (* x y)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (- (+ (* x y) (* z t)) (* (* (+ a (* b c)) c) i)))","start":6.402233385814737,"start-est":8.298672130194468,"status":"eq-target","target":1.7726756880173036,"target-prog":"(* 2.0 (- (+ (* x y) (* z t)) (* (+ a (* b c)) (* c i))))","time":4315.635986328125,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.2527510383300339) (6848 0.14561336132445107) ())","end":0.14561336132445107,"end-est":0.140625,"identifier":"#f","input":"(* (* 3.0 (- 2.0 (* x 3.0))) x)","link":"463-DiagramsTangentcatParamfromdiagramslib1303E","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, E","output":"(fma x 6.0 (* (* -9.0 x) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 (- 2.0 (* x 3.0))) x)","start":0.2527510383300339,"start-est":0.29134750976844204,"status":"eq-target","target":0.2089011816707036,"target-prog":"(- (* 6.0 x) (* 9.0 (* x x)))","time":1078.716064453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.14080676718957336) (576 0.09094812031259013) ())","end":0.09094812031259013,"end-est":0.078125,"identifier":"#f","input":"(* 3.0 (+ (- (* (* x 3.0) x) (* x 4.0)) 1.0))","link":"464-DiagramsTangentcatParamfromdiagramslib1303D","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, D","output":"(+ (* x (+ -12.0 (* x 9.0))) 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 3.0 (+ (- (* (* x 3.0) x) (* x 4.0)) 1.0))","start":0.14080676718957336,"start-est":0.17025375976844204,"status":"eq-target","target":0.09373836132445107,"target-prog":"(+ 3.0 (- (* (* 9.0 x) x) (* 12.0 x)))","time":1609.386962890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.006125) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* y z))","link":"465-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, C","output":"(fma (- y) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* y z))","start":0.006125,"start-est":0.00390625,"status":"eq-target","target":0.011542481250360576,"target-prog":"(/ (+ x (* y z)) (/ (+ x (* y z)) (- x (* y z))))","time":548.916015625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 2.6946857884244277) (7304 0.09860373227476717) ())","end":0.09860373227476717,"end-est":0.0859375,"identifier":"#f","input":"(/ x (- y (* z t)))","link":"466-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, B","output":"(if (<= (* z t) (- INFINITY)) (- (/ (/ x t) z)) (if (<= (* z t) 1e+304) (/ x (fma z (- t) y)) (- (/ (/ x t) z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (- y (* z t)))","start":2.6946857884244277,"start-est":2.6779638379326975,"status":"gt-target","target":1.6785472883078565,"target-prog":"(if (< x -1.618195973607049e+50) (/ 1.0 (- (/ y x) (* (/ z x) t))) (if (< x 2.1378306434876444e+131) (/ x (- y (* z t))) (/ 1.0 (- (/ y x) (* (/ z x) t)))))","time":2170.135009765625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.269536383278604) (16464 4.337037746885469) ())","end":4.337037746885469,"end-est":2.868322604019208,"identifier":"#f","input":"(/ (- x (* y z)) (- t (* a z)))","link":"467-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, A","output":"(if (<= (/ (- x (* y z)) (- t (* a z))) (- INFINITY)) (/ y a) (if (<= (/ (- x (* y z)) (- t (* a z))) -2e-322) (/ (fma z y (- x)) (fma z a (- t))) (if (<= (/ (- x (* y z)) (- t (* a z))) 0.0) (+ (/ y a) (/ (- (/ (/ (* y t) a) a) (/ x a)) z)) (if (<= (/ (- x (* y z)) (- t (* a z))) 4e+284) (/ (fma z y (- x)) (fma z a (- t))) (/ y a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x (* y z)) (- t (* a z)))","start":10.269536383278604,"start-est":8.170298388678905,"status":"lt-target","target":1.6779874626057907,"target-prog":"(if (< z -32113435955957344.0) (- (/ x (- t (* a z))) (/ y (- (/ t z) a))) (if (< z 3.5139522372978296e-86) (* (- x (* y z)) (/ 1.0 (- t (* a z)))) (- (/ x (- t (* a z))) (/ y (- (/ t z) a)))))","time":3265.504150390625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 16.309353804883877) (29448 7.172166233601955) ())","end":7.172166233601955,"end-est":4.984850875269659,"identifier":"#f","input":"(/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t)))","link":"468-DiagramsSolveTridiagonalsolveCyclicTriDiagonalfrom","name":"Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, B","output":"(if (<= (/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t))) -5e-112) (+ (/ (* (/ z (fma y (/ b t) (+ 1.0 a))) y) t) (/ x (+ 1.0 (+ (/ (* y b) t) a)))) (if (<= (/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t))) 2e+296) (+ (/ (* y z) (fma y b (* t (+ 1.0 a)))) (* (pow (cbrt (fma y (/ b t) (+ 1.0 a))) (+ -1.0 -2.0)) x)) (+ (/ z b) (/ x (+ 1.0 (+ (/ (* y b) t) a))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t)))","start":16.309353804883877,"start-est":17.14710403370158,"status":"gt-target","target":12.960797275426314,"target-prog":"(if (< t -1.3659085366310088e-271) (* 1.0 (* (+ x (* (/ y t) z)) (/ 1.0 (+ (+ a 1.0) (* (/ y t) b))))) (if (< t 3.036967103737246e-130) (/ z b) (* 1.0 (* (+ x (* (/ y t) z)) (/ 1.0 (+ (+ a 1.0) (* (/ y t) b)))))))","time":4429.083984375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 6.082945619358996) (2260 1.529253361199781) ())","end":1.529253361199781,"end-est":0.4557286712932252,"identifier":"#f","input":"(/ (* x y) z)","link":"469-DiagramsSolveTridiagonalsolveCyclicTriDiagonalfrom","name":"Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, A","output":"(if (<= (/ (* x y) z) -1e+300) (* x (/ y z)) (if (<= (/ (* x y) z) -2e+159) (* (/ 1.0 z) (* x y)) (if (<= (/ (* x y) z) -2e-286) (/ (* x y) z) (if (<= (/ (* x y) z) 0.0) (* (/ x z) y) (if (<= (/ (* x y) z) 2e+200) (/ (* x y) z) (* (/ x z) y))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) z)","start":6.082945619358996,"start-est":5.757409516054081,"status":"gt-target","target":6.19285620992778,"target-prog":"(if (< z -4.262230790519429e-138) (/ (* x y) z) (if (< z 1.7042130660650472e-164) (/ x (/ z y)) (* (/ x z) y)))","time":1639.01904296875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.006073120312590144) (6976 0.003) ())","end":0.003,"end-est":0,"identifier":"#f","input":"(+ (- (* (/ 1.0 8.0) x) (/ (* y z) 2.0)) t)","link":"470-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, B","output":"(+ (fma y (* z -0.5) (* 0.125 x)) t)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* (/ 1.0 8.0) x) (/ (* y z) 2.0)) t)","start":0.006073120312590144,"start-est":0.00390625,"status":"eq-target","target":0.006198120312590144,"target-prog":"(- (+ (/ x 8.0) t) (* (/ z 2.0) y))","time":994.760009765625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 20.398112835267384) (45824 17.028608470164837) ())","end":17.028608470164837,"end-est":18.53072843579709,"identifier":"#f","input":"(- (* (* 2.0 (sqrt x)) (cos (- y (/ (* z t) 3.0)))) (/ a (* b 3.0)))","link":"471-DiagramsSolvePolynomialcubFormfromdiagramssolve01K","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, K","output":"(fma (cbrt (* (sqrt (* x 4.0)) (cos y))) (cbrt (* 4.0 (* (pow (cos y) 2.0) x))) (/ (/ a -3.0) b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* 2.0 (sqrt x)) (cos (- y (/ (* z t) 3.0)))) (/ a (* b 3.0)))","start":20.398112835267384,"start-est":21.645893871756734,"status":"gt-target","target":18.54493395659574,"target-prog":"(if (< z -1.3793337487235141e+129) (- (* (* 2.0 (sqrt x)) (cos (- (/ 1.0 y) (/ (/ 0.3333333333333333 z) t)))) (/ (/ a 3.0) b)) (if (< z 3.516290613555987e+106) (- (* (* (sqrt x) 2.0) (cos (- y (* (/ t 3.0) z)))) (/ (/ a 3.0) b)) (- (* (cos (- y (/ (/ 0.3333333333333333 z) t))) (* 2.0 (sqrt x))) (/ (/ a b) 3.0))))","time":4321.213134765625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 20.20571068798431) (17740 3.4864572440659813) ())","end":3.4864572440659813,"end-est":2.5350111802527673,"identifier":"#f","input":"(/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c))","link":"472-DiagramsSolvePolynomialcubFormfromdiagramssolve01J","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, J","output":"(if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) (- INFINITY)) (+ (/ b (* c z)) (+ (* -4.0 (* t (/ a c))) (* 9.0 (* y (/ x (* c z)))))) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) -1e-267) (/ (+ (fma (* x 9.0) y (* (* -4.0 (* z t)) a)) b) (* z c)) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1.6e-191) (/ (* (/ 1.0 z) (fma 9.0 (* x y) (fma (* (* z t) a) -4.0 b))) c) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1e+303) (/ (+ (fma (* x 9.0) y (* (* -4.0 (* z t)) a)) b) (* z c)) (+ (/ b (* c z)) (+ (* -4.0 (* t (/ a c))) (* (/ y c) (/ (* x 9.0) z))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c))","start":20.20571068798431,"start-est":16.49450577230059,"status":"gt-target","target":14.66449238004765,"target-prog":"(if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) -1.100156740804105e-171) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 0.0) (/ (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) z) c) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1.1708877911747488e-53) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 2.876823679546137e+130) (- (+ (* (* 9.0 (/ y c)) (/ x z)) (/ b (* c z))) (* 4.0 (/ (* a t) c))) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1.3838515042456319e+158) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (- (+ (* 9.0 (* (/ y (* c z)) x)) (/ b (* c z))) (* 4.0 (/ (* a t) c))))))))","time":3907.800048828125,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 7.837394691484343) (8520 1.3529726109421607) ())","end":1.3529726109421607,"end-est":0.9066328804747702,"identifier":"#f","input":"(/ (- (* x y) (* (* z 9.0) t)) (* a 2.0))","link":"473-DiagramsSolvePolynomialcubFormfromdiagramssolve01I","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, I","output":"(if (<= (- (* x y) (* (* z 9.0) t)) -2e+240) (+ (* -4.5 (* z (/ t a))) (* 0.5 (* x (/ y a)))) (if (<= (- (* x y) (* (* z 9.0) t)) 1e+147) (fma -4.5 (/ (* z t) a) (/ (* 0.5 (* x y)) a)) (+ (* -4.5 (* z (/ t a))) (* 0.5 (* x (/ y a))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x y) (* (* z 9.0) t)) (* a 2.0))","start":7.837394691484343,"start-est":8.644292288893853,"status":"gt-target","target":5.65869082324642,"target-prog":"(if (< a -2.090464557976709e+86) (- (* 0.5 (/ (* y x) a)) (* 4.5 (/ t (/ a z)))) (if (< a 2.144030707833976e+99) (/ (- (* x y) (* z (* 9.0 t))) (* a 2.0)) (- (* (/ y a) (* x 0.5)) (* (/ t a) (* z 4.5)))))","time":3292.83984375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 3.4861877563505654) (20548 0.8905586955362768) ())","end":0.8905586955362768,"end-est":0.1328125,"identifier":"#f","input":"(+ (- x (/ y (* z 3.0))) (/ t (* (* z 3.0) y)))","link":"474-DiagramsSolvePolynomialcubFormfromdiagramssolve01H","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, H","output":"(if (<= (* z 3.0) -4e-134) (+ x (fma (/ t z) (/ (* (/ 1.0 y) (sqrt 0.3333333333333333)) (sqrt 3.0)) (/ y (* -3.0 z)))) (if (<= (* z 3.0) 5e-49) (+ x (/ (/ (- (/ t y) y) z) 3.0)) (+ x (/ (+ (* -1.0 (/ y z)) (/ t (* y z))) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- x (/ y (* z 3.0))) (/ t (* (* z 3.0) y)))","start":3.4861877563505654,"start-est":3.2520985108912908,"status":"eq-target","target":1.68305145795681,"target-prog":"(+ (- x (/ y (* z 3.0))) (/ (/ t (* z 3.0)) y))","time":3373.1669921875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (/ 1.0 2.0) (+ x y))","link":"475-DiagramsSolvePolynomialcubFormfromdiagramssolve01G","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, G","output":"(* 0.5 (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (+ x y))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(/ (+ x y) 2.0)","time":464.4609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1984 5.4674806712359025) (24008 0.9121850527479356) ())","end":0.9121850527479356,"end-est":0.36947250976844204,"identifier":"#f","input":"(- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k))","link":"476-DiagramsSolvePolynomialcubFormfromdiagramssolve01E","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, E","output":"(if (<= (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (- INFINITY)) (+ (* -27.0 (* j k)) (fma b c (fma (fma 18.0 (* y (* t z)) (* -4.0 i)) x (* -4.0 (* a t))))) (if (<= (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) 1e+291) (+ (* -27.0 (* j k)) (fma t (fma a -4.0 (* (* z (* y x)) 18.0)) (fma c b (* (* -4.0 x) i)))) (+ (* (* -27.0 k) j) (fma b c (fma (fma 18.0 (* y (* t z)) (* -4.0 i)) x (* -4.0 (* a t)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k))","start":5.4674806712359025,"start-est":4.127285009768443,"status":"eq-target","target":1.6052977114824516,"target-prog":"(if (< t -1.6210815397541398e-69) (- (- (* (* 18.0 t) (* (* x y) z)) (* (+ (* a t) (* i x)) 4.0)) (- (* (* k j) 27.0) (* c b))) (if (< t 165.68027943805222) (+ (- (* (* 18.0 y) (* x (* z t))) (* (+ (* a t) (* i x)) 4.0)) (- (* c b) (* 27.0 (* k j)))) (- (- (* (* 18.0 t) (* (* x y) z)) (* (+ (* a t) (* i x)) 4.0)) (- (* (* k j) 27.0) (* c b)))))","time":4861.49609375,"vars":["x","y","z","t","a","b","c","i","j","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 1.3022837926465902) (52992 0.34213622132133714) ())","end":0.34213622132133714,"end-est":0,"identifier":"#f","input":"(* (/ 1.0 3.0) (acos (* (/ (* 3.0 (/ x (* y 27.0))) (* z 2.0)) (sqrt t))))","link":"477-DiagramsSolvePolynomialcubFormfromdiagramssolve01D","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, D","output":"(* (cbrt (* (* (acos (* (/ (/ x (* y 27.0)) (* z 0.6666666666666666)) (sqrt t))) (sqrt 0.037037037037037035)) (sqrt 0.037037037037037035))) (pow (acos (* (/ (/ x (* y 27.0)) (* z 0.6666666666666666)) (sqrt t))) 0.6666666666666666))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 3.0) (acos (* (/ (* 3.0 (/ x (* y 27.0))) (* z 2.0)) (sqrt t))))","start":1.3022837926465902,"start-est":0.9765625,"status":"eq-target","target":1.3194911781945788,"target-prog":"(/ (acos (* (/ (/ x 27.0) (* y z)) (/ (sqrt t) (/ 2.0 3.0)))) 3.0)","time":4650.43896484375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.2653238760296475) (384 0.204375) ())","end":0.204375,"end-est":0.171875,"identifier":"#f","input":"(/ x (* y 3.0))","link":"478-DiagramsSolvePolynomialcubFormfromdiagramssolve01C","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, C","output":"(/ (/ x -3.0) (- y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y 3.0))","start":0.2653238760296475,"start-est":0.20703125,"status":"eq-target","target":0.2375,"target-prog":"(/ (/ x y) 3.0)","time":1041.210205078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.14494812031259013) (6784 0.17475) ())","end":0.17475,"end-est":0.125,"identifier":"#f","input":"(- (* (* x 3.0) y) z)","link":"479-DiagramsSolvePolynomialcubFormfromdiagramssolve01B","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, B","output":"(fma x (* 3.0 y) (- z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* x 3.0) y) z)","start":0.14494812031259013,"start-est":0.1484375,"status":"eq-target","target":0.17782312031259012,"target-prog":"(- (* x (* 3.0 y)) z)","time":1311.572998046875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 3.575019878286215) (14028 0.7053328051161111) ())","end":0.7053328051161111,"end-est":0.15625,"identifier":"#f","input":"(+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* (* a 27.0) b))","link":"480-DiagramsSolvePolynomialcubFormfromdiagramssolve01A","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, A","output":"(if (<= t -1e+20) (fma x 2.0 (fma (* a 27.0) b (* (* (* -9.0 z) y) t))) (if (<= t -1.151809825705982e-299) (fma x 2.0 (fma (* a 27.0) b (* (* -9.0 y) (* t z)))) (if (<= t 1e-20) (fma x 2.0 (fma (* z -9.0) (* y t) (* (* b 27.0) a))) (fma x 2.0 (fma (* a 27.0) b (* (* z (* -9.0 y)) t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* (* a 27.0) b))","start":3.575019878286215,"start-est":4.92578125,"status":"gt-target","target":2.4911942360712587,"target-prog":"(if (< y 7.590524218811189e-161) (+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* a (* 27.0 b))) (+ (- (* x 2.0) (* 9.0 (* y (* t z)))) (* (* a 27.0) b)))","time":3824.64306640625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.26745300781475356) (448 0.23796240625180284) ())","end":0.23796240625180284,"end-est":0.20769501953688402,"identifier":"#f","input":"(* (* (* x 3.0) y) y)","link":"481-DiagramsSegmentcatParamfromdiagramslib1303B","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, B","output":"(* (* 3.0 y) (* y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* x 3.0) y) y)","start":0.26745300781475356,"start-est":0.26009750976844204,"status":"eq-target","target":0.24722424843993376,"target-prog":"(* (* x (* 3.0 y)) y)","time":1392.602783203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 10.335360870134059) (448 0.2419954890651141) ())","end":0.2419954890651141,"end-est":0.21550751953688402,"identifier":"#f","input":"(* (* (* x 3.0) x) y)","link":"482-DiagramsSegmentcatParamfromdiagramslib1303A","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, A","output":"(* (* x 3.0) (* x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* x 3.0) x) y)","start":10.335360870134059,"start-est":8.48386268605504,"status":"eq-target","target":0.2419954890651141,"target-prog":"(* (* x 3.0) (* x y))","time":1358.4169921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.014125) (6720 0.004875) ())","end":0.004875,"end-est":0.0078125,"identifier":"#f","input":"(+ (* (- 1.0 x) y) (* x z))","link":"483-DiagramsColorHSVlerpfromdiagramscontrib1305","name":"Diagrams.Color.HSV:lerp  from diagrams-contrib-1.3.0.5","output":"(fma (- z y) x y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (- 1.0 x) y) (* x z))","start":0.014125,"start-est":0.02734375,"status":"eq-target","target":0.012,"target-prog":"(- y (* x (- y z)))","time":1230.287109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 10.251771240625182) (6976 0.04398836132445107) ())","end":0.04398836132445107,"end-est":0.046875,"identifier":"#f","input":"(/ (+ x (* y (- z x))) z)","link":"484-DiagramsBackendRasterificrasterificRadialGradientf","name":"Diagrams.Backend.Rasterific:rasterificRadialGradient from diagrams-rasterific-1.3.1.3","output":"(fma (- 1.0 (/ x z)) y (/ x z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (* y (- z x))) z)","start":10.251771240625182,"start-est":9.83203125,"status":"eq-target","target":0.04536336132445107,"target-prog":"(- (+ y (/ x z)) (/ y (/ z x)))","time":2001.256103515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 12.996125487769174) (2704 0.2947637690696793) ())","end":0.2947637690696793,"end-est":0.125,"identifier":"#f","input":"(/ (* x (- y z)) y)","link":"485-DiagramsBackendCairoInternalsetTexturefromdiagrams","name":"Diagrams.Backend.Cairo.Internal:setTexture from diagrams-cairo-1.3.0.3","output":"(if (<= (/ (* x (- y z)) y) (- INFINITY)) (* x (+ 1.0 (* (/ 1.0 y) (- z)))) (if (<= (/ (* x (- y z)) y) -1e+29) (+ (* (* x y) (/ 1.0 y)) (* (- (* z x)) (/ 1.0 y))) (if (<= (/ (* x (- y z)) y) 5e-30) (* x (/ (- y z) y)) (if (<= (/ (* x (- y z)) y) 1e+292) (/ (* x (- y z)) y) (* x (+ 1.0 (* (/ 1.0 y) (- z))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (- y z)) y)","start":12.996125487769174,"start-est":10.02188919949729,"status":"gt-target","target":3.5282827763490805,"target-prog":"(if (< z -2.060202331921739e+104) (- x (/ (* z x) y)) (if (< z 1.6939766013828526e+213) (/ x (/ y (- y z))) (* (- y z) (/ x y))))","time":1709.77001953125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.4015731203125902) (13376 0.17218979875412743) ())","end":0.17218979875412743,"end-est":0.1519800413890958,"identifier":"#f","input":"(/ (* x 100.0) (+ x y))","link":"486-DevelopmentShakeProgressmessagefromshake0155","name":"Development.Shake.Progress:message from shake-0.15.5","output":"(* (/ x (/ (+ x y) (sqrt 100.0))) (sqrt 100.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x 100.0) (+ x y))","start":0.4015731203125902,"start-est":0.41796875,"status":"eq-target","target":0.16066748125036057,"target-prog":"(* (/ x 1.0) (/ 100.0 (+ x y)))","time":1412.818115234375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 23.879225551553336) (17868 3.963191645473431) ())","end":3.963191645473431,"end-est":5.064365977489207,"identifier":"#f","input":"(/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y))))","link":"487-DevelopmentShakeProgressdecayfromshake0155","name":"Development.Shake.Progress:decay from shake-0.15.5","output":"(if (<= (/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y)))) -1e-258) (+ (* (/ z (- (* (- y b) z) y)) (- a t)) (* x (/ y (fma (- b y) z y)))) (if (<= (/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y)))) 0.0) (- (+ (/ t (- b y)) (* -1.0 (/ (- (* -1.0 (/ (* y x) (- b y))) (* -1.0 (/ (* (- t a) y) (pow (- b y) 2.0)))) z))) (/ a (- b y))) (if (<= (/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y)))) 2e+283) (+ (* (* z (- t a)) (/ 1.0 (fma (- b y) z y))) (* (* x y) (/ 1.0 (fma (- b y) z y)))) (+ (/ (- t a) (- b y)) (* x (/ y (fma (- b y) z y)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y))))","start":23.879225551553336,"start-est":27.918004476575163,"status":"gt-target","target":18.260330554313825,"target-prog":"(- (/ (+ (* z t) (* y x)) (+ y (* z (- b y)))) (/ a (+ (- b y) (/ y z))))","time":4905.596923828125,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 1000000.0 (- x x))","link":"488-DevelopmentShakeProfilegenerateTracefromshake0155","name":"Development.Shake.Profile:generateTrace from shake-0.15.5","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 1000000.0 (- x x))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"0.0","time":342.112060546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.18827124062518028) (13376 0.13590584257481164) ())","end":0.13590584257481164,"end-est":0.12109375,"identifier":"#f","input":"(* (* x x) (- 3.0 (* x 2.0)))","link":"489-DataSplineKeyinterpolateKeysfromsmoothie0402","name":"Data.Spline.Key:interpolateKeys from smoothie-0.4.0.2","output":"(+ (* 3.0 (pow x 2.0)) (* -2.0 (pow x 3.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) (- 3.0 (* x 2.0)))","start":0.18827124062518028,"start-est":0.171875,"status":"eq-target","target":0.17207312031259014,"target-prog":"(* x (* x (- 3.0 (* x 2.0))))","time":932.156005859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.654457342829372) (1736 1.3429092335910204) ())","end":1.3429092335910204,"end-est":0.6212016494293066,"identifier":"#f","input":"(/ x (* (- y z) (- t z)))","link":"490-DataRandomDistributionTriangulartriangularCDFfromr","name":"Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, B","output":"(if (<= (* (- y z) (- t z)) -2e+247) (* (/ x (- z y)) (/ -1.0 (- t z))) (if (<= (* (- y z) (- t z)) -4e-63) (* x (/ (/ -1.0 (- t z)) (- z y))) (/ (/ x (- z y)) (- z t))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* (- y z) (- t z)))","start":7.654457342829372,"start-est":10.389617560054827,"status":"gt-target","target":8.416193161514936,"target-prog":"(if (< (/ x (* (- y z) (- t z))) 0.0) (/ (/ x (- y z)) (- t z)) (* x (/ 1.0 (* (- y z) (- t z)))))","time":2731.722900390625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.04612358974046882) (6720 0.009875) ())","end":0.009875,"end-est":0,"identifier":"#f","input":"(/ (+ x y) (+ y y))","link":"491-DataRandomDistributionTccdffromrandomfu0262","name":"Data.Random.Distribution.T:$ccdf from random-fu-0.2.6.2","output":"(fma 0.5 (/ x y) 0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (+ y y))","start":0.04612358974046882,"start-est":0.015625,"status":"eq-target","target":0.009875,"target-prog":"(+ (* 0.5 (/ x y)) 0.5)","time":586.857177734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012823120312590145) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ (* x x) y) y)","link":"492-DataRandomDistributionNormalnormalTailfromrandomfu","name":"Data.Random.Distribution.Normal:normalTail from random-fu-0.2.6.2","output":"(fma x x (+ y y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x x) y) y)","start":0.012823120312590145,"start-est":0.015625,"status":"eq-target","target":0.00625,"target-prog":"(+ (+ y y) (* x x))","time":452.4619140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.08033947042407) (6528 0.0035) ())","end":0.0035,"end-est":0,"identifier":"#f","input":"(sqrt (+ (* x x) (* y y)))","link":"493-DataOctreeInternaloctantDistancefromOctree0542","name":"Data.Octree.Internal:octantDistance  from Octree-0.5.4.2","output":"(hypot x y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) (* y y)))","start":31.08033947042407,"start-est":31.815164593812035,"status":"gt-target","target":17.665335324077653,"target-prog":"(if (< x -1.1236950826599826e+145) (- x) (if (< x 1.116557621183362e+93) (sqrt (+ (* x x) (* y y))) x))","time":507.093017578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.0245756672417763) (13056 0.016624869245794784) ())","end":0.016624869245794784,"end-est":0.016882531620653757,"identifier":"#f","input":"(* x (exp (* y y)))","link":"494-DataNumberErfdmerfcxfromerf2000","name":"Data.Number.Erf:$dmerfcx from erf-2.0.0.0","output":"(* x (pow (exp y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (exp (* y y)))","start":0.0245756672417763,"start-est":0.03668873993272954,"status":"eq-target","target":0.016624869245794784,"target-prog":"(* x (pow (exp y) y))","time":1166.845947265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.3091537557754818) (26432 0.3490755640636719) ())","end":0.3490755640636719,"end-est":0.2421875,"identifier":"#f","input":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (exp (/ (* t t) 2.0)))","link":"495-DataNumberErfcinvnormcdffromerf2000A","name":"Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, A","output":"(* (fma x 0.5 (- y)) (sqrt (* (+ z z) (pow (exp (- t)) (- t)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (exp (/ (* t t) 2.0)))","start":0.3091537557754818,"start-est":0.258476269536884,"status":"eq-target","target":0.31430961011099995,"target-prog":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (pow (exp 1.0) (/ (* t t) 2.0)))","time":3923.851806640625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.027823120312590145) (7360 0.020363361324451063) ())","end":0.020363361324451063,"end-est":0.01171875,"identifier":"#f","input":"(+ x (* (- y z) (- t x)))","link":"496-DataMetricsSnapshotquantilefrommetrics0302","name":"Data.Metrics.Snapshot:quantile from metrics-0.3.0.2","output":"(fma (- y z) t (+ (* z x) (+ x (* -1.0 (* y x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y z) (- t x)))","start":0.027823120312590145,"start-est":0.0234375,"status":"eq-target","target":0.027061481637041206,"target-prog":"(+ x (+ (* t (- y z)) (* (- x) (- y z))))","time":2504.212158203125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 15.203804465242863) (19844 0.6477824779282921) ())","end":0.6477824779282921,"end-est":0.6184473810341965,"identifier":"#f","input":"(* x (log (/ x y)))","link":"497-DataHyperLogLogTypesizefromhyperloglog034B","name":"Data.HyperLogLog.Type:size from hyperloglog-0.3.4, B","output":"(if (<= y 0.0) (fma x (log (- x)) (- (* (log (- y)) x))) (* (+ (* -1.0 (log y)) (log x)) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (log (/ x y)))","start":15.203804465242863,"start-est":14.508686291601665,"status":"gt-target","target":8.096811794166515,"target-prog":"(if (< y 1.2973149052617803e-303) (* x (log (/ x y))) (/ x (/ 1.0 (- (log x) (log y)))))","time":1700.97607421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 44.67526084711936) (60428 4.24368069789911) ())","end":4.24368069789911,"end-est":3.0436633696952615,"identifier":"#f","input":"(* (* x 1.0) (log (- 1.0 (/ y x))))","link":"498-DataHyperLogLogTypesizefromhyperloglog034A","name":"Data.HyperLogLog.Type:size from hyperloglog-0.3.4, A","output":"(if (<= (* (* x 1.0) (log (- 1.0 (/ y x)))) (- INFINITY)) (pow (cbrt (* x (+ (log y) (log (/ -1.0 x))))) 3.0) (if (<= (* (* x 1.0) (log (- 1.0 (/ y x)))) -2e-289) (* x (log1p (- (/ y x)))) (if (<= (* (* x 1.0) (log (- 1.0 (/ y x)))) 2e-290) (fma -0.5 (/ (* y y) x) (- y)) (* x (cbrt (* (pow (+ (log (- y)) (- (log x))) 2.0) (+ (log (- y)) (- (log x)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 1.0) (log (- 1.0 (/ y x))))","start":44.67526084711936,"start-est":44.57825475628847,"status":"gt-target","target":44.67526084711936,"target-prog":"(* x (log (- 1.0 (/ y x))))","time":2810.382080078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 9.413789641240799) (832 0.10879903967784735) ())","end":0.10879903967784735,"end-est":0.078125,"identifier":"#f","input":"(+ (/ x y) (/ (+ 2.0 (* (* z 2.0) (- 1.0 t))) (* t z)))","link":"499-DataHashTableSTBasiccomputeOverheadfromhashtables1","name":"Data.HashTable.ST.Basic:computeOverhead from hashtables-1.2.0.2","output":"(+ (/ x y) (+ (/ (+ (/ 2.0 z) 2.0) t) -2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ x y) (/ (+ 2.0 (* (* z 2.0) (- 1.0 t))) (* t z)))","start":9.413789641240799,"start-est":8.34375,"status":"eq-target","target":0.10879903967784735,"target-prog":"(- (/ (+ (/ 2.0 z) 2.0) t) (- 2.0 (/ x y)))","time":1849.743896484375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 3.725) (8264 0.08875) ())","end":0.08875,"end-est":0.05078125,"identifier":"#f","input":"(* x (- 1.0 (* (- 1.0 y) z)))","link":"500-DataColourRGBSpaceHSVhsvfromcolour233J","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, J","output":"(if (<= (* x (- 1.0 (* (- 1.0 y) z))) -1.8e+229) (fma y (* z x) (* (- 1.0 z) x)) (if (<= (* x (- 1.0 (* (- 1.0 y) z))) 4e+29) (* x (fma z (+ -1.0 y) 1.0)) (fma y (* z x) (* (- 1.0 z) x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* (- 1.0 y) z)))","start":3.725,"start-est":2.30859375,"status":"eq-target","target":0.276375,"target-prog":"(if (< (* x (- 1.0 (* (- 1.0 y) z))) -1.618195973607049e+50) (+ x (* (- 1.0 y) (* (- z) x))) (if (< (* x (- 1.0 (* (- 1.0 y) z))) 3.892237649663903e+134) (- (* (* x y) z) (- (* x z) x)) (+ x (* (- 1.0 y) (* (- z) x)))))","time":1649.176025390625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.2951462406251803) (6848 0.2906981203125902) ())","end":0.2906981203125902,"end-est":0.1328125,"identifier":"#f","input":"(+ x (* (* (- y x) 6.0) z))","link":"501-DataColourRGBSpaceHSLhslfromcolour233E","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, E","output":"(fma (* -6.0 (- x y)) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* (- y x) 6.0) z))","start":0.2951462406251803,"start-est":0.13671875,"status":"eq-target","target":0.1758962406251803,"target-prog":"(- x (* (* 6.0 z) (- x y)))","time":1905.52978515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.009625) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* x (+ y 1.0))","link":"502-DataColourRGBSpaceHSLhslfromcolour233B","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, B","output":"(fma x y x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ y 1.0))","start":0.009625,"start-est":0.01171875,"status":"eq-target","target":0.008646240625180289,"target-prog":"(+ x (* x y))","time":451.64013671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0165) (320 0.002) ())","end":0.002,"end-est":0,"identifier":"#f","input":"(/ (- x y) x)","link":"503-DataColourRGBhslsvfromcolour233E","name":"Data.Colour.RGB:hslsv from colour-2.3.3, E","output":"(- 1.0 (/ y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) x)","start":0.0165,"start-est":0.00390625,"status":"eq-target","target":0.002,"target-prog":"(- 1.0 (/ y x))","time":572.195068359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.027804323438491593) (704 0.02293648163704121) ())","end":0.02293648163704121,"end-est":0.01171875,"identifier":"#f","input":"(/ (- x y) (+ x y))","link":"504-DataColourRGBhslsvfromcolour233D","name":"Data.Colour.RGB:hslsv from colour-2.3.3, D","output":"(- (/ x (+ x y)) (/ y (+ x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (+ x y))","start":0.027804323438491593,"start-est":0.01171875,"status":"eq-target","target":0.02293648163704121,"target-prog":"(- (/ x (+ x y)) (/ y (+ x y)))","time":1118.8330078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.021740601562950726) (576 0.021740601562950726) ())","end":0.021740601562950726,"end-est":0.03125,"identifier":"#f","input":"(/ (- x y) (- 2.0 (+ x y)))","link":"505-DataColourRGBhslsvfromcolour233C","name":"Data.Colour.RGB:hslsv from colour-2.3.3, C","output":"(/ (- y x) (+ (+ x y) -2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- 2.0 (+ x y)))","start":0.021740601562950726,"start-est":0.03125,"status":"eq-target","target":0.019896240625180292,"target-prog":"(- (/ x (- 2.0 (+ x y))) (/ y (- 2.0 (+ x y))))","time":2360.9189453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.4432924812503606) (7360 0.15219812031259014) ())","end":0.15219812031259014,"end-est":0.12890625,"identifier":"#f","input":"(+ (/ (* 60.0 (- x y)) (- z t)) (* a 120.0))","link":"506-DataColourRGBhslsvfromcolour233B","name":"Data.Colour.RGB:hslsv from colour-2.3.3, B","output":"(fma 60.0 (- (/ y (- t z)) (/ x (- t z))) (* a 120.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ (* 60.0 (- x y)) (- z t)) (* a 120.0))","start":0.4432924812503606,"start-est":0.4140625,"status":"eq-target","target":0.1616156015629507,"target-prog":"(+ (/ 60.0 (/ (- z t) (- x y))) (* a 120.0))","time":3618.074951171875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.682842948876234) (8072 1.5006993854552415) ())","end":1.5006993854552415,"end-est":0.8636194563455579,"identifier":"#f","input":"(/ (- (* x y) (* z t)) a)","link":"507-DataColourMatrixinversefromcolour233B","name":"Data.Colour.Matrix:inverse from colour-2.3.3, B","output":"(if (<= (- (* x y) (* z t)) -5e+281) (fma x (/ y a) (- (* (/ z a) t))) (if (<= (- (* x y) (* z t)) 5e+112) (/ (fma x y (- (* z t))) a) (fma x (/ y a) (- (* (/ t a) z)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x y) (* z t)) a)","start":7.682842948876234,"start-est":8.113619456345557,"status":"gt-target","target":6.24799967727754,"target-prog":"(if (< z -2.468684968699548e+170) (- (* (/ y a) x) (* (/ t a) z)) (if (< z 6.309831121978371e-71) (/ (- (* x y) (* z t)) a) (- (* (/ y a) x) (* (/ t a) z))))","time":2956.05908203125,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.246065045296728) (37256 2.596866924984135) ())","end":2.596866924984135,"end-est":2.137172430310017,"identifier":"#f","input":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i))))","link":"508-DataColourMatrixdeterminantfromcolour233A","name":"Data.Colour.Matrix:determinant from colour-2.3.3, A","output":"(if (<= (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i)))) (- INFINITY)) (+ (- (+ (* -1.0 (* (* a x) t)) (* y (* z x))) (+ (* -1.0 (* i (* t b))) (* c (* b z)))) (+ (* -1.0 (* i (* y j))) (* c (* a j)))) (if (<= (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i)))) 1e+308) (fma (fma c a (- (* y i))) j (fma x (fma y z (- (* a t))) (* (fma t i (- (* c z))) b))) (+ (- (+ (* -1.0 (* a (* t x))) (* y (* z x))) (+ (* -1.0 (* i (* t b))) (* c (* b z)))) (+ (* -1.0 (* i (* y j))) (* c (* a j))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i))))","start":12.246065045296728,"start-est":11.863734930310017,"status":"gt-target","target":19.91702202619112,"target-prog":"(if (< x -1.469694296777705e-64) (+ (- (* x (- (* y z) (* t a))) (/ (* b (- (pow (* c z) 2.0) (pow (* t i) 2.0))) (+ (* c z) (* t i)))) (* j (- (* c a) (* y i)))) (if (< x 3.2113527362226803e-147) (- (* (- (* b i) (* x a)) t) (- (* z (* c b)) (* j (- (* c a) (* y i))))) (+ (- (* x (- (* y z) (* t a))) (/ (* b (- (pow (* c z) 2.0) (pow (* t i) 2.0))) (+ (* c z) (* t i)))) (* j (- (* c a) (* y i))))))","time":4307.5,"vars":["x","y","z","t","a","b","c","i","j"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.17946936093777044) (6848 0.1928509193652572) ())","end":0.1928509193652572,"end-est":0.16796875,"identifier":"#f","input":"(* (* (- x (/ 16.0 116.0)) 3.0) y)","link":"509-DataColourCIEcieLABfromcolour233A","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, A","output":"(fma x (* 3.0 y) (* -0.41379310344827586 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (- x (/ 16.0 116.0)) 3.0) y)","start":0.17946936093777044,"start-est":0.421875,"status":"eq-target","target":0.17299060156295074,"target-prog":"(* y (- (* x 3.0) 0.41379310344827586))","time":1179.704833984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 37.47114107018761) (26512 9.424062280294768) ())","end":9.424062280294768,"end-est":6.065891373468097,"identifier":"#f","input":"(sqrt (/ (+ (+ (* x x) (* y y)) (* z z)) 3.0))","link":"510-DataArrayRepaAlgorithmsPixeldoubleRmsOfRGB8fromrep","name":"Data.Array.Repa.Algorithms.Pixel:doubleRmsOfRGB8 from repa-algorithms-3.4.0.1","output":"(if (<= x -7.232319708152293e+85) (* (hypot y x) (sqrt 0.3333333333333333)) (if (<= x 3.946476424890345e+88) (/ (* (cbrt (sqrt 0.3333333333333333)) (hypot z y)) (cbrt 3.0)) (if (<= x 1.3169715640039038e+137) (* (hypot y x) (sqrt 0.3333333333333333)) (if (<= x 1.5186199444692294e+157) (/ (* (cbrt (sqrt 0.3333333333333333)) (hypot z y)) (cbrt 3.0)) (* (hypot y x) (sqrt 0.3333333333333333))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (+ (+ (* x x) (* y y)) (* z z)) 3.0))","start":37.47114107018761,"start-est":39.95306546081924,"status":"gt-target","target":25.233905209717598,"target-prog":"(if (< z -6.396479394109776e+136) (/ (- z) (sqrt 3.0)) (if (< z 7.320293694404182e+117) (/ (sqrt (+ (+ (* z z) (* x x)) (* y y))) (sqrt 3.0)) (* (sqrt 0.3333333333333333) z)))","time":2320.058837890625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.14094812031259013) (832 0.008073120312590144) ())","end":0.008073120312590144,"end-est":0.0078125,"identifier":"#f","input":"(/ (* 4.0 (- (- x y) (* z 0.5))) z)","link":"511-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, B","output":"(+ (* -4.0 (+ 0.5 (/ y z))) (* 4.0 (/ x z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* 4.0 (- (- x y) (* z 0.5))) z)","start":0.14094812031259013,"start-est":0.52734375,"status":"eq-target","target":0.008073120312590144,"target-prog":"(- (* 4.0 (/ x z)) (+ 2.0 (* 4.0 (/ y z))))","time":1359.495849609375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.2867830828133113) (13504 0.04301184218813101) ())","end":0.04301184218813101,"end-est":0.0234375,"identifier":"#f","input":"(/ (* 6.0 (- x 1.0)) (+ (+ x 1.0) (* 4.0 (sqrt x))))","link":"512-DataApproximateNumericsblogfromapproximate0221","name":"Data.Approximate.Numerics:blog from approximate-0.2.2.1","output":"(* (/ (- 1.0 x) (fma (sqrt x) 4.0 (+ 1.0 x))) -6.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* 6.0 (- x 1.0)) (+ (+ x 1.0) (* 4.0 (sqrt x))))","start":0.2867830828133113,"start-est":0.12337875976844201,"status":"eq-target","target":0.05408740625180288,"target-prog":"(/ 6.0 (/ (+ (+ x 1.0) (* 4.0 (sqrt x))) (- x 1.0)))","time":1912.669921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.971562857619223) (6720 0.081125) ())","end":0.081125,"end-est":0.0859375,"identifier":"#f","input":"(+ x (/ (* y y) z))","link":"513-CryptoRandomTestcalculatefromcryptorandom009","name":"Crypto.Random.Test:calculate from crypto-random-0.0.9","output":"(fma y (/ y z) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y y) z))","start":5.971562857619223,"start-est":7.750146742879403,"status":"eq-target","target":0.08294812031259015,"target-prog":"(+ x (* y (/ y z)))","time":1527.708984375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 47.872308900959645) (20360 11.017174034176154) ())","end":11.017174034176154,"end-est":8.427941753916889,"identifier":"#f","input":"(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))","link":"514-CompoundInterest","name":"Compound Interest","output":"(if (<= i -2.9e-156) (* 100.0 (/ (* n (expm1 i)) i)) (if (<= i 4.3e-11) (* 100.0 (+ n (* n (* i (- 0.5 (/ 0.5 n)))))) (/ (* 100.0 (* n (expm1 (* n (+ (- (- (log i))) (- (log n))))))) i)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))","start":47.872308900959645,"start-est":49.622052959550196,"status":"gt-target","target":47.77182050848046,"target-prog":"(* 100.0 (/ (- (exp (* n (if (== (+ 1.0 (/ i n)) 1.0) (/ i n) (/ (* (/ i n) (log (+ 1.0 (/ i n)))) (- (+ (/ i n) 1.0) 1.0))))) 1.0) (/ i n)))","time":5951.342041015625,"vars":["i","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.316150161480284) (14296 17.20312139643728) ())","end":17.20312139643728,"end-est":11.538054585930968,"identifier":"#f","input":"(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))","link":"515-Complexdivisionrealpart","name":"Complex division, real part","output":"(if (<= d -1.0598411492486535e+76) (fma (* c a) (pow d -2.0) (/ b d)) (if (<= d -6.4e-142) (/ (fma a c (* b d)) (fma c c (* d d))) (if (<= d 1.1596656669673977e-106) (/ a c) (if (<= d 9.289846252076942e-42) (/ (fma a c (* b d)) (fma c c (* d d))) (if (<= d 0.2127394395943478) (+ (/ a c) (- (/ (* d b) (* c c)) (/ (* a (* d d)) (pow c 3.0)))) (if (<= d 3.1198454695800192e+128) (/ (fma a c (* b d)) (fma c c (* d d))) (/ b d)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))","start":26.316150161480284,"start-est":25.700878010057604,"status":"lt-target","target":0.4089810498918768,"target-prog":"(if (< (fabs d) (fabs c)) (/ (+ a (* b (/ d c))) (+ c (* d (/ d c)))) (/ (+ b (* a (/ c d))) (+ d (* c (/ c d)))))","time":2969.708984375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.2216266805803) (20880 13.440483366077355) ())","end":13.440483366077355,"end-est":9.080292727163476,"identifier":"#f","input":"(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))","link":"516-Complexdivisionimagpart","name":"Complex division, imag part","output":"(if (<= d -3.435710736515236e+157) (- (/ (/ (* c b) d) d) (/ a d)) (if (<= d -1.1067770179738948e-82) (fma (- a) (/ d (fma c c (* d d))) (/ (* b c) (fma c c (* d d)))) (if (<= d 2.3212537516074044e-97) (- (/ b c) (/ (* a d) (* c c))) (if (<= d 3.1198454695800192e+128) (fma (- a) (/ d (fma c c (* d d))) (/ (* b c) (fma c c (* d d)))) (- (/ (/ (* c b) d) d) (/ a d))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))","start":26.2216266805803,"start-est":28.5832726450607,"status":"lt-target","target":0.4379119350940227,"target-prog":"(if (< (fabs d) (fabs c)) (/ (- b (* a (/ d c))) (+ c (* d (/ d c)))) (/ (+ (- a) (* b (/ c d))) (+ d (* c (/ c d)))))","time":2685.339111328125,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 9.154145799811271) (2248 0.07228145100006601) ())","end":0.07228145100006601,"end-est":0.01953125,"identifier":"#f","input":"(/ (* x (+ (/ x y) 1.0)) (+ x 1.0))","link":"517-CodecPictureTypestoneMappingfromJuicyPixels3261","name":"Codec.Picture.Types:toneMapping from JuicyPixels-3.2.6.1","output":"(if (<= (/ (* x (+ (/ x y) 1.0)) (+ x 1.0)) -5e+111) (/ (* (+ x y) (/ x (+ x 1.0))) y) (if (<= (/ (* x (+ (/ x y) 1.0)) (+ x 1.0)) 5e-18) (/ (* (/ (+ x y) y) x) (+ x 1.0)) (/ (* (+ x y) (/ x (+ x 1.0))) y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ (/ x y) 1.0)) (+ x 1.0))","start":9.154145799811271,"start-est":11.056972509768443,"status":"eq-target","target":0.11277079981127196,"target-prog":"(* (/ x 1.0) (/ (+ (/ x y) 1.0) (+ x 1.0)))","time":1765.403076171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((14400 46.1597629128152) (41412 43.4612464185535) ())","end":43.4612464185535,"end-est":41.60013197506469,"identifier":"#f","input":"(* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0)))","link":"518-CodecPictureJpgFastDctreferenceDctfromJuicyPixels3","name":"Codec.Picture.Jpg.FastDct:referenceDct from JuicyPixels-3.2.6.1","output":"(if (<= (* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0))) 5e+301) (* (* x (cos (* z (* (* t 0.0625) (fma y 2.0 1.0))))) (cos (* (fma a 2.0 1.0) (* (* b t) 0.0625)))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0)))","start":46.1597629128152,"start-est":44.47997146423429,"status":"eq-target","target":44.350256477665305,"target-prog":"(* x (cos (* (/ b 16.0) (/ t (+ (- 1.0 (* a 2.0)) (pow (* a 2.0) 2.0))))))","time":5576.739990234375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(sqrt (* (* (* (/ (+ (+ a b) c) 2.0) (- (/ (+ (+ a b) c) 2.0) a)) (- (/ (+ (+ a b) c) 2.0) b)) (- (/ (+ (+ a b) c) 2.0) c)))","link":"519-Areaofatriangle","name":"Area of a triangle","output":"#f","pre":"(and (and (and (< 0.0 a) (< a (+ b c))) (and (< 0.0 b) (< b (+ a c)))) (and (< 0.0 c) (< c (+ a b))))","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* (* (/ (+ (+ a b) c) 2.0) (- (/ (+ (+ a b) c) 2.0) a)) (- (/ (+ (+ a b) c) 2.0) b)) (- (/ (+ (+ a b) c) 2.0) c)))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"(/ (sqrt (* (* (* (+ a (+ b c)) (- c (- a b))) (+ c (- a b))) (+ a (- b c)))) 4.0)","time":93.98583984375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 27.027544708938994) (11720 0.5484326537415358) ())","end":0.5484326537415358,"end-est":0.09375,"identifier":"#f","input":"(/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y))","link":"520-AIClusteringHierarchicalInternalwardfromclustering","name":"AI.Clustering.Hierarchical.Internal:ward from clustering-0.2.1","output":"(if (<= (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) -1e-187) (- (+ (fma z (/ x (+ y (+ t x))) (* z (/ y (+ y (+ t x))))) (* a (/ (+ y t) (+ y (+ t x))))) (* b (/ y (+ y (+ t x))))) (if (<= (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) 1e-85) (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) (- (+ (fma z (/ x (+ y (+ t x))) (* z (/ y (+ y (+ t x))))) (* a (/ (+ y t) (+ y (+ t x))))) (* b (/ y (+ y (+ t x)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y))","start":27.027544708938994,"start-est":26.6015625,"status":"gt-target","target":11.512131690013476,"target-prog":"(if (< (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) -3.5813117084150564e+153) (- (+ z a) b) (if (< (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) 1.2285964308315609e+82) (/ 1.0 (/ (+ (+ x t) y) (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)))) (- (+ z a) b)))","time":4096.52978515625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 9.979184443831281) (704 0.07091748125036057) ())","end":0.07091748125036057,"end-est":0.05078125,"identifier":"#f","input":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","link":"521-3fracproblem333","name":"3frac (problem 3.3.3)","output":"(/ (/ 2.0 x) (* (- 1.0 x) (- -1.0 x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","start":9.979184443831281,"start-est":12.036934610869558,"status":"eq-target","target":0.31792640117529786,"target-prog":"(/ 2.0 (* x (- (* x x) 1.0)))","time":1943.676025390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 36.811585617429444) (157256 0.45017743358326634) ())","end":0.45017743358326634,"end-est":0.3454745994254508,"identifier":"#f","input":"(- (tan (+ x eps)) (tan x))","link":"522-2tanproblem332","name":"2tan (problem 3.3.2)","output":"(if (<= eps -0.000820236557523614) (- (* -1.0 (/ (+ (/ (sin x) (cos x)) (/ (sin eps) (cos eps))) (- (/ (* (sin x) (sin eps)) (* (cos eps) (cos x))) 1.0))) (/ (sin x) (cos x))) (if (<= eps 1.3839758794450668e-5) (+ (* (+ (/ (sin x) (cos x)) (/ (pow (sin x) 3.0) (pow (cos x) 3.0))) (pow eps 2.0)) (+ (* eps (+ 1.0 (/ (pow (sin x) 2.0) (pow (cos x) 2.0)))) (* (pow eps 3.0) (+ 0.3333333333333333 (+ (* -1.0 (/ (* (+ (* -1.0 (/ (pow (sin x) 3.0) (pow (cos x) 3.0))) (* -0.3333333333333333 (/ (sin x) (cos x)))) (sin x)) (cos x))) (/ (pow (sin x) 2.0) (pow (cos x) 2.0))))))) (- (* -1.0 (/ (+ (/ (sin x) (cos x)) (* (sin eps) (/ 1.0 (cos eps)))) (- (* (/ (sin x) (cbrt (* (cos eps) (cos x)))) (/ (sin eps) (cbrt (pow (* (cos eps) (cos x)) 2.0)))) 1.0))) (/ (sin x) (cos x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (tan (+ x eps)) (tan x))","start":36.811585617429444,"start-est":37.09582113922123,"status":"gt-target","target":14.943032519496656,"target-prog":"(/ (sin eps) (* (cos x) (cos (+ x eps))))","time":4055.492919921875,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.485905139390646) (13376 0.16348364687698316) ())","end":0.16348364687698316,"end-est":0.19140625,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"523-2sqrtexample31","name":"2sqrt (example 3.1)","output":"(/ 1.0 (+ (sqrt (+ (+ x 0.5) 0.5)) (sqrt x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":29.485905139390646,"start-est":29.550838072395354,"status":"eq-target","target":0.16330676718957327,"target-prog":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","time":1751.391845703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 36.673890877682794) (26304 0.3817986412027194) ())","end":0.3817986412027194,"end-est":0.3055310438338179,"identifier":"#f","input":"(- (sin (+ x eps)) (sin x))","link":"524-2sinexample33","name":"2sin (example 3.3)","output":"(+ (- 0.0 (* (sin x) (- 1.0 (cos eps)))) (* (cos x) (sin eps)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sin (+ x eps)) (sin x))","start":36.673890877682794,"start-est":39.05327048659487,"status":"gt-target","target":15.141239740274502,"target-prog":"(* 2.0 (* (cos (+ x (/ eps 2.0))) (sin (/ eps 2.0))))","time":3474.416015625,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 19.654707469406077) (39040 6.076670372539174) ())","end":6.076670372539174,"end-est":6.127400222497728,"identifier":"#f","input":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","link":"525-2isqrtexample36","name":"2isqrt (example 3.6)","output":"(* (/ 1.0 (+ (sqrt (exp (log1p x))) (sqrt x))) (pow (fma x x x) -0.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","start":19.654707469406077,"start-est":19.043520886594113,"status":"lt-target","target":0.6997360186822369,"target-prog":"(/ 1.0 (+ (* (+ x 1.0) (sqrt x)) (* x (sqrt (+ x 1.0)))))","time":1948.626953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 15.22760369024746) (13184 0.32632693536310936) ())","end":0.32632693536310936,"end-est":0.5023029195020046,"identifier":"#f","input":"(- (atan (+ N 1.0)) (atan N))","link":"526-2atanexample35","name":"2atan (example 3.5)","output":"(atan2 1.0 (fma N N (+ N 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (atan (+ N 1.0)) (atan N))","start":15.22760369024746,"start-est":14.363011632544486,"status":"eq-target","target":0.3295250556756995,"target-prog":"(atan (/ 1.0 (+ 1.0 (* N (+ N 1.0)))))","time":1378.507080078125,"vars":["N"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(- (/ x0 (- 1.0 x1)) x0)","link":"527-x01x1x0","name":"(- (/ x0 (- 1 x1)) x0)","output":"#f","pre":"(or (and (== x0 1.855) (== x1 0.000209)) (and (== x0 2.985) (== x1 0.0186)))","prec":"binary64","preprocess":"()","spec":"(- (/ x0 (- 1.0 x1)) x0)","start":false,"start-est":false,"status":"error","target":false,"target-prog":"(/ (* x0 x1) (- 1.0 x1))","time":4.765869140625,"vars":["x0","x1"]}]}