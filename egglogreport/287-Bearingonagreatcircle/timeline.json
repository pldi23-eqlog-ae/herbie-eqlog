[{"compiler":[[29,18]],"method":["search"],"sampling":[[12,0.10136428098122119,0.896684024064649,0.0019516949541298345],[11,0.10136428098122119,0.896684024064649,0.0019516949541298345],[10,0.0779725238317086,0.9200757812141616,0.0019516949541298345],[9,0.0779725238317086,0.9200757812141616,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":488.13916015625,"type":"analyze"},{"outcomes":[["body",512,"valid",462.053955078125,1321],["body",1024,"valid",3676.998046875,5523],["body",2048,"valid",306.658935546875,185],["body",256,"valid",195.0849609375,1227]],"time":4649.534912109375,"type":"sample"},{"compiler":[[28,17]],"inputs":[["0","1","2","3"],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda2 lambda1)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 lambda1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 phi2)) (cos.f64 (-.f64 phi1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi2 lambda2)) (cos.f64 lambda1)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda1)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (cos.f64 (-.f64 phi2 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi1)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 phi1)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi2)) (cos.f64 lambda2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (cos.f64 (-.f64 lambda1 phi2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (-.f64 (*.f64 (cos.f64 phi2) (sin.f64 phi1)) (*.f64 (*.f64 (sin.f64 phi2) (cos.f64 phi1)) (cos.f64 (-.f64 lambda1 lambda2)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda2 lambda1))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda2 lambda1)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda2 lambda1))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 lambda1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 phi2)) (cos.f64 (-.f64 phi1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi1 lambda2)) (cos.f64 phi2)) (fma.f64 (cos.f64 lambda1) (sin.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 phi2)) (cos.f64 (-.f64 phi1 lambda2))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi2 lambda2)) (cos.f64 lambda1)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda1)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (cos.f64 (-.f64 phi2 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 phi2 lambda2)) (cos.f64 lambda1)) (fma.f64 (cos.f64 phi1) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (cos.f64 (-.f64 phi2 lambda2))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi1)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 phi1)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi1)) (cos.f64 phi2)) (fma.f64 (cos.f64 lambda2) (sin.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 phi1))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi2)) (cos.f64 lambda2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 lambda2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (cos.f64 (-.f64 lambda1 phi2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 phi2)) (cos.f64 lambda2)) (fma.f64 (cos.f64 phi1) (sin.f64 lambda2) (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (cos.f64 (-.f64 lambda1 phi2))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (-.f64 (*.f64 (cos.f64 phi2) (sin.f64 phi1)) (*.f64 (*.f64 (sin.f64 phi2) (cos.f64 phi1)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (fma.f64 (cos.f64 phi2) (sin.f64 phi1) (neg.f64 (*.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (cos.f64 (-.f64 lambda2 lambda1))))))"]],"symmetry":[[]],"time":74.909912109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))"]],"method":["egg-herbie"],"outputs":[["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))"]],"time":22.52197265625,"type":"simplify"},{"compiler":[[52,21]],"time":0.51220703125,"type":"eval"},{"alts":[["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))","fresh",10.875979509007689],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","next",10.875979509007689]],"compiler":[[28,17],[28,17],[28,17],[28,17]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[10.872073259007689],"time":1.848876953125,"type":"prune"},{"compiler":[[94,17]],"locations":[["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))",0.16796875,true],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))",0.23666000976844204,true],["(sin.f64 (-.f64 lambda1 lambda2))",2.043488238006789,true],["(cos.f64 (-.f64 lambda1 lambda2))",2.0767521140611316,true]],"time":19.631103515625,"type":"localize"},{"count":[[4,116]],"series":[["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","phi2","-inf",0.25390625],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","phi2","inf",0.463134765625],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","phi2","0",0.47216796875],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda2","-inf",0.31103515625],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda2","inf",0.25390625],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda2","0",0.318115234375],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda1","-inf",0.320068359375],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda1","inf",0.31591796875],["(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))","lambda1","0",0.323974609375],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda2","-inf",0.447021484375],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda2","inf",0.760009765625],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda2","0",0.4130859375],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda1","-inf",0.493896484375],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda1","inf",1.240966796875],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","lambda1","0",0.465087890625],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi2","-inf",0.468994140625],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi2","inf",0.8330078125],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi2","0",0.593994140625],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi1","-inf",0.47509765625],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi1","inf",1.028076171875],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","phi1","0",0.697998046875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","-inf",0.155029296875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","inf",0.148193359375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","0",0.291015625],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","-inf",0.160888671875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","inf",0.19287109375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","0",0.283935546875],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","-inf",0.19384765625],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","inf",0.171875],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","0",0.378173828125],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","-inf",0.195068359375],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","inf",0.195068359375],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","0",0.476806640625]],"time":14.27490234375,"type":"series"},{"count":[[4,216]],"inputs":[["(cos.f64 (-.f64 lambda1 lambda2))","(sin.f64 (-.f64 lambda1 lambda2))","(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))","(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) 0) (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (-.f64 lambda1 lambda2))) (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 0 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 0) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (sin.f64 0) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda1)) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (neg.f64 (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 (neg.f64 lambda2)) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 (neg.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) 2) (*.f64 2 (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 1 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda2 lambda1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) 0) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (-.f64 lambda1 lambda2))) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 0 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 1) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 0) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 0) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (-.f64 lambda1 lambda2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (cos.f64 phi2))) (*.f64 (sin.f64 phi1) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 0) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))) (*.f64 1 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (sin.f64 phi1)) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (cos.f64 phi2)) (sin.f64 phi1)) (*.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (cos.f64 phi2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 0 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 1) (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) 1) (*.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sqrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 4)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) -1) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 4)) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) -1) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (neg.f64 (sqrt.f64 2))) (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (neg.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cos.f64 (-.f64 lambda1 lambda2))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 (-.f64 lambda2 lambda1))) (cos.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 phi2 (-.f64 lambda2 lambda1))) (cos.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sin.f64 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 0) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 0 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (cos.f64 phi2)) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) -1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2)) (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2)) (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3))))))"]],"rules":[["egg-rr",66],["egg-rr",76],["egg-rr",30],["egg-rr",44]],"time":42.583984375,"type":"rewrite"},{"count":[[332,304]],"inputs":[["(cos.f64 (neg.f64 lambda2))","(+.f64 (cos.f64 (neg.f64 lambda2)) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1))))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (neg.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5))))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 7)))) (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5)))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))) (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 4))))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 6)))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))) (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 4)))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 3))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 lambda2))","(cos.f64 lambda2)","(+.f64 (cos.f64 (neg.f64 lambda2)) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))","(-.f64 (cos.f64 lambda2) (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1))","(+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1))))","(+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (neg.f64 lambda1) (sin.f64 (neg.f64 lambda2)))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))))","(fma.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (neg.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)) (cos.f64 lambda1)))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1))))","(+.f64 (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)) (cos.f64 lambda1)))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(fma.f64 -1/6 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)) (-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(-.f64 (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 lambda1) (+.f64 (neg.f64 lambda2) (*.f64 1/6 (pow.f64 lambda2 3)))) (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))))","(fma.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5))))))","(fma.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3))) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2)) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5))))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3)))) (+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 7)))) (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2))) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5)))))))","(fma.f64 -1/6 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 3))) (fma.f64 -1/5040 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 7))) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi1 (cos.f64 phi2)) (*.f64 1/120 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 phi1 5)))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1) (*.f64 -1/2 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (*.f64 phi2 phi2))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))) (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 4))))))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1) (fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (*.f64 phi2 phi2)) (*.f64 1/24 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (pow.f64 phi2 4)))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 6)))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 2)))) (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (pow.f64 phi2 4)))))))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1) (fma.f64 -1/720 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (pow.f64 phi2 6)) (fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (*.f64 phi2 phi2)) (*.f64 1/24 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (pow.f64 phi2 4))))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (cos.f64 phi2) (sin.f64 phi1)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2))))","(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda2))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 (neg.f64 lambda2))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) lambda1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (-.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 lambda1 lambda1)))) (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (sin.f64 phi1) lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 (neg.f64 lambda2)))) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 3))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) lambda1)))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (fma.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 3)))) (-.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 lambda1 lambda1)))) (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (sin.f64 phi1) lambda1)))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))","(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))))","(fma.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (sin.f64 lambda1))) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (*.f64 -1/2 (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 lambda1 lambda1))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (fma.f64 -1/2 (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 lambda1 lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(-.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(fma.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6)) (fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2))))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"time":382.739013671875,"type":"simplify"},{"compiler":[[10408,2084]],"time":50.72802734375,"type":"eval"},{"alts":[["(atan2.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.973712126228993],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 2)))))","fresh",10.880638278843403],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",10.632430630079323],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3))))","fresh",10.883792009007689],["(atan2.f64 (*.f64 (-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",24.05757128600524],["(atan2.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2)) (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))))) (cbrt.f64 2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",34.576258074195295],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)) (cos.f64 lambda1))))))","fresh",25.974440748261706],["(atan2.f64 (*.f64 (-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1))) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",25.15907479120508],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (cos.f64 phi2))))","fresh",10.879885759007689],["(atan2.f64 (*.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",12.152683767154578],["(atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.868625827685612],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (neg.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))))","fresh",23.02673884243333],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (/.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (cbrt.f64 2))))","fresh",20.06101686712889],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","next",7.447881929173989],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda2))))","fresh",15.662080562932783],["(atan2.f64 (*.f64 (fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2)))) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",9.448398384981225]],"compiler":[[31,20],[43,22],[41,25],[31,20],[40,26],[49,32],[38,23],[31,20],[28,17],[37,22],[35,22],[41,26],[38,26],[39,25],[26,17],[45,28],[31,20],[43,22],[41,25],[31,20],[40,26],[49,32],[38,23],[31,20],[28,17],[37,22],[35,22],[41,26],[38,26],[39,25],[26,17],[45,28]],"count":[[306,16]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[304,16],"picked":[1,0]}],"min-error":[7.069146521794982],"time":130.9990234375,"type":"prune"},{"compiler":[[151,25]],"locations":[["(*.f64 (sin.f64 phi1) (cos.f64 phi2))",0.1640625,true],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))",0.171875,true],["(*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))",0.23666000976844204,false],["(cos.f64 (-.f64 lambda1 lambda2))",2.0767521140611316,false]],"time":28.630859375,"type":"localize"},{"count":[[2,28]],"series":[["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi2","-inf",0.144775390625],["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi2","inf",0.166015625],["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi2","0",0.255859375],["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi1","-inf",0.1630859375],["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi1","inf",0.152099609375],["(*.f64 (sin.f64 phi1) (cos.f64 phi2))","phi1","0",0.283203125],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda2","-inf",0.447021484375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda2","inf",0.576904296875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda2","0",0.401123046875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda1","-inf",0.287841796875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda1","inf",1.72802734375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","lambda1","0",0.52685546875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","phi2","-inf",0.43603515625],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","phi2","inf",0.85693359375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","phi2","0",0.552001953125]],"time":7.166015625,"type":"series"},{"count":[[2,128]],"inputs":[["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","(*.f64 (sin.f64 phi1) (cos.f64 phi2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 0) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 0 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cos.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (sin.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 lambda1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (cbrt.f64 (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (cos.f64 phi2)) (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) -1) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (sqrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (cbrt.f64 4)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (/.f64 (cos.f64 phi2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (/.f64 (cos.f64 phi2) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 2)) (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (cos.f64 phi2) (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) 2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (cbrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (/.f64 (cos.f64 phi2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) -1) (/.f64 (cos.f64 phi2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))) (/.f64 (cos.f64 phi2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 4)) (/.f64 (cos.f64 phi2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (neg.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (cos.f64 phi2)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (cos.f64 phi2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (cos.f64 phi2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (cos.f64 phi2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 0) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 0 (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 phi1) (cbrt.f64 (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 phi1)) (cbrt.f64 (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (cos.f64 phi2)) (cbrt.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) -1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 phi1))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2)) (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 3))))))"]],"rules":[["egg-rr",65],["egg-rr",63]],"time":29.43798828125,"type":"rewrite"},{"count":[[156,163]],"inputs":[["(*.f64 (sin.f64 lambda1) (cos.f64 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))","(*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 7)))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(*.f64 (cos.f64 phi2) phi1)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (cos.f64 phi2))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1))))","(sin.f64 phi1)","(+.f64 (sin.f64 phi1) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))))","(+.f64 (sin.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (pow.f64 phi2 4)))))","(+.f64 (sin.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (pow.f64 phi2 6))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (pow.f64 phi2 4))))))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 lambda1) (cos.f64 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","(fma.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (*.f64 phi2 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))","(fma.f64 (*.f64 1/24 (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)) (fma.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (*.f64 phi2 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 2)))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))","(fma.f64 (*.f64 1/24 (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 4)) (fma.f64 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (pow.f64 phi2 6))) -1/720 (fma.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (*.f64 phi2 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))))","(*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))","(fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))))","(fma.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5))) 1/120 (fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 7)))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))))","(fma.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 5))) 1/120 (fma.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 7))) (fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 (*.f64 lambda2 lambda2) -1/2) 1))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (pow.f64 lambda2 4)) (*.f64 (*.f64 lambda2 lambda2) -1/2))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (pow.f64 lambda2 4)) (*.f64 -1/720 (pow.f64 lambda2 6)))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 (*.f64 lambda2 lambda2) -1/2) 1)))","(*.f64 (cos.f64 phi2) phi1)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1))","(*.f64 (cos.f64 phi2) (+.f64 phi1 (*.f64 -1/6 (pow.f64 phi1 3))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1)))","(fma.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/120 (pow.f64 phi1 5)) phi1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (cos.f64 phi2))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (cos.f64 phi2))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (cos.f64 phi2))) (*.f64 (cos.f64 phi2) phi1))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 -1/5040 (pow.f64 phi1 7)))) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/120 (pow.f64 phi1 5)) phi1)))","(sin.f64 phi1)","(+.f64 (sin.f64 phi1) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 phi2 phi2)) (sin.f64 phi1))","(+.f64 (sin.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (pow.f64 phi2 4)))))","(+.f64 (sin.f64 phi1) (fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 phi2 phi2)) (*.f64 (*.f64 1/24 (sin.f64 phi1)) (pow.f64 phi2 4))))","(+.f64 (sin.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (pow.f64 phi2 2))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (pow.f64 phi2 6))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (pow.f64 phi2 4))))))","(+.f64 (sin.f64 phi1) (fma.f64 (*.f64 (sin.f64 phi1) (*.f64 phi2 phi2)) -1/2 (fma.f64 -1/720 (*.f64 (sin.f64 phi1) (pow.f64 phi2 6)) (*.f64 (*.f64 1/24 (sin.f64 phi1)) (pow.f64 phi2 4)))))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 phi1))"]],"time":92.66796875,"type":"simplify"},{"compiler":[[14977,2591]],"time":60.530029296875,"type":"eval"},{"alts":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))","fresh",0.18741124970117154],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 phi1) (cbrt.f64 (cos.f64 phi2)))) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",7.448634449009702],["(atan2.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.973712126228993],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (/.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",16.671249295668353],["(atan2.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",7.441690669405547],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","next",0.18741124970117154],["(atan2.f64 (*.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",12.152683767154578],["(atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.868625827685612],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)))))","fresh",7.454073188942432],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3))))","fresh",7.455694429173989]],"compiler":[[55,31],[46,30],[31,20],[54,39],[46,30],[52,29],[37,22],[35,22],[48,30],[42,28],[55,31],[46,30],[31,20],[54,39],[46,30],[52,29],[37,22],[35,22],[48,30],[42,28]],"count":[[349,10]],"kept":[{"done":[0,0],"fresh":[15,3],"new":[333,7],"picked":[1,0]}],"min-error":[0.08822250976844201],"time":159.008056640625,"type":"prune"},{"compiler":[[228,29]],"locations":[["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))",0.171875,false],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))",0.1875,true],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))",0.21875,true],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))",0.24837875976844204,true]],"time":34.18994140625,"type":"localize"},{"count":[[3,132]],"series":[["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda2","-inf",0.277099609375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda2","inf",0.26416015625],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda2","0",0.3388671875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda1","-inf",0.27294921875],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda1","inf",0.39306640625],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","lambda1","0",0.320068359375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","phi2","-inf",0.1728515625],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","phi2","inf",0.1630859375],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))","phi2","0",0.322021484375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda2","-inf",0.59814453125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda2","inf",0.60595703125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda2","0",0.58203125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda1","-inf",0.296875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda1","inf",3.857177734375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","lambda1","0",0.570068359375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi2","-inf",0.590087890625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi2","inf",0.73876953125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi2","0",0.72119140625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi1","-inf",0.595947265625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi1","inf",0.930908203125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","phi1","0",0.594970703125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda2","-inf",0.576171875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda2","inf",0.710205078125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda2","0",0.51513671875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda1","-inf",0.33984375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda1","inf",0.60205078125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","lambda1","0",0.56689453125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi2","-inf",0.609130859375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi2","inf",0.716796875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi2","0",0.455078125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi1","-inf",0.60400390625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi1","inf",0.97509765625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","phi1","0",0.716796875]],"time":21.14697265625,"type":"series"},{"count":[[3,201]],"inputs":[["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 0) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda1)) (cos.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda2)) (cos.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) -1) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (sin.f64 phi1))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 2))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 phi2) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (sin.f64 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (*.f64 (cos.f64 lambda2) (sin.f64 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 0) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (sin.f64 lambda1)) (sin.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (sin.f64 lambda2)) (sin.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))) (sin.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (sin.f64 phi1))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) 2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) -1) (neg.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 4)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (sin.f64 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 0) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 0 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2)) (sin.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (sin.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 lambda1) (*.f64 (sin.f64 lambda2) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 lambda2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))) (/.f64 (cos.f64 phi2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 4)) (/.f64 (cos.f64 phi2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2)) (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (sin.f64 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (/.f64 (cos.f64 phi2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) -1) (/.f64 (cos.f64 phi2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (/.f64 (cos.f64 phi2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (/.f64 (cos.f64 phi2) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) 2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) -1) (neg.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 phi2) (cbrt.f64 4)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2)) (cos.f64 phi2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 2)) (cos.f64 phi2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) (cbrt.f64 2)) (cos.f64 phi2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 phi2) (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",70],["egg-rr",71]],"time":39.6640625,"type":"rewrite"},{"count":[[333,283]],"inputs":[["(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(+.f64 (*.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6))))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6))))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))))))","(+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7))))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))) (*.f64 -1/720 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))","(+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7)))) (+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(fma.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))","(fma.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 1/120 (pow.f64 phi1 5)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))))","(fma.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (fma.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 -1/5040 (pow.f64 phi1 7))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))) (fma.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))) (fma.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (*.f64 lambda1 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (*.f64 lambda1 lambda1))) (fma.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(+.f64 (*.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6))))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))))","(fma.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6)))) (fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (*.f64 lambda1 lambda1))) (fma.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 1 (*.f64 1/24 (pow.f64 lambda2 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))))","(+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (+.f64 (*.f64 1/24 (pow.f64 lambda2 4)) (*.f64 -1/720 (pow.f64 lambda2 6)))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 1/120 (pow.f64 phi1 5)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/5040 (pow.f64 phi1 7)) (*.f64 -1/6 (pow.f64 phi1 3)))) (fma.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))","(fma.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))))))","(fma.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (fma.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2)))))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6))))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))))","(fma.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (fma.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (fma.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6)))) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))))))","(fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))) (fma.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))))))","(+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7))))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))))))))","(fma.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7)))) (fma.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))) (fma.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))) (+.f64 (*.f64 1/120 (pow.f64 lambda2 5)) (*.f64 -1/6 (pow.f64 lambda2 3)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda2 (sin.f64 lambda1))) (fma.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))) (+.f64 (*.f64 1/120 (pow.f64 lambda2 5)) (*.f64 -1/6 (pow.f64 lambda2 3))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))","(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))))","(fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2))))))","(fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (fma.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))) (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 2)))) (*.f64 -1/720 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6)))))))","(fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (fma.f64 1/24 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 4))) (fma.f64 -1/2 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (*.f64 phi2 phi2))) (*.f64 -1/720 (*.f64 (sin.f64 lambda2) (*.f64 (sin.f64 lambda1) (pow.f64 phi2 6)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))","(+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))","(fma.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))","(+.f64 (*.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7)))) (+.f64 (*.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))))","(fma.f64 -1/5040 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7))) (fma.f64 1/120 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))","(fma.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 lambda2 3)) (*.f64 1/120 (pow.f64 lambda2 5)))) (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 lambda2 3)) (*.f64 1/120 (pow.f64 lambda2 5)))) (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))"]],"time":419.359130859375,"type":"simplify"},{"compiler":[[21458,3289]],"time":73.199951171875,"type":"eval"},{"alts":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3))))","fresh",0.18512623993272953],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.19435502930532603],["(atan2.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.973712126228993],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",6.87379427083955],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)) (sin.f64 phi1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.19131749970117154],["(atan2.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 3) 1/3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",24.07218288354336],["(atan2.f64 (+.f64 (*.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.17731373993272953],["(atan2.f64 (+.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.24961754854338164],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","next",0.17178624970117154],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))","fresh",0.18741124970117154],["(atan2.f64 (*.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",12.152683767154578],["(atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.868625827685612]],"compiler":[[55,32],[68,34],[31,20],[62,39],[65,34],[56,33],[59,34],[55,32],[52,29],[55,31],[37,22],[35,22],[55,32],[68,34],[31,20],[62,39],[65,34],[56,33],[59,34],[55,32],[52,29],[55,31],[37,22],[35,22]],"count":[[377,12]],"kept":[{"done":[0,0],"fresh":[9,4],"new":[367,8],"picked":[1,0]}],"min-error":[0.0546875],"time":214.865966796875,"type":"prune"},{"compiler":[[228,29]],"locations":[["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))",0.17578125,true],["(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))",0.1875,false],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))",0.21875,false],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))",0.22722626953688405,true]],"time":33.998046875,"type":"localize"},{"count":[[2,68]],"series":[["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda2","-inf",0.442138671875],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda2","inf",0.555908203125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda2","0",0.422119140625],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda1","-inf",0.280029296875],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda1","inf",0.4580078125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","lambda1","0",0.44189453125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi2","-inf",0.195068359375],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi2","inf",0.18017578125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi2","0",0.6298828125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi1","-inf",0.173095703125],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi1","inf",0.192138671875],["(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))","phi1","0",0.333984375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","lambda1","-inf",0.283203125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","lambda1","inf",0.47900390625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","lambda1","0",0.366943359375],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi2","-inf",0.2939453125],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi2","inf",0.319091796875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi2","0",0.36181640625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi1","-inf",0.317138671875],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi1","inf",0.52587890625],["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","phi1","0",0.4990234375]],"time":8.094970703125,"type":"series"},{"count":[[2,116]],"inputs":[["(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","(*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 0) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda1) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cbrt.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (sin.f64 phi1)) (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 4)) (/.f64 (sin.f64 phi1) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (neg.f64 (sqrt.f64 2))) (/.f64 (sin.f64 phi1) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) -1) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cbrt.f64 (sin.f64 phi1))) (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (cos.f64 lambda1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 phi1) (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cbrt.f64 (sin.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2)) (/.f64 (sin.f64 phi1) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2)) (/.f64 (sin.f64 phi1) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) -1) (/.f64 (sin.f64 phi1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (/.f64 (sin.f64 phi1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 phi1) 2) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (neg.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (sin.f64 phi1)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (sin.f64 phi1))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 lambda1) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2)) (sin.f64 phi1)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2)) (sin.f64 phi1)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (cos.f64 lambda1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 0) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 0 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 phi1) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 2)) (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 lambda2)) (sin.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda2) (*.f64 (sin.f64 phi1) (cos.f64 phi2))) (cos.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 phi1)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)) (cos.f64 lambda2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda1) (*.f64 (cos.f64 lambda2) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (cbrt.f64 (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 phi1) 2)) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 lambda2))) (cbrt.f64 (sin.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda2) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) 2)) (*.f64 (cos.f64 lambda2) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cbrt.f64 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (neg.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (*.f64 (cos.f64 lambda2) (sin.f64 phi1))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 lambda2) (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 phi1) (*.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cos.f64 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (cos.f64 lambda2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cos.f64 lambda2)) (sin.f64 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (cbrt.f64 2)) (*.f64 (cos.f64 lambda2) (sin.f64 phi1))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (*.f64 (cos.f64 lambda2) (sin.f64 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1))) (sqrt.f64 2)) (*.f64 (cos.f64 lambda2) (sin.f64 phi1))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 3))))))"]],"rules":[["egg-rr",51],["egg-rr",65]],"time":28.410888671875,"type":"rewrite"},{"count":[[184,166]],"inputs":[["(*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(*.f64 (sin.f64 phi1) (cos.f64 lambda1))","(+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1)))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))) (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1)))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))) (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (sin.f64 phi1) (cos.f64 phi2))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4)))) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 6)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))","(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2))) (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))))","(fma.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 1/120 (pow.f64 phi1 5)))) (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 1/120 (pow.f64 phi1 5)))) (fma.f64 (cos.f64 phi2) (*.f64 phi1 (cos.f64 lambda1)) (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))","(*.f64 (sin.f64 phi1) (cos.f64 lambda1))","(+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1)))))","(fma.f64 (sin.f64 phi1) (cos.f64 lambda1) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))) (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))))","(fma.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))) (fma.f64 (sin.f64 phi1) (cos.f64 lambda1) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1))))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1)))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))) (+.f64 (*.f64 (sin.f64 phi1) (cos.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1)))))))","(fma.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1))) (fma.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))) (fma.f64 (sin.f64 phi1) (cos.f64 lambda1) (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(*.f64 (sin.f64 phi1) (cos.f64 phi2))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 lambda1 lambda1))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))","(fma.f64 (*.f64 -1/2 (cos.f64 phi2)) (*.f64 (sin.f64 phi1) (*.f64 lambda1 lambda1)) (fma.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4))) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4)))) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 6)))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))","(fma.f64 (*.f64 -1/2 (cos.f64 phi2)) (*.f64 (sin.f64 phi1) (*.f64 lambda1 lambda1)) (fma.f64 1/24 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 4))) (fma.f64 -1/720 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (pow.f64 lambda1 6))) (*.f64 (sin.f64 phi1) (cos.f64 phi2)))))","(*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(fma.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))","(fma.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 1/120 (pow.f64 phi1 5)) (*.f64 -1/6 (pow.f64 phi1 3)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 phi1 7) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 -1/6 (*.f64 (pow.f64 phi1 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))))","(fma.f64 (*.f64 phi1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cos.f64 phi2) (fma.f64 1/120 (*.f64 (pow.f64 phi1 5) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/6 (pow.f64 phi1 3)) (*.f64 -1/5040 (pow.f64 phi1 7))))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1)))) (fma.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 2) (cos.f64 lambda1))))) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1))))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(fma.f64 (*.f64 -1/2 (sin.f64 phi1)) (*.f64 (cos.f64 lambda2) (*.f64 (*.f64 phi2 phi2) (cos.f64 lambda1))) (fma.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (sin.f64 phi1) (fma.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 6) (cos.f64 lambda1)))) (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (*.f64 (pow.f64 phi2 4) (cos.f64 lambda1))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))) (fma.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2))) (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))) (fma.f64 (*.f64 1/24 (sin.f64 phi1)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 4))) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda2)) (*.f64 -1/720 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 6))))))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))","(*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))))))","(fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1)))) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 1/24 (pow.f64 lambda2 4)) 1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 lambda2 4) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))) (*.f64 -1/720 (*.f64 (pow.f64 lambda2 6) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)) (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (cos.f64 lambda1))) (+.f64 (*.f64 -1/720 (pow.f64 lambda2 6)) (*.f64 1/24 (pow.f64 lambda2 4)))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))"]],"time":212.384033203125,"type":"simplify"},{"compiler":[[20358,3283]],"time":73.718017578125,"type":"eval"},{"alts":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (cbrt.f64 (cos.f64 lambda2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.18579000946961358],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (/.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (cbrt.f64 2)) (cbrt.f64 4)) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",5.415101503712777],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.18350499970117154],["(atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.868625827685612],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3))))","fresh",0.17340748993272953],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.18035126953688402],["(atan2.f64 (+.f64 (*.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.17731373993272953],["(atan2.f64 (+.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.24961754854338164],["(atan2.f64 (*.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",12.152683767154578],["(atan2.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","fresh",10.973712126228993],["(atan2.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 3) 1/3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",24.07218288354336],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",0.17569249970117154],["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (sin.f64 phi1))) (cbrt.f64 2)) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","fresh",5.226927758480467]],"compiler":[[59,34],[62,39],[52,29],[35,22],[55,32],[68,34],[59,34],[55,32],[37,22],[31,20],[56,33],[59,34],[69,42]],"count":[[360,13]],"kept":[{"done":[0,0],"fresh":[11,6],"new":[348,7],"picked":[1,0]}],"min-error":[0.046875],"time":199.59814453125,"type":"prune"},{"accuracy":[0.17178624970117154],"baseline":[0.17178624970117154],"branch":[["lambda1",0.17178624970117154,1],["lambda2",0.17178624970117154,1],["phi1",0.17178624970117154,1],["phi2",0.17178624970117154,1],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))",0.17178624970117154,1],["(-.f64 lambda1 lambda2)",0.17178624970117154,1],["(-.f64 lambda1 lambda2)",0.17178624970117154,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[28,17],[7,5],[7,5],[1732,319]],"count":[[40,1]],"inputs":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (cbrt.f64 (cos.f64 lambda2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (/.f64 (/.f64 (*.f64 (sin.f64 phi1) (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (cbrt.f64 2)) (cbrt.f64 4)) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) 2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (+.f64 phi2 lambda1)) (cos.f64 (-.f64 phi2 lambda1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) 2)) (sin.f64 phi1))) (cbrt.f64 2)) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) 2)) (cbrt.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 4)) (cbrt.f64 2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2)) (sin.f64 phi1))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) 3) 1/3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) 3) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 phi1) (cbrt.f64 (cos.f64 phi2)))) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (/.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (cbrt.f64 (cos.f64 lambda2)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2)))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3))))","(atan2.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))) 2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3))))","(atan2.f64 (*.f64 (-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2)) (cbrt.f64 (+.f64 (sin.f64 (-.f64 lambda1 (+.f64 lambda2 phi2))) (sin.f64 (-.f64 (+.f64 phi2 lambda1) lambda2))))) (cbrt.f64 2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)) (cos.f64 lambda1))))))","(atan2.f64 (*.f64 (-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1))) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 phi1)) (cos.f64 phi2))))","(atan2.f64 (*.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (neg.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (/.f64 (/.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (sin.f64 (-.f64 phi1 phi2)) (sin.f64 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (cbrt.f64 2))))","(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 lambda2))))","(atan2.f64 (*.f64 (fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) 2)) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2)))) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 phi1) (cos.f64 phi2))))))","(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))"]],"link":["."],"name":["Bearing on a great circle"],"oracle":[56.11371695480917],"outputs":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))"]],"time":100.89892578125,"times":[["lambda1",10.958984375],["lambda2",10.697021484375],["phi1",11.089111328125],["phi2",10.659912109375],["(atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2)))))",8.65380859375],["(-.f64 lambda1 lambda2)",11.011962890625],["(-.f64 lambda1 lambda2)",10.85009765625]],"type":"regimes"},{"compiler":[[52,29]],"inputs":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))"]],"method":["egg-herbie"],"outputs":[["(atan2.f64 (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (sin.f64 (neg.f64 lambda2))))) (-.f64 (*.f64 (cos.f64 phi1) (sin.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))) (cos.f64 lambda2)) (*.f64 (sin.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi1) (sin.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 phi1) (cos.f64 phi2)) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"stop":[["fuel",1]],"time":26.949951171875,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[52,29]],"remove-preprocessing":[[]],"time":16.37890625,"type":"end"}]