[{"compiler":[[22,16]],"method":["search"],"sampling":[[12,0.013638528979303621,0.26984803766193594,0.7165134333587604],[11,0.011690167696545961,0.298099276261922,0.690210556041532],[10,0.0,0.37018864372395544,0.6298113562760446],[9,0.0,0.5611280494342061,0.43887195056579387],[8,0.0,0.7637576228410028,0.2362423771589972],[7,0.0,0.8416920741513092,0.1583079258486908],[6,0.0,0.9663871962477995,0.03361280375220055],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":104.84912109375,"type":"analyze"},{"outcomes":[["body",256,"invalid",801.9814453125,10729],["body",256,"valid",730.9326171875,8256]],"time":1550.600830078125,"type":"sample"},{"compiler":[[21,15]],"inputs":[["0","1","2","3","4"],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 z y)) (log.f64 x)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 t y)) (log.f64 z)) x) (*.f64 (-.f64 a 1/2) (log.f64 x)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 a y)) (log.f64 z)) t) (*.f64 (-.f64 x 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x z)) (log.f64 y)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x t)) (log.f64 z)) y) (*.f64 (-.f64 a 1/2) (log.f64 y)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x a)) (log.f64 z)) t) (*.f64 (-.f64 y 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 t)) z) (*.f64 (-.f64 a 1/2) (log.f64 z)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 a)) t) (*.f64 (-.f64 z 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) a) (*.f64 (-.f64 t 1/2) (log.f64 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 z y)) (log.f64 x)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 z y) x)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 t y)) (log.f64 z)) x) (*.f64 (-.f64 a 1/2) (log.f64 x)))","(fma.f64 (log.f64 x) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 t y) z)) x))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 a y)) (log.f64 z)) t) (*.f64 (-.f64 x 1/2) (log.f64 t)))","(fma.f64 (+.f64 x -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 a y) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x z)) (log.f64 y)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x z) y)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x t)) (log.f64 z)) y) (*.f64 (-.f64 a 1/2) (log.f64 y)))","(fma.f64 (log.f64 y) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x t) z)) y))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x a)) (log.f64 z)) t) (*.f64 (-.f64 y 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 y -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x a) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 t)) z) (*.f64 (-.f64 a 1/2) (log.f64 z)))","(fma.f64 (log.f64 z) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) t)) z))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 a)) t) (*.f64 (-.f64 z 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 z -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) a)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) a) (*.f64 (-.f64 t 1/2) (log.f64 a)))","(fma.f64 (log.f64 a) (+.f64 t -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) a))"]],"symmetry":[[]],"time":88.2060546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))"]],"time":22.77099609375,"type":"simplify"},{"compiler":[[35,21]],"time":0.465087890625,"type":"eval"},{"alts":[["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","next",0.3008414650483855],["(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",14.42340748993273]],"compiler":[[21,15],[19,13],[21,15],[19,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.23981373993272953],"time":1.56201171875,"type":"prune"},{"compiler":[[63,21]],"locations":[["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)",0.00390625,true],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))",0.10700123993272953,true],["(*.f64 (-.f64 a 1/2) (log.f64 t))",0.1796875,true],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",0.5264528740618838,true]],"time":13.93603515625,"type":"localize"},{"count":[[4,164]],"series":[["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","t","-inf",0.166015625],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","t","inf",0.182861328125],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","t","0",0.179931640625],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","z","-inf",0.21484375],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","z","inf",0.195068359375],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","z","0",0.206787109375],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","y","-inf",0.237060546875],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","y","inf",0.245849609375],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","y","0",0.220947265625],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","x","-inf",0.25390625],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","x","inf",0.22509765625],["(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)","x","0",0.2421875],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","a","-inf",0.215087890625],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","a","inf",0.239990234375],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","a","0",1.824951171875],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","t","-inf",0.2900390625],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","t","inf",0.261962890625],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","t","0",2.651123046875],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","z","-inf",0.2568359375],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","z","inf",0.27392578125],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","z","0",13.30908203125],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","y","-inf",0.305908203125],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","y","inf",0.66796875],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","y","0",0.304931640625],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","x","-inf",0.30712890625],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","x","inf",0.31201171875],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","x","0",0.3349609375],["(*.f64 (-.f64 a 1/2) (log.f64 t))","t","-inf",4.47705078125],["(*.f64 (-.f64 a 1/2) (log.f64 t))","t","inf",4.368896484375],["(*.f64 (-.f64 a 1/2) (log.f64 t))","t","0",5.784912109375],["(*.f64 (-.f64 a 1/2) (log.f64 t))","a","-inf",0.343017578125],["(*.f64 (-.f64 a 1/2) (log.f64 t))","a","inf",0.31591796875],["(*.f64 (-.f64 a 1/2) (log.f64 t))","a","0",1.828125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","z","-inf",6.376953125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","z","inf",4.31689453125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","z","0",25.028076171875],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","y","-inf",0.385986328125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","y","inf",0.362060546875],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","y","0",0.39208984375],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","x","-inf",0.389892578125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","x","inf",0.432861328125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","x","0",0.60205078125]],"time":80.266845703125,"type":"series"},{"count":[[4,204]],"inputs":[["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (log.f64 (*.f64 (+.f64 x y) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (*.f64 (+.f64 x y) z)) 0) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 0 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log.f64 (*.f64 (+.f64 x y) z))) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 (+.f64 x y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (*.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (log.f64 (+.f64 x y)))))) (+.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (*.f64 (+.f64 x y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (log.f64 (+.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) -1/2) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 t)) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (log.f64 t) a)) (*.f64 1 (*.f64 (log.f64 t) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 a (log.f64 t))) (*.f64 1 (*.f64 -1/2 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 0 (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 a -1/2) (log.f64 t))) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log.f64 t) a) 1) (*.f64 (*.f64 (log.f64 t) -1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (log.f64 t)) 1) (*.f64 (*.f64 -1/2 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 1/2 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a -1/2) (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 t) (+.f64 a -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (cbrt.f64 (+.f64 a -1/2))) (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 t)) (-.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/2 a) (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (/.f64 1 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 t) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (/.f64 (+.f64 (pow.f64 a 3) -1/8) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/8) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (/.f64 (log.f64 t) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/8) 1) (/.f64 (log.f64 t) (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8))) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 t) (-.f64 1/8 (pow.f64 a 3))) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (+.f64 (*.f64 a a) (*.f64 -1/2 (-.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) 1) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/8 (pow.f64 a 3)) (log.f64 t)) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) 1) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8))) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (+.f64 x y))) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) t) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 (log.f64 t) a)) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 a (log.f64 t))) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 z)) (-.f64 (log.f64 (+.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (+.f64 (*.f64 (log.f64 t) -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (+.f64 (*.f64 -1/2 (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (-.f64 (*.f64 (log.f64 t) -1/2) (-.f64 t (log.f64 (*.f64 (+.f64 x y) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (-.f64 (*.f64 -1/2 (log.f64 t)) (-.f64 t (log.f64 (*.f64 (+.f64 x y) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 z))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 (+.f64 x y)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 0) (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (+.f64 x y))) 1) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0) (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (+.f64 x y))) (-.f64 t (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (*.f64 (+.f64 x y) z)) (+.f64 t (*.f64 (-.f64 1/2 a) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 (-.f64 1/2 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (-.f64 1/2 a) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 2)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (*.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (+.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 2)) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (+.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (-.f64 1/2 a) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (-.f64 1/2 a) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (-.f64 1/2 a) (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 2)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (*.f64 (+.f64 x y) z)) 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 t) (cbrt.f64 (+.f64 a -1/2))) (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) t) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (+.f64 x y)) t) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 t (log.f64 (+.f64 x y)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 0) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) (*.f64 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 (+.f64 x y)) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (*.f64 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 z) (-.f64 t (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 x y)) (-.f64 t (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 t) (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 2)) (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))) (pow.f64 (cbrt.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (+.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 t)))) (-.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 t (log.f64 (*.f64 (+.f64 x y) z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 (+.f64 x y) z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 2)) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (*.f64 (+.f64 x y) z)) 1 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))))"]],"rules":[["egg-rr",51],["egg-rr",77],["egg-rr",49],["egg-rr",27]],"time":46.88720703125,"type":"rewrite"},{"count":[[368,357]],"inputs":[["(+.f64 (log.f64 z) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))","(+.f64 (log.f64 z) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(*.f64 -1/2 (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (log.f64 z) (log.f64 y))","(log.f64 (*.f64 z y))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))","(+.f64 (/.f64 x y) (log.f64 (*.f64 z y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))","(log.f64 (*.f64 z x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))","(+.f64 (/.f64 y x) (log.f64 (*.f64 z x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))","(-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (-.f64 (/.f64 y x) (neg.f64 (log.f64 (neg.f64 x)))) (log.f64 (neg.f64 z)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 (log.f64 z) (log.f64 x))","(log.f64 (*.f64 z x))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (/.f64 y x) (log.f64 (*.f64 z x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))","(+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))","(log.f64 (*.f64 z y))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (/.f64 x y) (log.f64 (*.f64 z y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))","(-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))","(-.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))","(-.f64 (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))","(*.f64 -1/2 (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (neg.f64 z)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) t)","(-.f64 (log.f64 (*.f64 z y)) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (+.f64 (/.f64 x y) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)) t)","(-.f64 (log.f64 (*.f64 z x)) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (+.f64 (/.f64 y x) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))) (-.f64 (/.f64 y x) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))) t)","(-.f64 (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(+.f64 (-.f64 (/.f64 y x) (neg.f64 (log.f64 (neg.f64 x)))) (-.f64 (log.f64 (neg.f64 z)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(+.f64 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) (-.f64 (/.f64 y x) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (/.f64 y x) t))","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) t)","(-.f64 (log.f64 (*.f64 z x)) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (+.f64 (/.f64 y x) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))) t)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))) (-.f64 (/.f64 y x) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(-.f64 (log.f64 (*.f64 z y)) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (/.f64 x y) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))) t)","(-.f64 (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (-.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))) t)","(-.f64 (-.f64 (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) t)","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))) t)","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))) t)","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(log.f64 (*.f64 z (+.f64 y x)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (log.f64 (*.f64 z (+.f64 y x))) t)"]],"time":552.97998046875,"type":"simplify"},{"compiler":[[8004,3441]],"time":67.15283203125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z)))) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","fresh",0.39727099237745167],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","next",0.28470379109026733],["(fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.39483131092598],["(fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.366230029305328],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))","fresh",0.4001112931067666],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2))))","fresh",0.41868507241209263],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3)))","fresh",0.8980652929242592],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3))","fresh",0.5137766334272276],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","fresh",0.2863250313218253],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))","fresh",21.467852744353713]],"compiler":[[47,27],[21,15],[27,20],[30,21],[28,20],[28,20],[35,26],[24,18],[24,16],[40,31],[47,27],[21,15],[27,20],[30,21],[28,20],[28,20],[35,26],[24,18],[24,16],[40,31]],"count":[[359,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[357,10],"picked":[1,0]}],"min-error":[0.04296875],"time":139.0009765625,"type":"prune"},{"compiler":[[62,25]],"locations":[["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))",0.10309498993272954,true],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))",0.14453125,true],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))",0.16692252900649762,true]],"time":15.091064453125,"type":"localize"},{"count":[[3,120]],"series":[["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","y","-inf",0.257080078125],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","y","inf",0.2470703125],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","y","0",0.2451171875],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","x","-inf",0.260009765625],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","x","inf",0.27001953125],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","x","0",0.23583984375],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","t","-inf",0.26708984375],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","t","inf",0.531982421875],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","t","0",0.208984375],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","a","-inf",0.19580078125],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","a","inf",0.212158203125],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","a","0",0.211181640625],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","z","-inf",0.23193359375],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","z","inf",0.2099609375],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","z","0",0.216796875],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","t","-inf",0.166015625],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","t","inf",0.179931640625],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","t","0",0.156982421875],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","a","-inf",0.156982421875],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","a","inf",0.182861328125],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","a","0",0.1669921875],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","t","-inf",0.242919921875],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","t","inf",0.296875],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","t","0",0.213134765625],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","a","-inf",0.28515625],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","a","inf",0.217041015625],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","a","0",0.212158203125],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","z","-inf",0.25390625],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","z","inf",0.220947265625],["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","z","0",0.296142578125]],"time":7.506103515625,"type":"series"},{"count":[[3,146]],"inputs":[["(+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 0 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 t) (log.f64 z)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 (+.f64 (neg.f64 t) (log.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (cbrt.f64 (*.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (+.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (cbrt.f64 (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (cbrt.f64 (*.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (+.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1 (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) (+.f64 a -1/2) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 z)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (cbrt.f64 (log.f64 z)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 0) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 t (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 t (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 t) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (*.f64 t t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (neg.f64 t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) 1 (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (neg.f64 (cbrt.f64 (*.f64 t t))) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t -1 (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 t (*.f64 (+.f64 a -1/2) (log.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0) (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (*.f64 z (+.f64 x y))) 1) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 0 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (neg.f64 t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (*.f64 (+.f64 a -1/2) (log.f64 t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 (*.f64 z (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 z (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (+.f64 (neg.f64 t) (log.f64 z)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (*.f64 (log.f64 (*.f64 z (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 (*.f64 z (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (*.f64 (+.f64 a -1/2) (log.f64 t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (cbrt.f64 (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (+.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (cbrt.f64 (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (cbrt.f64 (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1 (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2)) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 z)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (cbrt.f64 (log.f64 z)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2)) (cbrt.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1 (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) 2) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (+.f64 x y)) 1 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (cbrt.f64 (log.f64 (+.f64 x y))) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 (+.f64 x y))) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))))"]],"rules":[["egg-rr",62],["egg-rr",37],["egg-rr",47]],"time":36.85498046875,"type":"rewrite"},{"count":[[266,226]],"inputs":[["(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(-.f64 (*.f64 -1/2 (log.f64 t)) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(*.f64 (-.f64 a 1/2) (log.f64 t))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t))) t)","(+.f64 (log.f64 z) (fma.f64 -1/2 (log.f64 t) (neg.f64 t)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 z)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 z) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 z) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 z) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(-.f64 (*.f64 -1/2 (log.f64 t)) t)","(fma.f64 -1/2 (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(-.f64 (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))) t)","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (*.f64 -1 t))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(-.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)) t)","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(-.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)) t)","(+.f64 (*.f64 -1 t) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(-.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t)))) t)","(+.f64 (log.f64 (*.f64 z (+.f64 y x))) (fma.f64 -1/2 (log.f64 t) (neg.f64 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 z (+.f64 y x))) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (neg.f64 z)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))))) (neg.f64 (log.f64 (neg.f64 y)))) t)"]],"time":396.118896484375,"type":"simplify"},{"compiler":[[4834,2065]],"time":41.926025390625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.39483131092598],["(fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.366230029305328],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","fresh",0.2921525824793631],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3))","fresh",0.5137766334272276],["(+.f64 (-.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z)))) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","fresh",0.39727099237745167],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))","fresh",0.4001112931067666],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (neg.f64 t))) (log.f64 (+.f64 x y)))","fresh",0.39769133993247746],["(+.f64 (fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (+.f64 (neg.f64 t) (log.f64 z))) (log.f64 (+.f64 x y)))","fresh",0.5151601580127433],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3)))","fresh",0.8980652929242592],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","fresh",0.28079754109026733],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","next",0.2737375609259798],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))","fresh",21.467852744353713]],"compiler":[[27,20],[30,21],[27,19],[24,18],[47,27],[28,20],[28,20],[32,23],[35,26],[22,16],[27,19],[40,31],[27,20],[30,21],[27,19],[24,18],[47,27],[28,20],[28,20],[32,23],[35,26],[22,16],[27,19],[40,31]],"count":[[236,12]],"kept":[{"done":[0,0],"fresh":[9,7],"new":[226,5],"picked":[1,0]}],"min-error":[0.03125],"time":77.35498046875,"type":"prune"},{"compiler":[[83,35]],"locations":[["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))",0.12891724615471506,true],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))",0.13073880085870934,true],["(fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))",0.14453125,false],["(pow.f64 (log.f64 z) 2)",0.5123825195368841,true]],"time":21.927978515625,"type":"localize"},{"count":[[3,116]],"series":[["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","y","-inf",0.291015625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","y","inf",0.720947265625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","y","0",0.301025390625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","x","-inf",0.305908203125],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","x","inf",0.363037109375],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","x","0",0.258056640625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","t","-inf",0.23681640625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","t","inf",0.213134765625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","t","0",0.200927734375],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","a","-inf",0.215087890625],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","a","inf",1.315185546875],["(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))","a","0",0.26416015625],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","y","-inf",0.4169921875],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","y","inf",0.343994140625],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","y","0",0.377197265625],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","x","-inf",0.391845703125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","x","inf",0.344970703125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","x","0",0.368896484375],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","t","-inf",0.332763671875],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","t","inf",0.286865234375],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","t","0",0.9580078125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","a","-inf",0.296875],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","a","inf",0.23095703125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","a","0",0.988037109375],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","z","-inf",2.216064453125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","z","inf",2.14892578125],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","z","0",2.697021484375],["(pow.f64 (log.f64 z) 2)","z","-inf",0.44384765625],["(pow.f64 (log.f64 z) 2)","z","inf",0.407958984375],["(pow.f64 (log.f64 z) 2)","z","0",0.485107421875]],"time":19.199951171875,"type":"series"},{"count":[[3,133]],"inputs":[["(pow.f64 (log.f64 z) 2)","(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 z) 2) 0) (pow.f64 (log.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 z) 2) (*.f64 (pow.f64 (log.f64 z) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (log.f64 z) 2)) (pow.f64 (log.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 z) 2) (*.f64 0 (pow.f64 (log.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 z) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (log.f64 z) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 z)) (neg.f64 (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 z) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) (+.f64 3 2))) (pow.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (log.f64 z)) 1) (*.f64 (neg.f64 (log.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 z) -1) (*.f64 (log.f64 z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (log.f64 z)) -1) (*.f64 (neg.f64 (log.f64 z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (log.f64 z))) (*.f64 1 (neg.f64 (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 z) 4)) (pow.f64 (log.f64 z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) (+.f64 2 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (log.f64 z) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) 4) (cbrt.f64 (pow.f64 (log.f64 z) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 z) 2/3) (cbrt.f64 (pow.f64 (log.f64 z) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log.f64 z) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 z)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 z) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (log.f64 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (log.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (log.f64 z) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 z) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (*.f64 z (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0) (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (*.f64 0 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (*.f64 z (+.f64 x y))) 1) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (*.f64 (+.f64 a -1/2) (log.f64 t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (neg.f64 t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 (neg.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (*.f64 (+.f64 a -1/2) (log.f64 t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3) (-.f64 (pow.f64 (log.f64 z) 2/3) (*.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (cbrt.f64 (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 z) 2/3) (-.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3) (*.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (+.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 2/3) (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (log.f64 z) 2/3) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 z)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) (pow.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2/3)) 4) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 z))) 4) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 z) 2/3) (cbrt.f64 (log.f64 z)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3) (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 1 (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (log.f64 z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 0) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (*.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) (*.f64 0 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 t (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 2/3) (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 2/3) (-.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2/3) (cbrt.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2/3) (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2/3) (cbrt.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))) (+.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (cbrt.f64 (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2/3) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (pow.f64 (log.f64 (+.f64 x y)) 2/3) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) (+.f64 a -1/2) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (pow.f64 (+.f64 a -1/2) 2/3) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log.f64 (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 (+.f64 x y)) 2/3) (cbrt.f64 (log.f64 (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (+.f64 x y)) 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 2/3) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) 1 (log.f64 (+.f64 x y)))))))"]],"rules":[["egg-rr",49],["egg-rr",48],["egg-rr",36]],"time":38.691162109375,"type":"rewrite"},{"count":[[249,243]],"inputs":[["(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (*.f64 -1 (log.f64 (/.f64 1 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (log.f64 (/.f64 1 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (log.f64 (/.f64 1 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (log.f64 -1)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))) t)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 z) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 z) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 z) 2)","(pow.f64 (log.f64 (/.f64 1 z)) 2)","(pow.f64 (log.f64 z) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) 2)","(pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))) 2)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (log.f64 (/.f64 1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z))))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 1 1/3) (log.f64 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z (+.f64 y x)))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))) t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(-.f64 (+.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (*.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (log.f64 (*.f64 z x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (-.f64 (/.f64 y x) (neg.f64 (log.f64 (neg.f64 x)))) (log.f64 (neg.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (log.f64 (*.f64 z x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (log.f64 x)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (*.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (log.f64 z)) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (neg.f64 z)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 (pow.f64 1 1/3) (log.f64 z))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 z))))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 (pow.f64 1 1/3) (log.f64 z)))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 z)))))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t))) t)","(+.f64 (*.f64 -1/2 (log.f64 t)) (-.f64 (log.f64 (+.f64 y x)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 (+.f64 y x)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (log.f64 (+.f64 y x))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y x))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 y)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (log.f64 y))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 y)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (*.f64 -1 (log.f64 (/.f64 1 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (log.f64 (/.f64 1 x)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (log.f64 (/.f64 1 x))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 x)) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (log.f64 x))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (log.f64 x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (log.f64 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (log.f64 -1)))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 -1))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))))) (neg.f64 (log.f64 (neg.f64 y)))) t)"]],"time":407.260986328125,"type":"simplify"},{"compiler":[[7631,3530]],"time":70.160888671875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z)))) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","fresh",0.39727099237745167],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y)))))","fresh",34.651756347684426],["(fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.39483131092598],["(fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.366230029305328],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","fresh",0.2921525824793631],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3))","fresh",0.5137766334272276],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (neg.f64 t)) (log.f64 (+.f64 x y))))","fresh",0.5056102172210523],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))","fresh",21.467852744353713],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))","fresh",0.4001112931067666],["(+.f64 (+.f64 (log.f64 z) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (neg.f64 t))) (log.f64 (+.f64 x y)))","fresh",0.39769133993247746],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3)))","fresh",0.8980652929242592],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","next",0.28079754109026733]],"compiler":[[47,27],[33,23],[27,20],[30,21],[27,19],[24,18],[38,27],[40,31],[28,20],[28,20],[35,26],[22,16],[47,27],[33,23],[27,20],[30,21],[27,19],[24,18],[38,27],[40,31],[28,20],[28,20],[35,26],[22,16]],"count":[[301,12]],"kept":[{"done":[0,0],"fresh":[11,10],"new":[289,2],"picked":[1,0]}],"min-error":[0.0234375],"time":101.47216796875,"type":"prune"},{"compiler":[[73,31]],"locations":[["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))",0.01171875,true],["(*.f64 (+.f64 a -1/2) (log.f64 t))",0.1796875,true],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))",0.24319791665937476,true],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))",0.2746762887749396,true]],"time":16.44189453125,"type":"localize"},{"count":[[4,180]],"series":[["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","t","-inf",0.2041015625],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","t","inf",0.221923828125],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","t","0",0.202880859375],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","a","-inf",0.215087890625],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","a","inf",0.199951171875],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","a","0",0.22900390625],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","z","-inf",0.197998046875],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","z","inf",0.22607421875],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","z","0",0.2041015625],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","y","-inf",0.27294921875],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","y","inf",0.214111328125],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","y","0",0.22802734375],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","x","-inf",0.223876953125],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","x","inf",0.23193359375],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","x","0",0.22314453125],["(*.f64 (+.f64 a -1/2) (log.f64 t))","t","-inf",0.173095703125],["(*.f64 (+.f64 a -1/2) (log.f64 t))","t","inf",0.150146484375],["(*.f64 (+.f64 a -1/2) (log.f64 t))","t","0",0.14306640625],["(*.f64 (+.f64 a -1/2) (log.f64 t))","a","-inf",0.16796875],["(*.f64 (+.f64 a -1/2) (log.f64 t))","a","inf",0.151123046875],["(*.f64 (+.f64 a -1/2) (log.f64 t))","a","0",0.15283203125],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","t","-inf",0.22705078125],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","t","inf",0.196044921875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","t","0",3.4580078125],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","a","-inf",0.193115234375],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","a","inf",0.184814453125],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","a","0",0.20703125],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","z","-inf",0.196044921875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","z","inf",0.2138671875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","z","0",0.176025390625],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","y","-inf",0.27294921875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","y","inf",0.23388671875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","y","0",0.242919921875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","x","-inf",0.248046875],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","x","inf",0.255859375],["(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","x","0",0.23095703125],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","t","-inf",0.2080078125],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","t","inf",0.18994140625],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","t","0",5.8671875],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","a","-inf",0.193115234375],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","a","inf",0.200927734375],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","a","0",0.203857421875],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","z","-inf",0.197998046875],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","z","inf",0.220947265625],["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","z","0",0.22509765625]],"time":18.9990234375,"type":"series"},{"count":[[4,223]],"inputs":[["(+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))","(+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t))))","(*.f64 (+.f64 a -1/2) (log.f64 t))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 (log.f64 t) -1/2)) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 (log.f64 t) a)) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t))) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 t)) (+.f64 (*.f64 a (log.f64 t)) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (+.f64 (*.f64 (log.f64 t) -1/2) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) -1/2) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (+.f64 (*.f64 -1/2 (log.f64 t)) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (log.f64 z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 0) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (cbrt.f64 (*.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (+.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (cbrt.f64 (*.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (+.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (-.f64 0 (*.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0))) (+.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) (+.f64 a -1/2) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 a (log.f64 t))) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (log.f64 t) -1/2)) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (log.f64 t) a)) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 -1/2 (log.f64 t))) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 t)) (+.f64 (*.f64 a (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (+.f64 (*.f64 (log.f64 t) -1/2) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) -1/2) (+.f64 (*.f64 (log.f64 t) a) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (+.f64 (*.f64 -1/2 (log.f64 t)) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (+.f64 (log.f64 (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 (log.f64 z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (-.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (-.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (-.f64 (log.f64 z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (*.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) 1) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (*.f64 0 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (-.f64 0 (*.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))) (+.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (cbrt.f64 (*.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (cbrt.f64 (*.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (+.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (cbrt.f64 (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (+.f64 0 (*.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))) (-.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) a) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) -1/2) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 t)) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 -1/2 (log.f64 t))) (*.f64 1 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (log.f64 t) a)) (*.f64 1 (*.f64 (log.f64 t) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (log.f64 t) -1/2)) (*.f64 1 (*.f64 (log.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 a (log.f64 t))) (*.f64 1 (*.f64 -1/2 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 0) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 (log.f64 t)) 1) (*.f64 (*.f64 a (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log.f64 t) a) 1) (*.f64 (*.f64 (log.f64 t) -1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log.f64 t) -1/2) 1) (*.f64 (*.f64 (log.f64 t) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (log.f64 t)) 1) (*.f64 (*.f64 -1/2 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (*.f64 0 (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 a -1/2) (log.f64 t))) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a -1/2) (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 t) (+.f64 a -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/8) 1) (/.f64 (log.f64 t) (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 a 3) -1/8) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (/.f64 (log.f64 t) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 t) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (/.f64 (+.f64 (pow.f64 a 3) -1/8) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (cbrt.f64 (+.f64 a -1/2))) (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (log.f64 t) (neg.f64 (+.f64 a -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (/.f64 1 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 t) (neg.f64 (+.f64 (pow.f64 a 3) -1/8))) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8))) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 a 3) -1/8)) (log.f64 t)) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) 1) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8)) 1) (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (log.f64 t) (+.f64 (pow.f64 a 3) -1/8))) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (log.f64 t) (neg.f64 (+.f64 a -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 x y)) (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (+.f64 x y)) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)) (log.f64 (*.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 a (log.f64 t))) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (log.f64 t) -1/2)) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 (log.f64 t) a)) (*.f64 (log.f64 t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) (*.f64 -1/2 (log.f64 t))) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 t) (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) t) (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (-.f64 (log.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (log.f64 (+.f64 x y)) t) (*.f64 (+.f64 a -1/2) (log.f64 t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 (log.f64 (+.f64 x y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 x y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (-.f64 (+.f64 (log.f64 (+.f64 x y)) (*.f64 (+.f64 a -1/2) (log.f64 t))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) (*.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 0) (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (*.f64 (-.f64 (log.f64 (+.f64 x y)) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (log.f64 (+.f64 x y)) t) 1) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (neg.f64 t) (log.f64 (*.f64 (+.f64 x y) z))) 1) (*.f64 (+.f64 a -1/2) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) (*.f64 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))) (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) (-.f64 t (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (-.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (*.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (neg.f64 t))))) (+.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 t t)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (cbrt.f64 (*.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (neg.f64 t))))) (+.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (+.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 t)))) (-.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 2)) (cbrt.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 t (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (*.f64 t t)) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 t) (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 1 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (+.f64 a -1/2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) 2)) (cbrt.f64 (+.f64 (log.f64 (+.f64 x y)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)))) (neg.f64 t))))))"]],"rules":[["egg-rr",72],["egg-rr",48],["egg-rr",62],["egg-rr",41]],"time":48.0380859375,"type":"rewrite"},{"count":[[403,343]],"inputs":[["(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t)))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(*.f64 -1/2 (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (log.f64 z) (*.f64 -1/2 (log.f64 t)))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (log.f64 z))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))","(+.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) (/.f64 y x))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (neg.f64 z)))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))))) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z)))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t))))","(+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 -1/2 (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))))","(+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(*.f64 -1/2 (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (-.f64 a 1/2) (log.f64 t))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2)))","(*.f64 (log.f64 t) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2))","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 y))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 x)))))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x)))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z x))) (/.f64 y x)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (log.f64 (*.f64 z x)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 z y))) (/.f64 x y)) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (log.f64 (*.f64 z y)))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (neg.f64 z)) (neg.f64 (log.f64 (neg.f64 y))))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (/.f64 x y) (log.f64 (neg.f64 z)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2)))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))) t)","(-.f64 (-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (/.f64 x y) (log.f64 (neg.f64 z))) (*.f64 -1/2 (pow.f64 (/.f64 x y) 2))))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x)))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (-.f64 (log.f64 (*.f64 -1 (+.f64 y x))) (neg.f64 (log.f64 (neg.f64 z))))) t)","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1/2 (log.f64 t)))) t)","(-.f64 (+.f64 (log.f64 (*.f64 (+.f64 y x) z)) (*.f64 -1/2 (log.f64 t))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z)))","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(+.f64 (*.f64 (-.f64 a 1/2) (log.f64 t)) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 a 1/2))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (*.f64 (+.f64 y x) z))) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) z)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) z)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))","(+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) (-.f64 a 1/2)))))","(+.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) z)) t) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) (+.f64 a -1/2)))"]],"time":600.0,"type":"simplify"},{"compiler":[[7870,3458]],"time":70.490966796875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z)))) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","fresh",0.39727099237745167],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (neg.f64 t))","fresh",21.445523810627154],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y)))))","fresh",34.651756347684426],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))) (neg.f64 t))","fresh",0.37130506062715135],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3)))","fresh",0.8980652929242592],["(fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","fresh",27.366230029305328],["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (*.f64 (log.f64 t) (cbrt.f64 (+.f64 a -1/2))) (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2))))) (neg.f64 t))","fresh",17.482965070395593],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3))","fresh",0.5137766334272276],["(+.f64 (fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (log.f64 (+.f64 x y))) (neg.f64 t))","fresh",17.724947619536636],["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (neg.f64 t)) (log.f64 (+.f64 x y))))","fresh",0.5056102172210523]],"compiler":[[47,27],[41,32],[33,23],[29,21],[35,26],[30,21],[30,23],[24,18],[33,22],[38,27]],"count":[[355,10]],"kept":[{"done":[0,0],"fresh":[11,6],"new":[343,4],"picked":[1,0]}],"min-error":[0.0234375],"time":137.158935546875,"type":"prune"},{"accuracy":[0.2737375609259798],"baseline":[0.2737375609259798],"branch":[["x",0.2737375609259798,1],["y",0.2737375609259798,1],["z",0.2737375609259798,1],["t",0.2737375609259798,1],["a",0.2737375609259798,1],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))",0.2737375609259798,1],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",0.2737375609259798,1],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",0.2737375609259798,1],["(log.f64 (+.f64 x y))",0.2737375609259798,1],["(+.f64 x y)",0.2737375609259798,1],["(log.f64 z)",0.2737375609259798,1],["(-.f64 a 1/2)",0.2737375609259798,1],["(-.f64 a 1/2)",0.2737375609259798,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[21,15],[12,9],[12,9],[9,7],[8,6],[7,6],[8,7],[8,7],[574,262]],"count":[[23,1]],"inputs":[["(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))) (neg.f64 t))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))) (neg.f64 t))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (*.f64 (log.f64 t) (cbrt.f64 (+.f64 a -1/2))) (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2))))) (neg.f64 t))","(+.f64 (fma.f64 (cbrt.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 z)) 2)) (log.f64 (+.f64 x y))) (neg.f64 t))","(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3) (+.f64 (neg.f64 t) (log.f64 (+.f64 x y)))))","(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (neg.f64 t)) (log.f64 (+.f64 x y))))","(+.f64 (fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2)) (neg.f64 t))) (log.f64 (+.f64 x y)))","(+.f64 (fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 2) (+.f64 (neg.f64 t) (log.f64 z))) (log.f64 (+.f64 x y)))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (+.f64 (log.f64 z) (*.f64 (+.f64 a -1/2) (log.f64 t)))) (neg.f64 t))","(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","(+.f64 (-.f64 (*.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (log.f64 z) 2)) (*.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z))))) (+.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (cbrt.f64 (log.f64 z)))) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t))) (log.f64 (+.f64 x y)))","(fma.f64 (cbrt.f64 (+.f64 a -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","(fma.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (+.f64 a -1/2))))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (*.f64 (+.f64 a -1/2) (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2))))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)))) 2) 3)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (pow.f64 (cbrt.f64 (*.f64 (+.f64 a -1/2) (log.f64 t))) 3))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1/2 (log.f64 t))))) t)","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (/.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 a 3) -1/8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 a -1/2) 2)) (log.f64 t))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 a 1/2))))))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) t))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))"]],"link":["."],"name":["Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2"],"oracle":[48.285820019536885],"outputs":[["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))"]],"time":120.986083984375,"times":[["x",7.919189453125],["y",7.949951171875],["z",7.975830078125],["t",8.135009765625],["a",15.073974609375],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))",8.68701171875],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",8.125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",8.469970703125],["(log.f64 (+.f64 x y))",8.244140625],["(+.f64 x y)",8.56298828125],["(log.f64 z)",8.364990234375],["(-.f64 a 1/2)",5.659912109375],["(-.f64 a 1/2)",5.22314453125]],"type":"regimes"},{"compiler":[[27,19]],"inputs":[["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (cbrt.f64 (log.f64 z)) (cbrt.f64 (pow.f64 (log.f64 z) 2)) (+.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (*.f64 z (+.f64 x y))) (fma.f64 (+.f64 a -1/2) (log.f64 t) (neg.f64 t)))"]],"stop":[["fuel",1]],"time":21.843017578125,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[27,19]],"remove-preprocessing":[[]],"time":13.720947265625,"type":"end"}]