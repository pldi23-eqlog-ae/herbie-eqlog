[{"compiler":[[22,16]],"method":["search"],"sampling":[[12,0.5357092508347705,0.0260585657088086,0.4382321834564209],[11,0.5272059293929487,0.034561887150630355,0.4382321834564209],[10,0.5101992865093052,0.05156853003427386,0.4382321834564209],[9,0.49374124500900507,0.06802657153457403,0.4382321834564209],[8,0.46082516200840473,0.10094265453517437,0.4382321834564209],[7,0.43010348454117775,0.13166433200240135,0.4382321834564209],[6,0.3686601296067238,0.19310768693685532,0.4382321834564209],[5,0.31599439680576324,0.24577341973781586,0.4382321834564209],[4,0.21066293120384216,0.35110488533973694,0.4382321834564209],[3,0.14044195413589478,0.4213258624076843,0.4382321834564209],[2,0.0,0.5617678165435791,0.4382321834564209],[1,0.0,0.5617678165435791,0.4382321834564209],[0,0.0,0.5617678165435791,0.4382321834564209]],"time":19.7431640625,"type":"analyze"},{"outcomes":[["body",512,"valid",50.71240234375,611],["body",1024,"valid",127.349365234375,1050],["body",2048,"valid",16.41748046875,102],["body",256,"valid",297.603759765625,6493]],"time":500.766845703125,"type":"sample"},{"compiler":[[15,11]],"inputs":[["0","1"],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(/.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 beta alpha) 2)) 1) 2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(-.f64 1/2 (/.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) 2))","(/.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 beta alpha) 2)) 1) 2)","(-.f64 1/2 (/.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 2))"]],"symmetry":[[]],"time":63.2470703125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","(*.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1) -1/2)"]],"time":21.64404296875,"type":"simplify"},{"compiler":[[28,19]],"time":0.43310546875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","next",15.652698386118857]],"compiler":[[15,11],[15,11]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[15.652698386118857],"time":0.894775390625,"type":"prune"},{"compiler":[[50,23]],"locations":[["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",0.04296875,true],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)",2.3495377874051053,true]],"time":9.05322265625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","-inf",0.346923828125],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","inf",0.497802734375],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","0",0.376953125],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","-inf",0.234130859375],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","inf",0.3388671875],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","0",0.570068359375],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","alpha","-inf",0.5791015625],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","alpha","inf",0.6728515625],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","alpha","0",0.717041015625],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","beta","-inf",0.5029296875],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","beta","inf",0.588134765625],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","beta","0",0.712890625]],"time":6.370849609375,"type":"series"},{"count":[[2,152]],"inputs":[["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)","(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (+.f64 (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 0) (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) (*.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)) (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) (*.f64 0 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3)) -1) (/.f64 1 (+.f64 (+.f64 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))) (+.f64 1 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (-.f64 1 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))) (+.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 2)) (cbrt.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))))) (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 3) 1) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (-.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 6) 1) (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1) (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3)) -1) (+.f64 (+.f64 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 2))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3)) -1) 1) (+.f64 (+.f64 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (+.f64 alpha beta) 2) (-.f64 beta alpha)) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 -2 (+.f64 alpha beta)) (-.f64 alpha beta)) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2) (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha)))) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha))) 1) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1) (+.f64 (+.f64 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (neg.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) (+.f64 1 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1) (/.f64 beta (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (/.f64 (*.f64 beta beta) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 beta) (/.f64 (cbrt.f64 (*.f64 beta beta)) (+.f64 (+.f64 alpha beta) 2)) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) 2)) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 beta (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 beta alpha) (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 beta alpha)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (-.f64 beta alpha) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 alpha beta) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (-.f64 beta alpha) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (neg.f64 (+.f64 (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)) -1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))) (/.f64 beta (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (neg.f64 alpha)) (/.f64 beta (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (neg.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 0) (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) (*.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) 0) (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) (*.f64 0 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2))) (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 beta (+.f64 (+.f64 alpha beta) 2)) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (/.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))) (/.f64 beta (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -2 (+.f64 alpha beta))) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 (+.f64 alpha beta) 2)) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 beta alpha)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 alpha beta) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 beta alpha) (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (-.f64 beta alpha) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta))) (-.f64 alpha beta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha))) (/.f64 1 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha))) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))) (-.f64 beta alpha)) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (-.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (cbrt.f64 (-.f64 beta alpha))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2)) (cbrt.f64 (-.f64 alpha beta))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha))) 1) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 beta alpha)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 alpha beta)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 2))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 alpha beta) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha))) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 beta alpha) -1) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 beta) (-.f64 -2 (+.f64 alpha beta))) (*.f64 (-.f64 -2 (+.f64 alpha beta)) (neg.f64 alpha))) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 beta) (+.f64 (+.f64 alpha beta) 2)) (*.f64 (-.f64 -2 (+.f64 alpha beta)) alpha)) (neg.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 beta) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (*.f64 (-.f64 -2 (+.f64 alpha beta)) (/.f64 alpha (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))) (*.f64 (-.f64 -2 (+.f64 alpha beta)) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 beta (-.f64 -2 (+.f64 alpha beta))) (*.f64 (+.f64 (+.f64 alpha beta) 2) (neg.f64 alpha))) (neg.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 beta (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (*.f64 (+.f64 (+.f64 alpha beta) 2) (/.f64 alpha (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))) (*.f64 (+.f64 (+.f64 alpha beta) 2) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 beta (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (-.f64 -2 (+.f64 alpha beta))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (neg.f64 alpha))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 beta (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (+.f64 alpha beta) 2)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) alpha)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 beta (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (/.f64 alpha (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)) (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 beta alpha) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 beta (+.f64 (+.f64 alpha beta) 2) (neg.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) alpha)))) (neg.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 alpha beta) (-.f64 -2 (+.f64 alpha beta))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta (/.f64 -1 (-.f64 -2 (+.f64 alpha beta))) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 beta (cbrt.f64 (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 beta) (/.f64 (cbrt.f64 (*.f64 beta beta)) (+.f64 (+.f64 alpha beta) 2)) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) 2)) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (/.f64 (*.f64 beta beta) (pow.f64 (-.f64 -2 (+.f64 alpha beta)) 2))) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (/.f64 alpha (-.f64 -2 (+.f64 alpha beta))))))))"]],"rules":[["egg-rr",76],["egg-rr",76]],"time":35.88916015625,"type":"rewrite"},{"count":[[200,229]],"inputs":[["(-.f64 1 (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) 1) (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) (+.f64 1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))) (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) (+.f64 1 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))))))) (/.f64 alpha (+.f64 2 alpha)))","2","(+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) 2)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) (+.f64 2 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (pow.f64 beta 2)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) (+.f64 2 (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) alpha) (pow.f64 beta 3)))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta 2))) (/.f64 (pow.f64 (+.f64 2 alpha) 3) (pow.f64 beta 3))))","2","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 2) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 2)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(+.f64 1 (/.f64 beta (+.f64 beta 2)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (/.f64 beta (+.f64 beta 2))))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)) (*.f64 -1 (/.f64 beta (pow.f64 (+.f64 beta 2) 3)))) (pow.f64 alpha 2)) (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)) (*.f64 -1 (/.f64 beta (pow.f64 (+.f64 beta 2) 3)))) (pow.f64 alpha 2)) (/.f64 beta (+.f64 beta 2))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(-.f64 (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 4) (pow.f64 alpha 4))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))))) (+.f64 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))))","(+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 4) (*.f64 beta (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 4))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(*.f64 -1 (/.f64 alpha (+.f64 2 alpha)))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha))))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(/.f64 beta (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (/.f64 beta (+.f64 beta 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)) (/.f64 beta (+.f64 beta 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)) (/.f64 beta (+.f64 beta 2)))))","-1","(-.f64 (/.f64 beta alpha) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","(-.f64 (+.f64 (/.f64 beta alpha) (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","(-.f64 (+.f64 (/.f64 beta alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (/.f64 (*.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) (+.f64 beta 2)) (pow.f64 alpha 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (/.f64 (*.f64 (+.f64 beta 2) (-.f64 (*.f64 -1 beta) (+.f64 beta 2))) (pow.f64 alpha 2)))) 1)"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) 1) (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 alpha (pow.f64 (+.f64 2 alpha) -2))) 1) (/.f64 alpha (+.f64 2 alpha)))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) (+.f64 1 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))) (/.f64 alpha (+.f64 2 alpha)))","(+.f64 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 alpha (pow.f64 (+.f64 2 alpha) -2))) 1) (fma.f64 (*.f64 beta beta) (-.f64 (*.f64 (neg.f64 alpha) (pow.f64 (+.f64 2 alpha) -3)) (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (/.f64 alpha (+.f64 2 alpha)))))","(-.f64 (+.f64 (*.f64 beta (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (+.f64 2 alpha)))) (+.f64 1 (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))))))) (/.f64 alpha (+.f64 2 alpha)))","(+.f64 (fma.f64 beta (+.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 alpha (pow.f64 (+.f64 2 alpha) -2))) 1) (fma.f64 (pow.f64 beta 3) (+.f64 (pow.f64 (+.f64 2 alpha) -3) (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))) (fma.f64 (*.f64 beta beta) (-.f64 (*.f64 (neg.f64 alpha) (pow.f64 (+.f64 2 alpha) -3)) (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (/.f64 alpha (+.f64 2 alpha))))))","2","(+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) 2)","(-.f64 2 (/.f64 (*.f64 2 (+.f64 alpha 1)) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) (+.f64 2 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (pow.f64 beta 2)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta 2))))","(+.f64 (-.f64 (+.f64 2 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (*.f64 beta beta))) (/.f64 (*.f64 2 (+.f64 alpha 1)) beta)) (*.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta -2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 2 (*.f64 2 alpha)) beta)) (+.f64 2 (+.f64 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (pow.f64 beta 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) alpha) (pow.f64 beta 3)))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta 2))) (/.f64 (pow.f64 (+.f64 2 alpha) 3) (pow.f64 beta 3))))","(-.f64 (-.f64 (-.f64 (+.f64 2 (/.f64 (*.f64 (+.f64 2 alpha) alpha) (*.f64 beta beta))) (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) alpha) (pow.f64 beta 3))) (/.f64 (*.f64 2 (+.f64 alpha 1)) beta)) (-.f64 (pow.f64 (/.f64 (+.f64 2 alpha) beta) 3) (*.f64 (pow.f64 (+.f64 2 alpha) 2) (pow.f64 beta -2))))","2","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 2) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (-.f64 2 (/.f64 alpha beta)) (/.f64 (+.f64 2 alpha) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 2)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(+.f64 (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 alpha beta)) (-.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(+.f64 (+.f64 (-.f64 2 (/.f64 alpha beta)) (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (pow.f64 (+.f64 2 alpha) 2)) (neg.f64 (pow.f64 beta 3)))) (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 (+.f64 2 alpha) beta)))","(+.f64 1 (/.f64 beta (+.f64 beta 2)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (/.f64 beta (+.f64 beta 2))))","(-.f64 (-.f64 (/.f64 beta (+.f64 beta 2)) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha)) -1)","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)) (*.f64 -1 (/.f64 beta (pow.f64 (+.f64 beta 2) 3)))) (pow.f64 alpha 2)) (/.f64 beta (+.f64 beta 2)))))","(-.f64 (-.f64 (fma.f64 (+.f64 (pow.f64 (+.f64 beta 2) -2) (*.f64 beta (pow.f64 (+.f64 beta 2) -3))) (*.f64 alpha alpha) (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha)) -1)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)) (*.f64 -1 (/.f64 beta (pow.f64 (+.f64 beta 2) 3)))) (pow.f64 alpha 2)) (/.f64 beta (+.f64 beta 2))))))","(-.f64 (-.f64 (-.f64 (fma.f64 (+.f64 (pow.f64 (+.f64 beta 2) -2) (*.f64 beta (pow.f64 (+.f64 beta 2) -3))) (*.f64 alpha alpha) (/.f64 beta (+.f64 beta 2))) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha)) -1) (*.f64 (pow.f64 alpha 3) (+.f64 (pow.f64 (+.f64 beta 2) -3) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (*.f64 2 (+.f64 1 beta)) alpha)","(-.f64 (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)))","(-.f64 (fma.f64 2 (/.f64 beta alpha) (-.f64 (/.f64 2 alpha) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 2))) (/.f64 (*.f64 beta (+.f64 beta 2)) (*.f64 alpha alpha)))","(-.f64 (+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (+.f64 (fma.f64 2 (/.f64 beta alpha) (-.f64 (/.f64 2 alpha) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 2))) (-.f64 (pow.f64 (/.f64 (+.f64 beta 2) alpha) 3) (/.f64 (*.f64 beta (+.f64 beta 2)) (*.f64 alpha alpha)))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))","(-.f64 (+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 4) (pow.f64 alpha 4))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 beta 2) 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))))) (+.f64 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 beta (+.f64 beta 2)) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(-.f64 (+.f64 (-.f64 (pow.f64 (/.f64 (+.f64 beta 2) alpha) 3) (/.f64 (pow.f64 (+.f64 beta 2) 4) (pow.f64 alpha 4))) (fma.f64 2 (/.f64 beta alpha) (-.f64 (/.f64 2 alpha) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 2)))) (-.f64 (+.f64 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4)) (/.f64 (*.f64 beta (+.f64 beta 2)) (*.f64 alpha alpha))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha))","(/.f64 (+.f64 (+.f64 beta 2) beta) alpha)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))))","(-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha)))","(+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))))","(+.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) (+.f64 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 3)))","(+.f64 (/.f64 (pow.f64 (+.f64 beta 2) 3) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 2) (*.f64 beta (+.f64 beta 2))) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 4) (*.f64 beta (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 4))) (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))))))","(+.f64 (+.f64 (pow.f64 (/.f64 (+.f64 beta 2) alpha) 3) (/.f64 (+.f64 (+.f64 beta 2) beta) alpha)) (-.f64 (-.f64 (/.f64 (*.f64 beta (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (/.f64 (+.f64 (pow.f64 (+.f64 beta 2) 4) (*.f64 beta (pow.f64 (+.f64 beta 2) 3))) (pow.f64 alpha 4))) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))))","(*.f64 -1 (/.f64 alpha (+.f64 2 alpha)))","(neg.f64 (/.f64 alpha (+.f64 2 alpha)))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha))))","(-.f64 (+.f64 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 2 alpha) 2)) (/.f64 beta (+.f64 2 alpha))) (/.f64 alpha (+.f64 2 alpha)))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha)))))","(fma.f64 beta (+.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 alpha (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (-.f64 (*.f64 (neg.f64 alpha) (pow.f64 (+.f64 2 alpha) -3)) (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (/.f64 alpha (+.f64 2 alpha)))))","(+.f64 (*.f64 beta (-.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 -1 (/.f64 alpha (pow.f64 (+.f64 2 alpha) 3))) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) (*.f64 -1 (/.f64 alpha (+.f64 2 alpha))))))","(fma.f64 beta (+.f64 (/.f64 1 (+.f64 2 alpha)) (*.f64 alpha (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (pow.f64 beta 3) (+.f64 (pow.f64 (+.f64 2 alpha) -3) (/.f64 alpha (pow.f64 (+.f64 2 alpha) 4))) (fma.f64 (*.f64 beta beta) (-.f64 (*.f64 (neg.f64 alpha) (pow.f64 (+.f64 2 alpha) -3)) (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (/.f64 alpha (+.f64 2 alpha))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (-.f64 1 (/.f64 alpha beta)) (/.f64 (+.f64 2 alpha) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(+.f64 (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 alpha beta)) (-.f64 1 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(-.f64 (+.f64 (-.f64 (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 alpha beta)) -1) (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (pow.f64 (+.f64 2 alpha) 2)) (neg.f64 (pow.f64 beta 3)))) (/.f64 (+.f64 2 alpha) beta))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1) (+.f64 (*.f64 2 (/.f64 1 beta)) (/.f64 alpha beta)))","(-.f64 (-.f64 1 (/.f64 alpha beta)) (/.f64 (+.f64 2 alpha) beta))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) 1)) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(+.f64 (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 alpha beta)) (-.f64 1 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha)) (+.f64 2 alpha)) (pow.f64 beta 2))) (+.f64 (*.f64 -1 (/.f64 alpha beta)) (+.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 (*.f64 -1 alpha) (+.f64 2 alpha))) (pow.f64 beta 3))))) (+.f64 (/.f64 alpha beta) (*.f64 2 (/.f64 1 beta))))","(-.f64 (+.f64 (-.f64 (-.f64 (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (+.f64 2 alpha)) (*.f64 beta beta)) (/.f64 alpha beta)) -1) (/.f64 (*.f64 (+.f64 (+.f64 2 alpha) alpha) (pow.f64 (+.f64 2 alpha) 2)) (neg.f64 (pow.f64 beta 3)))) (/.f64 (+.f64 2 alpha) beta))","(/.f64 beta (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (/.f64 beta (+.f64 beta 2)))","(-.f64 (/.f64 beta (+.f64 beta 2)) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)) (/.f64 beta (+.f64 beta 2))))","(-.f64 (/.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) (*.f64 alpha alpha)) beta) (+.f64 beta 2)) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 1 (pow.f64 (+.f64 beta 2) 3)) (/.f64 beta (pow.f64 (+.f64 beta 2) 4))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) alpha)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (pow.f64 alpha 2)) (+.f64 beta 2)) (/.f64 beta (+.f64 beta 2)))))","(-.f64 (-.f64 (/.f64 (+.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) (*.f64 alpha alpha)) beta) (+.f64 beta 2)) (*.f64 (+.f64 (/.f64 1 (+.f64 beta 2)) (*.f64 beta (pow.f64 (+.f64 beta 2) -2))) alpha)) (*.f64 (pow.f64 alpha 3) (+.f64 (pow.f64 (+.f64 beta 2) -3) (/.f64 beta (pow.f64 (+.f64 beta 2) 4)))))","-1","(-.f64 (/.f64 beta alpha) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","(+.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) -1)","(-.f64 (+.f64 (/.f64 beta alpha) (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","(+.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) -1)","(-.f64 (+.f64 (/.f64 beta alpha) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (+.f64 beta 2)) (pow.f64 alpha 2))) (/.f64 (*.f64 (-.f64 beta (*.f64 -1 (+.f64 beta 2))) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 beta 2) alpha)) 1))","(-.f64 (+.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) 1)","(+.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (/.f64 (*.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) (+.f64 beta 2)) (pow.f64 alpha 2))) 1)","(+.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) alpha)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 beta) (+.f64 beta 2)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) (/.f64 (*.f64 (+.f64 beta 2) (-.f64 (*.f64 -1 beta) (+.f64 beta 2))) (pow.f64 alpha 2)))) 1)","(-.f64 (+.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3))) 1)"]],"time":208.19482421875,"type":"simplify"},{"compiler":[[6485,4234]],"time":67.248046875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (fma.f64 2 (/.f64 beta alpha) (-.f64 (/.f64 2 alpha) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 2))) (/.f64 (*.f64 beta (+.f64 beta 2)) (*.f64 alpha alpha))) 2)","fresh",46.69510721709587],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","done",15.652698386118857],["(/.f64 (/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) 2)","next",15.108761325930653],["(/.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) 2)","fresh",46.69510721709682]],"compiler":[[30,21],[15,11],[19,12],[25,17],[30,21],[19,12],[25,17]],"count":[[230,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[229,3],"picked":[1,1]}],"min-error":[0.02425567720948809],"time":73.367919921875,"type":"prune"},{"compiler":[[57,24]],"locations":[["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))",0.03125,true],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",1.882089497586301,true]],"time":9.708984375,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","alpha","-inf",0.290771484375],["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","alpha","inf",0.397216796875],["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","alpha","0",0.532958984375],["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","beta","-inf",0.36083984375],["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","beta","inf",0.362060546875],["(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))","beta","0",0.447021484375],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","-inf",0.14599609375],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","inf",0.14990234375],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","alpha","0",0.277099609375],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","-inf",0.176025390625],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","inf",0.31201171875],["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","beta","0",0.25390625]],"time":3.9140625,"type":"series"},{"count":[[2,178]],"inputs":[["(+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))","(/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 beta (-.f64 alpha beta)) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 alpha) (-.f64 beta (-.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (+.f64 beta 2) alpha) 1) (+.f64 alpha beta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) 1) (neg.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 alpha beta) (*.f64 (-.f64 (+.f64 beta 2) alpha) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 alpha beta) 2) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 beta 2) alpha) (+.f64 alpha beta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 beta (+.f64 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) (neg.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 alpha beta) (-.f64 (+.f64 beta 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 alpha (-.f64 (+.f64 (+.f64 beta beta) 2) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 beta beta) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (+.f64 beta beta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 beta 2) beta)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (+.f64 beta beta) 2) alpha) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 alpha) (+.f64 beta (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 beta beta) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 1 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 beta 2) (-.f64 alpha (-.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 beta (-.f64 (+.f64 2 alpha) (-.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 beta beta) 2) 0) (+.f64 (+.f64 beta beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 (+.f64 (+.f64 beta beta) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 beta beta) 2)) (+.f64 (+.f64 beta beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 beta beta) 2) (*.f64 0 (+.f64 (+.f64 beta beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (+.f64 beta beta)) -1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 alpha (*.f64 (-.f64 (+.f64 (+.f64 beta beta) 2) alpha) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 alpha beta) 2) (-.f64 alpha beta))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (+.f64 alpha beta) 2) 0) (-.f64 alpha beta))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -2 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 beta alpha) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 beta (-.f64 -2 beta))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) 0) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 beta 2) (neg.f64 beta))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) 1) alpha)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (cbrt.f64 (+.f64 (+.f64 beta beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 beta beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 beta beta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -2 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -2 (+.f64 beta beta)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (/.f64 1 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) -1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) -1) (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (+.f64 beta beta) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 beta alpha) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (cbrt.f64 (*.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))))) (+.f64 (cbrt.f64 (-.f64 beta alpha)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (-.f64 (cbrt.f64 (pow.f64 (-.f64 beta alpha) 2)) (cbrt.f64 (*.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))))) (+.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (-.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 beta beta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -2 (+.f64 beta beta)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (+.f64 4 (-.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 (+.f64 beta beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) 1) (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (neg.f64 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) 1) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 beta beta) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -2 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 beta alpha)) (cbrt.f64 (pow.f64 (-.f64 beta alpha) 2)) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 beta) (cbrt.f64 (*.f64 beta beta)) (+.f64 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 alpha beta) 2) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 beta (+.f64 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2)))) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 alpha beta) 2) 1 (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 -2 (+.f64 alpha beta)) (-.f64 beta alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 beta beta)) (cbrt.f64 beta) (+.f64 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 beta) (+.f64 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta 1 (+.f64 beta 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 0) (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) 2) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) alpha) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 (+.f64 (+.f64 beta beta) 2) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta beta)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 (+.f64 beta 2) alpha)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 beta alpha)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta (+.f64 (+.f64 alpha beta) 2))) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (neg.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 alpha beta)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 (+.f64 beta 2) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) (*.f64 0 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 alpha beta) 2) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (-.f64 beta alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (+.f64 beta beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (-.f64 (+.f64 (+.f64 beta beta) 2) alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 2 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (+.f64 beta 2) alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (+.f64 alpha beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (*.f64 (+.f64 beta 2) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 beta alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (+.f64 (+.f64 alpha beta) 2) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (neg.f64 alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 alpha beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (-.f64 (+.f64 beta 2) alpha) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (neg.f64 (/.f64 (-.f64 -2 beta) (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -2 (+.f64 alpha beta))) (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 beta (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) (/.f64 alpha (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (+.f64 alpha beta) 2) (+.f64 (+.f64 alpha beta) 2)) (/.f64 (-.f64 alpha beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 beta (+.f64 (+.f64 alpha beta) 2)) (/.f64 (-.f64 -2 beta) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -2 (+.f64 beta beta)) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 beta beta) 2) (/.f64 1 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 beta beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (+.f64 (+.f64 beta beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta))) (-.f64 -2 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2))) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (+.f64 (+.f64 beta beta) 2) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) -1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2)) -1) (/.f64 (cbrt.f64 (+.f64 (+.f64 beta beta) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (-.f64 -2 (+.f64 beta beta)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2)) (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (+.f64 (+.f64 beta beta) 2) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2) (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 1 (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) -1) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) 1) (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)))) (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) -1) (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (*.f64 (-.f64 -2 (+.f64 alpha beta)) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -2 (+.f64 beta beta)) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 beta beta) 2) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (+.f64 (+.f64 beta beta) 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (-.f64 -2 (+.f64 beta beta)))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (+.f64 beta beta) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 2))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (-.f64 (+.f64 alpha beta) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) -1) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 beta (+.f64 (+.f64 alpha beta) 2)) (*.f64 (+.f64 (+.f64 alpha beta) 2) (-.f64 -2 beta))) (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (*.f64 (+.f64 (+.f64 alpha beta) 2) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (pow.f64 (+.f64 beta beta) 2) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 -2 (+.f64 beta beta)) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (-.f64 -2 (+.f64 beta beta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 -2 beta) (+.f64 (+.f64 alpha beta) 2)) (/.f64 beta (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (+.f64 beta beta) 2) (+.f64 (+.f64 alpha beta) 2)) 3))))))"]],"rules":[["egg-rr",100],["egg-rr",78]],"time":36.301025390625,"type":"rewrite"},{"count":[[226,215]],"inputs":[["2","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(*.f64 2 beta)","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(*.f64 2 beta)","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(+.f64 2 (*.f64 2 beta))","(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha)))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))))","2","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) 2) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (*.f64 2 (/.f64 1 beta))))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","2","(+.f64 (*.f64 2 (/.f64 1 beta)) (+.f64 2 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (*.f64 2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 4)))) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))"]],"method":["egg-herbie"],"outputs":[["2","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(*.f64 2 beta)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(*.f64 2 beta)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(+.f64 2 (*.f64 2 beta))","(fma.f64 2 beta 2)","(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) beta (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha)))))","(fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))))","(fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (pow.f64 beta 3) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -4))) (/.f64 2 (+.f64 2 alpha)))))","2","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) 2) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta) 2)","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 (+.f64 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta) 2) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (*.f64 2 (/.f64 1 beta))))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 (+.f64 (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)) (fma.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (fma.f64 -2 (+.f64 2 alpha) 2)) (pow.f64 beta -3) (/.f64 2 beta))) (fma.f64 -2 (/.f64 (+.f64 2 alpha) beta) 2))","2","(+.f64 (*.f64 2 (/.f64 1 beta)) (+.f64 2 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta) 2)","(+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta)))))","(+.f64 (+.f64 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta) 2) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta))))))","(+.f64 (+.f64 (fma.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (fma.f64 -2 (+.f64 2 alpha) 2)) (pow.f64 beta -3) 2) (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta)) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(/.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2))","(/.f64 (fma.f64 2 beta 2) (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (*.f64 2 (/.f64 beta (+.f64 beta 2)))))","(fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2))) alpha (/.f64 (fma.f64 2 beta 2) (+.f64 beta 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2))) alpha (fma.f64 2 (/.f64 (+.f64 1 beta) (+.f64 beta 2)) (/.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (*.f64 alpha alpha)) (+.f64 beta 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 4)))) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2))))))","(-.f64 (fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 4))) (pow.f64 alpha 3) (fma.f64 2 (/.f64 (+.f64 1 beta) (+.f64 beta 2)) (/.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (*.f64 alpha alpha)) (+.f64 beta 2)))) (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) alpha))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(-.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(-.f64 (-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2))) (*.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha -4)))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(-.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(-.f64 (-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2))) (*.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha -4)))"]],"time":175.4130859375,"type":"simplify"},{"compiler":[[5243,3388]],"time":55.702880859375,"type":"eval"},{"alts":[["(/.f64 (fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))) 2)","fresh",17.98228304195999],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","done",15.652698386118857],["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)","next",0.03125]],"compiler":[[41,33],[15,11],[14,11],[41,33],[14,11]],"count":[[219,3]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[215,2],"picked":[1,0]}],"min-error":[0],"time":74.27001953125,"type":"prune"},{"compiler":[[39,23]],"locations":[["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))",0.03125,true]],"time":8.47412109375,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","alpha","-inf",0.22705078125],["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","alpha","inf",0.240966796875],["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","alpha","0",0.264892578125],["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","beta","-inf",0.257080078125],["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","beta","inf",0.218994140625],["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))","beta","0",0.31103515625]],"time":1.65185546875,"type":"series"},{"count":[[1,78]],"inputs":[["(/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 0) (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) (*.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) 2) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 beta beta)) (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) (*.f64 0 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 (+.f64 beta beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta beta) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (*.f64 2 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -2 (+.f64 alpha beta))) (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2))) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) 1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (fma.f64 2 beta 2) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 (-.f64 -2 (+.f64 beta beta)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 beta 2)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -2 (+.f64 beta beta)) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2 beta 2) (/.f64 1 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (fma.f64 2 beta 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (fma.f64 2 beta 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta))) (-.f64 -2 (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 (+.f64 alpha beta)))) (/.f64 (fma.f64 2 beta 2) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2) (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 1 (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 2 beta 2) -1) (/.f64 1 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (+.f64 (+.f64 alpha beta) 2)) (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2)) (/.f64 (cbrt.f64 (fma.f64 2 beta 2)) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)) -2)) (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)))) (*.f64 (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) 1) (*.f64 (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) -1) (*.f64 (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta)))) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (*.f64 (-.f64 -2 (+.f64 alpha beta)) (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)) (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -2 (+.f64 beta beta)) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) (cbrt.f64 (pow.f64 (fma.f64 2 beta 2) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (-.f64 -2 (+.f64 beta beta)))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)) (cbrt.f64 (fma.f64 2 beta 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (fma.f64 2 beta 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -2 (+.f64 beta beta))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2))) (cbrt.f64 (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -2 (+.f64 beta beta)) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (pow.f64 (+.f64 alpha beta) 3) 8)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 alpha beta) (+.f64 (+.f64 alpha beta) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 2 beta 2) -1) (-.f64 -2 (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (*.f64 (+.f64 (+.f64 alpha beta) 2) (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (cbrt.f64 (+.f64 (+.f64 alpha beta) 2)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 alpha beta) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (+.f64 alpha beta) 2)) (+.f64 (pow.f64 (+.f64 beta beta) 3) 8)) (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 beta beta) 3) 8) (/.f64 1 (+.f64 (+.f64 alpha beta) 2))) (+.f64 (*.f64 4 (*.f64 beta beta)) (*.f64 2 (-.f64 2 (+.f64 beta beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (-.f64 -2 (+.f64 alpha beta))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 3))))))"]],"rules":[["egg-rr",78]],"time":24.93798828125,"type":"rewrite"},{"count":[[102,112]],"inputs":[["(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha)))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))))","2","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) 2) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (*.f64 2 (/.f64 1 beta))))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","2","(+.f64 (*.f64 2 (/.f64 1 beta)) (+.f64 2 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (*.f64 2 (/.f64 beta (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 4)))) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) beta (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha)))))","(fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (+.f64 2 alpha))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))) beta) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (+.f64 (*.f64 (pow.f64 beta 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 2 alpha) 4))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))))","(fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (pow.f64 beta 3) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -4))) (/.f64 2 (+.f64 2 alpha)))))","2","(-.f64 (+.f64 (*.f64 2 (/.f64 1 beta)) 2) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 2 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (*.f64 2 (/.f64 1 beta)))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 (+.f64 2 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta)) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(-.f64 (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (-.f64 2 (*.f64 2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (*.f64 2 (/.f64 1 beta))))) (*.f64 2 (/.f64 (+.f64 2 alpha) beta)))","(+.f64 (+.f64 (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)) (fma.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (fma.f64 -2 (+.f64 2 alpha) 2)) (pow.f64 beta -3) (/.f64 2 beta))) (fma.f64 (/.f64 (+.f64 2 alpha) beta) -2 2))","2","(+.f64 (*.f64 2 (/.f64 1 beta)) (+.f64 2 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta))))","(+.f64 2 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta))","(+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta)))))","(+.f64 (+.f64 2 (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta)) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 3)) (+.f64 2 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 alpha) (+.f64 2 (*.f64 -2 (+.f64 2 alpha)))) (pow.f64 beta 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 2 alpha) beta)) (*.f64 2 (/.f64 1 beta))))))","(+.f64 (+.f64 (fma.f64 (*.f64 (pow.f64 (+.f64 2 alpha) 2) (fma.f64 -2 (+.f64 2 alpha) 2)) (pow.f64 beta -3) 2) (/.f64 (fma.f64 -2 (+.f64 2 alpha) 2) beta)) (*.f64 (*.f64 (fma.f64 (+.f64 2 alpha) 2 -2) (+.f64 2 alpha)) (pow.f64 beta -2)))","(/.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2))","(/.f64 (fma.f64 2 beta 2) (+.f64 beta 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (*.f64 2 (/.f64 beta (+.f64 beta 2)))))","(fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2))) alpha (/.f64 (fma.f64 2 beta 2) (+.f64 beta 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2)))))","(fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2))) alpha (fma.f64 2 (/.f64 (+.f64 1 beta) (+.f64 beta 2)) (/.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (*.f64 alpha alpha)) (+.f64 beta 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) alpha)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 4)))) (pow.f64 alpha 3))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 beta 2))) (+.f64 (*.f64 2 (/.f64 beta (+.f64 beta 2))) (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta 2) 2))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 beta 2) 2)))) (pow.f64 alpha 2)) (+.f64 beta 2))))))","(-.f64 (fma.f64 (neg.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 4))) (pow.f64 alpha 3) (fma.f64 2 (/.f64 (+.f64 1 beta) (+.f64 beta 2)) (/.f64 (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (*.f64 alpha alpha)) (+.f64 beta 2)))) (*.f64 (/.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) alpha))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(-.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(-.f64 (-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2))) (*.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha -4)))","(/.f64 (+.f64 2 (*.f64 2 beta)) alpha)","(/.f64 (fma.f64 2 beta 2) alpha)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))","(-.f64 (/.f64 (fma.f64 2 beta 2) alpha) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha)))))","(-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (+.f64 beta 2)) (pow.f64 alpha 2))) (+.f64 (/.f64 (*.f64 (+.f64 2 (*.f64 2 beta)) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha 3)) (+.f64 (*.f64 2 (/.f64 beta alpha)) (*.f64 2 (/.f64 1 alpha))))))","(-.f64 (-.f64 (fma.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 2)) (pow.f64 alpha -3) (/.f64 (fma.f64 2 beta 2) alpha)) (*.f64 (*.f64 (fma.f64 2 beta 2) (+.f64 beta 2)) (pow.f64 alpha -2))) (*.f64 (*.f64 (fma.f64 2 beta 2) (pow.f64 (+.f64 beta 2) 3)) (pow.f64 alpha -4)))"]],"time":97.779052734375,"type":"simplify"},{"compiler":[[3063,2257]],"time":36.444091796875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","done",15.652698386118857],["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)","done",0.03125],["(/.f64 (fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))) 2)","next",17.98228304195999]],"compiler":[[15,11],[14,11],[41,33],[41,33]],"count":[[115,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[112,1],"picked":[1,1]}],"min-error":[0],"time":23.994873046875,"type":"prune"},{"compiler":[[180,139]],"locations":[["(-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))",0.025722509768442016,true],["(pow.f64 (+.f64 2 alpha) -2)",0.028007519536884032,true],["(pow.f64 (+.f64 2 alpha) -3)",0.036483789073768064,true],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))",2.2213023733311976,true]],"time":39.98193359375,"type":"localize"},{"count":[[4,60]],"series":[["(-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))","alpha","-inf",0.197021484375],["(-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))","alpha","inf",0.2529296875],["(-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))","alpha","0",0.22119140625],["(pow.f64 (+.f64 2 alpha) -2)","alpha","-inf",0.201904296875],["(pow.f64 (+.f64 2 alpha) -2)","alpha","inf",0.219970703125],["(pow.f64 (+.f64 2 alpha) -2)","alpha","0",0.199951171875],["(pow.f64 (+.f64 2 alpha) -3)","alpha","-inf",1.175048828125],["(pow.f64 (+.f64 2 alpha) -3)","alpha","inf",0.304931640625],["(pow.f64 (+.f64 2 alpha) -3)","alpha","0",0.181884765625],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","alpha","-inf",0.401123046875],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","alpha","inf",0.462890625],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","alpha","0",0.398193359375],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","beta","-inf",0.225830078125],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","beta","inf",0.518798828125],["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","beta","0",1.473876953125]],"time":6.68310546875,"type":"series"},{"count":[[4,204]],"inputs":[["(fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(pow.f64 (+.f64 2 alpha) -3)","(pow.f64 (+.f64 2 alpha) -2)","(-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) (*.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 0) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) (*.f64 0 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 (-.f64 -2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 2)) (cbrt.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (/.f64 -1 (-.f64 -2 alpha)) (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -1 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 beta beta)) (*.f64 (cbrt.f64 (pow.f64 beta 4)) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (*.f64 beta beta) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) 2)) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 beta (*.f64 beta (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) 2 (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 beta beta) (cbrt.f64 (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))) (cbrt.f64 (pow.f64 (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) 2)) (/.f64 -2 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 (-.f64 -2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (-.f64 -2 alpha)) 1 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 -1 (-.f64 -2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (+.f64 2 alpha))) (*.f64 (sqrt.f64 2) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2))) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -2 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (/.f64 -2 (-.f64 -2 alpha)) 2)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 2 (-.f64 -2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 (-.f64 -2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (+.f64 2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 4) (+.f64 2 alpha)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 8 (+.f64 2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 -2 (-.f64 -2 alpha)) 2)) (cbrt.f64 (/.f64 -2 (-.f64 -2 alpha))) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (*.f64 2 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2))) (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -2 alpha)) 2 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 beta beta) 2) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) 1 (/.f64 -2 (-.f64 -2 alpha)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 alpha) -3) (*.f64 (pow.f64 (+.f64 2 alpha) -3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 2 alpha) -3) 0) (pow.f64 (+.f64 2 alpha) -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 alpha) -3) (*.f64 0 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 2 alpha) -3)) (pow.f64 (+.f64 2 alpha) -3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 2 alpha) -3) (/.f64 0 (pow.f64 (+.f64 2 alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (+.f64 2 alpha) 3)) (neg.f64 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (-.f64 -2 alpha) 3)) (neg.f64 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 2 alpha) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 alpha) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -5)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (/.f64 1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (/.f64 1 (-.f64 -2 alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 alpha))) 3) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (pow.f64 (-.f64 -2 alpha) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (+.f64 2 alpha) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (-.f64 -2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 2 alpha) -2) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 2 alpha) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 2 alpha) -2) (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha)))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -8))) (cbrt.f64 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -8)) (cbrt.f64 (+.f64 2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) -1) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (+.f64 2 alpha))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 2 alpha) -2) (cbrt.f64 (+.f64 2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 2 alpha) -2) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2))) (cbrt.f64 (+.f64 2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 2 alpha) -2) (+.f64 8 (pow.f64 alpha 3))) (/.f64 1 (fma.f64 alpha (+.f64 alpha -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 2 alpha) -2) -1) (-.f64 -2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (pow.f64 (-.f64 -2 alpha) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (-.f64 -2 alpha) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 alpha) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -2 alpha)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 2 alpha) -3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) 3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -2 alpha)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 alpha) (-.f64 -2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (/.f64 1 (-.f64 -2 alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 2 alpha) -3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 alpha) -2) (*.f64 (pow.f64 (+.f64 2 alpha) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 2 alpha) -2) 0) (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 alpha) -2) (*.f64 0 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 2 alpha) -2)) (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 0 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (+.f64 2 alpha) 2)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (+.f64 2 alpha) 2))) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 alpha)) (/.f64 1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -2 alpha)) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 alpha) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -2 alpha)) (-.f64 -2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -2 alpha)) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 2 alpha) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -5))) (cbrt.f64 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -5)) (cbrt.f64 (+.f64 2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 -2 alpha)) -1) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 -2 alpha)) (cbrt.f64 (+.f64 2 alpha))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (-.f64 -2 alpha)) (+.f64 8 (pow.f64 alpha 3))) (/.f64 1 (fma.f64 alpha (+.f64 alpha -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (-.f64 -2 alpha)) -1) (-.f64 -2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (pow.f64 (+.f64 2 alpha) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 alpha) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -2 alpha)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) -6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) -3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 alpha) -3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 alpha) -6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) (*.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 0) (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) (*.f64 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) 0) (/.f64 1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (/.f64 1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 -1 (-.f64 -2 alpha)) 0) (pow.f64 (+.f64 2 alpha) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha))))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (+.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)) (/.f64 -1 (-.f64 -2 alpha)))) (-.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (+.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4))) (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -2 alpha)) (-.f64 1 (/.f64 -1 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (-.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (+.f64 2 alpha)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (/.f64 -1 (-.f64 -2 alpha)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (+.f64 2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (pow.f64 (+.f64 2 alpha) 2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (-.f64 -2 alpha)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (/.f64 1 (-.f64 -2 alpha)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (neg.f64 (pow.f64 (+.f64 2 alpha) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) 2)) (neg.f64 (pow.f64 (+.f64 2 alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (neg.f64 (pow.f64 (+.f64 2 alpha) 2))) (+.f64 2 alpha)) (*.f64 (-.f64 -2 alpha) (neg.f64 (pow.f64 (+.f64 2 alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1 (neg.f64 (pow.f64 (+.f64 2 alpha) 2))) (-.f64 -2 alpha)) (*.f64 (+.f64 2 alpha) (neg.f64 (pow.f64 (+.f64 2 alpha) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (/.f64 -1 (-.f64 -2 alpha))) (+.f64 2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (/.f64 1 (-.f64 -2 alpha))) (-.f64 -2 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 -2 alpha) (*.f64 (-.f64 -2 alpha) (/.f64 -1 (-.f64 -2 alpha)))) (neg.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (pow.f64 (+.f64 2 alpha) 2)) (-.f64 -2 alpha)) (pow.f64 (-.f64 -2 alpha) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 2 alpha) (*.f64 (-.f64 -2 alpha) (/.f64 1 (-.f64 -2 alpha)))) (pow.f64 (+.f64 2 alpha) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 2 alpha) (*.f64 (+.f64 2 alpha) (/.f64 -1 (-.f64 -2 alpha)))) (pow.f64 (+.f64 2 alpha) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 2 alpha) 2) (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 -2 alpha) (*.f64 (+.f64 2 alpha) (/.f64 1 (-.f64 -2 alpha)))) (neg.f64 (pow.f64 (+.f64 2 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 (pow.f64 (+.f64 2 alpha) -2) (/.f64 1 (-.f64 -2 alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4))) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2))) (cbrt.f64 (pow.f64 (+.f64 2 alpha) -4)) (/.f64 -1 (-.f64 -2 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 -2 alpha))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 2 alpha) -2))) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -2 alpha)) 1 (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 -2 alpha)) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 2 alpha) -2)) (cbrt.f64 (/.f64 -1 (-.f64 -2 alpha))) (neg.f64 (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (/.f64 -1 (-.f64 -2 alpha)) (pow.f64 (+.f64 2 alpha) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (+.f64 2 alpha) -2) (/.f64 -1 (-.f64 -2 alpha)))))))"]],"rules":[["egg-rr",64],["egg-rr",45],["egg-rr",49],["egg-rr",46]],"time":43.277099609375,"type":"rewrite"},{"count":[[264,269]],"inputs":[["(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(+.f64 1 (*.f64 -1/4 (pow.f64 beta 2)))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (*.f64 -1/4 (pow.f64 beta 2))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (+.f64 (*.f64 -1/4 (pow.f64 beta 2)) (*.f64 1/4 (pow.f64 alpha 2)))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1/16 (pow.f64 beta 2)) 1/8) (pow.f64 alpha 3)) (+.f64 (*.f64 -1/4 (pow.f64 beta 2)) (*.f64 1/4 (pow.f64 alpha 2))))))","(/.f64 2 alpha)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 -36 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 4))) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 alpha 4))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(/.f64 2 alpha)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -10 (pow.f64 beta 2)) 8) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 -36 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -10 (pow.f64 beta 2)) 8) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 alpha 4))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","1/8","(+.f64 1/8 (*.f64 -3/16 alpha))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/8 (*.f64 -3/16 alpha)))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/8 (+.f64 (*.f64 -5/32 (pow.f64 alpha 3)) (*.f64 -3/16 alpha))))","(/.f64 1 (pow.f64 alpha 3))","(-.f64 (/.f64 1 (pow.f64 alpha 3)) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 80 (/.f64 1 (pow.f64 alpha 6))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4)))))","(/.f64 1 (pow.f64 alpha 3))","(-.f64 (/.f64 1 (pow.f64 alpha 3)) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 80 (/.f64 1 (pow.f64 alpha 6))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4)))))","1/4","(+.f64 1/4 (*.f64 -1/4 alpha))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/4 (*.f64 -1/4 alpha)))","(+.f64 (*.f64 -1/8 (pow.f64 alpha 3)) (+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/4 (*.f64 -1/4 alpha))))","(/.f64 1 (pow.f64 alpha 2))","(-.f64 (/.f64 1 (pow.f64 alpha 2)) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (*.f64 32 (/.f64 1 (pow.f64 alpha 5)))))","(/.f64 1 (pow.f64 alpha 2))","(-.f64 (/.f64 1 (pow.f64 alpha 2)) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (*.f64 32 (/.f64 1 (pow.f64 alpha 5)))))","1/4","(+.f64 1/4 (*.f64 -1/16 (pow.f64 alpha 2)))","(+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 alpha 2)) (*.f64 1/16 (pow.f64 alpha 3))))","(+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 alpha 2)) (+.f64 (*.f64 -3/64 (pow.f64 alpha 4)) (*.f64 1/16 (pow.f64 alpha 3)))))","(/.f64 1 alpha)","(-.f64 (/.f64 1 alpha) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (+.f64 (*.f64 20 (/.f64 1 (pow.f64 alpha 4))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))","(/.f64 1 alpha)","(-.f64 (/.f64 1 alpha) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (+.f64 (*.f64 20 (/.f64 1 (pow.f64 alpha 4))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (+.f64 2 alpha))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))","(*.f64 (*.f64 2 (*.f64 beta beta)) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2)))))","(*.f64 (*.f64 2 (*.f64 beta beta)) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 (*.f64 2 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 1 (pow.f64 (+.f64 2 alpha) 3)) (/.f64 1 (pow.f64 (+.f64 2 alpha) 2))))) (*.f64 2 (/.f64 1 (+.f64 2 alpha))))","(fma.f64 2 (*.f64 (*.f64 beta beta) (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))","(+.f64 1 (*.f64 -1/4 (pow.f64 beta 2)))","(+.f64 1 (*.f64 -1/4 (*.f64 beta beta)))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (*.f64 -1/4 (pow.f64 beta 2))))","(+.f64 1 (fma.f64 (fma.f64 1/8 (*.f64 beta beta) -1/2) alpha (*.f64 -1/4 (*.f64 beta beta))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (+.f64 (*.f64 -1/4 (pow.f64 beta 2)) (*.f64 1/4 (pow.f64 alpha 2)))))","(+.f64 1 (fma.f64 (fma.f64 1/8 (*.f64 beta beta) -1/2) alpha (fma.f64 -1/4 (*.f64 beta beta) (*.f64 1/4 (*.f64 alpha alpha)))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 1/8 (pow.f64 beta 2)) 1/2) alpha) (+.f64 (*.f64 (-.f64 (*.f64 -1/16 (pow.f64 beta 2)) 1/8) (pow.f64 alpha 3)) (+.f64 (*.f64 -1/4 (pow.f64 beta 2)) (*.f64 1/4 (pow.f64 alpha 2))))))","(+.f64 1 (fma.f64 (fma.f64 1/8 (*.f64 beta beta) -1/2) alpha (fma.f64 (fma.f64 -1/16 (*.f64 beta beta) -1/8) (pow.f64 alpha 3) (fma.f64 -1/4 (*.f64 beta beta) (*.f64 1/4 (*.f64 alpha alpha))))))","(/.f64 2 alpha)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)) (/.f64 -4 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 (+.f64 8 (*.f64 10 (*.f64 beta beta))) (pow.f64 alpha 3)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)) (/.f64 -4 (*.f64 alpha alpha))))","(-.f64 (+.f64 (*.f64 -36 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 4))) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 10 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 alpha 4))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(-.f64 (fma.f64 -36 (*.f64 (*.f64 beta beta) (pow.f64 alpha -4)) (+.f64 (/.f64 (+.f64 8 (*.f64 10 (*.f64 beta beta))) (pow.f64 alpha 3)) (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)))) (fma.f64 16 (pow.f64 alpha -4) (/.f64 4 (*.f64 alpha alpha))))","(/.f64 2 alpha)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)) (/.f64 -4 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -10 (pow.f64 beta 2)) 8) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha)))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (-.f64 (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)) (*.f64 (fma.f64 -10 (*.f64 beta beta) -8) (pow.f64 alpha -3))) (/.f64 -4 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 -36 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -10 (pow.f64 beta 2)) 8) (pow.f64 alpha 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 beta 2) (pow.f64 alpha 2))) (*.f64 2 (/.f64 1 alpha))))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 alpha 4))) (*.f64 4 (/.f64 1 (pow.f64 alpha 2)))))","(-.f64 (fma.f64 -36 (*.f64 (*.f64 beta beta) (pow.f64 alpha -4)) (-.f64 (fma.f64 -2 (/.f64 (*.f64 beta beta) (*.f64 alpha alpha)) (/.f64 2 alpha)) (*.f64 (fma.f64 -10 (*.f64 beta beta) -8) (pow.f64 alpha -3)))) (fma.f64 16 (pow.f64 alpha -4) (/.f64 4 (*.f64 alpha alpha))))","1/8","(+.f64 1/8 (*.f64 -3/16 alpha))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/8 (*.f64 -3/16 alpha)))","(fma.f64 3/16 (*.f64 alpha alpha) (+.f64 1/8 (*.f64 -3/16 alpha)))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/8 (+.f64 (*.f64 -5/32 (pow.f64 alpha 3)) (*.f64 -3/16 alpha))))","(fma.f64 3/16 (*.f64 alpha alpha) (+.f64 1/8 (fma.f64 -5/32 (pow.f64 alpha 3) (*.f64 -3/16 alpha))))","(/.f64 1 (pow.f64 alpha 3))","(pow.f64 alpha -3)","(-.f64 (/.f64 1 (pow.f64 alpha 3)) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(+.f64 (pow.f64 alpha -3) (*.f64 -6 (pow.f64 alpha -4)))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(+.f64 (fma.f64 24 (pow.f64 alpha -5) (pow.f64 alpha -3)) (*.f64 -6 (pow.f64 alpha -4)))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 80 (/.f64 1 (pow.f64 alpha 6))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4)))))","(-.f64 (fma.f64 24 (pow.f64 alpha -5) (pow.f64 alpha -3)) (fma.f64 80 (pow.f64 alpha -6) (*.f64 6 (pow.f64 alpha -4))))","(/.f64 1 (pow.f64 alpha 3))","(pow.f64 alpha -3)","(-.f64 (/.f64 1 (pow.f64 alpha 3)) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(+.f64 (pow.f64 alpha -3) (*.f64 -6 (pow.f64 alpha -4)))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4))))","(+.f64 (fma.f64 24 (pow.f64 alpha -5) (pow.f64 alpha -3)) (*.f64 -6 (pow.f64 alpha -4)))","(-.f64 (+.f64 (*.f64 24 (/.f64 1 (pow.f64 alpha 5))) (/.f64 1 (pow.f64 alpha 3))) (+.f64 (*.f64 80 (/.f64 1 (pow.f64 alpha 6))) (*.f64 6 (/.f64 1 (pow.f64 alpha 4)))))","(-.f64 (fma.f64 24 (pow.f64 alpha -5) (pow.f64 alpha -3)) (fma.f64 80 (pow.f64 alpha -6) (*.f64 6 (pow.f64 alpha -4))))","1/4","(+.f64 1/4 (*.f64 -1/4 alpha))","(+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/4 (*.f64 -1/4 alpha)))","(fma.f64 3/16 (*.f64 alpha alpha) (+.f64 1/4 (*.f64 -1/4 alpha)))","(+.f64 (*.f64 -1/8 (pow.f64 alpha 3)) (+.f64 (*.f64 3/16 (pow.f64 alpha 2)) (+.f64 1/4 (*.f64 -1/4 alpha))))","(fma.f64 -1/8 (pow.f64 alpha 3) (fma.f64 3/16 (*.f64 alpha alpha) (+.f64 1/4 (*.f64 -1/4 alpha))))","(/.f64 1 (pow.f64 alpha 2))","(pow.f64 alpha -2)","(-.f64 (/.f64 1 (pow.f64 alpha 2)) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(+.f64 (pow.f64 alpha -2) (*.f64 -4 (pow.f64 alpha -3)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(+.f64 (fma.f64 12 (pow.f64 alpha -4) (pow.f64 alpha -2)) (*.f64 -4 (pow.f64 alpha -3)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (*.f64 32 (/.f64 1 (pow.f64 alpha 5)))))","(-.f64 (fma.f64 12 (pow.f64 alpha -4) (pow.f64 alpha -2)) (fma.f64 4 (pow.f64 alpha -3) (*.f64 32 (pow.f64 alpha -5))))","(/.f64 1 (pow.f64 alpha 2))","(pow.f64 alpha -2)","(-.f64 (/.f64 1 (pow.f64 alpha 2)) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(+.f64 (pow.f64 alpha -2) (*.f64 -4 (pow.f64 alpha -3)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (*.f64 4 (/.f64 1 (pow.f64 alpha 3))))","(+.f64 (fma.f64 12 (pow.f64 alpha -4) (pow.f64 alpha -2)) (*.f64 -4 (pow.f64 alpha -3)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 alpha 4))) (/.f64 1 (pow.f64 alpha 2))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 alpha 3))) (*.f64 32 (/.f64 1 (pow.f64 alpha 5)))))","(-.f64 (fma.f64 12 (pow.f64 alpha -4) (pow.f64 alpha -2)) (fma.f64 4 (pow.f64 alpha -3) (*.f64 32 (pow.f64 alpha -5))))","1/4","(+.f64 1/4 (*.f64 -1/16 (pow.f64 alpha 2)))","(+.f64 1/4 (*.f64 -1/16 (*.f64 alpha alpha)))","(+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 alpha 2)) (*.f64 1/16 (pow.f64 alpha 3))))","(+.f64 1/4 (fma.f64 -1/16 (*.f64 alpha alpha) (*.f64 1/16 (pow.f64 alpha 3))))","(+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 alpha 2)) (+.f64 (*.f64 -3/64 (pow.f64 alpha 4)) (*.f64 1/16 (pow.f64 alpha 3)))))","(+.f64 1/4 (fma.f64 -1/16 (*.f64 alpha alpha) (fma.f64 -3/64 (pow.f64 alpha 4) (*.f64 1/16 (pow.f64 alpha 3)))))","(/.f64 1 alpha)","(-.f64 (/.f64 1 alpha) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 1 alpha) (/.f64 -3 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (fma.f64 8 (pow.f64 alpha -3) (/.f64 1 alpha)) (/.f64 -3 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (+.f64 (*.f64 20 (/.f64 1 (pow.f64 alpha 4))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))","(-.f64 (fma.f64 8 (pow.f64 alpha -3) (/.f64 1 alpha)) (fma.f64 20 (pow.f64 alpha -4) (/.f64 (/.f64 3 alpha) alpha)))","(/.f64 1 alpha)","(-.f64 (/.f64 1 alpha) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (/.f64 1 alpha) (/.f64 -3 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (*.f64 3 (/.f64 1 (pow.f64 alpha 2))))","(+.f64 (fma.f64 8 (pow.f64 alpha -3) (/.f64 1 alpha)) (/.f64 -3 (*.f64 alpha alpha)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (pow.f64 alpha 3))) (/.f64 1 alpha)) (+.f64 (*.f64 20 (/.f64 1 (pow.f64 alpha 4))) (*.f64 3 (/.f64 1 (pow.f64 alpha 2)))))","(-.f64 (fma.f64 8 (pow.f64 alpha -3) (/.f64 1 alpha)) (fma.f64 20 (pow.f64 alpha -4) (/.f64 (/.f64 3 alpha) alpha)))"]],"time":221.9228515625,"type":"simplify"},{"compiler":[[14798,11537]],"time":169.360107421875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)","done",15.652698386118857],["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)","done",0.03125],["(/.f64 (fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))) 2)","done",17.98228304195999]],"compiler":[[15,11],[14,11],[41,33]],"count":[[331,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[328,0],"picked":[1,1]}],"min-error":[0],"time":150.294921875,"type":"prune"},{"accuracy":[0.03125],"baseline":[0.03125],"branch":[["alpha",0.03125,1],["beta",0.03125,1],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)",0.03125,1],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)",0.03125,1],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",0.03125,1]],"compiler":[[3,2],[3,2],[15,11],[13,9],[11,7],[173,121]],"count":[[7,1]],"inputs":[["(/.f64 (fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))) 2)","(/.f64 (fma.f64 beta (*.f64 2 (-.f64 (/.f64 1 (+.f64 2 alpha)) (pow.f64 (+.f64 2 alpha) -2))) (fma.f64 (*.f64 beta beta) (*.f64 2 (-.f64 (pow.f64 (+.f64 2 alpha) -3) (pow.f64 (+.f64 2 alpha) -2))) (/.f64 2 (+.f64 2 alpha)))) 2)","(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)","(/.f64 (-.f64 (fma.f64 2 (/.f64 beta alpha) (-.f64 (/.f64 2 alpha) (pow.f64 (/.f64 (+.f64 beta 2) alpha) 2))) (/.f64 (*.f64 beta (+.f64 beta 2)) (*.f64 alpha alpha))) 2)","(/.f64 (/.f64 (+.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) (+.f64 (+.f64 alpha beta) 2)) 2)","(/.f64 (-.f64 (/.f64 (+.f64 (+.f64 beta 2) beta) alpha) (/.f64 (*.f64 (+.f64 (+.f64 beta 2) beta) (+.f64 beta 2)) (*.f64 alpha alpha))) 2)","(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)"]],"link":["."],"name":["Octave 3.8, jcobi/1"],"oracle":[62.30445391539159],"outputs":[["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)"]],"time":17.18212890625,"times":[["alpha",3.639892578125],["beta",3.467041015625],["(/.f64 (+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1) 2)",2.075927734375],["(+.f64 (/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2)) 1)",2.05517578125],["(/.f64 (-.f64 beta alpha) (+.f64 (+.f64 alpha beta) 2))",2.968994140625]],"type":"regimes"},{"compiler":[[14,11]],"inputs":[["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (fma.f64 2 beta 2) (+.f64 (+.f64 alpha beta) 2)) 2)","(/.f64 (fma.f64 2 beta 2) (fma.f64 2 (+.f64 alpha beta) 4))"]],"stop":[["done",1]],"time":20.65087890625,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[14,11]],"remove-preprocessing":[[]],"time":9.387939453125,"type":"end"}]