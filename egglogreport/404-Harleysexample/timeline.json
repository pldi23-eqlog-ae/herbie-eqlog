[{"compiler":[[54,40]],"method":["search"],"sampling":[[12,0.031189009532683443,0.10648122785767707,0.8623297626096394],[11,0.031189009532683443,0.11744611402151109,0.8513648764458055],[10,0.031189009532683443,0.133527947061801,0.8352830434055156],[9,0.031189009532683443,0.15009710837603907,0.8187138820912775],[8,0.031189009532683443,0.1676409262381735,0.801170064229143],[7,0.0,0.21052581434561324,0.7894741856543868],[6,0.0,0.23391757149512582,0.7660824285048742],[5,0.0,0.24951207626146754,0.7504879237385325],[4,0.0,0.24951207626146754,0.7504879237385325],[3,0.0,0.24951207626146754,0.7504879237385325],[2,0.0,0.24951207626146754,0.7504879237385325],[1,0.0,0.24951207626146754,0.7504879237385325],[0,0.0,0.24951207626146754,0.7504879237385325]],"time":330.984130859375,"type":"analyze"},{"outcomes":[["body",512,"invalid",9.067626953125,17],["body",8192,"valid",295.21875,21],["body",1024,"invalid",10.289794921875,10],["body",512,"valid",15.086669921875,33],["body",2048,"invalid",3.97412109375,1],["body",256,"invalid",8378.53857421875,39391],["body",8192,"exit",124145.36962890625,15416],["body",8192,"invalid",12.302978515625,1],["body",4096,"valid",70.16796875,14],["body",1024,"valid",87.50146484375,75],["body",256,"valid",1199.072021484375,8095],["body",2048,"valid",33.728271484375,18]],"time":134328.048828125,"type":"sample"},{"compiler":[[47,35]],"inputs":[["0","1","2","3"],["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) t) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) t) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) s) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) s) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) t)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) t)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) s)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) s)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_n) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_n) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) t) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) t) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) t) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) t) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) s) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) s) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_p)))) s) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 c_p))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) s) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) t)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) t)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) t)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) t)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) s)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) s)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 c_n)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 c_n))))) s)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) s)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)))"]],"symmetry":[[]],"time":76.197998046875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))"]],"time":24.129150390625,"type":"simplify"},{"compiler":[[90,62]],"time":0.997802734375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","next",5.980452231598578]],"compiler":[[47,35],[47,35]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[5.980452231598578],"time":1.585205078125,"type":"prune"},{"compiler":[[219,127]],"locations":[["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)",0.48436398773238537,true],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)",0.7265459815985781,true],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))",1.9492283905317078,true],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))",2.1367407584066016,true]],"time":43.73388671875,"type":"localize"},{"count":[[4,120]],"series":[["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","c_p","-inf",0.1611328125],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","c_p","inf",0.1650390625],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","c_p","0",0.26806640625],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","s","-inf",0.1591796875],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","s","inf",0.18212890625],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","s","0",0.255126953125],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","c_p","-inf",0.174072265625],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","c_p","inf",0.156005859375],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","c_p","0",0.275146484375],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","t","-inf",0.1591796875],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","t","inf",0.162109375],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","t","0",0.299072265625],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","t","-inf",0.507080078125],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","t","inf",0.501953125],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","t","0",0.97802734375],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","c_p","-inf",0.510009765625],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","c_p","inf",0.486083984375],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","c_p","0",0.801025390625],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","s","-inf",0.492919921875],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","s","inf",0.489990234375],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","s","0",0.5849609375],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","t","-inf",29.9619140625],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","t","inf",53.989990234375],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","t","0",3.805908203125],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_p","-inf",1.156982421875],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_p","inf",15.93017578125],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_p","0",2.5400390625],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_n","-inf",1.18798828125],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_n","inf",17.213134765625],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","c_n","0",2.627197265625],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","s","-inf",18.0830078125],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","s","inf",60.843994140625],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","s","0",3.22705078125]],"time":219.511962890625,"type":"series"},{"count":[[4,129]],"inputs":[["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 0) (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 2) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (/.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (neg.f64 c_n))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (neg.f64 c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 2)) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (neg.f64 c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (neg.f64 c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (neg.f64 c_n)) (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (/.f64 1 (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 2 c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (/.f64 (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))) (neg.f64 (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (+.f64 1 (/.f64 -1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 0) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (*.f64 0 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (neg.f64 c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) (*.f64 2 c_p)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) (*.f64 2 c_p))) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (neg.f64 c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (neg.f64 c_p)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (neg.f64 c_p))) (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 0) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) (*.f64 0 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p))) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 2 c_p)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) c_p) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 0) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 0 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) (*.f64 2 c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) (*.f64 2 c_p))) (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) (*.f64 2 c_p)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) 3) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",24],["egg-rr",33],["egg-rr",48]],"time":54.007080078125,"type":"rewrite"},{"count":[[249,222]],"inputs":[["(/.f64 (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(+.f64 (*.f64 (pow.f64 s 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(+.f64 (*.f64 (pow.f64 s 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (+.f64 (*.f64 (pow.f64 s 3) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 c_n 3)) (*.f64 1/16 (pow.f64 c_n 2))) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))) (+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (*.f64 (pow.f64 c_n 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))))))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 (pow.f64 c_n 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))) (*.f64 (-.f64 (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 3)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2))) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (pow.f64 c_n 3)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(+.f64 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))","(+.f64 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (pow.f64 c_p 3) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3)))))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 3) (pow.f64 (pow.f64 1/2 c_p) 3))))) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 c_n 3)) (*.f64 1/16 (pow.f64 c_n 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2))))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3))))))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (/.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(+.f64 (/.f64 (*.f64 (pow.f64 s 3) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (/.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","1","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) 1)","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) (+.f64 1 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))))))","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) (+.f64 1 (+.f64 (*.f64 (pow.f64 c_p 3) (-.f64 (*.f64 1/6 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3)) (+.f64 (*.f64 1/6 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3)) (+.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))) (*.f64 1/2 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))))))) (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p))","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))))","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p))))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 c_p (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))))) (pow.f64 1/2 c_p))) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3)))) (pow.f64 1/2 c_p)))) (pow.f64 t 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p)))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(pow.f64 1/2 c_p)","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 t 2) (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p)))","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 t 3) (pow.f64 1/2 c_p))) (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 t 2) (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p))))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","1","(+.f64 1 (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c_p 2) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))) (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c_p 2) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))) (+.f64 (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (*.f64 1/6 (*.f64 (pow.f64 c_p 3) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3))))))","(pow.f64 1/2 c_p)","(+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))","(+.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p)))","(+.f64 (*.f64 (pow.f64 s 3) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","1","(+.f64 1 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 c_p 2))) (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 c_p 2))) (+.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p) (*.f64 1/6 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3) (pow.f64 c_p 3))))))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (/.f64 (pow.f64 1/2 (+.f64 c_p c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(fma.f64 s (fma.f64 1/2 (/.f64 (/.f64 (*.f64 c_p (pow.f64 1/2 (+.f64 c_p c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (*.f64 -1/2 c_n) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (/.f64 (pow.f64 1/2 (+.f64 c_p c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (*.f64 (pow.f64 s 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(fma.f64 (*.f64 s s) (fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (+.f64 (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (fma.f64 s (fma.f64 1/2 (/.f64 (/.f64 (*.f64 c_p (pow.f64 1/2 (+.f64 c_p c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (*.f64 -1/2 c_n) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (/.f64 (pow.f64 1/2 (+.f64 c_p c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(+.f64 (*.f64 (pow.f64 s 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (+.f64 (*.f64 (pow.f64 s 3) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 c_n 3)) (*.f64 1/16 (pow.f64 c_n 2))) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))) (+.f64 (*.f64 s (+.f64 (*.f64 1/2 (/.f64 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 -1/2 (/.f64 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (/.f64 (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))","(fma.f64 (*.f64 s s) (fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (+.f64 (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (fma.f64 (pow.f64 s 3) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 c_p (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n)))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 c_n (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (+.f64 (*.f64 (fma.f64 -1/48 (pow.f64 c_n 3) (*.f64 1/16 (*.f64 c_n c_n))) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 (+.f64 c_p c_n)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))) (fma.f64 s (fma.f64 1/2 (/.f64 (/.f64 (*.f64 c_p (pow.f64 1/2 (+.f64 c_p c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (*.f64 -1/2 c_n) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (/.f64 (pow.f64 1/2 (+.f64 c_p c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(fma.f64 c_n (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (*.f64 (pow.f64 c_n 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))))))","(+.f64 (fma.f64 c_n (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (*.f64 (*.f64 c_n c_n) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))","(+.f64 (*.f64 c_n (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 (pow.f64 c_n 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))))) (*.f64 (-.f64 (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 3)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) 2) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)))) (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2))) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))) (pow.f64 c_n 3)))))","(+.f64 (fma.f64 c_n (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (fma.f64 (*.f64 c_n c_n) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (*.f64 (-.f64 (/.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))))) 3))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2)) (/.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (log.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))) (pow.f64 c_n 3))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))","(/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(fma.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) c_p (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))","(+.f64 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))","(fma.f64 (*.f64 c_p c_p) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (fma.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) c_p (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))","(+.f64 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (pow.f64 c_p 3) (-.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))))) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) c_p) (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))","(fma.f64 (*.f64 c_p c_p) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (fma.f64 (pow.f64 c_p 3) (-.f64 (/.f64 (*.f64 1/6 (*.f64 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 3) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (fma.f64 (-.f64 (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (*.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (fma.f64 1/2 (*.f64 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))) (/.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 3))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))))) (fma.f64 (/.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)) c_p (/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3)))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))) (neg.f64 (*.f64 (*.f64 t t) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)) (fma.f64 -1/4 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2)) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 3))))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 3) (pow.f64 (pow.f64 1/2 c_p) 3))))) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 c_n 3)) (*.f64 1/16 (pow.f64 c_n 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2))))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 t (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_n) 2) (pow.f64 (pow.f64 1/2 c_p) 2)))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))) (+.f64 (*.f64 -1/4 (*.f64 c_n (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 c_n 2)) (*.f64 -1/8 c_n)) (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 2) (pow.f64 (pow.f64 1/2 c_n) 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p)))) (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_n) (pow.f64 1/2 c_p))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n) (+.f64 (*.f64 -1/2 (*.f64 c_n (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))) (*.f64 1/2 (*.f64 c_p (*.f64 (pow.f64 1/2 c_p) (pow.f64 1/2 c_n)))))))) (*.f64 (pow.f64 (pow.f64 1/2 c_p) 3) (pow.f64 (pow.f64 1/2 c_n) 3))))))))))","(+.f64 (neg.f64 (*.f64 (pow.f64 t 3) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)) (fma.f64 -1/4 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n))))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)) (fma.f64 -1/4 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2)) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 3)))) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n))))) (pow.f64 1/2 (+.f64 c_p c_n)))) (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)))) (fma.f64 (fma.f64 -1/48 (pow.f64 c_n 3) (*.f64 1/16 (*.f64 c_n c_n))) (pow.f64 1/2 (+.f64 c_p c_n)) (fma.f64 1/2 (*.f64 c_p (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n)))) (*.f64 (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 (+.f64 c_p c_n)))))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2)))))) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))) (neg.f64 (*.f64 (*.f64 t t) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 (+.f64 c_p c_n)) (fma.f64 -1/4 (*.f64 (*.f64 c_n c_p) (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (fma.f64 1/8 (*.f64 c_n c_n) (*.f64 -1/8 c_n)) (pow.f64 1/2 (+.f64 c_p c_n))))) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2)) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n))))) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 3)))))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))) c_n)))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(fma.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))","(+.f64 (/.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(+.f64 (/.f64 (*.f64 (*.f64 s s) (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))))","(+.f64 (/.f64 (*.f64 (pow.f64 s 3) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (/.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(+.f64 (/.f64 (*.f64 (pow.f64 s 3) (*.f64 (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (+.f64 (/.f64 (*.f64 (*.f64 s s) (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (fma.f64 1/2 (/.f64 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)) (/.f64 (pow.f64 1/2 c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)))))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","1","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) 1)","(fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) (+.f64 1 (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))))))","(+.f64 (fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1) (*.f64 (*.f64 c_p c_p) (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (neg.f64 (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (*.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))))))","(+.f64 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p) (+.f64 1 (+.f64 (*.f64 (pow.f64 c_p 3) (-.f64 (*.f64 1/6 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3)) (+.f64 (*.f64 1/6 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3)) (+.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))) (*.f64 1/2 (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))))))) (*.f64 (pow.f64 c_p 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2)) (+.f64 (*.f64 1/2 (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2)) (*.f64 (-.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))))))","(+.f64 (fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1) (fma.f64 (pow.f64 c_p 3) (-.f64 (*.f64 1/6 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 3)) (fma.f64 1/6 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 3) (fma.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (neg.f64 (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (*.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))) (*.f64 (*.f64 1/2 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))))) (*.f64 (*.f64 c_p c_p) (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) 2) (neg.f64 (fma.f64 1/2 (pow.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) 2) (*.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 1/2 c_p))","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))))","(+.f64 (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 1/2 c_p)) (/.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p t))) (pow.f64 1/2 c_p)))","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p))))))))","(+.f64 (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 1/2 c_p)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p t)) (pow.f64 1/2 c_p)) (neg.f64 (*.f64 (*.f64 t t) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p c_p)) (pow.f64 1/2 c_p))))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 c_p (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))))) (pow.f64 1/2 c_p))) (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3)))) (pow.f64 1/2 c_p)))) (pow.f64 t 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 1/2 c_p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (*.f64 c_p t)) (pow.f64 1/2 c_p))) (*.f64 -1 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 c_p 2)) (pow.f64 1/2 c_p)))))))))","(+.f64 (neg.f64 (*.f64 (fma.f64 -1/2 (*.f64 c_p (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p c_p)) (pow.f64 1/2 c_p))))) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))))) (pow.f64 1/2 c_p)) (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3)))) (pow.f64 1/2 c_p)))) (pow.f64 t 3))) (+.f64 (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 1/2 c_p)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p t)) (pow.f64 1/2 c_p)) (neg.f64 (*.f64 (*.f64 t t) (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p)))) (pow.f64 1/2 c_p)) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (*.f64 c_p c_p)) (pow.f64 1/2 c_p)))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p))","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(pow.f64 1/2 c_p)","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))","(fma.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p))","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 t 2) (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p)))","(fma.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p))) (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (*.f64 (*.f64 t t) (pow.f64 1/2 c_p)) (pow.f64 1/2 c_p)))","(+.f64 (*.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 t 3) (pow.f64 1/2 c_p))) (+.f64 (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (*.f64 (pow.f64 t 2) (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p))))","(fma.f64 1/2 (*.f64 c_p (*.f64 t (pow.f64 1/2 c_p))) (fma.f64 (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3))) (*.f64 (pow.f64 t 3) (pow.f64 1/2 c_p)) (fma.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (*.f64 (*.f64 t t) (pow.f64 1/2 c_p)) (pow.f64 1/2 c_p))))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)","1","(+.f64 1 (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))))","(+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c_p 2) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))) (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2) (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c_p 2) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 2))) (+.f64 (*.f64 c_p (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))))) (*.f64 1/6 (*.f64 (pow.f64 c_p 3) (pow.f64 (log.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) 3))))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2) (fma.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 1/6 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3)))))","(pow.f64 1/2 c_p)","(+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))","(fma.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p))","(+.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p)))","(fma.f64 (*.f64 s s) (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 c_p)) (fma.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p)))","(+.f64 (*.f64 (pow.f64 s 3) (*.f64 (+.f64 (*.f64 -1/16 (pow.f64 c_p 2)) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 (pow.f64 s 2) (*.f64 (+.f64 (*.f64 -1/8 c_p) (*.f64 1/8 (pow.f64 c_p 2))) (pow.f64 1/2 c_p))) (+.f64 (*.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p)))) (pow.f64 1/2 c_p))))","(fma.f64 (pow.f64 s 3) (*.f64 (fma.f64 -1/16 (*.f64 c_p c_p) (*.f64 1/48 (pow.f64 c_p 3))) (pow.f64 1/2 c_p)) (fma.f64 (*.f64 s s) (*.f64 (fma.f64 -1/8 c_p (*.f64 1/8 (*.f64 c_p c_p))) (pow.f64 1/2 c_p)) (fma.f64 1/2 (*.f64 s (*.f64 c_p (pow.f64 1/2 c_p))) (pow.f64 1/2 c_p))))","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1)) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 s)))) c_p)","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","1","(+.f64 1 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(+.f64 1 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 c_p 2))) (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p)))","(+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p) 2) (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p)))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 2) (pow.f64 c_p 2))) (+.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p) (*.f64 1/6 (*.f64 (pow.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) 3) (pow.f64 c_p 3))))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p) 2) (fma.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p (*.f64 1/6 (pow.f64 (*.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) c_p) 3)))))","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)","(exp.f64 (*.f64 (log.f64 (/.f64 1 (+.f64 (exp.f64 (neg.f64 s)) 1))) c_p))","(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)"]],"time":404.221923828125,"type":"simplify"},{"compiler":[[17832,11750]],"time":165.7041015625,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","next",3.6543933555526014],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2) (fma.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 1/6 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3))))))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","fresh",5.320359468864996],["(/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))","fresh",4.544728708283169],["(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","fresh",5.753683826727552],["(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","fresh",5.475899411381637]],"compiler":[[23,19],[75,55],[27,23],[46,35],[83,55],[23,19],[75,55],[27,23],[46,35],[83,55]],"count":[[223,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[222,5],"picked":[1,0]}],"min-error":[0.5309972441473547],"time":107.9560546875,"type":"prune"},{"compiler":[[79,42]],"locations":[["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))",0.0234375,true],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)",0.48436398773238537,false],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p)",0.7265459815985781,false],["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))",1.9492283905317078,false]],"time":16.6708984375,"type":"localize"},{"count":[[1,8]],"series":[["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))","t","-inf",0.182861328125],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))","t","inf",0.169921875],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))","t","0",0.328125]],"time":0.72802734375,"type":"series"},{"count":[[1,40]],"inputs":[["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 0) (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 (pow.f64 (exp.f64 t) -3))) (/.f64 -1 (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 (exp.f64 t) -3))) (/.f64 1 (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2)) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 -1 (exp.f64 (neg.f64 t)))) (-.f64 -1 (exp.f64 (neg.f64 t)))) (*.f64 (-.f64 -1 (exp.f64 (neg.f64 t))) (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)) -1) (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2)) -1) (cbrt.f64 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2)) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -2))) (cbrt.f64 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3)) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 1 (pow.f64 (exp.f64 t) -3))) (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) -3))))))"]],"rules":[["egg-rr",40]],"time":21.79296875,"type":"rewrite"},{"count":[[48,48]],"inputs":[["1/2","(+.f64 (*.f64 1/4 t) 1/2)","(+.f64 (*.f64 1/4 t) (+.f64 1/2 (*.f64 -1/48 (pow.f64 t 3))))","(+.f64 (*.f64 1/480 (pow.f64 t 5)) (+.f64 (*.f64 1/4 t) (+.f64 1/2 (*.f64 -1/48 (pow.f64 t 3)))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))"]],"method":["egg-herbie"],"outputs":[["1/2","(+.f64 (*.f64 1/4 t) 1/2)","(fma.f64 1/4 t 1/2)","(+.f64 (*.f64 1/4 t) (+.f64 1/2 (*.f64 -1/48 (pow.f64 t 3))))","(fma.f64 1/4 t (fma.f64 (pow.f64 t 3) -1/48 1/2))","(+.f64 (*.f64 1/480 (pow.f64 t 5)) (+.f64 (*.f64 1/4 t) (+.f64 1/2 (*.f64 -1/48 (pow.f64 t 3)))))","(fma.f64 (pow.f64 t 5) 1/480 (fma.f64 1/4 t (fma.f64 (pow.f64 t 3) -1/48 1/2)))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t))))","(/.f64 1 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 t))))"]],"time":48.240966796875,"type":"simplify"},{"compiler":[[6136,3969]],"time":63.218017578125,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))","fresh",2.7929737074674135],["(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","fresh",5.475899411381637],["1","next",2.750704446106735],["(fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)","fresh",3.4033508394901095]],"compiler":[[25,21],[83,55],[5,5],[22,19],[25,21],[83,55],[5,5],[22,19]],"count":[[190,4]],"kept":[{"done":[0,0],"fresh":[4,1],"new":[185,3],"picked":[1,0]}],"min-error":[0.2809972441473547],"time":74.200927734375,"type":"prune"},{"compiler":[[5,5]],"time":1.22900390625,"type":"localize"},{"compiler":[[4,4]],"time":0.091064453125,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))","next",2.7929737074674135],["(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","fresh",5.475899411381637],["1","done",2.750704446106735],["(fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)","fresh",3.4033508394901095]],"compiler":[[25,21],[83,55],[5,5],[22,19],[25,21],[83,55],[22,19]],"count":[[4,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[0,0],"picked":[1,1]}],"min-error":[0.2809972441473547],"time":3.6640625,"type":"prune"},{"compiler":[[98,54]],"locations":[["(+.f64 1 (exp.f64 (neg.f64 t)))",0.015625,true],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))",0.234375,true],["(pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p)",0.48436398773238537,false],["(log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))",0.7481161087605481,true]],"time":23.5439453125,"type":"localize"},{"count":[[3,40]],"series":[["(+.f64 1 (exp.f64 (neg.f64 t)))","t","-inf",0.1650390625],["(+.f64 1 (exp.f64 (neg.f64 t)))","t","inf",0.151123046875],["(+.f64 1 (exp.f64 (neg.f64 t)))","t","0",0.19921875],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","t","-inf",0.4560546875],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","t","inf",0.45703125],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","t","0",0.31494140625],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","c_p","-inf",0.197998046875],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","c_p","inf",0.448974609375],["(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","c_p","0",12.18505859375],["(log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))","t","-inf",7.822998046875],["(log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))","t","inf",9.72998046875],["(log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))","t","0",0.39404296875]],"time":32.695068359375,"type":"series"},{"count":[[3,140]],"inputs":[["(log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))","(*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(+.f64 1 (exp.f64 (neg.f64 t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) (*.f64 0 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t))))))) (+.f64 0 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) (+.f64 0 (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 0))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 (exp.f64 (neg.f64 t))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (exp.f64 (neg.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 0) (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) (*.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c_p 0) (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))) (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) (*.f64 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 c_p) (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c_p) (neg.f64 (*.f64 (cbrt.f64 (*.f64 c_p c_p)) (log1p.f64 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t))))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 c_p c_p)) (log1p.f64 (exp.f64 (neg.f64 t))))) (cbrt.f64 c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) c_p) (cbrt.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))))) (pow.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c_p (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t))))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c_p (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) c_p)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))) (pow.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t))))) 2) (cbrt.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (log1p.f64 (exp.f64 (neg.f64 t))) (cbrt.f64 c_p))) (cbrt.f64 (*.f64 c_p c_p)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c_p (cbrt.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 (neg.f64 t))) (neg.f64 c_p))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)) (*.f64 c_p (cbrt.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c_p c_p)) (neg.f64 (*.f64 (log1p.f64 (exp.f64 (neg.f64 t))) (cbrt.f64 c_p))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 c_p)) (*.f64 (cbrt.f64 (*.f64 c_p c_p)) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c_p (cbrt.f64 (log1p.f64 (exp.f64 (neg.f64 t)))))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 c_p (log1p.f64 (exp.f64 (neg.f64 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 0) (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 t))) (*.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 1 (exp.f64 (neg.f64 t)))) (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 (neg.f64 t))) (*.f64 0 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (exp.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 (neg.f64 t)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 t)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2)) (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) (+.f64 1 (pow.f64 (exp.f64 t) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 t) -3)) -1) (/.f64 1 (neg.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))) (/.f64 (+.f64 1 (exp.f64 (neg.f64 t))) (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))) (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))) (/.f64 (+.f64 1 (exp.f64 (neg.f64 t))) (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))) (/.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3))) 2) (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) (/.f64 (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) -1) (/.f64 (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) -1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2)) -1) (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 t -2))) (-.f64 1 (cbrt.f64 (exp.f64 (neg.f64 t))))) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (exp.f64 (*.f64 t -2))) (cbrt.f64 (exp.f64 (neg.f64 t))))) (+.f64 1 (cbrt.f64 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 t) -3)) -1) (neg.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2)) (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)))) (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 2))) (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 t) -3)) -1) 1) (neg.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 t) -3) 3)) (/.f64 1 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))) (-.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 t)) 6)) (pow.f64 (exp.f64 t) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (pow.f64 (exp.f64 t) -3)) (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t))))) (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (exp.f64 t)) -1) (neg.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 t) 1) (exp.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 t)) (exp.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (exp.f64 t))) (neg.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 t) -3) 3)) 1) (*.f64 (-.f64 (+.f64 1 (pow.f64 (exp.f64 (neg.f64 t)) 6)) (pow.f64 (exp.f64 t) -3)) (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (exp.f64 t) -3)) -1) 1) (*.f64 (neg.f64 (-.f64 (exp.f64 (*.f64 t -2)) (expm1.f64 (neg.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (neg.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (exp.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 t))) (cbrt.f64 (exp.f64 (*.f64 t -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (exp.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 t)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 t -2))) (cbrt.f64 (exp.f64 (neg.f64 t))) 1)))))"]],"rules":[["egg-rr",63],["egg-rr",45],["egg-rr",32]],"time":34.099853515625,"type":"rewrite"},{"count":[[180,166]],"inputs":[["(log.f64 2)","(+.f64 (log.f64 2) (*.f64 -1/2 t))","(+.f64 (log.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 2)) (*.f64 -1/2 t)))","(+.f64 (*.f64 -1/192 (pow.f64 t 4)) (+.f64 (log.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 2)) (*.f64 -1/2 t))))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 2)))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (*.f64 1/2 (*.f64 c_p t)))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (+.f64 (*.f64 -1/8 (*.f64 c_p (pow.f64 t 2))) (*.f64 1/2 (*.f64 c_p t))))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (+.f64 (*.f64 -1/8 (*.f64 c_p (pow.f64 t 2))) (+.f64 (*.f64 1/192 (*.f64 c_p (pow.f64 t 4))) (*.f64 1/2 (*.f64 c_p t)))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","2","(+.f64 (*.f64 -1 t) 2)","(+.f64 (*.f64 -1 t) (+.f64 2 (*.f64 1/2 (pow.f64 t 2))))","(+.f64 (*.f64 -1 t) (+.f64 2 (+.f64 (*.f64 1/2 (pow.f64 t 2)) (*.f64 -1/6 (pow.f64 t 3)))))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 2)","(+.f64 (log.f64 2) (*.f64 -1/2 t))","(fma.f64 t -1/2 (log.f64 2))","(+.f64 (log.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 2)) (*.f64 -1/2 t)))","(+.f64 (log.f64 2) (fma.f64 1/8 (*.f64 t t) (*.f64 -1/2 t)))","(+.f64 (*.f64 -1/192 (pow.f64 t 4)) (+.f64 (log.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 2)) (*.f64 -1/2 t))))","(+.f64 (fma.f64 -1/192 (pow.f64 t 4) (log.f64 2)) (fma.f64 1/8 (*.f64 t t) (*.f64 -1/2 t)))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log1p.f64 (exp.f64 (neg.f64 t)))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log1p.f64 (exp.f64 (neg.f64 t)))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log1p.f64 (exp.f64 (neg.f64 t)))","(log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))","(log1p.f64 (exp.f64 (neg.f64 t)))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 2)))","(*.f64 (neg.f64 c_p) (log.f64 2))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (*.f64 1/2 (*.f64 c_p t)))","(fma.f64 (neg.f64 c_p) (log.f64 2) (*.f64 1/2 (*.f64 c_p t)))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (+.f64 (*.f64 -1/8 (*.f64 c_p (pow.f64 t 2))) (*.f64 1/2 (*.f64 c_p t))))","(fma.f64 (neg.f64 c_p) (log.f64 2) (fma.f64 -1/8 (*.f64 c_p (*.f64 t t)) (*.f64 1/2 (*.f64 c_p t))))","(+.f64 (*.f64 -1 (*.f64 c_p (log.f64 2))) (+.f64 (*.f64 -1/8 (*.f64 c_p (pow.f64 t 2))) (+.f64 (*.f64 1/192 (*.f64 c_p (pow.f64 t 4))) (*.f64 1/2 (*.f64 c_p t)))))","(fma.f64 (neg.f64 c_p) (log.f64 2) (fma.f64 (*.f64 -1/8 c_p) (*.f64 t t) (fma.f64 (*.f64 1/192 c_p) (pow.f64 t 4) (*.f64 1/2 (*.f64 c_p t)))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","(*.f64 -1 (*.f64 c_p (log.f64 (+.f64 1 (exp.f64 (*.f64 -1 t))))))","(*.f64 (neg.f64 c_p) (log1p.f64 (exp.f64 (neg.f64 t))))","2","(+.f64 (*.f64 -1 t) 2)","(-.f64 2 t)","(+.f64 (*.f64 -1 t) (+.f64 2 (*.f64 1/2 (pow.f64 t 2))))","(-.f64 (fma.f64 1/2 (*.f64 t t) 2) t)","(+.f64 (*.f64 -1 t) (+.f64 2 (+.f64 (*.f64 1/2 (pow.f64 t 2)) (*.f64 -1/6 (pow.f64 t 3)))))","(+.f64 (-.f64 2 t) (fma.f64 (pow.f64 t 3) -1/6 (*.f64 1/2 (*.f64 t t))))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (neg.f64 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (neg.f64 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (neg.f64 t)))","(+.f64 1 (exp.f64 (*.f64 -1 t)))","(+.f64 1 (exp.f64 (neg.f64 t)))"]],"time":120.33203125,"type":"simplify"},{"compiler":[[5596,3423]],"time":58.30712890625,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))","done",2.7929737074674135],["(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","fresh",5.475899411381637],["1","done",2.750704446106735],["(fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)","fresh",3.4033508394901095]],"compiler":[[25,21],[83,55],[5,5],[22,19]],"count":[[210,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[206,0],"picked":[1,1]}],"min-error":[0.2809972441473547],"time":89.572998046875,"type":"prune"},{"accuracy":[1.5397944767757714],"baseline":[2.750704446106735],"branch":[["c_p",2.7507044461067354,1],["c_n",2.7507044461067354,1],["t",2.750704446106735,1],["s",1.5397944767757714,2],["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))",2.7507044461067354,1],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))",2.7507044461067354,1],["(+.f64 1 (exp.f64 (neg.f64 s)))",2.7507044461067354,1],["(exp.f64 (neg.f64 s))",2.7507044461067354,1],["(neg.f64 s)",1.5397944767757714,2],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))",2.750704446106735,1],["(+.f64 1 (exp.f64 (neg.f64 t)))",2.7507044461067354,1],["(exp.f64 (neg.f64 t))",2.7507044461067354,1],["(neg.f64 t)",2.7507044461067354,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[47,35],[11,10],[9,8],[7,6],[6,5],[11,10],[9,8],[7,6],[6,5],[364,236]],"count":[[10,2]],"inputs":[["(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))","1","(fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))","(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (fma.f64 1/2 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 2) (fma.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))) (*.f64 1/6 (pow.f64 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) 3))))))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","(/.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n))","(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 (-.f64 (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 s))))) (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))) c_p 1)) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (pow.f64 1/2 (+.f64 c_p c_n))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) t) (*.f64 (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n) (fma.f64 -1/2 (*.f64 c_n (pow.f64 1/2 (+.f64 c_p c_n))) (*.f64 (*.f64 1/2 c_p) (pow.f64 1/2 (+.f64 c_p c_n)))))) (pow.f64 (pow.f64 1/2 (+.f64 c_p c_n)) 2))))","(/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 s))))) c_n) (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p))) (pow.f64 (+.f64 1 (/.f64 1 (-.f64 -1 (exp.f64 (neg.f64 t))))) c_n))","(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))"]],"link":["."],"name":["Harley's example"],"oracle":[7.2107049685394955],"outputs":[["1","(/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t))))))))"]],"time":59.85791015625,"times":[["c_p",4.213134765625],["c_n",4.35791015625],["t",4.208984375],["s",11.826904296875],["(/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))) c_n)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t)))) c_p) (pow.f64 (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))) c_n)))",2.566162109375],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s))))",2.0029296875],["(+.f64 1 (exp.f64 (neg.f64 s)))",2.097900390625],["(exp.f64 (neg.f64 s))",1.947021484375],["(neg.f64 s)",8.02001953125],["(/.f64 1 (+.f64 1 (exp.f64 (neg.f64 t))))",2.10498046875],["(+.f64 1 (exp.f64 (neg.f64 t)))",1.987060546875],["(exp.f64 (neg.f64 t))",2.02001953125],["(neg.f64 t)",4.489013671875]],"type":"regimes"},{"bstep":[[226912432.80246872,2.6578724661209757e+39,1295.27001953125]],"compiler":[[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[25,21],[6,6],[47,36],[6,5]],"method":["binary-search"],"time":1295.573974609375,"type":"bsearch"},{"compiler":[[31,25]],"inputs":[["(if (<=.f64 (neg.f64 s) 2600000000000000054805850998728369897472) 1 (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (neg.f64 s) 2600000000000000054805850998728369897472) 1 (/.f64 (pow.f64 (/.f64 1 (+.f64 1 (exp.f64 (neg.f64 s)))) c_p) (+.f64 1 (*.f64 c_p (neg.f64 (log.f64 (+.f64 1 (exp.f64 (neg.f64 t)))))))))","(if (<=.f64 (neg.f64 s) 2600000000000000054805850998728369897472) 1 (/.f64 (pow.f64 (/.f64 -1 (-.f64 -1 (exp.f64 (neg.f64 s)))) c_p) (fma.f64 (neg.f64 (log1p.f64 (exp.f64 (neg.f64 t)))) c_p 1)))"]],"stop":[["fuel",1]],"time":23.81103515625,"type":"simplify"},{"time":0.034912109375,"type":"soundness"},{"compiler":[[31,25]],"remove-preprocessing":[[]],"time":16.318115234375,"type":"end"}]