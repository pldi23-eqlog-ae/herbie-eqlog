[{"compiler":[[26,19]],"method":["search"],"sampling":[[12,0.06915987524553202,0.004501170420553535,0.9263389543339144],[11,0.06824747583596036,0.006447622494306415,0.9253049016697332],[10,0.0656927574891597,0.00900234084110707,0.9253049016697332],[9,0.06423291843384504,0.01265193847939372,0.9231151430867612],[8,0.05936678824946284,0.01751806866377592,0.9231151430867612],[7,0.05644711013883352,0.02530387695878744,0.918249012902379],[6,0.04671484977006912,0.03503613732755184,0.918249012902379],[5,0.04671484977006912,0.04671484977006912,0.9065703004598618],[4,0.03114323318004608,0.06228646636009216,0.9065703004598618],[3,0.03114323318004608,0.09342969954013824,0.8754270672798157],[2,0.0,0.12457293272018433,0.8754270672798157],[1,0.0,0.12457293272018433,0.8754270672798157],[0,0.0,0.12457293272018433,0.8754270672798157]],"time":15.4560546875,"type":"analyze"},{"outcomes":[["body",256,"invalid",5.984130859375,122],["body",256,"valid",400.575927734375,8256]],"time":414.64501953125,"type":"sample"},{"compiler":[[15,11]],"inputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) (-.f64 1 v))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) (-.f64 1 v))","(*.f64 (fma.f64 v (/.f64 (-.f64 1 v) m) -1) (-.f64 1 v))"]],"symmetry":[[]],"time":63.69091796875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))"]],"time":20.092041015625,"type":"simplify"},{"compiler":[[27,19]],"time":0.43994140625,"type":"eval"},{"alts":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","next",0.05859375],["(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))","fresh",0.08203125]],"compiler":[[15,11],[14,10],[15,11],[14,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.04296875],"time":1.407958984375,"type":"prune"},{"compiler":[[42,27]],"locations":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)",0.00390625,true],["(*.f64 m (-.f64 1 m))",0.01171875,true],["(/.f64 (*.f64 m (-.f64 1 m)) v)",0.03515625,true],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",0.0390625,true]],"time":10.06103515625,"type":"localize"},{"count":[[4,63]],"series":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","-inf",0.14599609375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","inf",0.1669921875],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","0",0.157958984375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","-inf",0.18505859375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","inf",0.2490234375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","0",0.177978515625],["(*.f64 m (-.f64 1 m))","m","-inf",0.2900390625],["(*.f64 m (-.f64 1 m))","m","inf",0.24609375],["(*.f64 m (-.f64 1 m))","m","0",0.15185546875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","-inf",0.235107421875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","inf",0.239990234375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","0",0.287109375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","-inf",0.349853515625],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","inf",0.64208984375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","0",0.34912109375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","-inf",0.3671875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","inf",0.360107421875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","0",0.55908203125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","-inf",0.302978515625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","inf",0.4169921875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","0",0.4541015625]],"time":6.590087890625,"type":"series"},{"count":[[4,287]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 m (-.f64 1 m))","(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 0) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) (*.f64 0 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 m) (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 m -1) (*.f64 (-.f64 1 m) (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (+.f64 -1 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 m) (/.f64 (*.f64 m (-.f64 1 m)) v)) 1) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (-.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (-.f64 1 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 m -1) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 2)) (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 m -1) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m -1) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (-.f64 1 m)) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (cbrt.f64 (-.f64 1 m))) (cbrt.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 m)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (cbrt.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (*.f64 (-.f64 1 m) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (cbrt.f64 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 m -1) (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (/.f64 1 (*.f64 (fma.f64 m (+.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (/.f64 1 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (*.f64 (fma.f64 m (+.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) 1) (*.f64 (fma.f64 m (+.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1))) (pow.f64 (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))) (neg.f64 (*.f64 (fma.f64 m (+.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (-.f64 1 m))) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) (-.f64 1 m)) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (+.f64 -1 (pow.f64 m 3))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 m 3)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 m 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3)))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 m -1) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 m -1) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (-.f64 1 m) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 (*.f64 m (-.f64 1 m)) v) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (neg.f64 m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) 0) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (/.f64 1 v) (neg.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 m -1) m) v)) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (neg.f64 (*.f64 m m)) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 (*.f64 v v))) (/.f64 (-.f64 1 m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (-.f64 0 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (-.f64 1 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 m -1) m) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 v) (*.f64 m (-.f64 1 (pow.f64 m 3)))) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m (cbrt.f64 v)) (-.f64 1 m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) m) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m (-.f64 1 m))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 (+.f64 m -1) m))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (/.f64 1 v)) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (/.f64 m (cbrt.f64 (*.f64 v v)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (/.f64 m v)) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 m -1) m) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 m 3)) (/.f64 m v)) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 m v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (-.f64 1 m) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 (*.f64 m (-.f64 1 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m (-.f64 1 m)) 0) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 0 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 m (-.f64 1 m))) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 (neg.f64 (*.f64 m m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (cbrt.f64 (-.f64 1 m))) (cbrt.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 m)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (-.f64 1 m)) (cbrt.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m) (cbrt.f64 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (*.f64 m (cbrt.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m -1) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (-.f64 1 m) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 m -1) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (/.f64 1 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 m -1) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1))) (pow.f64 (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 -1 (pow.f64 m 3))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 m 3)) m) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 m 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m)) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (-.f64 1 (pow.f64 m 3)))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (neg.f64 (*.f64 m m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (neg.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) (/.f64 1 (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (/.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 v)))) (+.f64 -1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (-.f64 1 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (+.f64 1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))) (-.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 6) (+.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2))) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) 1) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 v) (*.f64 m (-.f64 1 m))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 v (*.f64 (+.f64 m -1) m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (cbrt.f64 (*.f64 v v))) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 m -1) m) v) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (*.f64 (cbrt.f64 (*.f64 v v)) -1)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 m (-.f64 1 m)) (neg.f64 v)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 m -1) m) (neg.f64 v)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 m (-.f64 1 m)) v) v)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 m v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (-.f64 1 m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))"]],"rules":[["egg-rr",79],["egg-rr",51],["egg-rr",84],["egg-rr",73]],"time":46.822021484375,"type":"rewrite"},{"count":[[350,316]],"inputs":[["-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(*.f64 -1 (-.f64 1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(*.f64 -1 (-.f64 1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","-1","(-.f64 (/.f64 m v) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(+.f64 (+.f64 (/.f64 m v) m) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(fma.f64 (/.f64 (*.f64 m m) v) -2 (+.f64 (+.f64 (/.f64 m v) m) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) m) (/.f64 m v))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) m) (/.f64 m v))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(*.f64 -1 (-.f64 1 m))","(+.f64 -1 m)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(*.f64 -1 (-.f64 1 m))","(+.f64 -1 m)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (*.f64 (pow.f64 (+.f64 -1 m) 2) (/.f64 m v)) (+.f64 -1 m))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","-1","(-.f64 (/.f64 m v) 1)","(+.f64 (/.f64 m v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"time":254.126953125,"type":"simplify"},{"compiler":[[6520,4336]],"time":76.179931640625,"type":"eval"},{"alts":[["(*.f64 (-.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 m 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m)) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1))) v) 1) (-.f64 1 m))","fresh",0.08269501953688403],["(*.f64 (/.f64 (-.f64 (*.f64 m (-.f64 1 m)) v) v) (-.f64 1 m))","fresh",0.0859375],["(/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))","fresh",2.560878759768442],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","next",0.0546875]],"compiler":[[33,26],[15,10],[23,17],[19,12],[33,26],[15,10],[23,17],[19,12]],"count":[[318,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[316,4],"picked":[1,0]}],"min-error":[0],"time":156.751953125,"type":"prune"},{"compiler":[[60,25]],"locations":[["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))",0.0078125,true],["(+.f64 (/.f64 m v) m)",0.03515625,true],["(*.f64 (*.f64 m m) (+.f64 -2 m))",0.05859375,true],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)",11.070811180709985,true]],"time":11.341064453125,"type":"localize"},{"count":[[4,75]],"series":[["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","-inf",0.652099609375],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","inf",0.21484375],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","0",0.22412109375],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","-inf",0.22509765625],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","inf",0.244873046875],["(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","0",0.211181640625],["(+.f64 (/.f64 m v) m)","v","-inf",0.220947265625],["(+.f64 (/.f64 m v) m)","v","inf",0.236083984375],["(+.f64 (/.f64 m v) m)","v","0",0.239990234375],["(+.f64 (/.f64 m v) m)","m","-inf",0.179931640625],["(+.f64 (/.f64 m v) m)","m","inf",0.39892578125],["(+.f64 (/.f64 m v) m)","m","0",0.2900390625],["(*.f64 (*.f64 m m) (+.f64 -2 m))","m","-inf",0.31591796875],["(*.f64 (*.f64 m m) (+.f64 -2 m))","m","inf",0.261962890625],["(*.f64 (*.f64 m m) (+.f64 -2 m))","m","0",0.160888671875],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","v","-inf",0.3271484375],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","v","inf",1.04296875],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","v","0",0.634033203125],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","m","-inf",0.38916015625],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","m","inf",0.341796875],["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","m","0",0.463134765625]],"time":7.541015625,"type":"series"},{"count":[[4,247]],"inputs":[["(/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)","(*.f64 (*.f64 m m) (+.f64 -2 m))","(+.f64 (/.f64 m v) m)","(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 v) (pow.f64 m 3)) (*.f64 (/.f64 1 v) (*.f64 (*.f64 m m) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 v) (*.f64 (*.f64 m m) -2)) (*.f64 (/.f64 1 v) (pow.f64 m 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (*.f64 0 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 m 3) (/.f64 1 v)) (*.f64 (*.f64 (*.f64 m m) -2) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 m m) -2) (/.f64 1 v)) (*.f64 (pow.f64 m 3) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -2 m) (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -2 m) (cbrt.f64 v)) (/.f64 (*.f64 m m) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (/.f64 (+.f64 -2 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (/.f64 (+.f64 -2 m) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m (cbrt.f64 v)) (*.f64 m (+.f64 -2 m))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 2))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (+.f64 -2 m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -2 m) (cbrt.f64 v)) (*.f64 m m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m (*.f64 m (+.f64 -2 m)))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 v) (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3)))) (+.f64 4 (*.f64 m (+.f64 m 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (*.f64 m (*.f64 m (+.f64 -2 m))))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) 1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m m) -2) (pow.f64 m 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 m 3) (*.f64 (*.f64 m m) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 0) (*.f64 m (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 (*.f64 2 m) m)) (pow.f64 m 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 m (*.f64 m (+.f64 -2 m)))) (*.f64 m (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (*.f64 0 (*.f64 m (*.f64 m (+.f64 -2 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 2 m) m) -1) (*.f64 (neg.f64 (pow.f64 m 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (*.f64 m (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (+.f64 -2 m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 2)) (cbrt.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -2 m) (cbrt.f64 (*.f64 m m))) (cbrt.f64 (pow.f64 m 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 m m) (cbrt.f64 (+.f64 -2 m))) (cbrt.f64 (pow.f64 (+.f64 -2 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 (pow.f64 m 4)) (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 -2 m)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -2 m) 2)) (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (+.f64 -2 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -2 m) (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 m 4)) (*.f64 (cbrt.f64 (*.f64 m m)) (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (neg.f64 (*.f64 m (+.f64 -2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 -2 m)) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m m)) (neg.f64 (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3))) (/.f64 1 (+.f64 4 (*.f64 m (+.f64 m 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3))) (+.f64 4 (*.f64 m (+.f64 m 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m m) (+.f64 (neg.f64 (pow.f64 m 3)) 8)) (+.f64 (*.f64 m (-.f64 -2 m)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (*.f64 m (+.f64 -8 (pow.f64 m 3)))) (+.f64 4 (*.f64 m (+.f64 m 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3)))) (+.f64 4 (*.f64 m (+.f64 m 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3))) (cbrt.f64 (+.f64 4 (*.f64 m (+.f64 m 2))))) (pow.f64 (cbrt.f64 (+.f64 4 (*.f64 m (+.f64 m 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3))) 1) (+.f64 4 (*.f64 m (+.f64 m 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 m m) (+.f64 -8 (pow.f64 m 3)))) (+.f64 (*.f64 m (-.f64 -2 m)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) -2 (pow.f64 m 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (*.f64 m m) (pow.f64 m 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (+.f64 (/.f64 m v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (-.f64 m 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (-.f64 (/.f64 m v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 m v) m) 0) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (*.f64 (+.f64 (/.f64 m v) m) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (+.f64 (/.f64 m v) m)) 0) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 m v) m)) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (*.f64 0 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (+.f64 (/.f64 m v) m))) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 m v) m) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 m (neg.f64 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 m v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (/.f64 m v) m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 (/.f64 m v) m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (+.f64 (/.f64 (cbrt.f64 (*.f64 m m)) v) (cbrt.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 (/.f64 1 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (+.f64 (cbrt.f64 (*.f64 m m)) (/.f64 (cbrt.f64 (*.f64 m m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 1 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (+.f64 (/.f64 m v) m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 v) 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (/.f64 m v) m))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (+.f64 (/.f64 m v) m))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 0 (*.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) 0))) (+.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 m v) 2)) (-.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (/.f64 (*.f64 m m) v)))) (+.f64 (cbrt.f64 (/.f64 m v)) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 m m)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 m v) 2)) (cbrt.f64 (/.f64 (*.f64 m m) v)))) (+.f64 (cbrt.f64 m) (cbrt.f64 (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (+.f64 0 (*.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) 0))) (-.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (cbrt.f64 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 m v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 m v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 m v)) (cbrt.f64 (pow.f64 (/.f64 m v) 2)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 m v) m) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (/.f64 m v) m)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 m v) m) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (cbrt.f64 (+.f64 (/.f64 m v) m)) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 m -1) (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) (/.f64 m v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -1 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) m) (/.f64 (-.f64 m v) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) -1) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 m v) v) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (+.f64 (/.f64 (-.f64 m v) v) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (-.f64 (/.f64 m v) (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 0) (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) (*.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))) (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) (*.f64 0 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) 1) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (*.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) 1) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 m v) m) (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0) (-.f64 1 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 1 (+.f64 (/.f64 m v) m)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (-.f64 1 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (/.f64 1 (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (/.f64 1 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (/.f64 1 (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (neg.f64 v)) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (/.f64 1 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 3) -1) (/.f64 1 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 2) (+.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (+.f64 (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1))) (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 2)) (cbrt.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (neg.f64 v)) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 3) -1) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 2) (*.f64 -1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (cbrt.f64 (*.f64 v v))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) v) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) (cbrt.f64 (*.f64 v v))) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)))) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) (neg.f64 v)) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (*.f64 (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))) (*.f64 v (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 v (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))) (*.f64 (neg.f64 v) (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 (neg.f64 v) (+.f64 (-.f64 -1 (+.f64 (/.f64 m v) m)) (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1)))) (neg.f64 (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (*.f64 m (*.f64 m (+.f64 -2 m)))))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (neg.f64 v)) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m))))))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 3) -1)) (neg.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 2) (+.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (neg.f64 v)) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 3) -1) (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) 2) (+.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (neg.f64 v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 (/.f64 m v) (+.f64 m 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) (+.f64 m -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (/.f64 1 v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 m v) (+.f64 m -1)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 m v) m) 1 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (/.f64 m v) m)) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 m v) m) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) m) v) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (cbrt.f64 (+.f64 (/.f64 m v) m)) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))))"]],"rules":[["egg-rr",97],["egg-rr",52],["egg-rr",47],["egg-rr",51]],"time":51.762939453125,"type":"rewrite"},{"count":[[322,276]],"inputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(*.f64 -2 (pow.f64 m 2))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(/.f64 m v)","m","m","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (+.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) m) v)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 m 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 m 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 -2 (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(*.f64 -2 (pow.f64 m 2))","(*.f64 -2 (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(*.f64 (+.f64 m -2) (*.f64 m m))","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(*.f64 (+.f64 1 (/.f64 1 v)) m)","(+.f64 (/.f64 m v) m)","(/.f64 m v)","m","m","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(+.f64 (+.f64 (/.f64 m v) m) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(fma.f64 (/.f64 (*.f64 m m) v) -2 (+.f64 (+.f64 (/.f64 m v) m) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) m)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) m)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (+.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) m) v)","(/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 m 1)","(+.f64 m -1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 m 1)","(+.f64 m -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))"]],"time":210.7021484375,"type":"simplify"},{"compiler":[[6900,3569]],"time":60.516845703125,"type":"eval"},{"alts":[["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","fresh",0.03515625],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","next",0.01953125],["(/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))","fresh",2.560878759768442],["(+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)","fresh",0.0703125]],"compiler":[[19,12],[23,16],[23,17],[19,11],[19,12],[23,16],[23,17],[19,11]],"count":[[280,4]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[276,3],"picked":[1,0]}],"min-error":[0],"time":119.8291015625,"type":"prune"},{"compiler":[[80,46]],"locations":[["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))",0.0234375,true],["(+.f64 (/.f64 m v) m)",0.03515625,false],["(/.f64 (pow.f64 m 3) v)",9.206192844869776,true],["(/.f64 (pow.f64 m 2) v)",11.065462324089662,true]],"time":17.47900390625,"type":"localize"},{"count":[[3,15]],"series":[["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","v","-inf",0.32080078125],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","v","inf",0.27392578125],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","v","0",0.2861328125],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","m","-inf",0.182861328125],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","m","inf",0.238037109375],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","m","0",0.23681640625],["(/.f64 (pow.f64 m 3) v)","v","-inf",0.302978515625],["(/.f64 (pow.f64 m 3) v)","v","inf",0.348876953125],["(/.f64 (pow.f64 m 3) v)","v","0",0.492919921875],["(/.f64 (pow.f64 m 3) v)","m","-inf",0.3330078125],["(/.f64 (pow.f64 m 3) v)","m","inf",0.31884765625],["(/.f64 (pow.f64 m 3) v)","m","0",0.387939453125],["(/.f64 (pow.f64 m 2) v)","v","-inf",0.30908203125],["(/.f64 (pow.f64 m 2) v)","v","inf",0.31396484375],["(/.f64 (pow.f64 m 2) v)","v","0",0.370849609375],["(/.f64 (pow.f64 m 2) v)","m","-inf",0.176025390625],["(/.f64 (pow.f64 m 2) v)","m","inf",0.343994140625],["(/.f64 (pow.f64 m 2) v)","m","0",0.371826171875]],"time":5.7919921875,"type":"series"},{"count":[[3,196]],"inputs":[["(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m m) v) 0) (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m m) v) (*.f64 (/.f64 (*.f64 m m) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m m) v)) (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m m) v) (*.f64 0 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (neg.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m m) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)) (cbrt.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m m)) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m m) v)) (cbrt.f64 (/.f64 (pow.f64 m 4) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (/.f64 (cbrt.f64 (pow.f64 m 4)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 m 4) (*.f64 v v))) (cbrt.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (cbrt.f64 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 (*.f64 v v))) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 m 4)) v) (cbrt.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 m m) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m m) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m m) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 m m) v)) (cbrt.f64 (pow.f64 m 4))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m (cbrt.f64 v)) m) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)) (cbrt.f64 (*.f64 m m))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)) (cbrt.f64 (neg.f64 (*.f64 m m)))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 m) (/.f64 m (cbrt.f64 (*.f64 v v)))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (/.f64 m (cbrt.f64 (*.f64 v v)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 m m))) (cbrt.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 m m))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m m)) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m m) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m m) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m m) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m m) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m m) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 m 3) v) 0) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (/.f64 (pow.f64 m 3) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 m 3) v) (*.f64 0 (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 m 3)) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 m 3) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (pow.f64 m 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (pow.f64 m 3) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3) (neg.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 (*.f64 v v))) (/.f64 (*.f64 m m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (neg.f64 (pow.f64 m 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 m 3) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 m 3)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (neg.f64 m)) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) m) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m (cbrt.f64 v)) (*.f64 m m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (pow.f64 m 3)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (/.f64 (*.f64 m m) (cbrt.f64 v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 m 3) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) m) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 m) (pow.f64 (/.f64 m (cbrt.f64 v)) 2)) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (pow.f64 (/.f64 m (cbrt.f64 v)) 2)) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m m) (/.f64 m (cbrt.f64 (*.f64 v v)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 m 3)) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 m 3) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 m 3) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 m (cbrt.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 m 3) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 m 3) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 0) (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (*.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)) (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (*.f64 0 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) 2)) (*.f64 (/.f64 m (cbrt.f64 v)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (+.f64 (/.f64 m (cbrt.f64 v)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) 2)) (-.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (*.f64 (/.f64 m (cbrt.f64 v)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v)) (/.f64 m (cbrt.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (+.f64 (/.f64 m v) (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (+.f64 (/.f64 -2 v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 (*.f64 m m) (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (+.f64 (/.f64 m (cbrt.f64 v)) (cbrt.f64 (/.f64 -8 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) v) (+.f64 m -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (+.f64 (cbrt.f64 (/.f64 -8 v)) (/.f64 m (cbrt.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) v) (+.f64 -2 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3)))) (/.f64 1 (neg.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 m 3) v (*.f64 (*.f64 -2 (*.f64 m m)) v)) (/.f64 1 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 m 3)) (cbrt.f64 (*.f64 v v))) (*.f64 (neg.f64 v) (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)))) (*.f64 (neg.f64 v) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) v) (*.f64 (cbrt.f64 (*.f64 v v)) (*.f64 -2 (*.f64 m m)))) (*.f64 (cbrt.f64 (*.f64 v v)) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (neg.f64 v)) (*.f64 (cbrt.f64 (*.f64 v v)) (*.f64 2 (*.f64 m m)))) (*.f64 (cbrt.f64 (*.f64 v v)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 m 3) (cbrt.f64 (*.f64 v v))) (*.f64 v (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)))) (*.f64 v (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 (*.f64 v v))) (*.f64 v (/.f64 (pow.f64 m 3) (cbrt.f64 v)))) (*.f64 v (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)) v) (*.f64 (cbrt.f64 (*.f64 v v)) (pow.f64 m 3))) (*.f64 (cbrt.f64 (*.f64 v v)) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)) (neg.f64 v)) (*.f64 (cbrt.f64 (*.f64 v v)) (neg.f64 (pow.f64 m 3)))) (*.f64 (cbrt.f64 (*.f64 v v)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 2 (*.f64 m m)) (cbrt.f64 (*.f64 v v))) (*.f64 (neg.f64 v) (/.f64 (pow.f64 m 3) (cbrt.f64 v)))) (*.f64 (neg.f64 v) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3)))) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 m 3) v (*.f64 (*.f64 -2 (*.f64 m m)) v)) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) 1) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (pow.f64 m 3) v (*.f64 (*.f64 -2 (*.f64 m m)) v)) 1) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3)))) 1) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3)))) v) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) 1) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3)))) (neg.f64 v)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (pow.f64 m 3) v (*.f64 (*.f64 -2 (*.f64 m m)) v)) v) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)) (/.f64 (pow.f64 m 3) (cbrt.f64 v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 m m)) (neg.f64 (pow.f64 m 3))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 m 3)) (*.f64 2 (*.f64 m m))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 m 3) (neg.f64 v)) (*.f64 v (*.f64 2 (*.f64 m m)))) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 m 3)) (neg.f64 v)) (*.f64 (neg.f64 v) (*.f64 2 (*.f64 m m)))) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v))) (*.f64 (cbrt.f64 (*.f64 v v)) (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)))) (*.f64 (cbrt.f64 (*.f64 v v)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 m m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v))) (*.f64 (cbrt.f64 (*.f64 v v)) (/.f64 (pow.f64 m 3) (cbrt.f64 v)))) (*.f64 (cbrt.f64 (*.f64 v v)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 2 (*.f64 m m)) v) (*.f64 (neg.f64 v) (pow.f64 m 3))) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 2 (*.f64 m m)) (neg.f64 v)) (*.f64 (neg.f64 v) (neg.f64 (pow.f64 m 3)))) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 m m) (+.f64 -2 m))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 -2 (*.f64 m m)) (neg.f64 v) (*.f64 v (neg.f64 (pow.f64 m 3))))) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 m 3) v (*.f64 (*.f64 -2 (*.f64 m m)) v))) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) 2)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 m 3) (/.f64 1 v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m m) v) -2 (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m m) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)) -2) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (*.f64 m m)) (/.f64 1 v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -2) (*.f64 (cbrt.f64 4) (/.f64 (*.f64 m m) v)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 m m) v) (cbrt.f64 -2)) (cbrt.f64 4) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) (/.f64 -2 v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -8 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 2 (*.f64 m m)) v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (cbrt.f64 (/.f64 (*.f64 m m) v))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m m) v) 2)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (pow.f64 m 3) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) (/.f64 m v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (pow.f64 m 3) (cbrt.f64 (*.f64 v v))) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (pow.f64 m 3) (neg.f64 v)) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m m) v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 m (cbrt.f64 v)) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 m 3)) (/.f64 -1 v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 -2 (*.f64 m m)) v) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 -2 (*.f64 m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -2 (*.f64 m m)) v) 1 (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 m 3) v) 1 (/.f64 (*.f64 -2 (*.f64 m m)) v))))))"]],"rules":[["egg-rr",91],["egg-rr",50],["egg-rr",55]],"time":37.593994140625,"type":"rewrite"},{"count":[[211,201]],"inputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(/.f64 (pow.f64 m 3) v)","(/.f64 (pow.f64 m 3) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 -2 m) m) v)","(/.f64 (pow.f64 m 3) v)","(/.f64 (pow.f64 m 3) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3)) v)","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (*.f64 -1 (pow.f64 m 3))) v))","(/.f64 (*.f64 (*.f64 m m) (+.f64 m -2)) v)"]],"time":62.43896484375,"type":"simplify"},{"compiler":[[6699,3283]],"time":57.85791015625,"type":"eval"},{"alts":[["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","next",0.03515625],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","done",0.01953125],["(/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))","fresh",2.560878759768442],["(+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)","fresh",0.0703125]],"compiler":[[19,12],[23,16],[23,17],[19,11],[19,12],[23,17],[19,11]],"count":[[260,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[256,0],"picked":[1,1]}],"min-error":[0],"time":108.468994140625,"type":"prune"},{"compiler":[[62,30]],"locations":[["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))",0.0078125,true],["(+.f64 (/.f64 m v) m)",0.03515625,false],["(/.f64 (*.f64 m (+.f64 -2 m)) v)",0.0390625,true],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))",0.15234375,true]],"time":12.76806640625,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","-inf",0.18798828125],["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","inf",0.1669921875],["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","v","0",0.18701171875],["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","-inf",0.177001953125],["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","inf",0.179931640625],["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","m","0",0.18603515625],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","v","-inf",0.326171875],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","v","inf",0.357177734375],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","v","0",0.43994140625],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","m","-inf",0.238037109375],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","m","inf",0.22900390625],["(/.f64 (*.f64 m (+.f64 -2 m)) v)","m","0",0.3388671875],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","v","-inf",0.1669921875],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","v","inf",0.180908203125],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","v","0",0.155029296875],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","m","-inf",0.20703125],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","m","inf",0.183837890625],["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","m","0",0.235107421875]],"time":4.3740234375,"type":"series"},{"count":[[3,185]],"inputs":[["(*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))","(/.f64 (*.f64 m (+.f64 -2 m)) v)","(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (*.f64 0 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 2)) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (/.f64 (*.f64 m (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (+.f64 -2 m)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (cbrt.f64 v)) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) 1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 0) (/.f64 (*.f64 m (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (/.f64 (*.f64 m (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) (*.f64 0 (/.f64 (*.f64 m (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 v) (*.f64 m m)) (*.f64 (/.f64 1 v) (*.f64 m -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 v) (*.f64 m -2)) (*.f64 (/.f64 1 v) (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m m) v) (*.f64 (*.f64 m -2) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m -2) (/.f64 1 v)) (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (+.f64 -2 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -2 m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 m (+.f64 -2 m)) 2) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -2 m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m (+.f64 -2 m))) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (+.f64 -2 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (+.f64 -2 m)) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (+.f64 -2 m) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (+.f64 -2 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (+.f64 -2 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (+.f64 -2 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 -2 m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (+.f64 -2 m))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 m (+.f64 -2 m))) 1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 -2 m)) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) (neg.f64 v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 -2 m) (neg.f64 (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 m -1) (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) (/.f64 m v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) m) (/.f64 (-.f64 m v) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -1 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1))) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) -1) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (+.f64 (/.f64 (-.f64 m v) v) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 m v) v) (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (-.f64 (/.f64 m v) (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 0) (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) (*.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))) (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) (*.f64 0 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) 1) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (+.f64 (+.f64 m -1) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) 1) (+.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (*.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 m v) m) (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 m v) m) (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 0) (-.f64 1 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 1 (+.f64 (/.f64 m v) m)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (-.f64 1 (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 3) -1) (/.f64 1 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 2) (+.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (/.f64 1 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (/.f64 1 (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))) (cbrt.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (+.f64 (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1))) (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 2)) (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 3) -1) (+.f64 1 (-.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 2) (*.f64 -1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))) (*.f64 (neg.f64 v) (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 (neg.f64 v) (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 (neg.f64 v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))) (*.f64 v (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 v (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) (*.f64 (cbrt.f64 (*.f64 v v)) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (cbrt.f64 (*.f64 v v))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) (neg.f64 v)) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) (neg.f64 v)) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) (neg.f64 (*.f64 m (*.f64 m (+.f64 -2 m)))))) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) v) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3))) (cbrt.f64 (*.f64 v v))) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (cbrt.f64 v)))) (*.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (-.f64 (-.f64 -1 m) (/.f64 m v))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 3) -1)) (neg.f64 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 2) (+.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (*.f64 m (*.f64 m (+.f64 -2 m)))))) (neg.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1)))) (neg.f64 (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1) v) (*.f64 (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))) (*.f64 m (*.f64 m (+.f64 -2 m))))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 3) -1) (+.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) 2) (+.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1)))) (*.f64 v (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 3) -1))) v) (+.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2) (+.f64 m (+.f64 (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (+.f64 (/.f64 m v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) (+.f64 m -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 m v) (+.f64 m -1))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) (+.f64 m -1)) 2)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (+.f64 -2 m)) v) m (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) 2)) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 m v) (+.f64 m -1)) (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (+.f64 (/.f64 m v) (+.f64 m -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 m v) m) (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (/.f64 m v) m)) (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 m v) m) 1 (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)) (pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m (+.f64 -2 m)) 1)) m)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 m v) m)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 m v) m) 2)) (cbrt.f64 (+.f64 (/.f64 m v) m)) (neg.f64 (-.f64 1 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v))))))))"]],"rules":[["egg-rr",94],["egg-rr",50],["egg-rr",41]],"time":44.408935546875,"type":"rewrite"},{"count":[[257,213]],"inputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(*.f64 -2 (/.f64 m v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (pow.f64 m 2) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (pow.f64 m 2) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (+.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) m) v)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 m 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(-.f64 m 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 -2 (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v)","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(*.f64 -2 (/.f64 m v))","(/.f64 (*.f64 -2 m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(+.f64 (*.f64 -2 (/.f64 m v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","(/.f64 (*.f64 (-.f64 m 2) m) v)","(/.f64 (*.f64 (+.f64 m -2) m) v)","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(+.f64 (+.f64 (/.f64 m v) m) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(fma.f64 -2 (/.f64 (*.f64 m m) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) m)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (*.f64 (+.f64 m -2) (*.f64 m m)) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) m)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(/.f64 (+.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) m) v)","(/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 m 1)","(+.f64 m -1)","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (/.f64 m v) (+.f64 (/.f64 (*.f64 (-.f64 m 2) (pow.f64 m 2)) v) m)) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 m 1)","(+.f64 m -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 m) (*.f64 -1 (*.f64 (-.f64 m 2) (pow.f64 m 2)))) v)) m) 1)","(+.f64 (/.f64 (fma.f64 (+.f64 m -2) (*.f64 m m) m) v) (+.f64 m -1))"]],"time":203.583984375,"type":"simplify"},{"compiler":[[6417,3373]],"time":56.964111328125,"type":"eval"},{"alts":[["(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","done",0.03515625],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","done",0.01953125],["(/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))","fresh",2.560878759768442],["(+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)","fresh",0.0703125]],"compiler":[[19,12],[23,16],[23,17],[19,11]],"count":[[272,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[268,1],"picked":[1,1]}],"min-error":[0],"time":123.737060546875,"type":"prune"},{"accuracy":[0.01953125],"baseline":[0.01953125],"branch":[["m",0.01953125,1],["v",0.01953125,1],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",0.01953125,1]],"compiler":[[3,2],[3,2],[15,11],[181,110]],"count":[[10,1]],"inputs":[["(+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)","(+.f64 (*.f64 m (/.f64 (*.f64 m (+.f64 -2 m)) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","(+.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (+.f64 -2 m))) v) (/.f64 (-.f64 m v) v)) m)","(*.f64 (-.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 m 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m)) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1))) v) 1) (-.f64 1 m))","(*.f64 (/.f64 (-.f64 (*.f64 m (-.f64 1 m)) v) v) (-.f64 1 m))","(/.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))","(+.f64 (/.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) v) (+.f64 (+.f64 (/.f64 m v) m) -1))","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (-.f64 1 m))","(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))"]],"link":["."],"name":["b parameter of renormalized beta distribution"],"oracle":[2.6412887695368843],"outputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))"]],"time":14.261962890625,"times":[["m",4.07080078125],["v",4.448974609375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",2.81201171875]],"type":"regimes"},{"compiler":[[23,16]],"inputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v)) (+.f64 (+.f64 (/.f64 m v) m) -1))","(+.f64 (/.f64 (+.f64 (*.f64 (*.f64 m m) (+.f64 -2 m)) m) v) (+.f64 m -1))"]],"stop":[["fuel",1]],"time":25.594970703125,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[23,16]],"remove-preprocessing":[[]],"time":11.5849609375,"type":"end"}]