[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.5036602020263672,0.0009760856628417969,0.495363712310791],[11,0.5036602020263672,0.0019521713256835938,0.4943876266479492],[10,0.5036602020263672,0.0039043426513671875,0.4924354553222656],[9,0.499755859375,0.007808685302734375,0.4924354553222656],[8,0.499755859375,0.01561737060546875,0.48462677001953125],[7,0.499755859375,0.0312347412109375,0.4690093994140625],[6,0.499755859375,0.062469482421875,0.437774658203125],[5,0.499755859375,0.12493896484375,0.37530517578125],[4,0.499755859375,0.2498779296875,0.2503662109375],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.718994140625,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.402587890625,8],["body",512,"valid",100.134765625,1053],["body",1024,"valid",370.206787109375,2078],["body",2048,"valid",1699.2958984375,4274],["body",256,"valid",38.33203125,851]],"time":2216.820068359375,"type":"sample"},{"compiler":[[9,7]],"inputs":[["0"],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)"]],"symmetry":[[]],"time":52.426025390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)"]],"time":19.0478515625,"type":"simplify"},{"compiler":[[17,10]],"time":0.345947265625,"type":"eval"},{"alts":[["(+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)","fresh",28.97791042244496],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","next",28.929898395059208]],"compiler":[[9,7],[9,7],[9,7],[9,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[28.92178631442153],"time":1.254150390625,"type":"prune"},{"compiler":[[22,10]],"locations":[["(exp.f64 (neg.f64 x))",0.00390625,true],["(-.f64 (exp.f64 x) 2)",0.03515625,true],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",3.7021616879806554,true]],"time":6.14892578125,"type":"localize"},{"count":[[3,24]],"series":[["(exp.f64 (neg.f64 x))","x","-inf",0.14013671875],["(exp.f64 (neg.f64 x))","x","inf",0.14208984375],["(exp.f64 (neg.f64 x))","x","0",0.211181640625],["(-.f64 (exp.f64 x) 2)","x","-inf",0.15478515625],["(-.f64 (exp.f64 x) 2)","x","inf",0.18701171875],["(-.f64 (exp.f64 x) 2)","x","0",0.197021484375],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","-inf",0.23388671875],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","inf",0.26220703125],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","x","0",0.48095703125]],"time":2.117919921875,"type":"series"},{"count":[[3,204]],"inputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","(-.f64 (exp.f64 x) 2)","(exp.f64 (neg.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 0) (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) (*.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)) (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) (*.f64 0 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 x) -2) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -2 (exp.f64 (neg.f64 x))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) (*.f64 (+.f64 -2 (exp.f64 (neg.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) (-.f64 2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 x)) (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 x)) (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 x)) 0) (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 2 (exp.f64 x)) (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (-.f64 (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 x) -2) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 -2 (exp.f64 (neg.f64 x))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 0) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (-.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (/.f64 (+.f64 (exp.f64 x) -2) (exp.f64 x))))) (+.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (cbrt.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (cbrt.f64 (/.f64 (+.f64 (exp.f64 x) -2) (exp.f64 x))))) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (+.f64 (exp.f64 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 2)) (cbrt.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (/.f64 1 (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) 1) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 3) -8) (+.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))) (-.f64 4 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 3) 8) (+.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))) (+.f64 4 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (neg.f64 (exp.f64 x))) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) -1)) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) (cbrt.f64 (exp.f64 (neg.f64 x))))) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x)) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) 1)) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (neg.f64 (exp.f64 x))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) -1)) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (cbrt.f64 (exp.f64 (neg.f64 x))))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (neg.f64 (exp.f64 x))) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) -1)) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (cbrt.f64 (exp.f64 (neg.f64 x))))) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (exp.f64 x)) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) 1)) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 (exp.f64 (*.f64 x 3)) -8))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 (exp.f64 (*.f64 x 3)) -8))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) (*.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x))) (*.f64 (exp.f64 x) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (exp.f64 x) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (exp.f64 x) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))) (*.f64 (neg.f64 (exp.f64 x)) (+.f64 (exp.f64 (*.f64 x 3)) -8))) (*.f64 (neg.f64 (exp.f64 x)) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (*.f64 (neg.f64 (exp.f64 x)) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (neg.f64 (exp.f64 x)) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (neg.f64 (exp.f64 x)) (+.f64 (exp.f64 (*.f64 x 3)) -8))) (*.f64 (neg.f64 (exp.f64 x)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (*.f64 (exp.f64 x) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (neg.f64 (exp.f64 x)) (-.f64 8 (exp.f64 (*.f64 x 3))))) (*.f64 (neg.f64 (exp.f64 x)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) 1) (*.f64 (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (neg.f64 (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (exp.f64 x) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (exp.f64 x)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 2 (exp.f64 x)) (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 x)) (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (cbrt.f64 (+.f64 (exp.f64 x) -2)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (/.f64 1 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 2 (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (exp.f64 x) -2) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 x)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 x)) 1 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) 1 (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (exp.f64 x)) (+.f64 -2 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (exp.f64 x) -2) 1 (exp.f64 (neg.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (exp.f64 x) -2) 0) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 x) -2) (*.f64 (+.f64 (exp.f64 x) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (exp.f64 x) -2)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 x) -2) (*.f64 0 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (neg.f64 (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 (*.f64 x 3)) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))) (/.f64 8 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (exp.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -2 (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 x) 0) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (/.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (cbrt.f64 (pow.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8)) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) 2)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (cbrt.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (/.f64 (+.f64 (exp.f64 x) -2) (cbrt.f64 (pow.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (+.f64 (cbrt.f64 4) (cbrt.f64 (*.f64 (exp.f64 x) 2)))) (-.f64 (cbrt.f64 (exp.f64 x)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (cbrt.f64 (+.f64 (exp.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (/.f64 1 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (+.f64 (exp.f64 (*.f64 x 3)) -8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 2 (exp.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 2 (exp.f64 x)))) (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 2 (exp.f64 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (/.f64 1 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (/.f64 1 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) (/.f64 (+.f64 (exp.f64 x) -2) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (exp.f64 (*.f64 (*.f64 x 3) 3)) 512) (/.f64 1 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (+.f64 (pow.f64 (exp.f64 x) 6) (*.f64 8 (+.f64 (exp.f64 (*.f64 x 3)) 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (cbrt.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (cbrt.f64 (pow.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (*.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) 8)) (pow.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) 1) (*.f64 (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (exp.f64 (*.f64 (*.f64 x 3) 3)) 512) 1) (*.f64 (+.f64 (pow.f64 (exp.f64 x) 6) (*.f64 8 (+.f64 (exp.f64 (*.f64 x 3)) 8))) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2)) (cbrt.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8))) (cbrt.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) 1) (neg.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8)) (cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2))) (cbrt.f64 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (+.f64 4 (-.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x) (*.f64 (exp.f64 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (*.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 8 (exp.f64 (*.f64 x 3))) (neg.f64 (fma.f64 (exp.f64 x) (exp.f64 x) (*.f64 -2 (-.f64 -2 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (exp.f64 x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 2 (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2)) (sqrt.f64 2) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (neg.f64 (sqrt.f64 2)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 -4) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 2 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -2) (cbrt.f64 4) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -2 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) 1 -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (exp.f64 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (exp.f64 x) -2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (neg.f64 x)) 0) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (neg.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 0 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (exp.f64 x)) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 x)) (/.f64 0 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 x))) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 x)))) (cbrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 x)))) 1) (/.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (/.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) -1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 x x))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 x 3)) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 x)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (*.f64 x 3)) 1/3))))))"]],"rules":[["egg-rr",44],["egg-rr",73],["egg-rr",87]],"time":38.796142578125,"type":"rewrite"},{"count":[[228,229]],"inputs":[["(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","-1","(-.f64 x 1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) x) 1)","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) x)) 1)","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (*.f64 -1 x))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 (pow.f64 x 4) 1/12 (*.f64 x x))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 (pow.f64 x 6) 1/360 (fma.f64 (pow.f64 x 4) 1/12 (*.f64 x x)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","(-.f64 (+.f64 (exp.f64 x) (exp.f64 (*.f64 -1 x))) 2)","(+.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -2)","-1","(-.f64 x 1)","(+.f64 x -1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) x) 1)","(fma.f64 (*.f64 x x) 1/2 (+.f64 x -1))","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) x)) 1)","(+.f64 (fma.f64 (pow.f64 x 3) 1/6 (fma.f64 1/2 (*.f64 x x) x)) -1)","1","(+.f64 1 (*.f64 -1 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (-.f64 1 x) (*.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(+.f64 (fma.f64 (pow.f64 x 3) -1/6 1) (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))","(exp.f64 (*.f64 -1 x))","(exp.f64 (neg.f64 x))"]],"time":78.44091796875,"type":"simplify"},{"compiler":[[4014,2125]],"time":44.094970703125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","fresh",28.99173903240162],["(pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)","fresh",29.248233798312494],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","next",0.8049304773746091]],"compiler":[[9,7],[11,8],[13,11],[19,14],[11,8],[13,11],[19,14]],"count":[[231,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[229,3],"picked":[1,1]}],"min-error":[0.010097509768442016],"time":72.35595703125,"type":"prune"},{"compiler":[[63,47]],"locations":[["(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))",0.00390625,true],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))",0.01171875,true],["(*.f64 1/20160 (pow.f64 x 8))",0.0390625,true],["(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))",0.078125,true]],"time":17.022216796875,"type":"localize"},{"count":[[4,36]],"series":[["(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","-inf",0.212890625],["(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","inf",0.18603515625],["(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","0",0.2509765625],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","x","-inf",0.28515625],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","x","inf",0.3310546875],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","x","0",0.260986328125],["(*.f64 1/20160 (pow.f64 x 8))","x","-inf",0.18115234375],["(*.f64 1/20160 (pow.f64 x 8))","x","inf",0.195068359375],["(*.f64 1/20160 (pow.f64 x 8))","x","0",0.30517578125],["(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","x","-inf",0.887939453125],["(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","x","inf",0.708984375],["(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","x","0",0.7119140625]],"time":4.747802734375,"type":"series"},{"count":[[4,151]],"inputs":[["(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 0) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 0 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2)) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/12) (*.f64 (cbrt.f64 1/144) (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (cbrt.f64 (pow.f64 x 4))) (cbrt.f64 (pow.f64 x 8)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) 1/12 (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 1/12) (*.f64 x x)) (*.f64 (sqrt.f64 1/12) (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (*.f64 x x)) (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/12) (*.f64 (sqrt.f64 1/12) (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/12 (pow.f64 x 4))) (cbrt.f64 (*.f64 (pow.f64 x 8) 1/144)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) (cbrt.f64 (*.f64 (pow.f64 x 16) 1/406425600)) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/20160) (*.f64 (pow.f64 x 8) (sqrt.f64 1/20160)) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 16) 1/406425600)) (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 8)) (*.f64 (cbrt.f64 (pow.f64 x 16)) 1/20160) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x 8) (sqrt.f64 1/20160)) (sqrt.f64 1/20160) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/20160) (*.f64 (cbrt.f64 1/406425600) (pow.f64 x 8)) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x 8) (cbrt.f64 1/20160)) (cbrt.f64 1/406425600) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/12 (pow.f64 x 4)) 1 (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/20160 (pow.f64 x 8)) 1 (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 8) 1/20160 (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/20160 (pow.f64 x 8) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/20160 (cbrt.f64 (pow.f64 x 8))) (cbrt.f64 (pow.f64 x 16)) (*.f64 1/12 (pow.f64 x 4)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/20160 (pow.f64 x 8)) 0) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 (*.f64 1/20160 (pow.f64 x 8)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 0 (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/20160) (*.f64 (cbrt.f64 1/406425600) (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/20160 (pow.f64 x 8))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/406425600) (pow.f64 x 8)) (cbrt.f64 1/20160))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) (cbrt.f64 (*.f64 (pow.f64 x 16) 1/406425600)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 x 16) 1/406425600)) (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 8)) (*.f64 (cbrt.f64 (pow.f64 x 16)) 1/20160))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 8) (sqrt.f64 1/20160)) (sqrt.f64 1/20160))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 8) (cbrt.f64 1/20160)) (cbrt.f64 1/406425600))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/20160) (*.f64 (pow.f64 x 8) (sqrt.f64 1/20160)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/20160 (pow.f64 x 8)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 x 16)) 1/20160) (cbrt.f64 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/406425600) (*.f64 (pow.f64 x 8) (cbrt.f64 1/20160)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/20160 (pow.f64 x 8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 8) 1/20160)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/20160 (cbrt.f64 (pow.f64 x 8))) (cbrt.f64 (pow.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 16)) (*.f64 1/20160 (cbrt.f64 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/20160 (pow.f64 x 8)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/20160 (pow.f64 x 8))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/20160 (pow.f64 x 8)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (pow.f64 x 6) 1/360 (*.f64 x x)) (*.f64 1/12 (pow.f64 x 4))) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x 6) 1/360 (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 x x (*.f64 1/12 (pow.f64 x 4)))) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 0) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (*.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (*.f64 0 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (pow.f64 x 6) 1/360 (*.f64 x x)) 1) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (fma.f64 (pow.f64 x 6) 1/360 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (pow.f64 x 6) 1/360 (*.f64 x x)) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))) (+.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 1/360 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (+.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/360 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) (cbrt.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 2)) (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/360) (*.f64 (cbrt.f64 1/129600) (pow.f64 x 6)) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/360 (*.f64 x x)) (pow.f64 x 4) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 6) 1/360 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 1/360) (*.f64 x x)) (pow.f64 (*.f64 (cbrt.f64 1/360) (*.f64 x x)) 2) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/360) (*.f64 (sqrt.f64 1/360) (pow.f64 x 6)) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2)) (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2)) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/360 (pow.f64 x 6)) 1 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/360 (pow.f64 x 6)) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 1/360 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1 (*.f64 1/360 (pow.f64 x 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 0) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 0 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))) 1) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/12 (pow.f64 x 4)) (+.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2)) (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 x 4)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2)) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 1 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 x x))))))"]],"rules":[["egg-rr",36],["egg-rr",42],["egg-rr",30],["egg-rr",43]],"time":39.39599609375,"type":"rewrite"},{"count":[[187,164]],"inputs":[["(*.f64 1/12 (pow.f64 x 4))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/12 (pow.f64 x 4))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 (pow.f64 x 4) 1/12 (*.f64 x x))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) 1/12 (*.f64 x x)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/360 (pow.f64 x 6) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 (pow.f64 x 4) 1/12 (*.f64 x x))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8))))","(fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))"]],"time":140.59716796875,"type":"simplify"},{"compiler":[[3673,2741]],"time":55.248046875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","fresh",28.99173903240162],["(pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)","fresh",29.248233798312494],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","done",0.8049304773746091],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","next",0.9898517634280791]],"compiler":[[9,7],[11,8],[13,11],[19,14],[25,18],[11,8],[13,11],[25,18]],"count":[[168,5]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[164,1],"picked":[1,1]}],"min-error":[0.006191259768442017],"time":59.8818359375,"type":"prune"},{"compiler":[[90,51]],"locations":[["(cbrt.f64 x)",0.08203125,true],["(fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))",0.14128876953688405,true],["(*.f64 (cbrt.f64 (*.f64 x x)) x)",0.1484375,true],["(cbrt.f64 (*.f64 x x))",29.71196408414792,true]],"time":20.318115234375,"type":"localize"},{"count":[[4,5]],"series":[["(cbrt.f64 x)","x","-inf",0.31787109375],["(cbrt.f64 x)","x","inf",0.177001953125],["(cbrt.f64 x)","x","0",0.197998046875],["(fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","-inf",0.400146484375],["(fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","inf",0.2978515625],["(fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","x","0",0.384033203125],["(*.f64 (cbrt.f64 (*.f64 x x)) x)","x","-inf",0.247802734375],["(*.f64 (cbrt.f64 (*.f64 x x)) x)","x","inf",0.262939453125],["(*.f64 (cbrt.f64 (*.f64 x x)) x)","x","0",0.278076171875],["(cbrt.f64 (*.f64 x x))","x","-inf",0.258056640625],["(cbrt.f64 (*.f64 x x))","x","inf",0.3330078125],["(cbrt.f64 (*.f64 x x))","x","0",0.684814453125]],"time":4.0,"type":"series"},{"count":[[4,124]],"inputs":[["(cbrt.f64 (*.f64 x x))","(*.f64 (cbrt.f64 (*.f64 x x)) x)","(fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))","(cbrt.f64 x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) 0) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 x 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 0 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (*.f64 (cbrt.f64 (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 x 2/3)) (pow.f64 x (+.f64 2/3 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 4))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (pow.f64 x (+.f64 2/3 1))))) (cbrt.f64 (pow.f64 (pow.f64 x (+.f64 2/3 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x (+.f64 2/3 1)) 0) (pow.f64 x (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x (+.f64 2/3 1)) (*.f64 (pow.f64 x (+.f64 2/3 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 x (+.f64 2/3 1))) (pow.f64 x (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x (+.f64 2/3 1)) (*.f64 0 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x (+.f64 2/3 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) (pow.f64 (pow.f64 x (+.f64 2/3 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 x (+.f64 2/3 1)) 2/3) (cbrt.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 2/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 4))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x (+.f64 2/3 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 4))) x) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 4))) (*.f64 x (cbrt.f64 (pow.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x (+.f64 2/3 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x (+.f64 2 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x (+.f64 2/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x (+.f64 1 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) (+.f64 3 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) (+.f64 2 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x (+.f64 2/3 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 x (+.f64 2 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 0) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))) 1) (*.f64 1/20160 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 0 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/20160 (pow.f64 x 8)) (fma.f64 x x (*.f64 1/12 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x x) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 1/12 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/12 (pow.f64 x 4)) (+.f64 (*.f64 1/20160 (pow.f64 x 8)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 x 4)) (-.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2/3) (*.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2/3) (-.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (pow.f64 x 2/3)))) (+.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 2/3) (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x (+.f64 2/3 1)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 x 4)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x (+.f64 2/3 1)) (cbrt.f64 x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (pow.f64 x (+.f64 2/3 1)))) (pow.f64 (pow.f64 x (+.f64 2/3 1)) 2/3) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 x 2/3)) (pow.f64 x (+.f64 2/3 1))) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x x)) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (neg.f64 x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (pow.f64 x 2/3) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2/3) (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))) (pow.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 2/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 x 16))) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8))) 1 (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 x) 0) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 x) (*.f64 0 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 x)))))"]],"rules":[["egg-rr",20],["egg-rr",44],["egg-rr",30],["egg-rr",30]],"time":32.7978515625,"type":"rewrite"},{"count":[[129,128]],"inputs":[["(*.f64 1/12 (pow.f64 x 4))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/12 (pow.f64 x 4))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))","(*.f64 1/20160 (pow.f64 x 8))","(+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))"]],"time":29.820068359375,"type":"simplify"},{"compiler":[[3355,2379]],"time":45.078125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","next",28.99173903240162],["(pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)","fresh",29.248233798312494],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","done",0.8049304773746091],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","done",0.9898517634280791]],"compiler":[[9,7],[11,8],[13,11],[19,14],[25,18],[11,8],[13,11]],"count":[[133,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[128,0],"picked":[1,1]}],"min-error":[0.006191259768442017],"time":29.9619140625,"type":"prune"},{"compiler":[[28,14]],"locations":[["(cbrt.f64 (exp.f64 x))",0.01171875,true],["(-.f64 (exp.f64 x) 2)",0.03515625,false],["(pow.f64 (cbrt.f64 (exp.f64 x)) -3)",0.08402255861065212,true],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))",6.11652368480453,true]],"time":6.31884765625,"type":"localize"},{"count":[[3,36]],"series":[["(cbrt.f64 (exp.f64 x))","x","-inf",0.162841796875],["(cbrt.f64 (exp.f64 x))","x","inf",0.1650390625],["(cbrt.f64 (exp.f64 x))","x","0",0.210205078125],["(pow.f64 (cbrt.f64 (exp.f64 x)) -3)","x","-inf",0.14990234375],["(pow.f64 (cbrt.f64 (exp.f64 x)) -3)","x","inf",0.161865234375],["(pow.f64 (cbrt.f64 (exp.f64 x)) -3)","x","0",0.199951171875],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","x","-inf",2.950927734375],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","x","inf",1.885986328125],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","x","0",1.0869140625]],"time":7.10107421875,"type":"series"},{"count":[[3,104]],"inputs":[["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","(pow.f64 (cbrt.f64 (exp.f64 x)) -3)","(cbrt.f64 (exp.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (*.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 0) (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (*.f64 0 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))) (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 x) (*.f64 (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) (-.f64 2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2))))) (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 0) (-.f64 2 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 2 (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 (*.f64 x 3)) (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (-.f64 (/.f64 8 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 x) -2) (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 0) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))) (pow.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)) (-.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2/3) (cbrt.f64 (*.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (+.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (cbrt.f64 (+.f64 (exp.f64 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2/3) (-.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)) (cbrt.f64 (*.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (+.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 2/3) (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 3) -8) (+.f64 (*.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))) (-.f64 4 (*.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 3) 8) (+.f64 (*.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))) (+.f64 4 (*.f64 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 2 (+.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (exp.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 2 (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (exp.f64 x) -2)) (pow.f64 (+.f64 (exp.f64 x) -2) 2/3) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 x)) (exp.f64 (*.f64 x 2/3)) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (*.f64 x 2/3)) (cbrt.f64 (exp.f64 x)) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) (cbrt.f64 (*.f64 (exp.f64 (*.f64 x 2/3)) (exp.f64 (+.f64 x x)))) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 x)) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 2 (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (exp.f64 x) -2) 2/3) (cbrt.f64 (+.f64 (exp.f64 x) -2)) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (exp.f64 (*.f64 x 3)) -8) (/.f64 1 (+.f64 4 (*.f64 (exp.f64 x) (+.f64 (exp.f64 x) 2)))) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (exp.f64 x) -2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (+.f64 (exp.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) 1 (+.f64 -2 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (exp.f64 x) -2) 1 (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 1 (+.f64 (exp.f64 x) -2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (*.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 0) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) (*.f64 0 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -6)) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 -6 -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 x)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 -6 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x 1/3) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (exp.f64 x)) (*.f64 (cbrt.f64 (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (exp.f64 x)) 0) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (exp.f64 x)) (*.f64 0 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (cbrt.f64 (*.f64 (exp.f64 (*.f64 x 2/3)) (exp.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x 2/3))) (cbrt.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 x 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 x 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x 1/3) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",20],["egg-rr",61]],"time":30.715087890625,"type":"rewrite"},{"count":[[140,129]],"inputs":[["(pow.f64 x 2)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","1","(+.f64 1 (*.f64 1/3 x))","(+.f64 1 (+.f64 (*.f64 1/18 (pow.f64 x 2)) (*.f64 1/3 x)))","(+.f64 1 (+.f64 (*.f64 1/162 (pow.f64 x 3)) (+.f64 (*.f64 1/18 (pow.f64 x 2)) (*.f64 1/3 x))))","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)","(pow.f64 (exp.f64 x) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 x 2)","(*.f64 x x)","(+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4)))","(fma.f64 1/12 (pow.f64 x 4) (*.f64 x x))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/12 (pow.f64 x 4))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 1/12 (pow.f64 x 4) (*.f64 x x)))","(+.f64 (*.f64 1/360 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (+.f64 (*.f64 1/12 (pow.f64 x 4)) (*.f64 1/20160 (pow.f64 x 8)))))","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x))) (exp.f64 x)) 2)","(+.f64 -2 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)))","1","(+.f64 1 (*.f64 -1 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 1 (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(+.f64 (fma.f64 -1/6 (pow.f64 x 3) 1) (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (exp.f64 x)))","(exp.f64 (neg.f64 x))","1","(+.f64 1 (*.f64 1/3 x))","(fma.f64 1/3 x 1)","(+.f64 1 (+.f64 (*.f64 1/18 (pow.f64 x 2)) (*.f64 1/3 x)))","(+.f64 1 (fma.f64 1/18 (*.f64 x x) (*.f64 1/3 x)))","(+.f64 1 (+.f64 (*.f64 1/162 (pow.f64 x 3)) (+.f64 (*.f64 1/18 (pow.f64 x 2)) (*.f64 1/3 x))))","(+.f64 1 (fma.f64 1/162 (pow.f64 x 3) (fma.f64 1/18 (*.f64 x x) (*.f64 1/3 x))))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))","(pow.f64 (exp.f64 x) 1/3)","(cbrt.f64 (exp.f64 x))"]],"time":108.446044921875,"type":"simplify"},{"compiler":[[3446,2093]],"time":40.48486328125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))","done",28.929898395059208],["(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","done",28.99173903240162],["(pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)","fresh",29.248233798312494],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","done",0.8049304773746091],["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","done",0.9898517634280791]],"compiler":[[9,7],[11,8],[13,11],[19,14],[25,18]],"count":[[214,5]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[209,0],"picked":[1,1]}],"min-error":[0.006191259768442017],"time":57.338134765625,"type":"prune"},{"accuracy":[0.8049304773746091],"baseline":[0.8049304773746091],"branch":[["x",0.8049304773746091,1],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",0.8049304773746091,1]],"compiler":[[2,1],[9,7],[81,52]],"count":[[6,1]],"inputs":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(+.f64 (-.f64 (exp.f64 x) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) -3))","(pow.f64 (pow.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2) 3) 1/3)","(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))","(+.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) -2)","(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))"]],"link":["."],"name":["exp2 (problem 3.3.7)"],"oracle":[29.81488283557359],"outputs":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))"]],"time":7.224853515625,"times":[["x",3.64990234375],["(+.f64 (-.f64 (exp.f64 x) 2) (exp.f64 (neg.f64 x)))",1.905029296875]],"type":"regimes"},{"compiler":[[19,14]],"inputs":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 1/360 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/12 (pow.f64 x 4) (*.f64 1/20160 (pow.f64 x 8)))))"]],"stop":[["fuel",1]],"time":19.572021484375,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[19,14]],"remove-preprocessing":[[]],"time":12.600830078125,"type":"end"}]