[{"compiler":[[9,7]],"method":["search"],"sampling":[[1,0.99951171875,0.0,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":0.156005859375,"type":"analyze"},{"outcomes":[["body",512,"valid",37.408935546875,519],["body",1024,"valid",111.035888671875,1059],["body",2048,"valid",321.74267578125,2155],["body",256,"valid",201.345458984375,4523]],"time":680.212890625,"type":"sample"},{"compiler":[[8,6]],"inputs":[["0"],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"symmetry":[[]],"time":51.323974609375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"time":17.447998046875,"type":"simplify"},{"compiler":[[8,6]],"time":0.218017578125,"type":"eval"},{"alts":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))","next",14.363011632544486]],"compiler":[[8,6],[8,6]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[14.363011632544486],"time":0.7421875,"type":"prune"},{"compiler":[[19,12]],"locations":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))",1.6830744991962767,true]],"time":5.365966796875,"type":"localize"},{"count":[[1,4]],"series":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))","N","-inf",0.260986328125],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))","N","inf",0.2158203125],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))","N","0",0.29296875]],"time":0.81396484375,"type":"series"},{"count":[[1,45]],"inputs":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) (*.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 0) (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) (*.f64 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))) (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan.f64 (+.f64 N 1)) (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 N 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (atan.f64 N)) (neg.f64 (atan.f64 (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (atan.f64 (+.f64 N 1)) 0) (atan.f64 N))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))))) (cbrt.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (atan.f64 (+.f64 N 1)) 2)) (+.f64 (cbrt.f64 (pow.f64 (atan.f64 N) 2)) (cbrt.f64 (*.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))))) (-.f64 (cbrt.f64 (atan.f64 (+.f64 N 1))) (cbrt.f64 (atan.f64 N))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))) (cbrt.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 2)) (cbrt.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (atan.f64 (+.f64 N 1))) (neg.f64 (atan.f64 N))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (atan.f64 N) (atan.f64 (+.f64 N 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (atan.f64 (+.f64 N 1))) (cbrt.f64 (pow.f64 (atan.f64 (+.f64 N 1)) 2)) (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (atan.f64 (+.f64 N 1))) (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (atan.f64 (+.f64 N 1)) 2)) (cbrt.f64 (atan.f64 (+.f64 N 1))) (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (atan.f64 N))) (cbrt.f64 (pow.f64 (atan.f64 N) 2)) (atan.f64 (+.f64 N 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (atan.f64 N)) (neg.f64 (cbrt.f64 (pow.f64 (atan.f64 N) 2))) (atan.f64 (+.f64 N 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (atan.f64 (+.f64 N 1)) (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (atan.f64 (+.f64 N 1)) 1 (neg.f64 (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (atan.f64 N) (atan.f64 (+.f64 N 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 N 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N)))))) (#(struct:change #<rule egg-rr> (2) ((x atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))"]],"rules":[["egg-rr",45]],"time":19.7880859375,"type":"rewrite"},{"count":[[49,47]],"inputs":[["(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 1 N)) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 1 N)) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 1 N)) (atan.f64 N))","(-.f64 (atan.f64 (-.f64 1 (*.f64 -1 N))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 1 N)) (atan.f64 N))"]],"time":26.251953125,"type":"simplify"},{"compiler":[[555,368]],"time":8.241943359375,"type":"eval"},{"alts":[["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))","done",14.363011632544486],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","next",0.5023029195020046]],"compiler":[[8,6],[9,6],[9,6]],"count":[[48,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[47,1],"picked":[1,1]}],"min-error":[0.4983966695020046],"time":7.43701171875,"type":"prune"},{"compiler":[[20,12]],"locations":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))",0.5023029195020046,true]],"time":5.3720703125,"type":"localize"},{"count":[[1,4]],"series":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","N","-inf",0.199951171875],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","N","inf",0.173828125],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","N","0",0.191162109375]],"time":0.622802734375,"type":"series"},{"count":[[1,21]],"inputs":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (pow.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 4) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (neg.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))"]],"rules":[["egg-rr",21]],"time":38.381103515625,"type":"rewrite"},{"count":[[25,23]],"inputs":[["(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))"]],"method":["egg-herbie"],"outputs":[["(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (+.f64 1 N)))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (+.f64 1 N)))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (+.f64 1 N)))","(atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N))))","(atan2.f64 1 (fma.f64 N N (+.f64 1 N)))"]],"time":27.8779296875,"type":"simplify"},{"compiler":[[306,219]],"time":4.708984375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","next",0.6309154683442147],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","done",0.5023029195020046]],"compiler":[[12,9],[9,6],[12,9]],"count":[[25,2]],"kept":[{"done":[1,0],"fresh":[0,0],"new":[23,1],"picked":[1,1]}],"min-error":[0.4905841695020046],"time":3.739990234375,"type":"prune"},{"compiler":[[41,27]],"locations":[["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)",0.15919877930532605,true],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))",0.5023029195020046,false],["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))",15.522244186570942,true]],"time":10.944091796875,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","N","-inf",0.6279296875],["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","N","inf",0.6259765625],["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","N","0",0.97900390625],["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","N","-inf",1.140869140625],["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","N","inf",1.287109375],["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","N","0",1.300048828125]],"time":6.074951171875,"type":"series"},{"count":[[2,39]],"inputs":[["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (*.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 0) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (*.f64 0 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)) (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) (*.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 0) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) (*.f64 0 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (pow.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 4/3) 2) (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 7/3) (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)) (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))"]],"rules":[["egg-rr",21],["egg-rr",18]],"time":25.412109375,"type":"rewrite"},{"count":[[63,42]],"inputs":[["(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3)","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(*.f64 (pow.f64 1 1/3) (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))))","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))"]],"time":80.6298828125,"type":"simplify"},{"compiler":[[1064,797]],"time":17.051025390625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","done",0.6309154683442147],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","done",0.5023029195020046],["(pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3) 3)","next",2.0527968856800136]],"compiler":[[12,9],[9,6],[15,12],[15,12]],"count":[[67,3]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[65,1],"picked":[1,1]}],"min-error":[0.4866779195020046],"time":13.864013671875,"type":"prune"},{"compiler":[[66,46]],"locations":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))",0.5023029195020046,false],["(cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))",0.51171875,true],["(pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)",0.8454476074528624,true],["(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))",15.522244186570942,false]],"time":18.611083984375,"type":"localize"},{"count":[[2,24]],"series":[["(cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))","N","-inf",0.23388671875],["(cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))","N","inf",0.172119140625],["(cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))","N","0",0.216064453125],["(pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)","N","-inf",11.557861328125],["(pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)","N","inf",16.550048828125],["(pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)","N","0",19.31201171875]],"time":48.199951171875,"type":"series"},{"count":[[2,38]],"inputs":[["(pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)","(cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 0) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (*.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) (*.f64 0 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)) (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 7/3) (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) (cbrt.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 8/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 8/3)) (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 0) (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (*.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) (*.f64 0 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 7/3)) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 8/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) (cbrt.f64 (cbrt.f64 (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))))))))"]],"rules":[["egg-rr",18],["egg-rr",20]],"time":29.449951171875,"type":"rewrite"},{"count":[[62,44]],"inputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/3))","(cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))))","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (-.f64 1 (*.f64 -1 N)))) 1/9)","(pow.f64 (atan2.f64 1 (fma.f64 N N (+.f64 1 N))) 1/9)"]],"time":122.989990234375,"type":"simplify"},{"compiler":[[1694,1340]],"time":36.72998046875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","done",0.6309154683442147],["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","done",0.5023029195020046],["(pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3) 3)","done",2.0527968856800136]],"compiler":[[12,9],[9,6],[15,12]],"count":[[89,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[86,0],"picked":[1,1]}],"min-error":[0.4866779195020046],"time":14.421142578125,"type":"prune"},{"accuracy":[0.5023029195020046],"baseline":[0.5023029195020046],"branch":[["N",0.5023029195020046,1],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))",0.5023029195020046,1]],"compiler":[[2,1],[8,6],[41,30]],"count":[[4,1]],"inputs":[["(pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1))))) 3) 3)","(pow.f64 (cbrt.f64 (atan2.f64 1 (fma.f64 N N (+.f64 N 1)))) 3)","(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))","(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))"]],"link":["."],"name":["2atan (example 3.5)"],"oracle":[15.634864147304194],"outputs":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))"]],"time":6.39697265625,"times":[["N",3.2861328125],["(-.f64 (atan.f64 (+.f64 N 1)) (atan.f64 N))",1.85400390625]],"type":"regimes"},{"compiler":[[9,6]],"inputs":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))"]],"method":["egg-herbie"],"outputs":[["(atan2.f64 1 (fma.f64 N N (+.f64 N 1)))"]],"stop":[["done",1]],"time":39.909912109375,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":9.096923828125,"type":"end"}]