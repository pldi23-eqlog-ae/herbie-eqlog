[{"compiler":[[17,11]],"method":["search"],"sampling":[[12,0.17064822020813608,0.7113592950962015,0.11799248469566237],[11,0.04095557284995266,0.8951718065775367,0.06387262057251064],[10,0.03510477672853085,0.9010226026989585,0.06387262057251064],[9,0.023403184485687234,0.9439284409227184,0.03266837459159433],[8,0.0,0.998535871389322,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":197.666015625,"type":"analyze"},{"outcomes":[["body",512,"invalid",35.6640625,224],["body",256,"invalid",138.822509765625,2303],["body",1024,"valid",255.511474609375,914],["body",1024,"invalid",54.218505859375,210],["body",512,"valid",92.27099609375,589],["body",2048,"valid",1.387939453125,3],["body",256,"valid",491.917724609375,6750]],"time":1081.386962890625,"type":"sample"},{"compiler":[[16,10]],"inputs":[["0","1","2"],["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))","(+.f64 y (/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 z x))))) x))","(+.f64 z (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 x y))))) y))","(+.f64 x (/.f64 (exp.f64 (*.f64 z (log.f64 (/.f64 z (+.f64 y z))))) z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))","(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","(+.f64 y (/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 z x))))) x))","(+.f64 y (/.f64 (pow.f64 (/.f64 x (+.f64 z x)) x) x))","(+.f64 z (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 x y))))) y))","(+.f64 z (/.f64 (pow.f64 (/.f64 y (+.f64 x y)) y) y))","(+.f64 x (/.f64 (exp.f64 (*.f64 z (log.f64 (/.f64 z (+.f64 y z))))) z))","(+.f64 x (/.f64 (pow.f64 (/.f64 z (+.f64 z y)) z) z))"]],"symmetry":[[]],"time":75.534912109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))","(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))"]],"time":19.549072265625,"type":"simplify"},{"compiler":[[27,13]],"time":0.35498046875,"type":"eval"},{"alts":[["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","next",5.440442030053174]],"compiler":[[14,8],[14,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[5.440442030053174],"time":2.238037109375,"type":"prune"},{"compiler":[[41,8]],"locations":[["(/.f64 y (+.f64 z y))",0.00390625,true],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))",0.0078125,true],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)",0.015625,true],["(pow.f64 (/.f64 y (+.f64 z y)) y)",5.3228609069272155,true]],"time":6.7041015625,"type":"localize"},{"count":[[4,108]],"series":[["(/.f64 y (+.f64 z y))","z","-inf",0.199951171875],["(/.f64 y (+.f64 z y))","z","inf",0.227783203125],["(/.f64 y (+.f64 z y))","z","0",0.16796875],["(/.f64 y (+.f64 z y))","y","-inf",0.175048828125],["(/.f64 y (+.f64 z y))","y","inf",0.234130859375],["(/.f64 y (+.f64 z y))","y","0",0.244140625],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","-inf",1.200927734375],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","inf",0.428955078125],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","0",0.26708984375],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","-inf",0.30517578125],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","inf",0.281005859375],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","0",0.318115234375],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","x","-inf",0.19091796875],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","x","inf",0.282958984375],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","x","0",4.697021484375],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","z","-inf",0.69384765625],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","z","inf",0.6259765625],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","z","0",0.35888671875],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","y","-inf",1.208984375],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","y","inf",1.625],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","y","0",0.35302734375],["(pow.f64 (/.f64 y (+.f64 z y)) y)","z","-inf",0.948974609375],["(pow.f64 (/.f64 y (+.f64 z y)) y)","z","inf",1.221923828125],["(pow.f64 (/.f64 y (+.f64 z y)) y)","z","0",0.610107421875],["(pow.f64 (/.f64 y (+.f64 z y)) y)","y","-inf",1.274169921875],["(pow.f64 (/.f64 y (+.f64 z y)) y)","y","inf",1.46484375],["(pow.f64 (/.f64 y (+.f64 z y)) y)","y","0",1.0087890625]],"time":21.201904296875,"type":"series"},{"count":[[4,151]],"inputs":[["(pow.f64 (/.f64 y (+.f64 z y)) y)","(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)","(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","(/.f64 y (+.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 0) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y (+.f64 z y)) y)) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (*.f64 0 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (+.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 0) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y))) y) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 y) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y -2))) (cbrt.f64 (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y)))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y -2))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 y)) (neg.f64 (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (neg.f64 (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 0) (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (*.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (*.f64 0 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (cbrt.f64 (/.f64 (*.f64 x (pow.f64 (/.f64 y (+.f64 z y)) y)) y)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (/.f64 (*.f64 x (pow.f64 (/.f64 y (+.f64 z y)) y)) y)))) (+.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 2)) (cbrt.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (/.f64 1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) (+.f64 y y))) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 -1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y -2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 y) (pow.f64 (/.f64 y (+.f64 z y)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1 x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (+.f64 z y)) 0) (/.f64 y (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 z y)) (*.f64 (/.f64 y (+.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (+.f64 z y))) (/.f64 y (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 z y)) (*.f64 0 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 z y))) (neg.f64 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (+.f64 z y))) (pow.f64 (cbrt.f64 (+.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (+.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2)) (cbrt.f64 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 -1 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 z y))) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 z y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (+.f64 z y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (+.f64 z y) 2))) (cbrt.f64 (/.f64 1 (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y (+.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (+.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (+.f64 z y))) (cbrt.f64 (pow.f64 (+.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (+.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (neg.f64 (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2)) (cbrt.f64 y)) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 z y))) y) (cbrt.f64 (pow.f64 (+.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (+.f64 z y))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (+.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (+.f64 z y) 2))) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 z y))) 1) (cbrt.f64 (pow.f64 (+.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2))) (cbrt.f64 (neg.f64 (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 2))) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (+.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (+.f64 z y))) 1) (cbrt.f64 (pow.f64 (+.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (+.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (+.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 y (+.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) 3))))))"]],"rules":[["egg-rr",45],["egg-rr",38],["egg-rr",45],["egg-rr",23]],"time":35.18603515625,"type":"rewrite"},{"count":[[259,288]],"inputs":[["1","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) 1)","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) (pow.f64 y 2))))","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 3)) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) (pow.f64 y 2)))))","(exp.f64 (*.f64 -1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (exp.f64 (*.f64 -1 z))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (exp.f64 (*.f64 -1 z)))))","(exp.f64 (*.f64 -1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))))","1","(+.f64 (*.f64 -1 z) 1)","(+.f64 (*.f64 -1 z) (+.f64 1 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 z) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3))) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2)))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2)))))","(exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (+.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (+.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3))) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2)))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2))))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 4)))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 4))))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z))))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","x","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","x","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (+.f64 x (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2)))))))","x","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) x)))","x","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x)))","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) x))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)) x)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)) x))))","(+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x))))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) 1)","(fma.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y 1)","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) (pow.f64 y 2))))","(+.f64 (fma.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y 1) (*.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) (*.f64 y y)))","(+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 3)) (+.f64 1 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) (pow.f64 y 2)))))","(fma.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y (fma.f64 (fma.f64 1/2 (pow.f64 z -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) z)))) (pow.f64 y 3) (+.f64 1 (*.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) (*.f64 y y)))))","(exp.f64 (*.f64 -1 z))","(exp.f64 (neg.f64 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))","(fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (exp.f64 (neg.f64 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (exp.f64 (*.f64 -1 z))))","(fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (+.f64 (*.f64 (*.f64 (fma.f64 1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y -2)) (exp.f64 (neg.f64 z))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (exp.f64 (*.f64 -1 z)))))","(+.f64 (/.f64 (*.f64 (fma.f64 1/24 (fma.f64 -12 (pow.f64 z 4) (fma.f64 -24 (pow.f64 z 4) (*.f64 (pow.f64 z 4) 42))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 z z) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 (*.f64 z z) 1))))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (+.f64 (*.f64 (*.f64 (fma.f64 1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y -2)) (exp.f64 (neg.f64 z)))))","(exp.f64 (*.f64 -1 z))","(exp.f64 (neg.f64 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))","(fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (exp.f64 (neg.f64 z)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z))))","(+.f64 (*.f64 (*.f64 (fma.f64 -1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y -2)) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (exp.f64 (neg.f64 z))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) y)) (exp.f64 (*.f64 -1 z)))))","(+.f64 (*.f64 (*.f64 (fma.f64 -1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y -2)) (+.f64 (neg.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (fma.f64 1/12 (*.f64 (*.f64 (*.f64 z z) 1) (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4))) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 z 4) (fma.f64 -24 (pow.f64 z 4) (*.f64 (pow.f64 z 4) 42))) (*.f64 -1/48 (pow.f64 (*.f64 (*.f64 z z) 1) 3))))) (pow.f64 y 3))) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) y) (exp.f64 (neg.f64 z)))))","1","(+.f64 (*.f64 -1 z) 1)","(+.f64 (neg.f64 z) 1)","(+.f64 (*.f64 -1 z) (+.f64 1 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))))","(+.f64 (+.f64 (neg.f64 z) 1) (*.f64 (+.f64 (/.f64 1/2 y) 1/2) (*.f64 z z)))","(+.f64 (*.f64 -1 z) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3))) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2)))))","(+.f64 (+.f64 (neg.f64 z) 1) (+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) (pow.f64 z 3))) (*.f64 (+.f64 (/.f64 1/2 y) 1/2) (*.f64 z z))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))","(exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (pow.f64 z -2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (pow.f64 z 3)) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (pow.f64 z -2)))))","(exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))","(pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (+.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) (+.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (pow.f64 z -2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) (+.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3))) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) (+.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (pow.f64 z 3))) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (pow.f64 z -2)))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (log.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2))))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (+.f64 (log.f64 y) (*.f64 (fma.f64 1/2 (pow.f64 z -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) z)))) (*.f64 y y))))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(/.f64 (exp.f64 (neg.f64 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (*.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) (/.f64 (*.f64 (fma.f64 1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 4)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) (/.f64 (*.f64 (fma.f64 1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3))) (/.f64 (*.f64 (fma.f64 1/24 (fma.f64 -12 (pow.f64 z 4) (fma.f64 -24 (pow.f64 z 4) (*.f64 (pow.f64 z 4) 42))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 z z) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 (*.f64 z z) 1))))) (exp.f64 (neg.f64 z))) (pow.f64 y 4))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(/.f64 (exp.f64 (neg.f64 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (*.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (/.f64 (exp.f64 (neg.f64 z)) y)) (*.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 4))))))","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (/.f64 (exp.f64 (neg.f64 z)) y)) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) (neg.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (fma.f64 1/12 (*.f64 (*.f64 (*.f64 z z) 1) (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4))) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 z 4) (fma.f64 -24 (pow.f64 z 4) (*.f64 (pow.f64 z 4) 42))) (*.f64 -1/48 (pow.f64 (*.f64 (*.f64 z z) 1) 3))))) (pow.f64 y 4)))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 1 y) (neg.f64 (/.f64 z y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (/.f64 z y)) (*.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)))))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) (pow.f64 z 3)) y)) (+.f64 (neg.f64 (/.f64 z y)) (*.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)","(/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))","(+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (*.f64 y (*.f64 z z))) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (*.f64 y (pow.f64 z 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (*.f64 y (*.f64 z z))) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))))","(/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)","(/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z))))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (*.f64 y (*.f64 z z))) (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z))))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (*.f64 y (*.f64 z z))) (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)))))","(/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y)","(/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","x","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","x","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 y z))) y)) y) x)","(+.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 y z)) y) y) x)","(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) x)))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (+.f64 (log.f64 y) x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) x))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (+.f64 (log.f64 y) x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (+.f64 x (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2)))))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 z)) (+.f64 (log.f64 y) (+.f64 x (*.f64 (fma.f64 1/2 (pow.f64 z -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) z)))) (*.f64 y y)))))))","x","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) x)","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) x))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) (/.f64 (*.f64 (fma.f64 1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -8)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3))) x))","x","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) x)","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) x)))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (fma.f64 6 (pow.f64 z 3) (*.f64 (pow.f64 z 3) -4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 z z) 1) 2))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 (*.f64 z z) 1)) (pow.f64 y -2)) x)))","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) x))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (/.f64 z y)) x))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)) x)))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (/.f64 z y)) (fma.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z) x)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)) x))))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) (pow.f64 z 3)) y)) (+.f64 (neg.f64 (/.f64 z y)) (fma.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z) x))))","(+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x))","(+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (*.f64 y (*.f64 z z))) (+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (*.f64 y (pow.f64 z 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) (*.f64 y (*.f64 z z))) (+.f64 x (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)))))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) x)","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) x)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) x))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x)))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (*.f64 y (*.f64 z z))) (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) x)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)) x))))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 (*.f64 y y) 1)))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 y (*.f64 (*.f64 y y) 1)) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) (*.f64 y (*.f64 z z))) (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) z)) x))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (+.f64 (neg.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (neg.f64 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 z y)) (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 z y))) (+.f64 (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 z z) (*.f64 y y))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (neg.f64 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 z y)) (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 z y))) (+.f64 (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 z z) (*.f64 y y))))","1","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (neg.f64 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 z y)) (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 z y))) (+.f64 (neg.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (/.f64 (*.f64 z z) (*.f64 y y))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (+.f64 (neg.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z))","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 z z))) (+.f64 (neg.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))))"]],"time":323.56591796875,"type":"simplify"},{"compiler":[[8966,4716]],"time":82.239990234375,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 y))","next",3.002976040835856],["(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","fresh",8.456746476695377],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","done",5.440442030053174],["(+.f64 x (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))","fresh",5.703121138225413]],"compiler":[[8,6],[10,7],[14,8],[17,11],[8,6],[10,7],[17,11]],"count":[[289,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[288,3],"picked":[1,1]}],"min-error":[0.00390625],"time":119.510986328125,"type":"prune"},{"compiler":[[14,9]],"locations":[["(+.f64 x (/.f64 1 y))",0.0078125,true]],"time":3.43505859375,"type":"localize"},{"count":[[1,24]],"series":[["(+.f64 x (/.f64 1 y))","y","-inf",0.22802734375],["(+.f64 x (/.f64 1 y))","y","inf",0.175048828125],["(+.f64 x (/.f64 1 y))","y","0",0.19091796875],["(+.f64 x (/.f64 1 y))","x","-inf",0.158935546875],["(+.f64 x (/.f64 1 y))","x","inf",0.176025390625],["(+.f64 x (/.f64 1 y))","x","0",0.294921875]],"time":1.294921875,"type":"series"},{"count":[[1,34]],"inputs":[["(+.f64 x (/.f64 1 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (/.f64 1 y)) 0) (+.f64 x (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 1 y)) (*.f64 (+.f64 x (/.f64 1 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 x (/.f64 1 y))) (+.f64 x (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 1 y)) (*.f64 0 (+.f64 x (/.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 -1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (/.f64 1 y))) (pow.f64 (+.f64 x (/.f64 1 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x (/.f64 1 y)) 2/3) (cbrt.f64 (+.f64 x (/.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 (pow.f64 y -2)) (cbrt.f64 (/.f64 x y)))) (+.f64 (cbrt.f64 x) (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 y -2)) (-.f64 (pow.f64 x 2/3) (cbrt.f64 (/.f64 x y)))) (+.f64 (pow.f64 y -1/3) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 x) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 x) (/.f64 -1 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (/.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (/.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (/.f64 1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (/.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (neg.f64 x) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (/.f64 1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 y -2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 y -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 y -1/3)) (neg.f64 (cbrt.f64 (pow.f64 y -2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 -1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 y) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 1 y))))))"]],"rules":[["egg-rr",34]],"time":23.025146484375,"type":"rewrite"},{"count":[[58,36]],"inputs":[["(/.f64 1 y)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(/.f64 1 y)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 y)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(/.f64 1 y)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","x","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 y) x)"]],"time":107.266845703125,"type":"simplify"},{"compiler":[[316,213]],"time":5.010986328125,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 y))","done",3.002976040835856],["(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","fresh",8.456746476695377],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","done",5.440442030053174],["(+.f64 x (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))","next",5.703121138225413]],"compiler":[[8,6],[10,7],[14,8],[17,11],[10,7],[17,11]],"count":[[40,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[36,0],"picked":[1,1]}],"min-error":[0.00390625],"time":6.718017578125,"type":"prune"},{"compiler":[[67,14]],"locations":[["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)",0.015625,false],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))",0.15234375,true],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)",0.6300164551372825,true],["(pow.f64 (/.f64 y (+.f64 z y)) y)",5.3228609069272155,false]],"time":10.048095703125,"type":"localize"},{"count":[[2,24]],"series":[["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","-inf",1.05419921875],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","inf",1.0859375],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","z","0",0.495849609375],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","-inf",2.81298828125],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","inf",2.460205078125],["(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","y","0",0.77685546875],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","z","-inf",6.5859375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","z","inf",6.77490234375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","z","0",2.2900390625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","y","-inf",23.37109375],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","y","inf",24.43994140625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","y","0",5.73095703125]],"time":78.406005859375,"type":"series"},{"count":[[2,96]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)","(cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 0) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 4) 2) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 y) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) y) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (pow.f64 (/.f64 y (+.f64 z y)) y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)) 1) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 4) 2)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 y)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3)) 1) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y)) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 0) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (*.f64 0 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y -1/3)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) 1) (*.f64 (cbrt.f64 (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))))))"]],"rules":[["egg-rr",34],["egg-rr",62]],"time":27.4560546875,"type":"rewrite"},{"count":[[120,144]],"inputs":[["(*.f64 (pow.f64 1 1/3) (/.f64 1 y))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/9 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))) (pow.f64 z 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9))))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/9 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))) (pow.f64 z 2)) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9))))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 2/3 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3)))) (pow.f64 z 3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 z 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))))))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z)))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))))))))) (pow.f64 z 3))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z)))))))","(pow.f64 (/.f64 1 y) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))))) (pow.f64 z 3)) (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3))))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3)","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 z 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z))))))","(pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3)","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z))))","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)))) (pow.f64 z 3)))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (/.f64 1 y))","(/.f64 1 y)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)))))","(+.f64 (/.f64 1 y) (*.f64 z (*.f64 (pow.f64 (pow.f64 y -13) 1/9) -1)))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/9 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))) (pow.f64 z 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9))))))","(fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 2/3 (*.f64 (cbrt.f64 y) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 1/9 (pow.f64 (pow.f64 y -14) 1/9))) (fma.f64 1/3 (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9))) (*.f64 2/9 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 z z) (+.f64 (/.f64 1 y) (*.f64 z (*.f64 (pow.f64 (pow.f64 y -13) 1/9) -1))))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/9 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))) (pow.f64 z 2)) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9))))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 y)) (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9)))))))","(fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 2/3 (*.f64 (cbrt.f64 y) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 1/9 (pow.f64 (pow.f64 y -14) 1/9))) (fma.f64 1/3 (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9))) (*.f64 2/9 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 z z) (fma.f64 (fma.f64 -2/9 (*.f64 (pow.f64 (pow.f64 y -4) 1/9) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (fma.f64 1/3 (-.f64 (neg.f64 (/.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) y)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 y -7)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 y -4) 1/9)) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (fma.f64 2/3 (*.f64 (cbrt.f64 y) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 1/9 (pow.f64 (pow.f64 y -14) 1/9)))) (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (*.f64 (*.f64 2/3 (cbrt.f64 y)) (-.f64 (neg.f64 (/.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) y)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 y -7)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 y -4) 1/9)) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))))))))))) (pow.f64 z 3) (+.f64 (/.f64 1 y) (*.f64 z (*.f64 (pow.f64 (pow.f64 y -13) 1/9) -1)))))","(*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))))))","(fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9) (pow.f64 z -2)) (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9))) (pow.f64 z -2)) (fma.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (*.f64 (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))))) (pow.f64 z -2)) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 2/3 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3)))) (pow.f64 z 3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 13))) 1/9) (/.f64 1 z))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 z 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))))))))))","(fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7)) 1/9) (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9))))))) (pow.f64 z 3)) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9) (pow.f64 z -2)) (fma.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (/.f64 (fma.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 17) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) (*.f64 2/3 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 -1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7))) (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) -2/3))) (cbrt.f64 (/.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))))))) (pow.f64 z 3)) (fma.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (*.f64 (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))))) (pow.f64 z -2)) (fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 13)) 1/9) z) (fma.f64 -2/9 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) (pow.f64 z 3)) (fma.f64 1/3 (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 -1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7))) (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) -2/3))) (pow.f64 z 3)) (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9))) (pow.f64 z -2)) (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))))))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y))","(/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z)))","(+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 13)) 1/9) 1) z)))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z))))))","(fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9) (pow.f64 z -2)) (+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (*.f64 (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))))) (pow.f64 z -2)) (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9))) (pow.f64 z -2)) (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 13)) 1/9) 1) z))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))))))))) (pow.f64 z 3))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 22) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 14))) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) 1/3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9)))))) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 13))) 1/9))) z)))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 17) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))))) (-.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7))))))))) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7)) 1/9) (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9))))))) (-.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7)))))))))) (pow.f64 z 3))) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9) (pow.f64 z -2)) (+.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (*.f64 (fma.f64 1/9 (pow.f64 (*.f64 (pow.f64 y 22) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 14)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))))) (pow.f64 z -2)) (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9))) (pow.f64 z -2)) (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 5) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 13)) 1/9) 1) z)))))))","(pow.f64 (/.f64 1 y) 1/3)","(cbrt.f64 (/.f64 1 y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) z) (cbrt.f64 (/.f64 1 y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) z) (cbrt.f64 (/.f64 1 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9)))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) y)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/9) (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/2 (/.f64 1 y))) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9))))))) (pow.f64 z 3)) (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) z)) (pow.f64 (/.f64 1 y) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))) (fma.f64 1/3 (*.f64 (-.f64 (neg.f64 (/.f64 (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))) y)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 y -7)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 y -4) 1/9)) (+.f64 (fma.f64 1/2 (pow.f64 y -2) (/.f64 1/2 y)) (*.f64 -1/3 (pow.f64 (pow.f64 y -17) 1/9)))))) (*.f64 (pow.f64 z 3) (cbrt.f64 (*.f64 y y)))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) z) (cbrt.f64 (/.f64 1 y)))))","(pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3)","(cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y))","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z))))","(+.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7)) 1/9) z)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z)))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 2))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) (*.f64 z z)) (+.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7)) 1/9) z))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))) (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/3)) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9))))) (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 17))) 1/9)))))))) (pow.f64 z 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 2)) 1/3))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) 7))) 1/9) (/.f64 1 z))))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 2))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) (*.f64 z z)) (fma.f64 1/3 (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 -1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7))) (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 17)) 1/9)))) -2/3))) (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 2)))) (pow.f64 z 3)) (+.f64 (cbrt.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) y)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 z)) (log.f64 y)) y)) 7)) 1/9) z)))))","(pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3)","(cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y))","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z))))","(+.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7)) 1/9) z)))","(+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z)))))","(+.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 2))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 z z)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7)) 1/9) z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) y) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 4))) 1/9) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))))) (*.f64 1/27 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/3)))) (pow.f64 z 3)))) (+.f64 (pow.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 2)) 1/3) (/.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) y) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 19) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 17))) 1/9))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) 7))) 1/9) (/.f64 1 z))))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 2))) (-.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) (fma.f64 1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) y) (fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 y 14) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 4)) 1/9) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 1/27 (cbrt.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7))))))) (pow.f64 z 3)) (+.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) y)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 2))) (+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z))))) y) (*.f64 -1/3 (pow.f64 (*.f64 (pow.f64 y 19) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 17)) 1/9)))) (*.f64 z z)) (*.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 y 11) (pow.f64 (pow.f64 (exp.f64 y) (log.f64 (*.f64 (neg.f64 y) (/.f64 -1 z)))) 7)) 1/9) z)))))"]],"time":111.447998046875,"type":"simplify"},{"compiler":[[16070,9940]],"time":155.02001953125,"type":"eval"},{"alts":[["(+.f64 x (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2)))","next",5.722430430933477],["(+.f64 x (/.f64 1 y))","done",3.002976040835856],["(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","fresh",8.456746476695377],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","done",5.440442030053174],["(+.f64 x (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))","done",5.703121138225413]],"compiler":[[20,12],[8,6],[10,7],[14,8],[17,11],[20,12],[10,7]],"count":[[298,5]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[294,1],"picked":[1,1]}],"min-error":[0],"time":97.61083984375,"type":"prune"},{"compiler":[[70,18]],"locations":[["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))",0.234375,true],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))",0.27734375,true],["(pow.f64 (cbrt.f64 y) -2)",0.46521381837909415,true],["(pow.f64 (/.f64 y (+.f64 z y)) y)",5.3228609069272155,false]],"time":13.828125,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","z","-inf",0.716064453125],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","z","inf",0.670166015625],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","z","0",0.428955078125],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","y","-inf",1.739013671875],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","y","inf",1.169921875],["(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))","y","0",0.720947265625],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","z","-inf",0.46484375],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","z","inf",4.7021484375],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","z","0",0.248779296875],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","y","-inf",0.626953125],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","y","inf",0.405029296875],["(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","y","0",0.31298828125],["(pow.f64 (cbrt.f64 y) -2)","y","-inf",0.81005859375],["(pow.f64 (cbrt.f64 y) -2)","y","inf",0.35595703125],["(pow.f64 (cbrt.f64 y) -2)","y","0",0.7939453125]],"time":14.48193359375,"type":"series"},{"count":[[3,125]],"inputs":[["(pow.f64 (cbrt.f64 y) -2)","(*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))","(/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) 0) (pow.f64 (cbrt.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -2) (*.f64 (pow.f64 (cbrt.f64 y) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 y) -2)) (pow.f64 (cbrt.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -2) (*.f64 0 (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)) (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) -2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 0) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) (*.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) (*.f64 0 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -2) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) (/.f64 (pow.f64 (cbrt.f64 y) -2) (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -2))) (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3) (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (*.f64 (pow.f64 (cbrt.f64 y) -2) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -2) 2/3) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) -2) (cbrt.f64 (pow.f64 y 2/3))) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y)))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2))) (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -2))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (/.f64 (pow.f64 (cbrt.f64 y) -2) (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (cbrt.f64 y))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (cbrt.f64 y)))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))) (pow.f64 (cbrt.f64 y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 y) -2) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) -2)) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 (cbrt.f64 y) (+.f64 -1 -2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 0) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (*.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 y))) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (pow.f64 (/.f64 y (+.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y -1/3)) (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y -1/3)) (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 y -1/3)) (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 2/3)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y))) (pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 y (+.f64 z y)) y)) (cbrt.f64 (cbrt.f64 y))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (cbrt.f64 y)))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 3) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 (neg.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) 3) y))))))"]],"rules":[["egg-rr",46],["egg-rr",60],["egg-rr",19]],"time":33.66796875,"type":"rewrite"},{"count":[[161,184]],"inputs":[["(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2))))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 4)))))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 4))))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z))))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))))","(pow.f64 (/.f64 1 y) 1/3)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (pow.f64 (/.f64 1 y) 1/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))) (pow.f64 (/.f64 1 y) 1/3)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)))) (pow.f64 (/.f64 1 y) 1/3))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2))))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 y)","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)))","(+.f64 (/.f64 1 y) (log.f64 (/.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y))))","(fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 y z)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (log.f64 (/.f64 y z))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 2)) (/.f64 1 z)) y) (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 z)) (+.f64 (log.f64 y) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 z 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) z)))) (pow.f64 y 2))))))","(+.f64 (fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 y z)) 2) (/.f64 -1 z)) y (+.f64 (/.f64 1 y) (log.f64 (/.f64 y z)))) (*.f64 (fma.f64 1/2 (pow.f64 z -2) (fma.f64 1/6 (pow.f64 (log.f64 (/.f64 y z)) 3) (/.f64 (log.f64 (/.f64 y z)) (neg.f64 z)))) (*.f64 y y)))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(/.f64 (exp.f64 (neg.f64 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (/.f64 (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z))) (*.f64 y y)))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z)) (pow.f64 y -2)) (/.f64 (*.f64 (fma.f64 1/6 (*.f64 (pow.f64 z 3) (+.f64 -8 6)) (*.f64 1/8 (pow.f64 z 4))) (exp.f64 (neg.f64 z))) (pow.f64 y 3))))","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (/.f64 (*.f64 (+.f64 (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (*.f64 -6 (pow.f64 z 3)))) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))))))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 4)))))","(+.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z)) (pow.f64 y -2)) (/.f64 (*.f64 (fma.f64 1/6 (*.f64 (pow.f64 z 3) (+.f64 -8 6)) (*.f64 1/8 (pow.f64 z 4))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)))) (/.f64 (*.f64 (fma.f64 1/24 (fma.f64 -12 (pow.f64 z 4) (*.f64 (pow.f64 z 4) (+.f64 42 -24))) (fma.f64 1/48 (pow.f64 (*.f64 z z) 3) (*.f64 1/12 (*.f64 (*.f64 (pow.f64 z 3) (+.f64 -8 6)) (*.f64 z z))))) (exp.f64 (neg.f64 z))) (pow.f64 y 4)))","(/.f64 (exp.f64 (*.f64 -1 z)) y)","(/.f64 (exp.f64 (neg.f64 z)) y)","(+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (/.f64 (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z))) (*.f64 y y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2))) (exp.f64 (*.f64 -1 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (*.f64 (pow.f64 z 3) (+.f64 -4 6)) (*.f64 1/8 (pow.f64 z 4))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (/.f64 (exp.f64 (neg.f64 z)) y)) (/.f64 (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z))) (*.f64 y y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 2)))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 z)) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 z)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) (+.f64 (*.f64 6 (pow.f64 z 3)) (+.f64 (*.f64 -6 (pow.f64 z 3)) (*.f64 2 (pow.f64 z 3)))))) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 z 4)) (+.f64 (*.f64 -24 (pow.f64 z 4)) (+.f64 (*.f64 48 (pow.f64 z 4)) (*.f64 -6 (pow.f64 z 4)))))) (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (*.f64 2 (pow.f64 z 2))) 3))))) (pow.f64 y 4))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (*.f64 (pow.f64 z 3) (+.f64 -4 6)) (*.f64 1/8 (pow.f64 z 4))) (exp.f64 (neg.f64 z))) (pow.f64 y 3)) (+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 z)) (*.f64 z z)) (pow.f64 y -2)) (/.f64 (*.f64 (exp.f64 (neg.f64 z)) (fma.f64 1/12 (*.f64 (*.f64 z z) (*.f64 (pow.f64 z 3) (+.f64 -4 6))) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 z 4) (*.f64 (pow.f64 z 4) (+.f64 42 -24))) (*.f64 -1/48 (pow.f64 (*.f64 z z) 3))))) (neg.f64 (pow.f64 y 4))))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z y)))","(/.f64 (+.f64 1 (neg.f64 z)) y)","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 z)) y) (*.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)) y)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 (pow.f64 y 2)))) (pow.f64 z 2)))))","(+.f64 (/.f64 (+.f64 1 (*.f64 (neg.f64 (pow.f64 z 3)) (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y)))))) y) (-.f64 (*.f64 (+.f64 (/.f64 1/2 y) (/.f64 1/2 (*.f64 y y))) (*.f64 z z)) (/.f64 z y)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)","(/.f64 (pow.f64 (/.f64 y z) y) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))","(-.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y)))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z)) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (/.f64 (pow.f64 z -2) y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) z)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 y (pow.f64 z 2))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 y z) y) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (*.f64 (pow.f64 y 3) (+.f64 -6 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) (*.f64 y (pow.f64 z 3))) (+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z)) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (/.f64 (pow.f64 z -2) y))))","(/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y)","(/.f64 (pow.f64 (/.f64 y z) y) y)","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))","(-.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z))))","(+.f64 (-.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z)) (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (/.f64 (pow.f64 z -2) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (*.f64 y (pow.f64 z 3)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 y (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 y (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) z)))))","(+.f64 (/.f64 (pow.f64 (/.f64 y z) y) y) (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (/.f64 (pow.f64 z -2) y)) (/.f64 (*.f64 y (pow.f64 (/.f64 y z) y)) z)) (/.f64 (*.f64 (pow.f64 (/.f64 y z) y) (+.f64 (*.f64 1/6 (+.f64 (pow.f64 y 6) (*.f64 y (*.f64 (pow.f64 y 3) (+.f64 -6 8))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 y y))))) (*.f64 y (pow.f64 z 3)))))","(pow.f64 (/.f64 1 y) 1/3)","(cbrt.f64 (/.f64 1 y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (pow.f64 (/.f64 1 y) 1/3))","(-.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (cbrt.f64 (/.f64 1 y)) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))) (pow.f64 (/.f64 1 y) 1/3)))","(-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (/.f64 1/2 y) 1/2) (*.f64 z z)) 1)) (*.f64 (cbrt.f64 (/.f64 1 y)) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) z)) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) 1/2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 y 2))))) (pow.f64 z 3)))) (pow.f64 (/.f64 1 y) 1/3))))","(-.f64 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (/.f64 1/2 y) 1/2) (*.f64 z z)) 1)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (/.f64 1/2 y) (+.f64 1/6 (/.f64 1/3 (*.f64 y y))))) (neg.f64 (pow.f64 z 3)))) (*.f64 (cbrt.f64 (/.f64 1 y)) z))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)))","(*.f64 (cbrt.f64 (/.f64 1 y)) (pow.f64 (/.f64 y z) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))))","(-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (pow.f64 (/.f64 y z) y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2)))))","(-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (pow.f64 z -2)) (pow.f64 (/.f64 y z) y))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) (+.f64 (*.f64 -1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y)) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 z)) (log.f64 y)) y))) (pow.f64 z 2))))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) (/.f64 (*.f64 (pow.f64 (/.f64 y z) y) (fma.f64 -1/6 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y (*.f64 (pow.f64 y 3) (+.f64 -6 4))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) (pow.f64 z 3)) (-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (pow.f64 z -2)) (pow.f64 (/.f64 y z) y))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z)))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))","(*.f64 (cbrt.f64 (/.f64 1 y)) (pow.f64 (/.f64 y z) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))))","(-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (pow.f64 (/.f64 y z) y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))) (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))))))","(-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (pow.f64 z -2)) (pow.f64 (/.f64 y z) y))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3) (/.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) z))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z)))))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 y (+.f64 (log.f64 (*.f64 -1 y)) (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 1/6 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (*.f64 y (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 z 3)))))))","(-.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 y 3) (pow.f64 y 4))) (pow.f64 (/.f64 y z) y)) (pow.f64 z -2)) (pow.f64 (/.f64 y z) y))) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (pow.f64 (/.f64 y z) y) (+.f64 (*.f64 1/6 (+.f64 (pow.f64 y 6) (*.f64 y (*.f64 (pow.f64 y 3) (+.f64 -6 8))))) (*.f64 1/2 (*.f64 (pow.f64 y 3) (*.f64 y y)))))) (pow.f64 z 3))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 y 5)) (pow.f64 (/.f64 y z) y)) z))"]],"time":166.18505859375,"type":"simplify"},{"compiler":[[8927,4875]],"time":81.152099609375,"type":"eval"},{"alts":[["(+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y))","fresh",8.456746476695377],["(+.f64 x (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2)))","done",5.722430430933477],["(+.f64 x (/.f64 1 y))","done",3.002976040835856],["(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","done",5.440442030053174],["(+.f64 x (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))","done",5.703121138225413]],"compiler":[[10,7],[20,12],[8,6],[14,8],[17,11]],"count":[[253,5]],"kept":[{"done":[3,3],"fresh":[1,0],"new":[248,1],"picked":[1,1]}],"min-error":[0],"time":75.867919921875,"type":"prune"},{"accuracy":[0.8074175198472052],"baseline":[3.002976040835856],"branch":[["x",3.0029760408358563,1],["y",1.0446371195725344,2],["z",1.5643396088764505,3],["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))",0.8074175198472052,3],["(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)",3.002976040835856,1]],"compiler":[[4,3],[4,3],[4,3],[16,10],[14,9],[77,31]],"count":[[7,3]],"inputs":[["(+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y))","(+.f64 x (*.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -2)))","(+.f64 x (/.f64 1 y))","(+.f64 (/.f64 (exp.f64 (neg.f64 z)) y) x)","(+.f64 x (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 3))","(+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y))","(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, G"],"oracle":[11.68812696644143],"outputs":[["(+.f64 x (/.f64 1 y))","(+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y))","(+.f64 x (/.f64 1 y))"]],"time":34.840087890625,"times":[["x",3.64404296875],["y",6.6640625],["z",9.532958984375],["(+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y))",9.9580078125],["(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)",3.509033203125]],"type":"regimes"},{"bstep":[[1.797629170292409e-33,2.3231698787527113e-32,0.035888671875],[-17832662020579283000.0,-1560496810167538700.0,0.10400390625]],"compiler":[[6,5],[16,10]],"method":["left-value","left-value"],"time":0.23583984375,"type":"bsearch"},{"compiler":[[52,26]],"inputs":[["(if (<=.f64 (+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)) -10000000000000000000) (+.f64 x (/.f64 1 y)) (if (<=.f64 (+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)) 1461501637330903/730750818665451459101842416358141509827966271488) (+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y)) (+.f64 x (/.f64 1 y))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)) -10000000000000000000) (+.f64 x (/.f64 1 y)) (if (<=.f64 (+.f64 x (/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 z y))))) y)) 1461501637330903/730750818665451459101842416358141509827966271488) (+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y)) (+.f64 x (/.f64 1 y))))","(if (<=.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) -10000000000000000000) (+.f64 x (/.f64 1 y)) (if (<=.f64 (+.f64 x (/.f64 (pow.f64 (/.f64 y (+.f64 z y)) y) y)) 1461501637330903/730750818665451459101842416358141509827966271488) (+.f64 x (/.f64 (exp.f64 (neg.f64 z)) y)) (+.f64 x (/.f64 1 y))))"]],"stop":[["fuel",1]],"time":23.78515625,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[52,26]],"remove-preprocessing":[[]],"time":14.885009765625,"type":"end"}]