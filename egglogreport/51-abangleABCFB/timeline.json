[{"compiler":[[27,22]],"method":["search"],"sampling":[[12,0.5265716509279628,0.4719642204613592,0.0014641286106780171],[11,0.4602626282185156,0.5382732431708064,0.0014641286106780171],[10,0.40565519775191206,0.5928806736374099,0.0014641286106780171],[9,0.40565519775191206,0.5928806736374099,0.0014641286106780171],[8,0.3120424598091631,0.6864934115801589,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":286.35595703125,"type":"analyze"},{"outcomes":[["body",512,"invalid",158.716064453125,670],["body",256,"invalid",240.442138671875,2066],["body",4096,"valid",388.960205078125,84],["body",512,"valid",185.203369140625,789],["body",1024,"invalid",508.86669921875,1301],["body",1024,"valid",588.78662109375,1527],["body",2048,"valid",160.7705078125,193],["body",256,"valid",626.818359375,5663]],"time":2872.430908203125,"type":"sample"},{"compiler":[[26,21]],"inputs":[["0","1","2"],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))))","(*.f64 (*.f64 (+.f64 angle b) (-.f64 b angle)) (sin.f64 (*.f64 (*.f64 a 1/180) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180))))","(*.f64 (*.f64 (+.f64 a angle) (-.f64 angle a)) (sin.f64 (*.f64 (*.f64 b 1/180) (+.f64 (PI.f64) (PI.f64)))))"]],"symmetry":[[]],"time":79.1640625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))"]],"time":21.48291015625,"type":"simplify"},{"compiler":[[42,30]],"time":0.63623046875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","next",34.641636854512704],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.707903262547894]],"compiler":[[19,13],[26,21],[19,13],[26,21]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[34.41872065554618],"time":1.807861328125,"type":"prune"},{"compiler":[[58,23]],"locations":[["(*.f64 angle 1/180)",0.26953125,true],["(*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))",0.3834762695368841,true],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))",10.544919138986003,true],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))",24.17158359911842,true]],"time":13.944091796875,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 angle 1/180)","angle","-inf",0.300048828125],["(*.f64 angle 1/180)","angle","inf",0.27197265625],["(*.f64 angle 1/180)","angle","0",0.28515625],["(*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))","angle","-inf",0.265869140625],["(*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))","angle","inf",0.400146484375],["(*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))","angle","0",0.3671875],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","angle","-inf",0.325927734375],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","angle","inf",0.4599609375],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","angle","0",0.680908203125],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","a","-inf",0.340087890625],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","a","inf",0.576904296875],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","a","0",0.4560546875],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","b","-inf",0.48291015625],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","b","inf",0.531982421875],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","b","0",0.719970703125],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","-inf",0.197998046875],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","inf",0.22314453125],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","0",0.592041015625]],"time":7.784912109375,"type":"series"},{"count":[[4,174]],"inputs":[["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))","(*.f64 angle 1/180)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2) (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2)) (*.f64 1 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2) 1) (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 0 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 2)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 a (-.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 b (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (-.f64 b a) b)) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (-.f64 b a) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (-.f64 b a) a)) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (-.f64 b a) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (+.f64 b a) b)) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (neg.f64 (*.f64 (+.f64 b a) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 b (-.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 a (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 b (+.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (neg.f64 (*.f64 a (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2)) (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 0) (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) b) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) (neg.f64 a)) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) b) (*.f64 (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) a) (*.f64 (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (*.f64 b (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) b) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (*.f64 (-.f64 b a) a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (*.f64 (-.f64 b a) b) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b a) b) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 (+.f64 b a) a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (*.f64 a (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2) (*.f64 (+.f64 b a) (-.f64 b a))) (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (*.f64 (+.f64 b a) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 0 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (*.f64 a (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (*.f64 b (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b a) (-.f64 b a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b a) (-.f64 b a)) 2)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 2)) (*.f64 (+.f64 b a) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (+.f64 b a) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (*.f64 (+.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b a) (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 2)) (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (cbrt.f64 (*.f64 (+.f64 b a) (-.f64 b a)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b a) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 a b) (*.f64 (+.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 a b) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (-.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 b a) (*.f64 (-.f64 a b) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a)) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)) (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 angle 1/90) (PI.f64))) (*.f64 (*.f64 angle 1/90) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) (*.f64 0 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle) (*.f64 (*.f64 1/180 (PI.f64)) angle))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 angle 1/90) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 angle) (*.f64 (cbrt.f64 (*.f64 angle angle)) (*.f64 1/90 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 1/90 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/90 (PI.f64)) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) 1/90)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (+.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/180) (+.f64 angle angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180))) (+.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (PI.f64)) 1/90)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (PI.f64)) (+.f64 (cbrt.f64 (*.f64 angle 1/180)) (cbrt.f64 (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (+.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 (PI.f64)) (+.f64 angle angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 2)) (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) angle) 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 (*.f64 angle 1/180))) (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (*.f64 angle (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/90) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 angle 1/90) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (+.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180))) (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 angle 1/180) (PI.f64) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (*.f64 angle 1/180) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (PI.f64)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 angle (*.f64 1/180 (PI.f64)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180))) (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) 1/180) angle (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) angle) 1/180 (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)) 1 (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 angle 1/180) (PI.f64)) (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 angle 1/180)) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 angle 1/180) (*.f64 0 (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 angle 1/180) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 angle) (*.f64 (cbrt.f64 (*.f64 angle angle)) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle 1/180)) (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/32400 (*.f64 angle angle))) (cbrt.f64 (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (sqrt.f64 1/180)) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 (cbrt.f64 angle)) (cbrt.f64 (*.f64 angle angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 angle 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 angle 1/180) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/180)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/180)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 angle 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 angle 1/180) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 angle 1/180) 3))))))"]],"rules":[["egg-rr",27],["egg-rr",63],["egg-rr",58],["egg-rr",26]],"time":40.27392578125,"type":"rewrite"},{"count":[[246,208]],"inputs":[["(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b)))))))","(+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 7) (+.f64 a b))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/90 (*.f64 angle (PI.f64)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(fma.f64 (*.f64 angle (PI.f64)) 1/90 (fma.f64 -1/241061637600000000 (pow.f64 (*.f64 angle (PI.f64)) 7) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2)))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 a 2))) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b))","(fma.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b) 0)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b))","(fma.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b) 0)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (+.f64 (*.f64 -1 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)) b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(fma.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b b) 0)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))) (*.f64 -1 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 b b) (neg.f64 (*.f64 a a))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b)))))))","(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (fma.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b)))))))","(+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 7) (+.f64 a b))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 3) (+.f64 a b))))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b))))))))","(fma.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 7) (+.f64 a b)))) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (fma.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 b a) (*.f64 (pow.f64 (PI.f64) 5) (+.f64 a b))))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)","(*.f64 1/180 angle)"]],"time":214.158203125,"type":"simplify"},{"compiler":[[4662,2205]],"time":44.452880859375,"type":"eval"},{"alts":[["(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))))","fresh",37.6535007193451],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.814038252027444],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 angle) (*.f64 (cbrt.f64 (*.f64 angle angle)) 1/180)) (+.f64 (PI.f64) (PI.f64)))))","fresh",45.7024673034018],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))","fresh",34.780561842003465],["(*.f64 (cbrt.f64 (+.f64 b a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))","fresh",34.69116693266084],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","next",23.735386854513305],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.5590934577035],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))","fresh",34.73924582594472],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))","fresh",34.80317650277944],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.64454455830778],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.707903262547894],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))","fresh",56.771134153831845],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","fresh",34.939337021433445],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)","fresh",34.73479833214793],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.605463745405544],["(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","fresh",46.18228453334346],["(pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)","fresh",51.221367220190444],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 angle 1/180) 3) 1/3) (+.f64 (PI.f64) (PI.f64)))))","fresh",56.94659239817999],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))","fresh",34.756907172803515],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3))","fresh",55.02958511111078],["(+.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))","fresh",34.645543104512704],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (+.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (PI.f64))))))","fresh",34.81592780460593],["(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","fresh",44.10897334030698],["(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","fresh",38.962495826286094]],"compiler":[[16,11],[22,16],[25,17],[25,18],[25,17],[29,19],[23,17],[20,15],[27,19],[23,17],[26,21],[21,16],[34,25],[20,15],[23,17],[14,11],[21,16],[23,17],[20,15],[21,16],[29,19],[26,17],[13,11],[33,20],[16,11],[22,16],[25,17],[25,18],[25,17],[29,19],[23,17],[20,15],[27,19],[23,17],[26,21],[21,16],[34,25],[20,15],[23,17],[14,11],[21,16],[23,17],[20,15],[21,16],[29,19],[26,17],[13,11],[33,20]],"count":[[210,24]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[208,23],"picked":[1,0]}],"min-error":[21.129508880180975],"time":60.338134765625,"type":"prune"},{"compiler":[[88,46]],"locations":[["(*.f64 angle 1/90)",0.26953125,true],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))",0.3046875,true],["(*.f64 (*.f64 angle 1/90) (PI.f64))",0.3717575195368841,true],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))",24.17158359911842,true]],"time":22.0009765625,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 angle 1/90)","angle","-inf",0.294921875],["(*.f64 angle 1/90)","angle","inf",0.31103515625],["(*.f64 angle 1/90)","angle","0",0.254150390625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","a","-inf",0.278076171875],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","a","inf",0.3291015625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","a","0",0.328857421875],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","b","-inf",0.302978515625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","b","inf",0.293212890625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","b","0",0.42822265625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","angle","-inf",0.260009765625],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","angle","inf",0.303955078125],["(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","angle","0",1.01416015625],["(*.f64 (*.f64 angle 1/90) (PI.f64))","angle","-inf",0.142822265625],["(*.f64 (*.f64 angle 1/90) (PI.f64))","angle","inf",0.18701171875],["(*.f64 (*.f64 angle 1/90) (PI.f64))","angle","0",0.238037109375],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))","angle","-inf",0.160888671875],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))","angle","inf",0.2021484375],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))","angle","0",0.2587890625]],"time":5.85791015625,"type":"series"},{"count":[[4,132]],"inputs":[["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))","(*.f64 (*.f64 angle 1/90) (PI.f64))","(*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))","(*.f64 angle 1/90)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 0) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (*.f64 0 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 0) (*.f64 (*.f64 (PI.f64) angle) 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) (*.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (*.f64 (*.f64 (PI.f64) angle) 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) (*.f64 0 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/90) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 1/90 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/90 (PI.f64)) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 2)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 angle) (*.f64 (cbrt.f64 (*.f64 angle angle)) (*.f64 1/90 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle 1/90)) (*.f64 (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)) (PI.f64)) (cbrt.f64 (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (*.f64 1/90 (PI.f64))) (cbrt.f64 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/90))) (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) 1/90)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/90 (*.f64 (PI.f64) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (PI.f64) angle) 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)) (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 0) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) (*.f64 0 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b a) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (cbrt.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (cbrt.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (+.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b a) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (cbrt.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (*.f64 (+.f64 b a) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 (*.f64 b (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))) (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))) (*.f64 b (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) a) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a) 2)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b) 2)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) b) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b) 1 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) b) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 angle 1/90) 0) (*.f64 angle 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 angle 1/90) (*.f64 (*.f64 angle 1/90) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 angle 1/90)) (*.f64 angle 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 angle 1/90) (*.f64 0 (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 angle) (cbrt.f64 (*.f64 (*.f64 angle angle) 1/729000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 angle 1/90)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 angle angle) 1/729000)) (cbrt.f64 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle 1/90)) (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle 1/90)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/90 angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 angle angle) 1/8100)) (cbrt.f64 (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (sqrt.f64 1/90)) (sqrt.f64 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (cbrt.f64 1/90)) (cbrt.f64 1/8100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/729000 angle)) (cbrt.f64 (*.f64 angle angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/90) (*.f64 angle (sqrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 angle 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle angle)) (cbrt.f64 (*.f64 1/729000 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/8100) (*.f64 angle (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 angle 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 angle 1/90) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/90)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/90)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 angle 1/90) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 angle 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 angle 1/90) 3))))))"]],"rules":[["egg-rr",30],["egg-rr",49],["egg-rr",34],["egg-rr",19]],"time":34.116943359375,"type":"rewrite"},{"count":[[204,153]],"inputs":[["(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 5)))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/90 (*.f64 angle (PI.f64)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(fma.f64 (*.f64 angle (PI.f64)) 1/90 (fma.f64 -1/241061637600000000 (pow.f64 (*.f64 angle (PI.f64)) 7) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))","(fma.f64 -1/4374000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))","(+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 5))))))","(fma.f64 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) -1/4374000 (fma.f64 1/708588000000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 5)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))))","(+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 a b) (pow.f64 (PI.f64) 5)))))))","(fma.f64 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 7)) -1/241061637600000000 (fma.f64 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) -1/4374000 (fma.f64 1/708588000000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 5)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)","(*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a)","(*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(+.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 a b))","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)","(*.f64 1/90 angle)"]],"time":207.56494140625,"type":"simplify"},{"compiler":[[10095,5206]],"time":87.731201171875,"type":"eval"},{"alts":[["(pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)","fresh",51.221367220190444],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.647812046766145],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.813869790175268],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",38.83611027093477],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",27.59304766558569],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))","fresh",26.779695414424257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))))","fresh",23.965117748812908],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 angle 1/180) 3) 1/3) (+.f64 (PI.f64) (PI.f64)))))","fresh",56.94659239817999],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","fresh",24.374515636921927],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (fma.f64 -1/4374000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))))","fresh",27.727976038577687],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))","fresh",34.756907172803515],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 angle (sqrt.f64 1/90)) (sqrt.f64 1/90)) (PI.f64))) (+.f64 b a))))","fresh",23.811387625290532],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))))","fresh",23.764921603660348],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (cbrt.f64 1/90))) (PI.f64))) (+.f64 b a))))","fresh",23.753127965969632],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","fresh",40.25816905023827],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))","fresh",34.73924582594472],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.5590934577035],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))","fresh",34.80317650277944],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) 3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.749312394698013],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3))","fresh",55.02958511111078],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.74524748446068],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))","fresh",31.949010929452257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3)) (+.f64 b a))))","fresh",24.054409727692995],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (cbrt.f64 (*.f64 1/729000 angle))) (PI.f64))) (+.f64 b a))))","fresh",33.85867168231231],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.64454455830778],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))","fresh",56.771134153831845],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","fresh",34.939337021433445],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.617889240956707],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (+.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (PI.f64))))))","fresh",34.81592780460593],["(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","fresh",44.10897334030698],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))))","fresh",23.871701508919386],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",42.312744997504254],["(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","fresh",38.962495826286094],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) 3) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.746363615392685],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)","fresh",34.73479833214793],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)))","fresh",41.39235963143452],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3) 1/3)) (+.f64 b a))))","fresh",45.024148915917785],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.605463745405544],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.814038252027444],["(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","fresh",46.18228453334346],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","next",23.588460804973902],["(+.f64 (*.f64 (neg.f64 a) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",26.43120787397608],["(+.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))","fresh",34.645543104512704]],"compiler":[[21,16],[35,23],[35,23],[27,19],[35,22],[44,28],[35,23],[23,17],[27,19],[39,25],[20,15],[33,23],[33,23],[33,23],[27,19],[20,15],[23,17],[27,19],[32,22],[21,16],[29,19],[40,27],[32,22],[35,23],[23,17],[21,16],[34,25],[32,22],[26,17],[13,11],[32,22],[33,23],[33,20],[32,22],[20,15],[33,23],[33,23],[23,17],[22,16],[14,11],[33,23],[28,19],[29,19],[21,16],[35,23],[35,23],[27,19],[35,22],[44,28],[35,23],[23,17],[27,19],[39,25],[20,15],[33,23],[33,23],[33,23],[27,19],[20,15],[23,17],[27,19],[32,22],[21,16],[29,19],[40,27],[32,22],[35,23],[23,17],[21,16],[34,25],[32,22],[26,17],[13,11],[32,22],[33,23],[33,20],[32,22],[20,15],[33,23],[33,23],[23,17],[22,16],[14,11],[33,23],[28,19],[29,19]],"count":[[330,43]],"kept":[{"done":[0,0],"fresh":[23,18],"new":[306,25],"picked":[1,0]}],"min-error":[20.73865660161559],"time":130.1240234375,"type":"prune"},{"compiler":[[145,92]],"locations":[["(*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))",0.3717575195368841,true],["(*.f64 (*.f64 angle 1/90) (PI.f64))",0.3717575195368841,false],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))",24.17158359911842,false],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64)))",24.57881612328975,true]],"time":39.457763671875,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))","angle","-inf",0.298095703125],["(*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))","angle","inf",0.35498046875],["(*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))","angle","0",2.169921875],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64)))","angle","-inf",0.261962890625],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64)))","angle","inf",0.217041015625],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64)))","angle","0",1.23291015625]],"time":4.64501953125,"type":"series"},{"count":[[2,57]],"inputs":[["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64)))","(*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 0) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 0 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 0) (*.f64 1/90 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 0 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 1/90 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/90 angle) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 1/90 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (*.f64 (cbrt.f64 1/8100) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/90) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/90 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (PI.f64) 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/90 angle)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 2/3) (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))) (cbrt.f64 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/90 angle)) (*.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/90)) (*.f64 (cbrt.f64 (cbrt.f64 1/8100)) (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/90 angle) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/90 angle))) (pow.f64 (*.f64 1/90 angle) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/90 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/90 (*.f64 angle (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 1/90 angle) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/8100)) (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64)))) (cbrt.f64 (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (PI.f64)) (cbrt.f64 (*.f64 1/90 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/90 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (PI.f64)) 1/90)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 3))))))"]],"rules":[["egg-rr",38],["egg-rr",19]],"time":23.9521484375,"type":"rewrite"},{"count":[[81,65]],"inputs":[["(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5)))))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (cbrt.f64 1/8100) 7) (*.f64 (pow.f64 (cbrt.f64 1/90) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5))))))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5)))))))","(fma.f64 angle (*.f64 1/90 (PI.f64)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/90 (PI.f64)) 5)))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (cbrt.f64 1/8100) 7) (*.f64 (pow.f64 (cbrt.f64 1/90) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5))))))))","(fma.f64 (*.f64 1/90 (PI.f64)) angle (fma.f64 -1/5040 (*.f64 (pow.f64 angle 7) (pow.f64 (*.f64 1/90 (PI.f64)) 7)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/90 (PI.f64)) 5))))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))"]],"time":102.091064453125,"type":"simplify"},{"compiler":[[4284,2383]],"time":39.843994140625,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/90))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.74524748446068],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.814038252027444],["(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","fresh",46.18228453334346],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","next",23.542754120575573],["(pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)","fresh",51.221367220190444],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",38.83611027093477],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",27.59304766558569],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))","fresh",26.779695414424257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))))","fresh",23.965117748812908],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","fresh",24.374515636921927],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (fma.f64 -1/4374000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))))","fresh",27.727976038577687],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))","fresh",34.756907172803515],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 angle (sqrt.f64 1/90)) (sqrt.f64 1/90)) (PI.f64))) (+.f64 b a))))","fresh",23.811387625290532],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))))","fresh",23.764921603660348],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (cbrt.f64 1/90))) (PI.f64))) (+.f64 b a))))","fresh",23.753127965969632],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","fresh",40.25816905023827],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))","fresh",34.73924582594472],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.5590934577035],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))","fresh",34.80317650277944],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) 3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.749312394698013],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3))","fresh",55.02958511111078],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))","fresh",31.949010929452257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3)) (+.f64 b a))))","fresh",24.054409727692995],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (cbrt.f64 (*.f64 1/729000 angle))) (PI.f64))) (+.f64 b a))))","fresh",33.85867168231231],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))) (+.f64 b a))))","fresh",23.67253868800309],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 angle)) (*.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",45.17446921503079],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.64454455830778],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))","fresh",56.771134153831845],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","fresh",34.939337021433445],["(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","fresh",44.10897334030698],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))))","fresh",23.871701508919386],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",42.312744997504254],["(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","fresh",38.962495826286094],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",45.374202386860624],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)","fresh",34.73479833214793],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)))","fresh",41.39235963143452],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3) 1/3)) (+.f64 b a))))","fresh",45.024148915917785],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/90 angle)) (cbrt.f64 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.813869790175268],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.605463745405544],["(+.f64 (*.f64 (neg.f64 a) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",26.43120787397608],["(+.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))","fresh",34.645543104512704],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.617889240956707]],"compiler":[[29,19],[22,16],[14,11],[33,23],[21,16],[27,19],[35,22],[44,28],[35,23],[27,19],[39,25],[20,15],[33,23],[33,23],[33,23],[27,19],[20,15],[23,17],[27,19],[32,22],[21,16],[40,27],[32,22],[35,23],[39,27],[36,25],[23,17],[21,16],[34,25],[13,11],[32,22],[33,23],[33,20],[38,25],[20,15],[33,23],[33,23],[34,23],[23,17],[28,19],[29,19],[32,22],[29,19],[22,16],[14,11],[33,23],[21,16],[27,19],[35,22],[44,28],[35,23],[27,19],[39,25],[20,15],[33,23],[33,23],[33,23],[27,19],[20,15],[23,17],[27,19],[32,22],[21,16],[40,27],[32,22],[35,23],[39,27],[36,25],[23,17],[21,16],[34,25],[13,11],[32,22],[33,23],[33,20],[38,25],[20,15],[33,23],[33,23],[34,23],[23,17],[28,19],[29,19],[32,22]],"count":[[169,42]],"kept":[{"done":[0,0],"fresh":[42,36],"new":[126,6],"picked":[1,0]}],"min-error":[20.655007994771204],"time":60.386962890625,"type":"prune"},{"compiler":[[142,89]],"locations":[["(*.f64 (*.f64 angle 1/90) (PI.f64))",0.3717575195368841,false],["(*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))",0.41796875,true],["(sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))",24.17158359911842,false],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))",24.790395385781817,true]],"time":39.0849609375,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))","angle","-inf",0.18896484375],["(*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))","angle","inf",0.174072265625],["(*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))","angle","0",0.157958984375],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))","angle","-inf",0.202880859375],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))","angle","inf",0.18115234375],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))","angle","0",0.325927734375]],"time":1.3359375,"type":"series"},{"count":[[2,59]],"inputs":[["(sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))","(*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 0) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (*.f64 0 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) (pow.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 2/3) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 0) (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) (*.f64 0 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (*.f64 (cbrt.f64 1/8100) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/8100) angle)) (*.f64 (pow.f64 (*.f64 (cbrt.f64 1/8100) angle) 2/3) (*.f64 (PI.f64) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 1/90)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (cbrt.f64 (*.f64 (cbrt.f64 1/8100) angle))) (pow.f64 (*.f64 (cbrt.f64 1/8100) angle) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (cbrt.f64 1/8100)) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90))) (*.f64 (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3) (*.f64 (cbrt.f64 1/8100) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (cbrt.f64 1/8100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3) (*.f64 (cbrt.f64 1/8100) angle)) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 1/8100) angle) 2/3) (*.f64 (PI.f64) (cbrt.f64 1/90))) (cbrt.f64 (*.f64 (cbrt.f64 1/8100) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 1/8100) angle) 2/3) (*.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) (cbrt.f64 (*.f64 (cbrt.f64 1/8100) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 2/3) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/8100) (*.f64 (*.f64 angle (PI.f64)) (cbrt.f64 1/90)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle (PI.f64)) (cbrt.f64 1/90)) (cbrt.f64 1/8100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/8100)) (*.f64 (cbrt.f64 (cbrt.f64 1/65610000)) (*.f64 (*.f64 angle (PI.f64)) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))) (cbrt.f64 1/90))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))) (cbrt.f64 (cbrt.f64 1/90))) (cbrt.f64 (cbrt.f64 1/8100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/65610000)) (*.f64 (*.f64 angle (PI.f64)) (cbrt.f64 1/90))) (cbrt.f64 (cbrt.f64 1/8100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3) (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/8100)) (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (PI.f64))) (cbrt.f64 (cbrt.f64 1/90))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/8100 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) 1/90)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 1/8100 (*.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) 1/90)))))))"]],"rules":[["egg-rr",40],["egg-rr",19]],"time":25.568115234375,"type":"rewrite"},{"count":[[83,69]],"inputs":[["(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5)))))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (cbrt.f64 1/8100) 7) (*.f64 (pow.f64 (cbrt.f64 1/90) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5))))))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5)))))))","(fma.f64 angle (*.f64 1/90 (PI.f64)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/90 (PI.f64)) 5)))))","(+.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (cbrt.f64 1/8100) 7) (*.f64 (pow.f64 (cbrt.f64 1/90) 7) (pow.f64 (PI.f64) 7))))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (cbrt.f64 1/8100) 5) (*.f64 (pow.f64 (cbrt.f64 1/90) 5) (pow.f64 (PI.f64) 5))))))))","(fma.f64 (*.f64 1/90 (PI.f64)) angle (fma.f64 -1/5040 (*.f64 (pow.f64 angle 7) (pow.f64 (*.f64 1/90 (PI.f64)) 7)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/90 (PI.f64)) 5))))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (cbrt.f64 1/90) (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))"]],"time":102.15380859375,"type":"simplify"},{"compiler":[[4670,2764]],"time":45.47607421875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/90))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.74524748446068],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.814038252027444],["(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","fresh",46.18228453334346],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.493144197290714],["(pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)","fresh",51.221367220190444],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",38.83611027093477],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",27.59304766558569],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))","fresh",26.779695414424257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))))","fresh",23.965117748812908],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","fresh",24.374515636921927],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (fma.f64 -1/4374000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))))","fresh",27.727976038577687],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))","fresh",34.756907172803515],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))))","fresh",23.764921603660348],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (cbrt.f64 1/90))) (PI.f64))) (+.f64 b a))))","fresh",23.753127965969632],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","fresh",40.25816905023827],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))","fresh",34.73924582594472],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.5590934577035],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))","fresh",34.80317650277944],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) 3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.749312394698013],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3))","fresh",55.02958511111078],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",45.34142179470581],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 (PI.f64) angle))) (+.f64 b a))))","fresh",23.692158072943972],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3)) (+.f64 b a))))","fresh",24.054409727692995],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))","fresh",31.949010929452257],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (cbrt.f64 (*.f64 1/729000 angle))) (PI.f64))) (+.f64 b a))))","fresh",33.85867168231231],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))) (+.f64 b a))))","fresh",23.67253868800309],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 angle)) (*.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",45.17446921503079],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.64454455830778],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))","fresh",56.771134153831845],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","fresh",34.939337021433445],["(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","fresh",44.10897334030698],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))))","fresh",23.871701508919386],["(+.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",42.312744997504254],["(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","fresh",38.962495826286094],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",45.374202386860624],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) 3) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.580495441269996],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)","fresh",34.73479833214793],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)))","fresh",41.39235963143452],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3) 1/3)) (+.f64 b a))))","fresh",45.024148915917785],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/90 angle)) (cbrt.f64 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.813869790175268],["(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle)) (+.f64 (PI.f64) (PI.f64)))))","fresh",34.605463745405544],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (*.f64 1/90 (PI.f64))) (cbrt.f64 angle))) (+.f64 b a))))","fresh",33.74806918340288],["(+.f64 (*.f64 (neg.f64 a) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",26.43120787397608],["(+.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))","fresh",34.645543104512704],["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","fresh",23.617889240956707]],"compiler":[[29,19],[22,16],[14,11],[41,30],[21,16],[27,19],[35,22],[44,28],[35,23],[27,19],[39,25],[20,15],[33,23],[33,23],[27,19],[20,15],[23,17],[27,19],[32,22],[21,16],[46,34],[33,23],[32,22],[40,27],[35,23],[39,27],[36,25],[23,17],[21,16],[34,25],[13,11],[32,22],[33,23],[33,20],[38,25],[36,26],[20,15],[33,23],[33,23],[34,23],[23,17],[39,27],[28,19],[29,19],[32,22]],"count":[[172,45]],"kept":[{"done":[0,0],"fresh":[41,40],"new":[130,5],"picked":[1,0]}],"min-error":[20.62906122844456],"time":45.781982421875,"type":"prune"},{"accuracy":[23.4931441972907],"baseline":[23.493144197290714],"branch":[["a",23.493144197290714,1],["b",23.493144197290707,1],["angle",23.49314419729071,1],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))",23.493144197290718,1],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",23.49314419729071,1],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",23.49314419729071,1],["(pow.f64 b 2)",23.493144197290704,1],["(pow.f64 b 2)",23.493144197290704,1],["(pow.f64 a 2)",23.4931441972907,1],["(pow.f64 a 2)",23.4931441972907,1],["(*.f64 (PI.f64) (/.f64 angle 180))",23.49314419729071,1],["(/.f64 angle 180)",23.49314419729071,1]],"compiler":[[4,3],[4,3],[4,3],[26,21],[12,10],[10,8],[6,5],[6,5],[6,5],[6,5],[8,7],[6,5],[1629,839]],"count":[[61,1]],"inputs":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 (PI.f64) angle))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90))))) 3) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (*.f64 1/90 (PI.f64))) (cbrt.f64 angle))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/90))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (*.f64 (PI.f64) (cbrt.f64 1/90)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 angle)) (*.f64 (pow.f64 (*.f64 1/90 angle) 2/3) (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/90 angle)) (cbrt.f64 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/90)) (cbrt.f64 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/4374000 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 angle 1/90) (cbrt.f64 (PI.f64))))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b)))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (fma.f64 -1/4374000 (*.f64 (+.f64 a b) (pow.f64 (*.f64 angle (PI.f64)) 3)) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64)))))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 angle (sqrt.f64 1/90)) (sqrt.f64 1/90)) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) (*.f64 angle (cbrt.f64 1/90))) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 a (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 (neg.f64 a) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a))) 3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 2)) (+.f64 b a)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) 3)) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 angle angle)) (cbrt.f64 (*.f64 1/729000 angle))) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/90)) 3) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90))) 3) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)) (+.f64 b a)) 3) 1/3)))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90) 3) 1/3)) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/90) (*.f64 (cbrt.f64 1/8100) angle)) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 a b) (PI.f64))))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 angle 1/180)) 3) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 angle) (*.f64 (cbrt.f64 (*.f64 angle angle)) 1/180)) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))","(*.f64 (cbrt.f64 (+.f64 b a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (*.f64 (-.f64 b a) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))))","(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) angle)) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3)))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (*.f64 angle (cbrt.f64 1/180)) (cbrt.f64 1/32400)) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)) 3) 1/3)))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2) (+.f64 (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (cbrt.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))))) 3)","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) angle)) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (neg.f64 (*.f64 a a)) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))))","(pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3) 1/3)","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 angle 1/180) 3) 1/3) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) 3))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) 3) 1/3))","(+.f64 (*.f64 (*.f64 b (+.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))) (*.f64 (neg.f64 (*.f64 a (+.f64 b a))) (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64)))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 angle 1/180)) (+.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (pow.f64 b 2))","(fma.f64 -1/4374000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (PI.f64) (cbrt.f64 (+.f64 a b))))) 3) (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 b a) (*.f64 (PI.f64) (+.f64 a b))))))","(*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))"]],"link":["."],"name":["ab-angle->ABCF B"],"oracle":[60.74654994654614],"outputs":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))"]],"time":194.10693359375,"times":[["a",17.69091796875],["b",15.82177734375],["angle",16.016845703125],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))",13.150146484375],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",13.488037109375],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",13.387939453125],["(pow.f64 b 2)",10.55908203125],["(pow.f64 b 2)",10.388916015625],["(pow.f64 a 2)",10.278076171875],["(pow.f64 a 2)",10.49609375],["(*.f64 (PI.f64) (/.f64 angle 180))",16.283935546875],["(/.f64 angle 180)",16.926025390625]],"type":"regimes"},{"compiler":[[41,30]],"inputs":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (neg.f64 a) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 1/8100) angle) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 1/90)) 2/3))) (+.f64 b a))) (*.f64 b (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/90) (PI.f64))) (+.f64 b a))))","(*.f64 (+.f64 b a) (fma.f64 (sin.f64 (*.f64 angle (*.f64 (cbrt.f64 1/8100) (*.f64 (PI.f64) (cbrt.f64 1/90))))) (neg.f64 a) (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/90)))))"]],"stop":[["fuel",1]],"time":26.649169921875,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[41,30]],"remove-preprocessing":[[]],"time":16.950927734375,"type":"end"}]