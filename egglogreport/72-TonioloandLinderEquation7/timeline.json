[{"compiler":[[31,21]],"method":["search"],"sampling":[[12,0.04680636897137447,0.5772785506469518,0.37591508038167376],[11,0.023403184485687234,0.600681735132639,0.37591508038167376],[10,0.015602122990458156,0.7332997805515333,0.2510980964580085],[9,0.0,0.7489019035419915,0.2510980964580085],[8,0.0,0.7489019035419915,0.2510980964580085],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":175.1669921875,"type":"analyze"},{"outcomes":[["body",512,"invalid",69.283447265625,544],["body",256,"invalid",212.95703125,3120],["body",1024,"invalid",149.51416015625,796],["body",1024,"valid",228.017333984375,1187],["body",512,"valid",121.5283203125,925],["body",2048,"valid",15.43505859375,60],["body",256,"valid",437.957763671875,6084]],"time":1248.56591796875,"type":"sample"},{"compiler":[[30,20]],"inputs":[["0","1","2"],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 l 1) (-.f64 l 1)) (+.f64 (*.f64 x x) (*.f64 2 (*.f64 t t)))) (*.f64 x x))))","(/.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 t 1) (-.f64 t 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 x x)))) (*.f64 l l))))","(/.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 t t) (*.f64 2 (*.f64 l l)))) (*.f64 t t))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (fma.f64 l l (*.f64 (*.f64 2 t) t)) (neg.f64 (*.f64 l l)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 l 1) (-.f64 l 1)) (+.f64 (*.f64 x x) (*.f64 2 (*.f64 t t)))) (*.f64 x x))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 l 1) (+.f64 l -1)) (fma.f64 x x (*.f64 (*.f64 2 t) t)) (neg.f64 (*.f64 x x)))))","(/.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 t 1) (-.f64 t 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 x x)))) (*.f64 l l))))","(/.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (fma.f64 (/.f64 (+.f64 t 1) (+.f64 t -1)) (fma.f64 l l (*.f64 (*.f64 2 x) x)) (neg.f64 (*.f64 l l)))))","(/.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 t t) (*.f64 2 (*.f64 l l)))) (*.f64 t t))))","(/.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (fma.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (fma.f64 t t (*.f64 (*.f64 2 l) l)) (neg.f64 (*.f64 t t)))))"]],"symmetry":[[]],"time":62.380126953125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))"]],"time":24.090087890625,"type":"simplify"},{"compiler":[[56,35]],"time":0.621826171875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","next",41.154014496791916]],"compiler":[[29,19],[29,19]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[41.154014496791916],"time":1.18896484375,"type":"prune"},{"compiler":[[118,49]],"locations":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))",0.01953125,true],["(*.f64 (sqrt.f64 2) t)",0.4609375,true],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))",10.811561955031198,true],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))",20.79230377247606,true]],"time":22.97314453125,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","l","-inf",0.860107421875],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","l","inf",1.89697265625],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","l","0",4.13916015625],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","x","-inf",2.679931640625],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","x","inf",1.697021484375],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","x","0",2.656005859375],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","t","-inf",1.091796875],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","t","inf",2.116943359375],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","t","0",2.299072265625],["(*.f64 (sqrt.f64 2) t)","t","-inf",0.295166015625],["(*.f64 (sqrt.f64 2) t)","t","inf",0.31689453125],["(*.f64 (sqrt.f64 2) t)","t","0",0.386962890625],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","t","-inf",0.217041015625],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","t","inf",0.39501953125],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","t","0",0.533935546875],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","l","-inf",1.072998046875],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","l","inf",1.087890625],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","l","0",0.702880859375],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","x","-inf",0.218017578125],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","x","inf",0.66015625],["(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","x","0",0.306884765625],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","t","-inf",0.56591796875],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","t","inf",0.97119140625],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","t","0",0.989990234375],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","l","-inf",0.60888671875],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","l","inf",1.3740234375],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","l","0",1.3779296875],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","x","-inf",0.9560546875],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","x","inf",0.9560546875],["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","x","0",1.4111328125]],"time":35.7919921875,"type":"series"},{"count":[[4,234]],"inputs":[["(sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))","(fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))","(*.f64 (sqrt.f64 2) t)","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 0) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (*.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (*.f64 1/2 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (*.f64 0 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (neg.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (fabs.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 0) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 l l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (*.f64 l l)) (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (+.f64 -1 x))) (/.f64 (*.f64 (+.f64 1 x) (*.f64 (+.f64 t t) t)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (*.f64 l l)) (/.f64 (*.f64 (*.f64 l l) (+.f64 1 x)) (+.f64 -1 x))) (/.f64 (*.f64 (*.f64 (+.f64 t t) t) (+.f64 1 x)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 l l) (+.f64 1 x)) (+.f64 -1 x)) (+.f64 (/.f64 (*.f64 (*.f64 (+.f64 t t) t) (+.f64 1 x)) (+.f64 -1 x)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (+.f64 -1 x)) (+.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 (+.f64 t t) t)) (+.f64 -1 x)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 l l) (+.f64 1 x)) (+.f64 -1 x)) (-.f64 (/.f64 (*.f64 (*.f64 (+.f64 t t) t) (+.f64 1 x)) (+.f64 -1 x)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (+.f64 -1 x)) (-.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 (+.f64 t t) t)) (+.f64 -1 x)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 0) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1/2) (*.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (*.f64 1/2 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 0 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 l l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (sqrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2) (*.f64 (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2) (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 0) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2)) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))) (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 l l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 l) l (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 l) (*.f64 (cbrt.f64 (*.f64 l l)) (neg.f64 l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 l 4)) (cbrt.f64 (neg.f64 (*.f64 l l))) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 l l)) (*.f64 (neg.f64 l) (cbrt.f64 l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 l l))) (cbrt.f64 (pow.f64 l 4)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 l) (cbrt.f64 l)) (cbrt.f64 (*.f64 l l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 l (neg.f64 l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (cbrt.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)))) (cbrt.f64 (pow.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) 2)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (/.f64 (+.f64 1 x) (+.f64 -1 x)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) 2)) (fma.f64 l l (*.f64 (+.f64 t t) t))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) 2) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))) 1 (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 l l)) 1 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 l l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 l l) -1 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 l l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))) (neg.f64 (*.f64 l l)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) t) 0) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) t) 1/2) (*.f64 (*.f64 (sqrt.f64 2) t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 2) t)) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) t)) (*.f64 1/2 (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 2) t) (*.f64 0 (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 t) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (cbrt.f64 (*.f64 (+.f64 t t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 t t) t)) (cbrt.f64 (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 t) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t))) (neg.f64 (cbrt.f64 (*.f64 (+.f64 t t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 8) (pow.f64 t 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sqrt.f64 8) (pow.f64 t 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 0) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1/2) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (*.f64 0 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (neg.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (/.f64 t (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 t (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 t (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (sqrt.f64 2) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (/.f64 (sqrt.f64 8) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 (sqrt.f64 2) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (/.f64 (cbrt.f64 (*.f64 (+.f64 t t) t)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (/.f64 (cbrt.f64 (*.f64 (+.f64 t t) t)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1/2) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1/2)) (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (neg.f64 1/4)) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) (neg.f64 1/4)) (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (*.f64 (+.f64 t t) t))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 (sqrt.f64 2) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (/.f64 t (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (/.f64 (cbrt.f64 (*.f64 (+.f64 t t) t)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (neg.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1/8)) (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2))) (cbrt.f64 (*.f64 (+.f64 t t) t))) (*.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (neg.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (*.f64 (+.f64 t t) t))) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)))) (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (*.f64 (sqrt.f64 2) t))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) t) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (sqrt.f64 2)) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))) -1/2)) (*.f64 (sqrt.f64 2) t)) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 2))) (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (cbrt.f64 (/.f64 (*.f64 (+.f64 t t) t) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (cbrt.f64 (/.f64 (sqrt.f64 8) (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (/.f64 t (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 1) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))) (cbrt.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) -1) (neg.f64 (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l))))) 3))))))"]],"rules":[["egg-rr",76],["egg-rr",36],["egg-rr",74],["egg-rr",48]],"time":60.891845703125,"type":"rewrite"},{"count":[[318,346]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 t 2)))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3))))) (*.f64 (sqrt.f64 2) t)))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 t 2))))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (*.f64 (sqrt.f64 2) t)))))","(*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (+.f64 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 5))))))))","(*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 5))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))))))","(sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))","(+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2)))) (+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (pow.f64 (-.f64 1 x) 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 5))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2)))) (+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))))))","(-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3)))))) (pow.f64 l 2))","(*.f64 2 (pow.f64 t 2))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 2 (pow.f64 t 2)))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2))))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2)))))","(*.f64 2 (pow.f64 t 2))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 2 (pow.f64 t 2)))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2))))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2)))))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 5) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 5) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (+.f64 1 x) (-.f64 1 x))) 2)) (+.f64 1 x)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) (-.f64 1 x)))) (*.f64 -8 (/.f64 (pow.f64 (+.f64 1 x) 3) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 4) (pow.f64 (-.f64 1 x) 3))))) (pow.f64 t 7))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (pow.f64 x 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))) (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))) (pow.f64 x 3)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (pow.f64 x 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 1/2))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 1/2))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 t 2))))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))))","(*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) (*.f64 (+.f64 1 x) (pow.f64 t 2))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) (-.f64 1 x)))) (*.f64 -8 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 4) (pow.f64 (-.f64 1 x) 3))))))) (pow.f64 l 7)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))","(*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) (*.f64 (+.f64 1 x) (pow.f64 t 2))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) (-.f64 1 x)))) (*.f64 -8 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 4) (pow.f64 (-.f64 1 x) 3))))))) (pow.f64 l 7)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))","(sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))","(+.f64 (neg.f64 (*.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 -2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (*.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))) 2)))) (*.f64 x x)) (+.f64 (neg.f64 (*.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (*.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (*.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 -2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (*.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))) 2)))) (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (pow.f64 x 3))) (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 -2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (*.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))) 2)))) (*.f64 x x)) (+.f64 (neg.f64 (*.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t)) 2))) (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 x x)))) (+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) t))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t)) 2))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 t 2)))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3))))) (*.f64 (sqrt.f64 2) t)))))","(fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t)) 2))) (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 x x)))) (+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t)) 2)))) (*.f64 2 (*.f64 t t))))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3)))) (*.f64 (sqrt.f64 2) t)))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (neg.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t))) 2))) (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 x x)))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (/.f64 (pow.f64 l 2) (*.f64 (sqrt.f64 2) (*.f64 t x))) (+.f64 (*.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 t 2))))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 2) t))) 2)) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 2))))) (*.f64 (sqrt.f64 2) t)))))","(+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (/.f64 (*.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (neg.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t))) 2))) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (*.f64 t (pow.f64 x 3)))) (fma.f64 1/2 (/.f64 (fma.f64 2 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (neg.f64 (pow.f64 (neg.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 2) t))) 2))) (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 x x)))) (*.f64 (sqrt.f64 2) t)))))","(*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))) (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) (+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))) (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (+.f64 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 5))))))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) (+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))) (fma.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 5))))))))","(*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(+.f64 (neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))))))","(+.f64 (neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (fma.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))))))","(+.f64 (*.f64 -1 (*.f64 l (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 5))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))))))","(+.f64 (neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (fma.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 l 5) (pow.f64 (-.f64 1 x) 3))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 5)))) (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 l 3) (pow.f64 (-.f64 1 x) 2))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))))))))","(sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))","(sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))","(+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))))","(+.f64 (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))) (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2)))) (+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2))) (+.f64 (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))) (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (pow.f64 (-.f64 1 x) 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 5))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2)))) (+.f64 (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (pow.f64 (-.f64 1 x) 3)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 5)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3))) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (pow.f64 (-.f64 1 x) 2))) (+.f64 (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))) (neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))))))))","(-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))","(-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x))) (pow.f64 l 2))","(-.f64 (+.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 -2 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (+.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 -2 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 -2 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3)))))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (+.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 -2 (+.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 x 3)))))) (*.f64 l l))","(*.f64 2 (pow.f64 t 2))","(*.f64 2 (*.f64 t t))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 2 (pow.f64 t 2)))","(*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2))))","(fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2)))))","(fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (*.f64 t t)))))","(*.f64 2 (pow.f64 t 2))","(*.f64 2 (*.f64 t t))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (*.f64 2 (pow.f64 t 2)))","(*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2))))","(fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (*.f64 t t))))","(+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 x 2))) (*.f64 2 (pow.f64 t 2)))))","(fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (fma.f64 2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 x x)) (*.f64 t t)))))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))","(*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))","(*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))","(fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (*.f64 (*.f64 l l) (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))","(-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)))","(*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x)))) (pow.f64 l 2))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x)))) (*.f64 l l))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))))","(fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 5) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))))))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 5)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3)))) 2))) (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))) (fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 5) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))) (+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 3))) (/.f64 (+.f64 1 x) (-.f64 1 x))) 2)) (+.f64 1 x)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) (-.f64 1 x)))) (*.f64 -8 (/.f64 (pow.f64 (+.f64 1 x) 3) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2)) 4) (pow.f64 (-.f64 1 x) 3))))) (pow.f64 t 7))) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 l 2)) (-.f64 1 x))) (pow.f64 l 2))))))))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 5)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3)))) 2))) (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))) (fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)))) (fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -4 (/.f64 (pow.f64 (+.f64 1 x) 2) (*.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (neg.f64 3)))) 2)) (+.f64 1 x)) (*.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) (-.f64 1 x)))) (/.f64 (*.f64 -8 (pow.f64 (+.f64 1 x) 3)) (*.f64 (pow.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l)) 4) (pow.f64 (-.f64 1 x) 3)))) (pow.f64 t 7))) (sqrt.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 l l)) (-.f64 1 x))) (*.f64 l l))))))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))))","(fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 t x))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (pow.f64 x 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))))))","(fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 t x))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3)))) 2) (fma.f64 -2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 2)) (/.f64 (*.f64 -4 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 3))))) (*.f64 x x))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))) (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))) (pow.f64 x 3)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 t x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3)))) 2) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 2))) (*.f64 -4 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2)) 3))))) (pow.f64 x 2)))) (sqrt.f64 (-.f64 (*.f64 -1 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (pow.f64 l 2))))))))","(fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (*.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3)))) 2) (fma.f64 -2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 2)) (/.f64 (*.f64 -4 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 3))))) (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 -2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 2)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 3)) (/.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 -2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 2)) (/.f64 (*.f64 -4 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 3))))) (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))))) (pow.f64 x 3)))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 1 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)))) (fma.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (*.f64 t x))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) (neg.f64 3)))) 2) (fma.f64 -2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 2)) (/.f64 (*.f64 -4 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l)) 3))))) (*.f64 x x))) (sqrt.f64 (-.f64 (neg.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 1/2))","(sqrt.f64 (*.f64 2 1/2))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (+.f64 (pow.f64 (/.f64 (*.f64 -1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6))))) (*.f64 (sqrt.f64 1/2) (*.f64 x x))) (fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (+.f64 (pow.f64 (/.f64 (*.f64 -1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6))))) (*.f64 (sqrt.f64 1/2) (*.f64 x x))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (+.f64 (pow.f64 (/.f64 (*.f64 -1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6))))) (*.f64 1/2 (*.f64 t t))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6)))) (*.f64 t t))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6)))))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 1/2))","(sqrt.f64 (*.f64 2 1/2))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (+.f64 (pow.f64 (/.f64 (*.f64 1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6))))) (*.f64 t t)) (*.f64 (sqrt.f64 1/2) (*.f64 x x))) (fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))))) (pow.f64 t 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6))) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (pow.f64 t 4))) (+.f64 (pow.f64 (*.f64 1/4 (/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3)))) 2) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (pow.f64 t 6)))))) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 t 2))))))) (pow.f64 t 2))) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 1/2)) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 t 2) x)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (+.f64 (pow.f64 (/.f64 (*.f64 1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6))))) (*.f64 t t)) (*.f64 (sqrt.f64 1/2) (*.f64 x x))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6)))) (*.f64 t t)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2) (pow.f64 t 6)) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (pow.f64 t 4)) (+.f64 (pow.f64 (/.f64 (*.f64 1/4 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 (sqrt.f64 1/2) (pow.f64 t 3))) 2) (/.f64 (*.f64 -1/2 (pow.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) 2)) (pow.f64 t 6)))))) (*.f64 1/2 (*.f64 t t))))))) (*.f64 t t)) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (fma.f64 (sqrt.f64 2) (sqrt.f64 1/2) (/.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) (sqrt.f64 2))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 t t) x))))))","(*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))","(*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) t)) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 5)) (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))))","(+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) (*.f64 (+.f64 1 x) (pow.f64 t 2))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) (-.f64 1 x)))) (*.f64 -8 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 4) (pow.f64 (-.f64 1 x) 3))))))) (pow.f64 l 7)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) t)) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 5)) (fma.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (*.f64 -1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) (*.f64 (+.f64 1 x) (*.f64 t t))) (*.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (-.f64 1 x)))) (/.f64 (*.f64 -8 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6))) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 4) (pow.f64 (-.f64 1 x) 3)))))) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 7))))))","(*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))","(neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))))","(+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))))) (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))","(+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) t)) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 5)) (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) t)) (pow.f64 l 5)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1))))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (pow.f64 t 2)) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 3)))) 2)) (*.f64 (+.f64 1 x) (pow.f64 t 2))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) (-.f64 1 x)))) (*.f64 -8 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1) 4) (pow.f64 (-.f64 1 x) 3))))))) (pow.f64 l 7)) (sqrt.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))))))","(+.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 1 x) (pow.f64 t 3))) (*.f64 (pow.f64 l 3) (-.f64 1 x))) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3))))) (+.f64 (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) t)) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 5)) (neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))) (*.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 t 4)) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 3) (pow.f64 (-.f64 1 x) 2))) (pow.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (-.f64 1 x)) (sqrt.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (neg.f64 3)))) 2)) (*.f64 (+.f64 1 x) (*.f64 t t))) (*.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) (-.f64 1 x)))) (/.f64 (*.f64 -8 (*.f64 (pow.f64 (+.f64 1 x) 3) (pow.f64 t 6))) (*.f64 (pow.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1) 4) (pow.f64 (-.f64 1 x) 3)))))) (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))) (pow.f64 l 7)))))"]],"time":288.06103515625,"type":"simplify"},{"compiler":[[19640,11797]],"time":177.111083984375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sqrt.f64 2) t) (+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) t))))","fresh",35.29467508192448],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 l) (*.f64 (cbrt.f64 (*.f64 l l)) (neg.f64 l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","fresh",40.717229000920895],["(neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","fresh",63.526822901774054],["(sqrt.f64 (*.f64 2 1/2))","fresh",35.687485309199296],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","next",29.71714923205531],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 3)","fresh",40.989951996791916],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 t t))))","fresh",37.0967225148343],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) 2) (neg.f64 (*.f64 l l)))))","fresh",40.81768866889737],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 (+.f64 (neg.f64 (*.f64 l l)) (/.f64 (*.f64 (*.f64 l l) (+.f64 1 x)) (+.f64 -1 x))) (/.f64 (*.f64 (*.f64 (+.f64 t t) t) (+.f64 1 x)) (+.f64 -1 x)))))","fresh",45.768929269610126],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))","fresh",44.7560202041567],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 l (neg.f64 l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","fresh",38.269700906031474],["(/.f64 (*.f64 (sqrt.f64 2) t) (+.f64 (neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))))","fresh",62.21680087792864],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 (neg.f64 (*.f64 l l))) (cbrt.f64 (pow.f64 l 4)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","fresh",42.958547174010235]],"compiler":[[31,23],[35,23],[24,20],[7,7],[26,17],[32,22],[14,11],[50,30],[39,26],[29,19],[29,19],[50,39],[35,24],[31,23],[35,23],[24,20],[7,7],[26,17],[32,22],[14,11],[50,30],[39,26],[29,19],[29,19],[50,39],[35,24]],"count":[[347,13]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[346,13],"picked":[1,0]}],"min-error":[14.702784373997455],"time":97.126953125,"type":"prune"},{"compiler":[[117,52]],"locations":[["(*.f64 (sqrt.f64 2) t)",0.4609375,false],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))",3.1914062500000004,true],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)",13.573916250665393,true],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))",26.582539521500752,true]],"time":20.985107421875,"type":"localize"},{"count":[[3,104]],"series":[["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","x","-inf",0.1689453125],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","x","inf",0.173095703125],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","x","0",0.3740234375],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","t","-inf",0.201171875],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","t","inf",0.286865234375],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","t","0",0.35400390625],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","l","-inf",0.19384765625],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","l","inf",0.291015625],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))","l","0",0.390869140625],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","x","-inf",0.31689453125],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","x","inf",0.33203125],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","x","0",0.6240234375],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","t","-inf",0.16796875],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","t","inf",0.411865234375],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","t","0",0.302001953125],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","l","-inf",0.166015625],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","l","inf",0.31103515625],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","l","0",0.343017578125],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","x","-inf",0.56787109375],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","x","inf",0.675048828125],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","x","0",0.989013671875],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","t","-inf",0.449951171875],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","t","inf",0.93212890625],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","t","0",0.883056640625],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","l","-inf",0.4208984375],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","l","inf",1.14013671875],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","l","0",1.123046875]],"time":13.0810546875,"type":"series"},{"count":[[3,137]],"inputs":[["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))","(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (*.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 1/2) (*.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 0) (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (*.f64 0 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (*.f64 1/2 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (fabs.f64 (cbrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (cbrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (pow.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 0) (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1/2) (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 0) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) (*.f64 (+.f64 t t) t)) (*.f64 (/.f64 1 x) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) (*.f64 l l)) (*.f64 (/.f64 1 x) (*.f64 (+.f64 t t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) (*.f64 0 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (*.f64 1/2 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 t t) t) (/.f64 1 x)) (*.f64 (*.f64 l l) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 l l) (/.f64 1 x)) (*.f64 (*.f64 (+.f64 t t) t) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 l l (*.f64 (+.f64 t t) t))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (fma.f64 l l (*.f64 (+.f64 t t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) 1) (*.f64 (cbrt.f64 (*.f64 x x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (cbrt.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (cbrt.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (cbrt.f64 (pow.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 (pow.f64 x -2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 l l (*.f64 (+.f64 t t) t))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (*.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 1/2) (*.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 0) (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (*.f64 0 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (*.f64 1/2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t t) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 t t) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (cbrt.f64 (pow.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 t 4)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (cbrt.f64 (*.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (/.f64 (*.f64 t t) x))))) (+.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (-.f64 (cbrt.f64 (pow.f64 t 4)) (cbrt.f64 (*.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (/.f64 (*.f64 t t) x))))) (+.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 2)) (cbrt.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (pow.f64 t 4)) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (/.f64 1 x) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t t) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t t) 1 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 t t)) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 t 4)) (cbrt.f64 (*.f64 t t)) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) t) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (neg.f64 t) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 l l (*.f64 (+.f64 t t) t))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) 2)) x) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (*.f64 -2 t) t) (*.f64 l l)) (/.f64 -1 x) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 1 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 x)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (cbrt.f64 (pow.f64 x -2))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) (fma.f64 l l (*.f64 (+.f64 t t) t)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x) 2)) (cbrt.f64 (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x)) (*.f64 t t))))))"]],"rules":[["egg-rr",44],["egg-rr",48],["egg-rr",45]],"time":37.93994140625,"type":"rewrite"},{"count":[[241,205]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2)))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (pow.f64 x 2)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (pow.f64 x 2)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2)))))","(*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3)) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (+.f64 (*.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3)) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))))","(*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 2))) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 2))) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 5))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))) (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3)))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 5))))))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (*.f64 (sqrt.f64 2) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 3) (sqrt.f64 2)) (*.f64 (pow.f64 t 5) (pow.f64 x 3)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (*.f64 (sqrt.f64 2) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 3)) (*.f64 (pow.f64 t 5) (pow.f64 x 3)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t))))","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(/.f64 (pow.f64 l 2) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(pow.f64 t 2)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(pow.f64 t 2)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2))","(sqrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (+.f64 1 (/.f64 2 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2)))","(fma.f64 (/.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 l l))) x) (sqrt.f64 (/.f64 1 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))) (sqrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (+.f64 1 (/.f64 2 x)))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (pow.f64 x 2)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2))))","(fma.f64 (/.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 2) (pow.f64 l 4))) (*.f64 x x)) (sqrt.f64 (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) -3)) (fma.f64 (/.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 l l))) x) (sqrt.f64 (/.f64 1 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))) (sqrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (+.f64 1 (/.f64 2 x))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (pow.f64 x 2)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) (sqrt.f64 2)))))","(fma.f64 (*.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) x) x) (sqrt.f64 (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) -3))) -1/8 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 l l)) x) (sqrt.f64 (/.f64 1 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))))) (fma.f64 (/.f64 (*.f64 1/16 (*.f64 (sqrt.f64 2) (pow.f64 l 6))) (pow.f64 x 3)) (sqrt.f64 (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) -5)) (sqrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (+.f64 1 (/.f64 2 x)))))))","(*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (*.f64 2 l)) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (sqrt.f64 x)) l) (fma.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) -1/8 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3)) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (*.f64 2 l)) (sqrt.f64 x) (fma.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 3)) (pow.f64 l 5)) (pow.f64 x 5/2)) (fma.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) -1/8 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(fma.f64 (/.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))) l) (sqrt.f64 x) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))))","(fma.f64 (/.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))) l) (sqrt.f64 x) (fma.f64 1/8 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))) l) (sqrt.f64 x))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 2)) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (+.f64 (*.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)) 3)) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))))","(fma.f64 (/.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))) l) (sqrt.f64 x) (fma.f64 1/8 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) (fma.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 3)) (pow.f64 l 5)) (pow.f64 x 5/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))))","(*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(fma.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (*.f64 2 l)) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 2))) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (sqrt.f64 x)) l) (fma.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) -1/8 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))) l) (sqrt.f64 x))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 2))) (pow.f64 l 3)) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))) (pow.f64 l 5)) (sqrt.f64 (pow.f64 x 5)))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))) (sqrt.f64 x)) l) (fma.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)) (fma.f64 -1/8 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))) 2)) (pow.f64 x 3/2)) (pow.f64 l -3)) (/.f64 (*.f64 1/16 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (pow.f64 (+.f64 1 (/.f64 2 x)) 3))) (pow.f64 x 5/2))) (pow.f64 l 5)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 l l)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))))","(fma.f64 (/.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 l l))) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x)))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -3))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))))","(+.f64 (*.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 5))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -5))) (fma.f64 (/.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 l l))) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x)))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -3))) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 l l)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x))))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))) (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3)))))))","(fma.f64 (/.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 l l))) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x)))) (fma.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -3))) 1/8 (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 2)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x))))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))) (+.f64 (*.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 3))))) (*.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))) 5))))))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 l l)) (*.f64 t x)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 2 x))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))) (fma.f64 1/8 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 4)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -3))) (*.f64 -1/16 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 l 6)) (*.f64 (pow.f64 t 5) (pow.f64 x 3))) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 2 x)) -5)))))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (*.f64 (sqrt.f64 2) t))","(fma.f64 1/2 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) (*.f64 (sqrt.f64 2) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t)))","(fma.f64 1/2 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) (sqrt.f64 2)) (*.f64 t x))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 3) (sqrt.f64 2)) (*.f64 (pow.f64 t 5) (pow.f64 x 3)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t))))","(fma.f64 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) 1/2 (fma.f64 (*.f64 (/.f64 (sqrt.f64 2) (pow.f64 t 5)) (pow.f64 (/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x) 3)) 1/16 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (*.f64 (sqrt.f64 2) t))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (*.f64 (sqrt.f64 2) t))","(fma.f64 1/2 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) (*.f64 (sqrt.f64 2) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t)))","(fma.f64 1/2 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2)))) (*.f64 t x))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 3)) (*.f64 (pow.f64 t 5) (pow.f64 x 3)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sqrt.f64 2) (pow.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) 2)) (*.f64 (pow.f64 t 3) (pow.f64 x 2)))) (*.f64 (sqrt.f64 2) t))))","(fma.f64 (/.f64 (*.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) (sqrt.f64 2)) (*.f64 t x)) 1/2 (fma.f64 (*.f64 (/.f64 (sqrt.f64 2) (pow.f64 t 5)) (pow.f64 (/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x) 3)) 1/16 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) 2) (sqrt.f64 2)) (*.f64 (pow.f64 t 3) (*.f64 x x))) (*.f64 (sqrt.f64 2) t))))","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(/.f64 (*.f64 2 (*.f64 t t)) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(/.f64 (*.f64 2 (*.f64 t t)) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(*.f64 2 (/.f64 (pow.f64 t 2) x))","(/.f64 (*.f64 2 (*.f64 t t)) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 2 (/.f64 (pow.f64 t 2) x)))","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2))","(*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(/.f64 (pow.f64 l 2) x)","(/.f64 (*.f64 l l) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (*.f64 (pow.f64 t 2) (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(/.f64 (+.f64 (pow.f64 l 2) (*.f64 2 (pow.f64 t 2))) x)","(/.f64 (fma.f64 l l (*.f64 2 (*.f64 t t))) x)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(pow.f64 t 2)","(*.f64 t t)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(pow.f64 t 2)","(*.f64 t t)","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))","(+.f64 (/.f64 (pow.f64 l 2) x) (+.f64 (*.f64 2 (/.f64 (pow.f64 t 2) x)) (pow.f64 t 2)))","(fma.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x)) (/.f64 (*.f64 l l) x))"]],"time":360.598876953125,"type":"simplify"},{"compiler":[[8323,4584]],"time":74.501953125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","done",29.71714923205531],["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","next",29.754373157887272],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","fresh",56.07582641174513],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","fresh",39.27786799747294],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))","fresh",44.7560202041567],["(/.f64 (*.f64 (sqrt.f64 2) t) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","fresh",55.87841139423971],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))))","fresh",37.026349335594624],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","fresh",35.64508344126051]],"compiler":[[26,17],[31,22],[17,14],[20,17],[29,19],[18,15],[20,16],[19,16],[31,22],[17,14],[20,17],[29,19],[18,15],[20,16],[19,16]],"count":[[253,8]],"kept":[{"done":[0,0],"fresh":[12,1],"new":[240,6],"picked":[1,1]}],"min-error":[0.20940231610249532],"time":62.22021484375,"type":"prune"},{"compiler":[[135,69]],"locations":[["(*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))",0.31640625,true],["(+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))",3.1914062500000004,false],["(/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x)",13.573916250665393,false],["(sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))",26.582539521500752,false]],"time":29.3818359375,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))","t","-inf",0.161865234375],["(*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))","t","inf",0.1640625],["(*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))","t","0",0.236083984375]],"time":0.629150390625,"type":"series"},{"count":[[1,38]],"inputs":[["(*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t (sqrt.f64 2)) 2) (/.f64 (*.f64 t (sqrt.f64 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 t (sqrt.f64 2))) (*.f64 1/2 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (sqrt.f64 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2)))) (*.f64 (*.f64 (pow.f64 t 2/3) (cbrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (sqrt.f64 8)) (*.f64 t (sqrt.f64 (sqrt.f64 2))))) (*.f64 (pow.f64 t 2/3) (cbrt.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 2/3) (cbrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (cbrt.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 (*.f64 (sqrt.f64 (sqrt.f64 8)) (*.f64 t (sqrt.f64 (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) (sqrt.f64 2)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (sqrt.f64 2))) (cbrt.f64 (*.f64 2 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (*.f64 t t))) (cbrt.f64 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 t (sqrt.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 1/12) (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 t (sqrt.f64 (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 t (sqrt.f64 (sqrt.f64 2)))) (pow.f64 2 1/12))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (pow.f64 2 1/12)) (cbrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (pow.f64 2 1/8)) (pow.f64 2 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 2 1/8) (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (pow.f64 2 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (pow.f64 2 1/12)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (*.f64 t (cbrt.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 t (sqrt.f64 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (*.f64 t (sqrt.f64 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 t (sqrt.f64 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 t 3) (sqrt.f64 8)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (sqrt.f64 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (sqrt.f64 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 t (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 t 3) (sqrt.f64 8)))))))"]],"rules":[["egg-rr",38]],"time":45.5849609375,"type":"rewrite"},{"count":[[50,38]],"inputs":[["(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)","(*.f64 (sqrt.f64 2) t)"]],"time":71.0888671875,"type":"simplify"},{"compiler":[[9456,5713]],"time":88.494140625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","done",29.71714923205531],["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","done",29.754373157887272],["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","fresh",55.90483451020223],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","next",35.64508344126051],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","fresh",56.07582641174513],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","fresh",39.27786799747294],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))","fresh",44.7560202041567],["(/.f64 (*.f64 (sqrt.f64 2) t) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","fresh",55.87841139423971],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))))","fresh",37.026349335594624]],"compiler":[[26,17],[31,22],[23,20],[19,16],[17,14],[20,17],[29,19],[18,15],[20,16],[23,20],[19,16],[17,14],[20,17],[29,19],[18,15],[20,16]],"count":[[251,9]],"kept":[{"done":[1,1],"fresh":[6,6],"new":[243,1],"picked":[1,1]}],"min-error":[0.20486913322278863],"time":57.85400390625,"type":"prune"},{"compiler":[[54,43]],"locations":[["(sqrt.f64 (+.f64 1 (/.f64 2 x)))",0.0078125,true],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))",0.015625,true],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))",0.015625,true],["(*.f64 (sqrt.f64 2) t)",0.4609375,false]],"time":13.97900390625,"type":"localize"},{"count":[[3,48]],"series":[["(sqrt.f64 (+.f64 1 (/.f64 2 x)))","x","-inf",0.196044921875],["(sqrt.f64 (+.f64 1 (/.f64 2 x)))","x","inf",0.19677734375],["(sqrt.f64 (+.f64 1 (/.f64 2 x)))","x","0",0.31201171875],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","x","-inf",0.227783203125],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","x","inf",2.086181640625],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","x","0",0.647216796875],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","t","-inf",0.346923828125],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","t","inf",0.235107421875],["(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","t","0",0.5009765625],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","x","-inf",0.22802734375],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","x","inf",0.299072265625],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","x","0",0.56005859375],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","t","-inf",0.1728515625],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","t","inf",0.18212890625],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","t","0",0.876953125]],"time":7.324951171875,"type":"series"},{"count":[[3,165]],"inputs":[["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(sqrt.f64 (+.f64 1 (/.f64 2 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 1/2) (*.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 0) (pow.f64 (/.f64 (+.f64 2 x) x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) (*.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (*.f64 1/2 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (pow.f64 (/.f64 (+.f64 2 x) x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) (*.f64 0 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (neg.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (neg.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) (/.f64 0 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (/.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 2)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) t) (/.f64 (sqrt.f64 1/2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (/.f64 (cbrt.f64 (*.f64 2 (*.f64 t t))) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (neg.f64 (/.f64 (sqrt.f64 1/2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (*.f64 (sqrt.f64 2) t)) (/.f64 (sqrt.f64 2) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 1/2)) (/.f64 (sqrt.f64 2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))) (cbrt.f64 (/.f64 (sqrt.f64 8) (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (sqrt.f64 (/.f64 (+.f64 2 x) x))) (/.f64 t (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 8) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))) (/.f64 t (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (/.f64 t (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (sqrt.f64 2) t)) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 1/2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))) (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 2) t) (-.f64 1/3 1)) (/.f64 (cbrt.f64 (*.f64 2 (*.f64 t t))) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (/.f64 (+.f64 2 x) x))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (-.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 8))) (/.f64 (cbrt.f64 (*.f64 2 (*.f64 t t))) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (cbrt.f64 (/.f64 (*.f64 2 (*.f64 t t)) (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 1 (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 (+.f64 2 x) x))) (/.f64 1 (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 1/4)) (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (/.f64 1 (cbrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 1/2)) (/.f64 1 (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 1/2)) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))) (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 1/4)) (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (cbrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (/.f64 (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 2)) (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 t) (*.f64 (neg.f64 t) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (*.f64 (neg.f64 t) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 1/4))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2))) (neg.f64 (cbrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 1/2))) (*.f64 (neg.f64 t) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) 3/2) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (+.f64 2 x) x) -1/2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) (neg.f64 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 t 3) (pow.f64 (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 1/2) (*.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 0) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) (*.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) (*.f64 1/2 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) (*.f64 0 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 2)) (*.f64 (cbrt.f64 2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) t)) (*.f64 (cbrt.f64 (*.f64 2 (*.f64 t t))) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 (sqrt.f64 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) t) (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (cbrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (cbrt.f64 (*.f64 (sqrt.f64 2) t))) (cbrt.f64 (*.f64 2 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 (cbrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 (sqrt.f64 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 (sqrt.f64 (sqrt.f64 2)) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 (/.f64 (+.f64 2 x) x))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 t) (sqrt.f64 2)) (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 2)) (*.f64 (neg.f64 t) (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x))))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 (neg.f64 t) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 2 (*.f64 t t)) (/.f64 (+.f64 2 x) x))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 t) (sqrt.f64 (*.f64 2 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 (/.f64 (+.f64 2 x) x) 2)) t) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1/2) (*.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 0) (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (*.f64 1/2 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 0 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (cbrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 2 x) x)) (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))) (*.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) (fabs.f64 (cbrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (/.f64 (+.f64 2 x) x))) (fabs.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 0) (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 x) x) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 x) x) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 x) x) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 2 x) x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 2 x) x) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (+.f64 2 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 2 x) x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 2 x) x))))))))"]],"rules":[["egg-rr",43],["egg-rr",40],["egg-rr",82]],"time":38.006103515625,"type":"rewrite"},{"count":[[213,188]],"inputs":[["(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (/.f64 1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 5/2 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (/.f64 1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 5/2 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (*.f64 (sqrt.f64 2) t))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 3))) (*.f64 (sqrt.f64 2) t))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (*.f64 (sqrt.f64 2) t))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 3))) (*.f64 (sqrt.f64 2) t))))","1","(+.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","1","(+.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","(sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(pow.f64 (+.f64 1 (/.f64 2 x)) -1/2)","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (/.f64 1 x))","(+.f64 (fma.f64 3/2 (pow.f64 x -2) 1) (/.f64 -1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 5/2 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)))","(-.f64 (fma.f64 3/2 (pow.f64 x -2) 1) (fma.f64 5/2 (pow.f64 x -3) (/.f64 1 x)))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (/.f64 1 x))","(+.f64 (fma.f64 3/2 (pow.f64 x -2) 1) (/.f64 -1 x))","(-.f64 (+.f64 1 (*.f64 3/2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 5/2 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x)))","(-.f64 (fma.f64 3/2 (pow.f64 x -2) 1) (fma.f64 5/2 (pow.f64 x -3) (/.f64 1 x)))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (*.f64 2 (/.f64 1 x)))))","(*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (*.f64 (sqrt.f64 2) t))","(fma.f64 (sqrt.f64 2) t (/.f64 (*.f64 (sqrt.f64 2) t) x))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -2)) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 3))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -2)) (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -3)) (*.f64 (sqrt.f64 2) t))))","(*.f64 (sqrt.f64 2) t)","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (*.f64 (sqrt.f64 2) t))","(fma.f64 (sqrt.f64 2) t (/.f64 (*.f64 (sqrt.f64 2) t) x))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -2)) (*.f64 (sqrt.f64 2) t)))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x 3))) (*.f64 (sqrt.f64 2) t))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) t) x) (fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -2)) (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) t) (pow.f64 x -3)) (*.f64 (sqrt.f64 2) t))))","1","(+.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 -1/2 (*.f64 x x)) (+.f64 1 (/.f64 1 x)))","(-.f64 (+.f64 1 (+.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 -1/2 (*.f64 x x)) (+.f64 1 (fma.f64 1/2 (pow.f64 x -3) (/.f64 1 x))))","1","(+.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 x)) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 -1/2 (*.f64 x x)) (+.f64 1 (/.f64 1 x)))","(-.f64 (+.f64 1 (+.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 -1/2 (*.f64 x x)) (+.f64 1 (fma.f64 1/2 (pow.f64 x -3) (/.f64 1 x))))"]],"time":143.77392578125,"type":"simplify"},{"compiler":[[5027,3878]],"time":68.7138671875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","done",29.71714923205531],["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","done",29.754373157887272],["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","fresh",55.90483451020223],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","done",35.64508344126051],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","fresh",56.07582641174513],["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","fresh",39.27786799747294],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))","fresh",44.7560202041567],["(/.f64 (*.f64 (sqrt.f64 2) t) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","fresh",55.87841139423971],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))))","fresh",37.026349335594624]],"compiler":[[26,17],[31,22],[23,20],[19,16],[17,14],[20,17],[29,19],[18,15],[20,16]],"count":[[267,9]],"kept":[{"done":[2,2],"fresh":[6,6],"new":[258,0],"picked":[1,1]}],"min-error":[0.20486913322278863],"time":77.453125,"type":"prune"},{"accuracy":[7.5402289188956795],"baseline":[29.71714923205531],"branch":[["x",23.11251480005518,8],["l",20.29959445085412,7],["t",7.5402289188956795,5],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))",18.732393761404325,3],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))",18.732393761404325,3],["(/.f64 (+.f64 x 1) (-.f64 x 1))",29.717149232055313,1],["(/.f64 (+.f64 x 1) (-.f64 x 1))",29.717149232055313,1],["(*.f64 l l)",23.539037918939957,6],["(*.f64 l l)",23.539037918939957,6]],"compiler":[[4,3],[4,3],[4,3],[30,20],[30,20],[10,8],[10,8],[6,4],[6,4],[545,335]],"count":[[22,5]],"inputs":[["(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x))))","(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) l) (sqrt.f64 (/.f64 1 x)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 (*.f64 t t) (+.f64 1 (/.f64 2 x))))))","(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (+.f64 (/.f64 (*.f64 l l) (*.f64 (sqrt.f64 2) (*.f64 t x))) (fma.f64 2 (/.f64 t (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) t))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 l) (*.f64 (cbrt.f64 (*.f64 l l)) (neg.f64 l)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","(neg.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 2) t) l) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))))","(sqrt.f64 (*.f64 2 1/2))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))) 3)","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (*.f64 t t))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)))) 2) (neg.f64 (*.f64 l l)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 (+.f64 (neg.f64 (*.f64 l l)) (/.f64 (*.f64 (*.f64 l l) (+.f64 1 x)) (+.f64 -1 x))) (/.f64 (*.f64 (*.f64 (+.f64 t t) t) (+.f64 1 x)) (+.f64 -1 x)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (-.f64 -1 x) (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) (-.f64 1 x)) (neg.f64 (*.f64 l l)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 l (neg.f64 l) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","(/.f64 (*.f64 (sqrt.f64 2) t) (+.f64 (neg.f64 (*.f64 l (sqrt.f64 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (*.f64 (/.f64 (*.f64 (+.f64 1 x) (*.f64 t t)) (*.f64 l (-.f64 1 x))) (sqrt.f64 (/.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1))))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (cbrt.f64 (neg.f64 (*.f64 l l))) (cbrt.f64 (pow.f64 l 4)) (*.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t))))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (fma.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (fma.f64 l l (*.f64 (+.f64 t t) t)) (neg.f64 (*.f64 l l)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))"]],"link":["."],"name":["Toniolo and Linder, Equation (7)"],"oracle":[63.99730291408939],"outputs":[["(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))","(/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t)))))","(/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))"]],"time":198.8349609375,"times":[["x",50.778076171875],["l",44.72607421875],["t",32.5400390625],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))",5.9580078125],["(/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (-.f64 (*.f64 (/.f64 (+.f64 x 1) (-.f64 x 1)) (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t)))) (*.f64 l l))))",5.762939453125],["(/.f64 (+.f64 x 1) (-.f64 x 1))",2.489013671875],["(/.f64 (+.f64 x 1) (-.f64 x 1))",2.35693359375],["(*.f64 l l)",22.2099609375],["(*.f64 l l)",22.282958984375]],"type":"regimes"},{"bstep":[[2.868285057570977e-36,3.7358291820523805e-34,24.056884765625],[-2.9944179265286442e-204,-7.859530023788639e-213,69.8779296875],[-7.283136741546755e-163,-1.0293027180321605e-167,95.947021484375],[-1.723423578103978e+41,-5.510238864629441e+40,22.35595703125]],"compiler":[[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[32,23],[21,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[21,18],[27,18],[32,22],[4,3]],"method":["binary-search","binary-search","binary-search","binary-search"],"time":212.60205078125,"type":"bsearch"},{"compiler":[[120,87]],"inputs":[["(if (<=.f64 t -172342357810397793243078751923449280593920) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))) (if (<=.f64 t -364703516796181/506532662216918085755909163048237445191949002959281848144001138878253517018177263964807989373425756138696031080481053366991595590260226478013534525648677207893210669360535830528) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))) (if (<=.f64 t -1516130949512411/189516368689051383685178160212707831452256593886315504289435063235601922935348741007187305765215634515440396813614632959737741704603859178643101474004050432031793820315045154486116367874950982034333862206264217376817974469459968) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))) (if (<=.f64 t 1073152846840767/374144419156711147060143317175368453031918731001856) (/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 t -172342357810397793243078751923449280593920) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))) (if (<=.f64 t -364703516796181/506532662216918085755909163048237445191949002959281848144001138878253517018177263964807989373425756138696031080481053366991595590260226478013534525648677207893210669360535830528) (/.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))) (if (<=.f64 t -1516130949512411/189516368689051383685178160212707831452256593886315504289435063235601922935348741007187305765215634515440396813614632959737741704603859178643101474004050432031793820315045154486116367874950982034333862206264217376817974469459968) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) t)) (sqrt.f64 (+.f64 1 (/.f64 2 x))))) (if (<=.f64 t 1073152846840767/374144419156711147060143317175368453031918731001856) (/.f64 (*.f64 (*.f64 t (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (*.f64 2 (+.f64 (/.f64 (+.f64 (*.f64 l l) (*.f64 2 (*.f64 t t))) x) (*.f64 t t))))) (/.f64 (*.f64 (sqrt.f64 2) t) (*.f64 (*.f64 (sqrt.f64 2) t) (sqrt.f64 (+.f64 1 (/.f64 2 x)))))))))","(if (<=.f64 t -172342357810397793243078751923449280593920) (neg.f64 (pow.f64 (/.f64 (+.f64 x 2) x) -1/2)) (if (<=.f64 t -364703516796181/506532662216918085755909163048237445191949002959281848144001138878253517018177263964807989373425756138696031080481053366991595590260226478013534525648677207893210669360535830528) (/.f64 (*.f64 t (sqrt.f64 2)) (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (if (<=.f64 t -1516130949512411/189516368689051383685178160212707831452256593886315504289435063235601922935348741007187305765215634515440396813614632959737741704603859178643101474004050432031793820315045154486116367874950982034333862206264217376817974469459968) (neg.f64 (pow.f64 (/.f64 (+.f64 x 2) x) -1/2)) (if (<=.f64 t 1073152846840767/374144419156711147060143317175368453031918731001856) (/.f64 (*.f64 t (sqrt.f64 2)) (sqrt.f64 (*.f64 2 (fma.f64 t t (/.f64 (fma.f64 l l (*.f64 (+.f64 t t) t)) x))))) (pow.f64 (/.f64 (+.f64 x 2) x) -1/2)))))"]],"stop":[["fuel",1]],"time":33.81689453125,"type":"simplify"},{"time":0.046142578125,"type":"soundness"},{"compiler":[[120,87]],"remove-preprocessing":[[]],"time":35.405029296875,"type":"end"}]