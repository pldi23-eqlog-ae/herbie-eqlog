[{"compiler":[[38,21]],"method":["search"],"sampling":[[1,2.2382068634033207e-6,0.0,0.9999977617931366],[0,0.0,2.2382068634033207e-6,0.9999977617931366]],"time":0.295166015625,"type":"analyze"},{"outcomes":[["body",256,"valid",761.60595703125,8256]],"time":768.94091796875,"type":"sample"},{"compiler":[[23,10]],"inputs":[["0","1"],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 tau (PI.f64)) x)) (*.f64 (*.f64 tau (PI.f64)) x)) (/.f64 (sin.f64 (*.f64 tau (PI.f64))) (*.f64 tau (PI.f64))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 tau (PI.f64)) x)) (*.f64 (*.f64 tau (PI.f64)) x)) (/.f64 (sin.f64 (*.f64 tau (PI.f64))) (*.f64 tau (PI.f64))))","(/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 tau (PI.f64)))) (*.f64 x (pow.f64 (*.f64 tau (PI.f64)) 2)))"]],"symmetry":[[]],"time":61.946044921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))"]],"time":19.510009765625,"type":"simplify"},{"compiler":[[42,15]],"time":0.408935546875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","fresh",0.9861736648560443],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","next",0.8336824779294654]],"compiler":[[21,12],[23,10],[21,12],[23,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.6457223709837342],"time":1.45703125,"type":"prune"},{"compiler":[[64,10]],"locations":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))",0.296875,true],["(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))",0.43558505861065216,true],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))",0.438163769536884,true],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))",0.4394807250535656,true]],"time":9.8369140625,"type":"localize"},{"count":[[4,80]],"series":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","tau","-inf",0.842041015625],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","tau","inf",1.324951171875],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","tau","0",0.9580078125],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","x","-inf",0.741943359375],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","x","inf",1.049072265625],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","x","0",1.657958984375],["(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","x","-inf",0.6279296875],["(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","x","inf",0.47900390625],["(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","x","0",0.419189453125],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","tau","-inf",0.72509765625],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","tau","inf",0.975830078125],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","tau","0",0.719970703125],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","x","-inf",0.675048828125],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","x","inf",0.66796875],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","x","0",0.570068359375],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","tau","-inf",0.217041015625],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","tau","inf",0.196044921875],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","tau","0",0.470947265625],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","x","-inf",0.22900390625],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","x","inf",0.227783203125],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","x","0",0.692138671875]],"time":14.843994140625,"type":"series"},{"count":[[4,212]],"inputs":[["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))","(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))","(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 0) (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 0 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))) (neg.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 0) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 0 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) x) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (*.f64 x (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)) tau))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) tau) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) tau))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) tau) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) x) (/.f64 1 (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 -1 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) 2) (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 1 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (/.f64 1 tau))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 tau) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 x (PI.f64)))) (/.f64 -1 tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) x) (*.f64 (PI.f64) tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau))) (neg.f64 (cbrt.f64 (*.f64 tau tau))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 x (PI.f64)))) (neg.f64 tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) x)) (neg.f64 (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) tau)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (cbrt.f64 (*.f64 tau tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) tau) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) tau)) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (neg.f64 tau)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 0) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (*.f64 0 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (PI.f64)) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) x) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) (/.f64 1 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 x (PI.f64)))) (/.f64 -1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (sin.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) (/.f64 -1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64)))) (neg.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 0) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) x) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) tau) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 1 tau))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))) (/.f64 1 (neg.f64 (*.f64 (PI.f64) (*.f64 (*.f64 x (PI.f64)) tau)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (PI.f64)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (/.f64 1 (neg.f64 (*.f64 (*.f64 (*.f64 x (PI.f64)) tau) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 1 (*.f64 (PI.f64) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) x) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (/.f64 1 (*.f64 (*.f64 (*.f64 x (PI.f64)) tau) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64))))) (/.f64 1 (*.f64 tau (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) x) (/.f64 1 (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 2)) (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (/.f64 1 (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) tau))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (PI.f64)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (/.f64 1 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (/.f64 1 (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 1 (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64)))) (/.f64 -1 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64)))) tau) (/.f64 -1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (*.f64 (PI.f64) (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)))) (neg.f64 (*.f64 (PI.f64) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (*.f64 (*.f64 (*.f64 x (PI.f64)) tau) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (neg.f64 (*.f64 (*.f64 (*.f64 x (PI.f64)) tau) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) x) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) tau)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) x) (*.f64 (PI.f64) tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (PI.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64))))) (*.f64 tau (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))))) (neg.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 (*.f64 x (PI.f64)) tau)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (PI.f64))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) x))) (neg.f64 (neg.f64 (*.f64 (*.f64 (*.f64 x (PI.f64)) tau) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) x)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) x)) (neg.f64 (*.f64 (PI.f64) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (*.f64 (*.f64 x (PI.f64)) tau))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64)))) tau) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64)))) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (PI.f64)) tau) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) (neg.f64 (*.f64 (*.f64 x (PI.f64)) tau))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2))) 3))))))"]],"rules":[["egg-rr",82],["egg-rr",50],["egg-rr",58],["egg-rr",22]],"time":45.173095703125,"type":"rewrite"},{"count":[[292,259]],"inputs":[["(*.f64 tau (*.f64 x (PI.f64)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (*.f64 tau (*.f64 x (PI.f64))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 x 5)))) (*.f64 tau (*.f64 x (PI.f64)))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 7) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 x 7)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 x 5)))) (*.f64 tau (*.f64 x (PI.f64))))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(*.f64 tau (*.f64 (PI.f64) x))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5)))) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 7) (*.f64 (pow.f64 x 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5)))) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4))))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 x 6)))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4)))))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4))))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 x 6)))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4)))))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 x 4) (pow.f64 (PI.f64) 4))) (+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 x 4) (pow.f64 (PI.f64) 4))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))) (*.f64 -1/5040 (*.f64 (pow.f64 x 6) (pow.f64 (PI.f64) 6))))))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","(+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64))))))","(+.f64 (*.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))) (+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64)))))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5))))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))) (+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64))))))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 tau (*.f64 x (PI.f64)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (*.f64 tau (*.f64 x (PI.f64))))","(fma.f64 -1/6 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) (*.f64 tau (*.f64 x (PI.f64))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 x 5)))) (*.f64 tau (*.f64 x (PI.f64)))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) -1/6 (fma.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 5) (*.f64 tau (*.f64 x (PI.f64)))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 7) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 x 7)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 x 5)))) (*.f64 tau (*.f64 x (PI.f64))))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 7) -1/5040 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) -1/6 (fma.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 5) (*.f64 tau (*.f64 x (PI.f64))))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(*.f64 tau (*.f64 (PI.f64) x))","(*.f64 tau (*.f64 x (PI.f64)))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(fma.f64 -1/6 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) (*.f64 tau (*.f64 x (PI.f64))))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5)))) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) -1/6 (fma.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 5) (*.f64 tau (*.f64 x (PI.f64)))))","(+.f64 (*.f64 tau (*.f64 (PI.f64) x)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 7) (*.f64 (pow.f64 x 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 tau 5) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5)))) (*.f64 -1/6 (*.f64 (pow.f64 tau 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 7) -1/5040 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 3) -1/6 (fma.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 5) (*.f64 tau (*.f64 x (PI.f64))))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","(sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))","(sin.f64 (*.f64 tau (*.f64 x (PI.f64))))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) -1/6 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) -1/6 1) (*.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 4)))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 x 6)))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4)))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 6) -1/5040 1) (fma.f64 -1/6 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) (*.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 4))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))))","(fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) -1/6 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) -1/6 1) (*.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 4)))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 x 6)))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2)))) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 x 4)))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 6) -1/5040 1) (fma.f64 -1/6 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 2) (*.f64 1/120 (pow.f64 (*.f64 tau (*.f64 x (PI.f64))) 4))))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 x (PI.f64))))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","(/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (PI.f64) x)))","(/.f64 (/.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) tau) (*.f64 x (PI.f64)))","1","(+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(fma.f64 (pow.f64 (*.f64 x (PI.f64)) 2) -1/6 1)","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 x 4) (pow.f64 (PI.f64) 4))) (+.f64 1 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 (pow.f64 (*.f64 x (PI.f64)) 4) 1/120 (fma.f64 (pow.f64 (*.f64 x (PI.f64)) 2) -1/6 1))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 x 4) (pow.f64 (PI.f64) 4))) (+.f64 1 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))) (*.f64 -1/5040 (*.f64 (pow.f64 x 6) (pow.f64 (PI.f64) 6))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 x (PI.f64)) 4) 1/120 1) (fma.f64 -1/6 (pow.f64 (*.f64 x (PI.f64)) 2) (*.f64 -1/5040 (pow.f64 (*.f64 x (PI.f64)) 6))))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))","(/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 x (PI.f64)))","(/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))","1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)))","(fma.f64 (*.f64 x x) (*.f64 -1/6 (fma.f64 (PI.f64) (PI.f64) (pow.f64 (*.f64 tau (PI.f64)) 2))) 1)","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4))))","(+.f64 (fma.f64 (*.f64 x x) (*.f64 -1/6 (fma.f64 (PI.f64) (PI.f64) (pow.f64 (*.f64 tau (PI.f64)) 2))) 1) (*.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) (+.f64 (*.f64 1/36 (*.f64 tau tau)) 1/120)) (*.f64 1/120 (pow.f64 (*.f64 tau (PI.f64)) 4))) (pow.f64 x 4)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","(+.f64 (fma.f64 (*.f64 x x) (*.f64 -1/6 (fma.f64 (PI.f64) (PI.f64) (pow.f64 (*.f64 tau (PI.f64)) 2))) 1) (fma.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) (+.f64 (*.f64 1/36 (*.f64 tau tau)) 1/120)) (*.f64 1/120 (pow.f64 (*.f64 tau (PI.f64)) 4))) (pow.f64 x 4) (*.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 6) (+.f64 -1/5040 (*.f64 -1/720 (pow.f64 tau 4)))) (*.f64 (pow.f64 (PI.f64) 6) (+.f64 (*.f64 -1/5040 (pow.f64 tau 6)) (*.f64 -1/720 (*.f64 tau tau))))) (pow.f64 x 6))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 (PI.f64) x)))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))","(/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))","(+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64))))))","(fma.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (*.f64 tau tau) (*.f64 x (PI.f64)))) -1/6 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64)))","(+.f64 (*.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))) (+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64)))))))","(fma.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (pow.f64 (*.f64 x (PI.f64)) 3))) (fma.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (*.f64 tau tau) (*.f64 x (PI.f64)))) -1/6 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 6) (*.f64 (pow.f64 x 5) (pow.f64 (PI.f64) 5))))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3))))) (+.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (PI.f64) x)) (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 2) (*.f64 x (PI.f64))))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 6) (pow.f64 (*.f64 x (PI.f64)) 5))) (fma.f64 1/120 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (pow.f64 tau 4) (pow.f64 (*.f64 x (PI.f64)) 3))) (fma.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 (*.f64 tau tau) (*.f64 x (PI.f64)))) -1/6 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (PI.f64)))))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (*.f64 (pow.f64 x 2) (pow.f64 (PI.f64) 2))))","(/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (sin.f64 (*.f64 tau (*.f64 x (PI.f64))))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))"]],"time":264.31298828125,"type":"simplify"},{"compiler":[[7080,1661]],"time":38.739013671875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.0074828749362017],["(/.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))","fresh",1.1271018021191335],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2)))","fresh",1.225699144614738],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.207326764884242],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)","fresh",1.0824577696802438],["(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","fresh",1.0583105593012998],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3))","next",0.8302812397144067],["(*.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",4.2223273817180464],["(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","fresh",14.212013329150837],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))","fresh",0.8753414907860821],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))","fresh",0.8770778491476656],["(/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))","fresh",0.9507254685056398],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 3))","fresh",1.0113087063818382],["(*.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.100681563578854]],"compiler":[[25,14],[31,16],[31,14],[33,14],[24,15],[23,16],[27,14],[27,14],[93,76],[40,15],[36,15],[23,11],[26,13],[31,17],[25,14],[31,16],[31,14],[33,14],[24,15],[23,16],[27,14],[27,14],[93,76],[40,15],[36,15],[23,11],[26,13],[31,17]],"count":[[261,14]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[259,14],"picked":[1,0]}],"min-error":[0.24523488872210963],"time":73.7490234375,"type":"prune"},{"compiler":[[92,22]],"locations":[["(/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))",0.43558505861065216,false],["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))",0.438163769536884,false],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))",0.4394807250535656,false],["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)",0.7231026856003986,true]],"time":18.280029296875,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)","x","-inf",0.6201171875],["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)","x","inf",2.283935546875],["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)","x","0",0.761962890625]],"time":3.73095703125,"type":"series"},{"count":[[1,114]],"inputs":[["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 0) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (*.f64 0 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 1 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (PI.f64)) 3) (pow.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (/.f64 (/.f64 -1 (PI.f64)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) x) 3) (pow.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 x) 3) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))) (sin.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (PI.f64)) -3) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 (/.f64 -1 (PI.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (/.f64 1 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (PI.f64)) 3) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (pow.f64 (/.f64 1 (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x)) (neg.f64 (*.f64 (*.f64 x (PI.f64)) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) x)) (*.f64 (*.f64 x (PI.f64)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2)) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 x)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (*.f64 (*.f64 x (PI.f64)) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 (*.f64 x (PI.f64)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (PI.f64)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) 1) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (PI.f64) 3)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (PI.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 x)) (*.f64 (cbrt.f64 (*.f64 x x)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (neg.f64 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (PI.f64)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) x) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) -1) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) 3) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) 3) (pow.f64 (neg.f64 (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) 3) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3)) (neg.f64 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64)))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (neg.f64 (*.f64 x (PI.f64))))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (/.f64 1 (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (neg.f64 (*.f64 x (PI.f64)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 x (PI.f64))))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) 1) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))) (cbrt.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 x (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (*.f64 x (PI.f64)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (neg.f64 (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (PI.f64)) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) 1) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) 3) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 3))))))"]],"rules":[["egg-rr",114]],"time":27.260009765625,"type":"rewrite"},{"count":[[126,124]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (pow.f64 x 6)) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))","(+.f64 1 (*.f64 (pow.f64 (*.f64 (PI.f64) x) 2) -1/2))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2))))","(+.f64 (fma.f64 (pow.f64 x 4) (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 2/45 1/120))) 1) (*.f64 (pow.f64 (*.f64 (PI.f64) x) 2) -1/2))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (pow.f64 x 6)) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))))","(+.f64 (fma.f64 (pow.f64 x 4) (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 2/45 1/120))) 1) (fma.f64 (fma.f64 (pow.f64 (PI.f64) 6) -1/2520 (fma.f64 -1/6 (*.f64 (pow.f64 (*.f64 (PI.f64) (PI.f64)) 3) 2/45) (*.f64 (pow.f64 (PI.f64) 6) -29/5040))) (pow.f64 x 6) (*.f64 (pow.f64 (*.f64 (PI.f64) x) 2) -1/2)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)"]],"time":47.0869140625,"type":"simplify"},{"compiler":[[9300,2917]],"time":62.846923828125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.0074828749362017],["(/.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))","fresh",1.1271018021191335],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2)))","fresh",1.225699144614738],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.207326764884242],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)","fresh",1.0824577696802438],["(*.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",4.2223273817180464],["(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","fresh",14.212013329150837],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3) 1/3))","fresh",0.8247858608375556],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","next",0.812910065897579],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))","fresh",0.8753414907860821],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))","fresh",0.8770778491476656],["(/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))","fresh",0.9507254685056398],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 3))","fresh",1.0113087063818382],["(*.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.100681563578854]],"compiler":[[25,14],[31,16],[31,14],[33,14],[24,15],[27,14],[93,76],[31,18],[39,22],[40,15],[36,15],[23,11],[26,13],[31,17],[25,14],[31,16],[31,14],[33,14],[24,15],[27,14],[93,76],[31,18],[39,22],[40,15],[36,15],[23,11],[26,13],[31,17]],"count":[[298,14]],"kept":[{"done":[0,0],"fresh":[13,12],"new":[284,2],"picked":[1,0]}],"min-error":[0.24294987895366765],"time":96.969970703125,"type":"prune"},{"compiler":[[174,56]],"locations":[["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))",0.4394807250535656,false],["(pow.f64 (*.f64 x (PI.f64)) 2)",0.4576950195368841,true],["(/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))",0.5130462890737681,true],["(pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)",0.7234727539794927,true]],"time":33.731201171875,"type":"localize"},{"count":[[3,32]],"series":[["(pow.f64 (*.f64 x (PI.f64)) 2)","x","-inf",0.452880859375],["(pow.f64 (*.f64 x (PI.f64)) 2)","x","inf",0.41796875],["(pow.f64 (*.f64 x (PI.f64)) 2)","x","0",0.328125],["(/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","x","-inf",1.802978515625],["(/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","x","inf",0.919189453125],["(/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","x","0",0.64990234375],["(pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)","x","-inf",0.472900390625],["(pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)","x","inf",0.48095703125],["(pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)","x","0",0.851806640625]],"time":6.541015625,"type":"series"},{"count":[[3,168]],"inputs":[["(pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)","(/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","(pow.f64 (*.f64 x (PI.f64)) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 0) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 0 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (sin.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) (+.f64 2 1/3)) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2/3) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 x (PI.f64)))) (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (neg.f64 (sin.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (-.f64 (cos.f64 0) (cos.f64 (*.f64 x (+.f64 (PI.f64) (PI.f64)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 x (+.f64 (PI.f64) (PI.f64))))) (sin.f64 (*.f64 x (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 x (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 x (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 0) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64)))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) (*.f64 0 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 x 2/3))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 (pow.f64 x 2/3))) (/.f64 (/.f64 (pow.f64 x -1/3) (PI.f64)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 x)) (/.f64 (/.f64 (pow.f64 x -1/3) (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 x)) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) -2) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (pow.f64 x 2/3)) (/.f64 (neg.f64 (pow.f64 x -1/3)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (pow.f64 x 2/3)) (/.f64 (pow.f64 x -1/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3))) (pow.f64 (cbrt.f64 (pow.f64 x 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (/.f64 -1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (pow.f64 x 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (pow.f64 x 2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (pow.f64 x 2/3)) (*.f64 (PI.f64) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (pow.f64 x 2/3)) (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 (neg.f64 (pow.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2) (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 (pow.f64 x 2/3))) (/.f64 (pow.f64 x -1/3) (PI.f64))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) -2) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 x)) (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (pow.f64 x 2/3))) (*.f64 (PI.f64) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (pow.f64 x 2/3))) (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (*.f64 (pow.f64 (*.f64 x (PI.f64)) 2) (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x))))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (*.f64 (PI.f64) (cbrt.f64 x)))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3)) (*.f64 (PI.f64) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 x))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))) (*.f64 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (cbrt.f64 (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3)) (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 x)) (/.f64 (pow.f64 x -1/3) (PI.f64))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (/.f64 (/.f64 (pow.f64 x -1/3) (PI.f64)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x)))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))) (cbrt.f64 (neg.f64 (pow.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2)) (cbrt.f64 (neg.f64 (pow.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 2)) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4)) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (/.f64 (/.f64 (pow.f64 x -1/3) (PI.f64)) (cbrt.f64 x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 x 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 x 2/3))) (cbrt.f64 (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64)))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (pow.f64 x 2/3))) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x)))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x)))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 x (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x)))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (pow.f64 x 2/3)) 1) (*.f64 (PI.f64) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (pow.f64 x 2/3)) 1) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (pow.f64 x 2/3)) 1) (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (cbrt.f64 (pow.f64 x -2)))) (*.f64 (neg.f64 (PI.f64)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (neg.f64 (cbrt.f64 (pow.f64 x -2)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (neg.f64 (cbrt.f64 (pow.f64 x -2)))) (*.f64 (PI.f64) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (cbrt.f64 x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (pow.f64 x -2))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (cbrt.f64 (pow.f64 x -2))) (*.f64 (pow.f64 (*.f64 x (PI.f64)) 2) (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x -2))) (pow.f64 (*.f64 (PI.f64) (cbrt.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (cbrt.f64 (pow.f64 x -2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (pow.f64 x -2))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (cbrt.f64 (pow.f64 x -2))) (*.f64 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (pow.f64 x -2))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3))) 3) (/.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (PI.f64) (cbrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (neg.f64 (*.f64 x (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3) (*.f64 x (PI.f64))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 x (PI.f64)) 2) 0) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 x (PI.f64)) 2) (*.f64 (pow.f64 (*.f64 x (PI.f64)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 x (PI.f64)) 2)) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 x (PI.f64)) 2) (*.f64 0 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (PI.f64)) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 4)) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (PI.f64)) (PI.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (PI.f64)) x) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 x (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (PI.f64) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (PI.f64))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (PI.f64)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (PI.f64)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (cbrt.f64 (PI.f64))) (*.f64 x (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) x) (*.f64 (pow.f64 (PI.f64) 2/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (*.f64 (pow.f64 x 2/3) (PI.f64)) (*.f64 (pow.f64 x 2/3) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) (cbrt.f64 x)) 2) (cbrt.f64 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 x (PI.f64))) -1) (*.f64 (neg.f64 (*.f64 x (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 x (PI.f64)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 x (PI.f64))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 6))))))"]],"rules":[["egg-rr",38],["egg-rr",105],["egg-rr",25]],"time":41.458984375,"type":"rewrite"},{"count":[[200,189]],"inputs":[["(*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (PI.f64)) (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 7)) (*.f64 1/120 (pow.f64 (PI.f64) 7)))) (pow.f64 x 7)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3))))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (PI.f64)) (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 7)) (*.f64 1/120 (pow.f64 (PI.f64) 7)))) (pow.f64 x 7)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (+.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 8)) (*.f64 -1/360 (pow.f64 (PI.f64) 8))) (PI.f64)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 9)) (*.f64 -1/360 (pow.f64 (PI.f64) 9))))) (pow.f64 x 9)))))","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (pow.f64 x 6)) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3))","(pow.f64 (*.f64 (PI.f64) x) 3)","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)))","(fma.f64 (*.f64 (pow.f64 (PI.f64) 5) -1/2) (pow.f64 x 5) (pow.f64 (*.f64 (PI.f64) x) 3))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (PI.f64)) (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 7)) (*.f64 1/120 (pow.f64 (PI.f64) 7)))) (pow.f64 x 7)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3))))","(fma.f64 (pow.f64 x 7) (fma.f64 (*.f64 (pow.f64 (PI.f64) 6) 2/45) (PI.f64) (*.f64 (pow.f64 (PI.f64) 7) 23/360)) (fma.f64 (*.f64 (pow.f64 (PI.f64) 5) -1/2) (pow.f64 x 5) (pow.f64 (*.f64 (PI.f64) x) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (PI.f64)) (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 7)) (*.f64 1/120 (pow.f64 (PI.f64) 7)))) (pow.f64 x 7)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (PI.f64) 5)) (*.f64 -1/6 (pow.f64 (PI.f64) 5))) (pow.f64 x 5)) (+.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6))) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 8)) (*.f64 -1/360 (pow.f64 (PI.f64) 8))) (PI.f64)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 9)) (*.f64 -1/360 (pow.f64 (PI.f64) 9))))) (pow.f64 x 9)))))","(fma.f64 (fma.f64 (*.f64 (pow.f64 (PI.f64) 6) 2/45) (PI.f64) (*.f64 (pow.f64 (PI.f64) 7) 23/360)) (pow.f64 x 7) (fma.f64 (*.f64 (pow.f64 (PI.f64) 5) -1/2) (pow.f64 x 5) (fma.f64 (pow.f64 x 9) (fma.f64 -1/6 (*.f64 (*.f64 (pow.f64 (PI.f64) 6) 2/45) (pow.f64 (PI.f64) 3)) (fma.f64 (*.f64 (pow.f64 (PI.f64) 8) -1/315) (PI.f64) (*.f64 (pow.f64 (PI.f64) 9) -1/336))) (pow.f64 (*.f64 (PI.f64) x) 3))))","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","(pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3)","1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))","(fma.f64 (*.f64 x x) (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 1)","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2))))","(fma.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) 23/360) (*.f64 (pow.f64 (PI.f64) 4) 2/45)) (pow.f64 x 4) (fma.f64 (*.f64 x x) (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 1))","(+.f64 (*.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/6 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 6)) (*.f64 1/36 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (pow.f64 x 6)) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) (pow.f64 x 2)))))","(fma.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) 23/360) (*.f64 (pow.f64 (PI.f64) 4) 2/45)) (pow.f64 x 4) (+.f64 1 (fma.f64 (pow.f64 x 6) (fma.f64 (pow.f64 (PI.f64) 6) -1/2520 (fma.f64 -1/6 (*.f64 (pow.f64 (PI.f64) 6) 2/45) (*.f64 (pow.f64 (PI.f64) 6) -29/5040))) (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 x x)))))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (cbrt.f64 -1) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)","(*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))","(pow.f64 (*.f64 (PI.f64) x) 2)"]],"time":109.885009765625,"type":"simplify"},{"compiler":[[9644,3541]],"time":66.5498046875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 x)) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (cbrt.f64 x))) 1/3))","fresh",0.9792381822605007],["(*.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",4.2223273817180464],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3) 1/3))","next",0.8247858608375556],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (*.f64 (*.f64 x (cbrt.f64 (PI.f64))) (*.f64 x (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (pow.f64 (PI.f64) 2/3)))) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","fresh",0.9614985769585229],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2)))","fresh",1.225699144614738],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (/.f64 1 x)) 1/3))","fresh",0.8433519702725738],["(*.f64 (*.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.0074828749362017],["(/.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))","fresh",1.1271018021191335],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.207326764884242],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)","fresh",1.0824577696802438],["(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","fresh",14.212013329150837],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))","fresh",0.8753414907860821],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 3) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","fresh",1.1894921970098684],["(/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))","fresh",0.9507254685056398],["(*.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.100681563578854]],"compiler":[[58,28],[27,14],[31,18],[51,29],[31,14],[35,20],[25,14],[31,16],[33,14],[24,15],[93,76],[40,15],[42,25],[23,11],[31,17],[58,28],[27,14],[31,18],[51,29],[31,14],[35,20],[25,14],[31,16],[33,14],[24,15],[93,76],[40,15],[42,25],[23,11],[31,17]],"count":[[238,15]],"kept":[{"done":[0,0],"fresh":[13,11],"new":[224,4],"picked":[1,0]}],"min-error":[0.2426993698231219],"time":67.43310546875,"type":"prune"},{"compiler":[[126,40]],"locations":[["(/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau))",0.438163769536884,false],["(sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))",0.4394807250535656,false],["(pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)",0.7231026856003986,false],["(pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3)",0.7231026856003986,true]],"time":31.904052734375,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3)","x","-inf",1.9951171875],["(pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3)","x","inf",1.205078125],["(pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3)","x","0",2.81201171875]],"time":6.117919921875,"type":"series"},{"count":[[1,116]],"inputs":[["(pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 0) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (*.f64 0 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (/.f64 1 (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 x) 3) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2/3) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (PI.f64)) 3) (pow.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2/3) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) x) 3) (pow.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2/3) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1/3)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 x (PI.f64))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (PI.f64)) -3) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2/3) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))) (sin.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 (/.f64 -1 x) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (/.f64 1 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (/.f64 (/.f64 -1 x) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (pow.f64 (/.f64 1 (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (PI.f64)) 3) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) x)) (*.f64 (PI.f64) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x)) (neg.f64 (*.f64 (PI.f64) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2)) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 x)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (/.f64 1 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 (PI.f64) (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (PI.f64)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) x) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (*.f64 (PI.f64) (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x)) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) 1) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (PI.f64))) (*.f64 (pow.f64 (PI.f64) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (PI.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 x)) (*.f64 (pow.f64 x 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) x) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (PI.f64)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (neg.f64 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (PI.f64) 3)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (pow.f64 (PI.f64) 2/3)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) -1) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (PI.f64)) 3) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) 3) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3)) (neg.f64 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64)))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (pow.f64 (*.f64 x (PI.f64)) -1/3)) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64))))) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (*.f64 x (PI.f64))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 x (PI.f64))))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (neg.f64 (*.f64 x (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 x (PI.f64)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 4) 2)) (cbrt.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) (cbrt.f64 (PI.f64))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) 1) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 x (cbrt.f64 (PI.f64)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (PI.f64)) (*.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) 1) (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (neg.f64 (*.f64 x (PI.f64))))) (pow.f64 (*.f64 x (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) -1) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) 1) (neg.f64 (*.f64 x (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2)) (cbrt.f64 (*.f64 x (PI.f64)))) (neg.f64 (pow.f64 (*.f64 x (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 x)) 3) (pow.f64 (neg.f64 (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) 3) (pow.f64 (*.f64 x (PI.f64)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3)) (pow.f64 (*.f64 x (PI.f64)) 2))) (*.f64 x (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (neg.f64 (*.f64 x (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 3))))))"]],"rules":[["egg-rr",116]],"time":27.97900390625,"type":"rewrite"},{"count":[[128,126]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (*.f64 2/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (*.f64 2/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (*.f64 4/9 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (pow.f64 x 6)))))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2)))","(fma.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 x x) 1)","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (*.f64 2/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (pow.f64 x 4)) (+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2))))","(fma.f64 (fma.f64 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) 1/3 (fma.f64 1/9 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2) (fma.f64 2/3 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) (*.f64 2/9 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))))) (pow.f64 x 4) (fma.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 x x) 1))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)))) (*.f64 2/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (pow.f64 x 4)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))) (*.f64 2/3 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2)) (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))))) (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (+.f64 (*.f64 2/3 (-.f64 (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 -1/2520 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (*.f64 -1/180 (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (*.f64 4/9 (*.f64 (-.f64 (+.f64 (*.f64 1/18 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/60 (pow.f64 (PI.f64) 4)) (*.f64 1/36 (pow.f64 (PI.f64) 4))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2))) 2))) (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/3 (pow.f64 (PI.f64) 2)))))))) (pow.f64 x 6)))))","(+.f64 (fma.f64 (pow.f64 x 4) (fma.f64 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) 1/3 (fma.f64 1/9 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2) (fma.f64 2/3 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) (*.f64 2/9 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))))) 1) (fma.f64 (fma.f64 1/3 (*.f64 (fma.f64 1/9 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2) (*.f64 2/3 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))))) (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2)) (+.f64 (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) 2/45) (*.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (PI.f64) 6) (+.f64 -29/5040 -1/2520))) (fma.f64 1/27 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 3) (*.f64 2/3 (*.f64 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2))))) (*.f64 4/9 (*.f64 (+.f64 (fma.f64 1/18 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/120 2/45))) (*.f64 -1/3 (pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) 2))) (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2))))) (pow.f64 x 6) (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/2) (*.f64 x x))))","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) x)) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)","(/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (pow.f64 x 3) (pow.f64 (PI.f64) 3)))","(pow.f64 (/.f64 (sin.f64 (*.f64 (PI.f64) x)) (*.f64 (PI.f64) x)) 3)"]],"time":55.81298828125,"type":"simplify"},{"compiler":[[13555,5259]],"time":102.739990234375,"type":"eval"},{"alts":[["(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","fresh",14.212013329150837],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3) 1/3))","fresh",1.2007423167820315],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2)))","fresh",1.225699144614738],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (/.f64 1 x)) 1/3))","fresh",0.8433519702725738],["(*.f64 (*.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.0074828749362017],["(/.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))","fresh",1.1271018021191335],["(*.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",1.100681563578854],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) 1/3) 3) 1/3))","fresh",0.8622724358521872],["(*.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","fresh",4.2223273817180464],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (*.f64 (*.f64 x (cbrt.f64 (PI.f64))) (*.f64 x (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (pow.f64 (PI.f64) 2/3)))) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","fresh",0.9614985769585229],["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))","fresh",0.8753414907860821],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 3) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","fresh",1.1894921970098684],["(/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))","fresh",0.9507254685056398],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)","fresh",1.0824577696802438]],"compiler":[[93,76],[41,22],[31,14],[35,20],[25,14],[31,16],[31,17],[41,24],[27,14],[51,29],[40,15],[42,25],[23,11],[24,15]],"count":[[369,14]],"kept":[{"done":[0,0],"fresh":[14,12],"new":[354,2],"picked":[1,0]}],"min-error":[0.2426993698231219],"time":131.635009765625,"type":"prune"},{"accuracy":[0.8129100658975791],"baseline":[0.812910065897579],"branch":[["x",0.8129100658975794,1],["tau",0.8129100658975793,1],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))",0.8129100658975791,1],["(*.f64 x (PI.f64))",0.8129100658975794,1],["(*.f64 x (PI.f64))",0.8129100658975794,1]],"compiler":[[3,2],[3,2],[23,10],[5,4],[5,4],[806,278]],"count":[[24,1]],"inputs":[["(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) x) 3) (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) 1/3) 3) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (*.f64 (/.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) (cbrt.f64 x)) (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (*.f64 (PI.f64) (cbrt.f64 x))))) 2) (cbrt.f64 x))) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (*.f64 (*.f64 (*.f64 x (cbrt.f64 (PI.f64))) (*.f64 x (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (pow.f64 (PI.f64) 2/3)))) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (/.f64 (pow.f64 (*.f64 x (PI.f64)) -2) (PI.f64))) (/.f64 1 x)) 1/3))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau))) 3) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3) 3) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","(*.f64 (*.f64 (/.f64 1 x) (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (PI.f64) tau))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(/.f64 (/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (cbrt.f64 (*.f64 x (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 x (PI.f64)) 2)))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (cbrt.f64 (*.f64 x (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 x (PI.f64))) -2)))","(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 x (PI.f64)) tau)) -2)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))) 3)","(/.f64 (*.f64 (sin.f64 (*.f64 tau (*.f64 x (PI.f64)))) (sin.f64 (*.f64 (PI.f64) x))) (*.f64 tau (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 x 2))))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 3) 1/3))","(*.f64 (pow.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 3) 1/3) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (PI.f64) 2)) (*.f64 -1/6 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 2)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/120 (pow.f64 (PI.f64) 4)) (*.f64 1/120 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 4))))) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 -1/5040 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 4) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 tau 2) (pow.f64 (PI.f64) 6))) (*.f64 -1/5040 (*.f64 (pow.f64 tau 6) (pow.f64 (PI.f64) 6)))))) (pow.f64 x 6)))))","(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) (cbrt.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) 2)))","(*.f64 (*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))) 2)))","(/.f64 (/.f64 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 x (PI.f64))) tau) (*.f64 x (PI.f64)))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64)))) 3))","(*.f64 (*.f64 (/.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 x (PI.f64))) (cbrt.f64 tau)) (/.f64 1 (cbrt.f64 (*.f64 tau tau)))) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))","(/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (sin.f64 (*.f64 x (PI.f64)))) (*.f64 tau (pow.f64 (*.f64 x (PI.f64)) 2)))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))"]],"link":["."],"name":["Lanczos kernel"],"oracle":[15.742561736755523],"outputs":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))"]],"time":50.135986328125,"times":[["x",7.740966796875],["tau",7.717041015625],["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (sin.f64 (*.f64 x (PI.f64))) (*.f64 x (PI.f64))))",8.14111328125],["(*.f64 x (PI.f64))",7.81396484375],["(*.f64 x (PI.f64))",7.865966796875]],"type":"regimes"},{"compiler":[[39,22]],"inputs":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (pow.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 x (PI.f64))) 3) (pow.f64 (*.f64 x (PI.f64)) 2)) (*.f64 (PI.f64) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x))) 1/3))","(*.f64 (/.f64 (sin.f64 (*.f64 (*.f64 x (PI.f64)) tau)) (*.f64 (*.f64 x (PI.f64)) tau)) (/.f64 (/.f64 (sin.f64 (*.f64 x (PI.f64))) (pow.f64 (*.f64 x (PI.f64)) 2/3)) (cbrt.f64 (*.f64 x (PI.f64)))))"]],"stop":[["fuel",1]],"time":23.550048828125,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[39,22]],"remove-preprocessing":[[]],"time":14.43603515625,"type":"end"}]