[{"compiler":[[24,17]],"method":["search"],"sampling":[[12,0.06915987524553202,0.004501170420553535,0.9263389543339144],[11,0.06824747583596036,0.006447622494306415,0.9253049016697332],[10,0.0656927574891597,0.00900234084110707,0.9253049016697332],[9,0.06423291843384504,0.01265193847939372,0.9231151430867612],[8,0.05936678824946284,0.01751806866377592,0.9231151430867612],[7,0.05644711013883352,0.02530387695878744,0.918249012902379],[6,0.04671484977006912,0.03503613732755184,0.918249012902379],[5,0.04671484977006912,0.04671484977006912,0.9065703004598618],[4,0.03114323318004608,0.06228646636009216,0.9065703004598618],[3,0.03114323318004608,0.09342969954013824,0.8754270672798157],[2,0.0,0.12457293272018433,0.8754270672798157],[1,0.0,0.12457293272018433,0.8754270672798157],[0,0.0,0.12457293272018433,0.8754270672798157]],"time":14.594970703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",5.66845703125,122],["body",256,"valid",386.753662109375,8256]],"time":400.424072265625,"type":"sample"},{"compiler":[[13,9]],"inputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) v)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 (fma.f64 m (/.f64 (-.f64 1 m) v) -1) m)","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) v)","(*.f64 (fma.f64 v (/.f64 (-.f64 1 v) m) -1) v)"]],"symmetry":[[]],"time":63.39306640625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)"]],"time":20.10107421875,"type":"simplify"},{"compiler":[[23,15]],"time":0.40576171875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","next",0.15625],["(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)","fresh",0.18359375]],"compiler":[[13,9],[12,8],[13,9],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.14453125],"time":1.30810546875,"type":"prune"},{"compiler":[[40,25]],"locations":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)",0.00390625,true],["(*.f64 m (-.f64 1 m))",0.01171875,true],["(/.f64 (*.f64 m (-.f64 1 m)) v)",0.03515625,true],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",0.14453125,true]],"time":9.903076171875,"type":"localize"},{"count":[[4,63]],"series":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","-inf",0.14599609375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","inf",0.166015625],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","0",0.154052734375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","-inf",0.18115234375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","inf",0.193115234375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","0",0.158935546875],["(*.f64 m (-.f64 1 m))","m","-inf",0.306884765625],["(*.f64 m (-.f64 1 m))","m","inf",0.2509765625],["(*.f64 m (-.f64 1 m))","m","0",0.15185546875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","-inf",0.241943359375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","inf",0.2412109375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","0",0.2861328125],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","-inf",0.26123046875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","inf",0.38916015625],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","0",0.287841796875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","-inf",0.572021484375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","inf",0.35400390625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","0",0.468017578125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","-inf",0.55908203125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","inf",0.510009765625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","0",0.532958984375]],"time":6.663818359375,"type":"series"},{"count":[[4,270]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 m (-.f64 1 m))","(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 0) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) (*.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) (*.f64 0 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 m) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) 1) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) 0) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) m) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 2)) (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (*.f64 m (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (cbrt.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) m) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) m)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) 1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m (-.f64 1 m)) v) (neg.f64 m))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) 0) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (/.f64 1 v) (neg.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 m -1) m) v)) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (neg.f64 (*.f64 m m)) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (*.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 v -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (*.f64 m (cbrt.f64 (pow.f64 v -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (pow.f64 v -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (pow.f64 v -2))) (cbrt.f64 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 v -2))) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (cbrt.f64 (pow.f64 v -2))) (/.f64 (-.f64 1 m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (cbrt.f64 (pow.f64 v -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (-.f64 0 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (-.f64 1 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 m -1) m) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 v) (*.f64 m (-.f64 1 (pow.f64 m 3)))) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m (-.f64 1 m))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m (cbrt.f64 v)) (-.f64 1 m)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) m) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 (+.f64 m -1) m))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (*.f64 m (cbrt.f64 (pow.f64 v -2)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (/.f64 1 v)) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (pow.f64 v -2))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (/.f64 m v)) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (*.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 v -2)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 m -1) m) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) -1) (*.f64 (fma.f64 m (+.f64 1 m) 1) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) 1) (*.f64 (fma.f64 m (+.f64 1 m) 1) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (cbrt.f64 (/.f64 1 v))) (*.f64 (fma.f64 m (+.f64 1 m) 1) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 m (-.f64 1 (pow.f64 m 3)))) (*.f64 (neg.f64 v) (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (*.f64 v (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m (-.f64 1 (pow.f64 m 3)))) (*.f64 (cbrt.f64 (*.f64 v v)) (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 m 3)) (/.f64 m v)) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (pow.f64 v -2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 m v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (*.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 v -2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (*.f64 m (cbrt.f64 (pow.f64 v -2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (-.f64 1 m) v) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m (-.f64 1 m)) 0) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 (*.f64 m (-.f64 1 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 m (-.f64 1 m))) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 0 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 (neg.f64 (*.f64 m m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (cbrt.f64 (-.f64 1 m))) (cbrt.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 m)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (-.f64 1 m)) (cbrt.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m -1) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) (*.f64 m (cbrt.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m) (cbrt.f64 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (-.f64 1 m) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 m -1) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (/.f64 1 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) 1) (fma.f64 m (+.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1))) (pow.f64 (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 m -1) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 -1 (pow.f64 m 3))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 m 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 2)) m)) (cbrt.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 m 3)) m) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 m (-.f64 1 (pow.f64 m 3)))) (neg.f64 (fma.f64 m (+.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 m -1) m))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (neg.f64 (*.f64 m m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) (*.f64 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (neg.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) (/.f64 1 (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (-.f64 1 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1))) (+.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (/.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 v)))) (+.f64 -1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (+.f64 1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))) (-.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 6) (+.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1)) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) 1) (*.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 3) -1) 1) (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 6) (+.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))) (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1))) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3)) 1) (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) -1)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2))) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2) (fma.f64 (-.f64 1 m) (/.f64 m v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 m (-.f64 1 m)) (neg.f64 v)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (*.f64 (cbrt.f64 (*.f64 v v)) -1)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 m -1) m) v) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 v (*.f64 (+.f64 m -1) m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 v) (*.f64 m (-.f64 1 m))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (cbrt.f64 (*.f64 v v))) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 m (-.f64 1 m)) v) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 m -1) m) (neg.f64 v)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 m -1) m) v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (pow.f64 v -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m -1) m) (/.f64 -1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 m v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (*.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 v -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (+.f64 m -1) m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 m -1) m) 2)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (+.f64 m -1) m) v) -1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (*.f64 m (cbrt.f64 (pow.f64 v -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (-.f64 1 m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))"]],"rules":[["egg-rr",81],["egg-rr",51],["egg-rr",90],["egg-rr",48]],"time":44.9580078125,"type":"rewrite"},{"count":[[333,294]],"inputs":[["(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","-1","(-.f64 (/.f64 m v) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","-1","(-.f64 (/.f64 m v) 1)","(+.f64 (/.f64 m v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"time":223.1181640625,"type":"simplify"},{"compiler":[[5350,3432]],"time":64.659912109375,"type":"eval"},{"alts":[["(*.f64 (-.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) 1) m)","fresh",0.14453125],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","next",0.140625],["(*.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 2)))","fresh",31.62348862476025],["(*.f64 (*.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (/.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 v)))) (+.f64 -1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))) m)","fresh",10.994842578147537],["(*.f64 (-.f64 (*.f64 (/.f64 -1 v) (*.f64 (+.f64 m -1) m)) 1) m)","fresh",0.1875],["(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)","fresh",0.18359375],["(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","fresh",5.95602729750296],["(*.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) m))","fresh",10.980838818379093]],"compiler":[[14,9],[13,8],[27,18],[37,27],[15,11],[12,8],[19,14],[25,17],[14,9],[13,8],[27,18],[37,27],[15,11],[12,8],[19,14],[25,17]],"count":[[296,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[294,8],"picked":[1,0]}],"min-error":[0],"time":128.445068359375,"type":"prune"},{"compiler":[[33,18]],"locations":[["(*.f64 m (-.f64 1 m))",0.01171875,false],["(/.f64 (*.f64 m (-.f64 1 m)) v)",0.03515625,false],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))",0.12890625,true]],"time":8.343017578125,"type":"localize"},{"count":[[1,24]],"series":[["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","v","-inf",0.233154296875],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","v","inf",0.254150390625],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","v","0",0.23193359375],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","m","-inf",0.302001953125],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","m","inf",0.280029296875],["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","m","0",0.2548828125]],"time":1.64697265625,"type":"series"},{"count":[[1,44]],"inputs":[["(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 0) (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 0 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 m) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)) (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (cbrt.f64 (neg.f64 m)) (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (-.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 m)) (cbrt.f64 (*.f64 m m)) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (neg.f64 (*.f64 m m))) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (neg.f64 m)) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) 2)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) 1 (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 m) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 m) 1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m (-.f64 1 m)) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) (neg.f64 m))))))"]],"rules":[["egg-rr",44]],"time":21.416015625,"type":"rewrite"},{"count":[[68,56]],"inputs":[["(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)"]],"time":94.8349609375,"type":"simplify"},{"compiler":[[3319,1795]],"time":38.179931640625,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)) (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))","fresh",31.62348862476025],["(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","fresh",5.95602729750296],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","next",0.12890625],["(fma.f64 (*.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v)) m (neg.f64 m))","fresh",0.171875],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","fresh",0.13671875],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))","fresh",10.96455004884221]],"compiler":[[27,18],[19,14],[14,8],[15,10],[13,8],[25,17],[27,18],[19,14],[14,8],[15,10],[13,8],[25,17]],"count":[[213,6]],"kept":[{"done":[0,0],"fresh":[7,0],"new":[205,6],"picked":[1,0]}],"min-error":[0],"time":72.907958984375,"type":"prune"},{"compiler":[[39,8]],"locations":[["(+.f64 (neg.f64 (*.f64 m m)) m)",0.01171875,true],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)",0.03515625,true],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))",0.12890625,true]],"time":6.85302734375,"type":"localize"},{"count":[[3,60]],"series":[["(+.f64 (neg.f64 (*.f64 m m)) m)","m","-inf",0.172119140625],["(+.f64 (neg.f64 (*.f64 m m)) m)","m","inf",0.14306640625],["(+.f64 (neg.f64 (*.f64 m m)) m)","m","0",0.142822265625],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","v","-inf",0.243896484375],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","v","inf",0.25],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","v","0",0.2958984375],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","m","-inf",0.23486328125],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","m","inf",0.23095703125],["(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","m","0",0.4541015625],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","v","-inf",0.9580078125],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","v","inf",0.326904296875],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","v","0",0.444091796875],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","m","-inf",0.2958984375],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","m","inf",0.307861328125],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","m","0",0.301025390625]],"time":4.9951171875,"type":"series"},{"count":[[3,194]],"inputs":[["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","(/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v)","(+.f64 (neg.f64 (*.f64 m m)) m)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) (*.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 0) (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) (*.f64 0 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 m) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 m (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 2)) (cbrt.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (cbrt.f64 (neg.f64 m)) (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (-.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 m (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (neg.f64 (*.f64 m m))) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m (-.f64 1 m)) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) 2)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 m) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 m) 1 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (neg.f64 m)) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 m)) (cbrt.f64 (*.f64 m m)) (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m (*.f64 m (-.f64 1 m))) v) 1 (neg.f64 m))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 0) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 v) (neg.f64 (*.f64 m m))) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (/.f64 1 v) (neg.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 m (-.f64 1 m)) v)) (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 m m)) (/.f64 1 v)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (neg.f64 (*.f64 m m)) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 v) (/.f64 (*.f64 m (-.f64 m 1)) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (*.f64 m (-.f64 m 1)) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 m (-.f64 m 1)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 m 1)) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 v)) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 m (-.f64 1 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 m (-.f64 m 1)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (*.f64 m (-.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) v) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 m 1)) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 v)) (/.f64 (*.f64 m (-.f64 m 1)) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 v) -2)) (/.f64 (*.f64 m (-.f64 m 1)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v) (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) -1) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (*.f64 v v))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) -1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (cbrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (/.f64 (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m -1) (/.f64 (-.f64 1 m) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 (*.f64 v v))) (/.f64 (-.f64 1 m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (-.f64 1 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) -1) (/.f64 m (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 v)) (/.f64 m (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 (*.f64 v v))) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 m 1))) 1) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 m 1))) (cbrt.f64 v)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (neg.f64 (cbrt.f64 (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (neg.f64 v))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))) (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 v)) (/.f64 (*.f64 m (-.f64 1 m)) (neg.f64 (cbrt.f64 (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 m 1)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 v)) (*.f64 m (-.f64 1 m))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m)))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (cbrt.f64 (*.f64 m (-.f64 m 1)))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 m (-.f64 m 1))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 v)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) 1) (cbrt.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 m 1)) (cbrt.f64 v)) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v))) (neg.f64 (cbrt.f64 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 m (-.f64 m 1)) v))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 m (-.f64 m 1)) v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 (*.f64 m (-.f64 1 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 m (-.f64 1 m)) 0) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (-.f64 1 m)) (*.f64 0 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 m (-.f64 1 m))) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 m (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 m (-.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (cbrt.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 m (-.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 m 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (+.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (+.f64 (*.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 m)) (cbrt.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 m) (-.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 (*.f64 m m)) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (+.f64 -1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (+.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 m) (-.f64 -1 (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (-.f64 m 1))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 m (-.f64 1 m)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) -1) (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) -1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m -1) (/.f64 (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) -1) (/.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 m 4)) (-.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 m))) (+.f64 (cbrt.f64 (neg.f64 (*.f64 m m))) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 m m)) (-.f64 (cbrt.f64 (pow.f64 m 4)) (neg.f64 m))) (+.f64 (cbrt.f64 m) (cbrt.f64 (neg.f64 (*.f64 m m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (cbrt.f64 (pow.f64 m 4)) m)) (-.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (cbrt.f64 m) (*.f64 (neg.f64 m) (cbrt.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (*.f64 (neg.f64 m) (cbrt.f64 m)) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (-.f64 (cbrt.f64 m) (cbrt.f64 (pow.f64 m 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (cbrt.f64 m) (*.f64 m (cbrt.f64 (neg.f64 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (+.f64 (*.f64 m (cbrt.f64 (neg.f64 m))) (cbrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 m (-.f64 1 m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 m 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 m (-.f64 m 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (-.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 m m))) (cbrt.f64 (pow.f64 m 4)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (neg.f64 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 m) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 m)) (*.f64 (cbrt.f64 (*.f64 m m)) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 m 4)) (cbrt.f64 (neg.f64 (*.f64 m m))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 m m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 m m)) 1 m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (cbrt.f64 (neg.f64 m))) (cbrt.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 m) (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (neg.f64 m) (cbrt.f64 m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) -1 m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (neg.f64 (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 m (-.f64 1 m)))))))"]],"rules":[["egg-rr",74],["egg-rr",76],["egg-rr",44]],"time":33.48388671875,"type":"rewrite"},{"count":[[254,215]],"inputs":[["(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v)","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (-.f64 m (pow.f64 m 2)) m) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (-.f64 m (pow.f64 m 2)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 m (-.f64 1 m))"]],"time":208.76318359375,"type":"simplify"},{"compiler":[[3426,1667]],"time":36.992919921875,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (/.f64 -1 v) (*.f64 m (-.f64 m 1))) m (neg.f64 m))","fresh",0.171875],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","next",0.13671875],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)) (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))","fresh",31.62348862476025],["(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","fresh",5.95602729750296],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","done",0.12890625],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))","fresh",10.96455004884221]],"compiler":[[15,10],[13,8],[27,18],[19,14],[14,8],[25,17],[15,10],[13,8],[27,18],[19,14],[25,17]],"count":[[221,6]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[215,2],"picked":[1,1]}],"min-error":[0],"time":80.29296875,"type":"prune"},{"compiler":[[29,14]],"locations":[["(*.f64 m (-.f64 1 m))",0.01171875,false],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))",0.1328125,true]],"time":7.153076171875,"type":"localize"},{"count":[[1,24]],"series":[["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","v","-inf",0.327880859375],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","v","inf",0.3330078125],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","v","0",0.326904296875],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","m","-inf",0.26611328125],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","m","inf",0.2587890625],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","m","0",0.321044921875]],"time":1.9228515625,"type":"series"},{"count":[[1,44]],"inputs":[["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) (*.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 0) (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) (*.f64 0 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 m) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 2)) (cbrt.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 -1 (/.f64 (*.f64 m (-.f64 1 m)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (neg.f64 (*.f64 m m))) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 m)) (cbrt.f64 (*.f64 m m)) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 (neg.f64 m)) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (*.f64 m (-.f64 1 m)) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) 2)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (/.f64 (*.f64 m m) v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (*.f64 m (-.f64 1 m)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2)) (/.f64 m v)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) (/.f64 1 v) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 (/.f64 m v))) (cbrt.f64 (pow.f64 (/.f64 m v) 2)) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 m) 1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 m) (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) 1 (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (*.f64 m (-.f64 1 m)) m) v) (neg.f64 m))))))"]],"rules":[["egg-rr",44]],"time":21.22314453125,"type":"rewrite"},{"count":[[68,56]],"inputs":[["(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(-.f64 (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v) m)"]],"time":94.47802734375,"type":"simplify"},{"compiler":[[1684,825]],"time":19.703857421875,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (/.f64 -1 v) (*.f64 m (-.f64 m 1))) m (neg.f64 m))","fresh",0.171875],["(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","done",0.13671875],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)) (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))","fresh",31.62348862476025],["(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","fresh",5.95602729750296],["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","done",0.12890625],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))","fresh",10.96455004884221]],"compiler":[[15,10],[13,8],[27,18],[19,14],[14,8],[25,17]],"count":[[117,6]],"kept":[{"done":[1,1],"fresh":[4,4],"new":[111,0],"picked":[1,1]}],"min-error":[0],"time":27.552978515625,"type":"prune"},{"accuracy":[0.12890625],"baseline":[0.12890625],"branch":[["m",0.12890625,1],["v",0.12890625,1],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",0.12890625,1]],"compiler":[[3,2],[3,2],[13,9],[294,172]],"count":[[18,1]],"inputs":[["(fma.f64 (*.f64 (/.f64 -1 v) (*.f64 m (-.f64 m 1))) m (neg.f64 m))","(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","(*.f64 (cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) 2)) (cbrt.f64 (*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","(fma.f64 (*.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v)) m (neg.f64 m))","(fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 m v) (neg.f64 m))","(fma.f64 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) m) (neg.f64 m))","(*.f64 (-.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) 1) m)","(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))","(*.f64 (cbrt.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m) 2)))","(*.f64 (*.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 2)) (/.f64 (cbrt.f64 (*.f64 (+.f64 m -1) m)) (cbrt.f64 v)))) (+.f64 -1 (cbrt.f64 (/.f64 (*.f64 m (-.f64 1 m)) v)))) m)","(*.f64 (-.f64 (*.f64 (/.f64 -1 v) (*.f64 (+.f64 m -1) m)) 1) m)","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 (cbrt.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) 2)) m))","(*.f64 (fma.f64 (-.f64 1 m) (/.f64 m v) -1) m)","(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"link":["."],"name":["a parameter of renormalized beta distribution"],"oracle":[37.33626556007512],"outputs":[["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))"]],"time":23.7919921875,"times":[["m",6.368896484375],["v",6.166015625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",6.3759765625]],"type":"regimes"},{"compiler":[[14,8]],"inputs":[["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (/.f64 (+.f64 (neg.f64 (*.f64 m m)) m) v) m (neg.f64 m))","(fma.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) m (neg.f64 m))"]],"stop":[["fuel",1]],"time":18.93212890625,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[14,8]],"remove-preprocessing":[[]],"time":8.8701171875,"type":"end"}]