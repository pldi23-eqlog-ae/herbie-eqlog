[{"compiler":[[10,6]],"method":["search"],"sampling":[[12,0.8634140167851001,0.135609659133479,0.0009763240814208984],[11,0.8204872182104737,0.17853645770810544,0.0009763240814208984],[10,0.7375604482367635,0.2614632276818156,0.0009763240814208984],[9,0.6595117235556245,0.3395119523629546,0.0009763240814208984],[8,0.5151215828955173,0.48390209302306175,0.0009763240814208984],[7,0.39024362340569496,0.6087800525128841,0.0009763240814208984],[6,0.15609744936227798,0.8429262265563011,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":31.947021484375,"type":"analyze"},{"outcomes":[["body",256,"valid",277.096923828125,8256]],"time":285.346923828125,"type":"sample"},{"compiler":[[9,5]],"inputs":[["0","1"],["(/.f64 (-.f64 x y) (+.f64 x y))","(/.f64 (-.f64 y x) (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 x y) (+.f64 x y))","(/.f64 (-.f64 y x) (+.f64 y x))","(/.f64 (-.f64 y x) (+.f64 x y))"]],"symmetry":[[]],"time":57.5390625,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"time":17.697021484375,"type":"simplify"},{"compiler":[[9,5]],"time":0.197998046875,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (+.f64 x y))","next",0.01171875]],"compiler":[[9,5],[9,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.01171875],"time":0.658935546875,"type":"prune"},{"compiler":[[17,5]],"locations":[["(/.f64 (-.f64 x y) (+.f64 x y))",0.01171875,true]],"time":3.56494140625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (-.f64 x y) (+.f64 x y))","y","-inf",0.447998046875],["(/.f64 (-.f64 x y) (+.f64 x y))","y","inf",0.376220703125],["(/.f64 (-.f64 x y) (+.f64 x y))","y","0",0.3271484375],["(/.f64 (-.f64 x y) (+.f64 x y))","x","-inf",0.3701171875],["(/.f64 (-.f64 x y) (+.f64 x y))","x","inf",0.427001953125],["(/.f64 (-.f64 x y) (+.f64 x y))","x","0",0.572021484375]],"time":2.615966796875,"type":"series"},{"count":[[1,73]],"inputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 1 (+.f64 x y)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 x y)) (neg.f64 y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (*.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 0) (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (neg.f64 (/.f64 y (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (*.f64 0 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (+.f64 x y))) (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (/.f64 (*.f64 (+.f64 x y) y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 x y)) (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 y (+.f64 x y))) (/.f64 x (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (+.f64 x y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 x y) (neg.f64 (*.f64 (+.f64 x y) y))) (/.f64 1 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (neg.f64 y))) (*.f64 (+.f64 x y) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (/.f64 y (cbrt.f64 (+.f64 x y))))) (*.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (+.f64 x y)) (*.f64 (neg.f64 (+.f64 x y)) y)) (*.f64 (neg.f64 (+.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 y (cbrt.f64 (+.f64 x y))))) (*.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (+.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) y)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 y (cbrt.f64 (+.f64 x y))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (+.f64 x y) (neg.f64 (*.f64 (+.f64 x y) y)))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (+.f64 x y) (neg.f64 (*.f64 (+.f64 x y) y))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (-.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (+.f64 x y) (neg.f64 (*.f64 (+.f64 x y) y))) 1) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 x y) (neg.f64 (*.f64 (+.f64 x y) y))) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))))"]],"rules":[["egg-rr",73]],"time":23.166015625,"type":"rewrite"},{"count":[[97,102]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (/.f64 x y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2)))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)))) 1)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (fma.f64 2 (/.f64 x y) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (fma.f64 2 (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) -1))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(+.f64 1 (/.f64 (neg.f64 (+.f64 y y)) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(+.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 y y) y) (*.f64 x x))) (/.f64 (neg.f64 (+.f64 y y)) x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","(fma.f64 (neg.f64 (*.f64 (+.f64 y y) (*.f64 y y))) (pow.f64 x (neg.f64 3)) (+.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 y y) y) (*.f64 x x))) (/.f64 (neg.f64 (+.f64 y y)) x)))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(+.f64 1 (/.f64 (neg.f64 (+.f64 y y)) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(+.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 y y) y) (*.f64 x x))) (/.f64 (neg.f64 (+.f64 y y)) x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","(fma.f64 (neg.f64 (*.f64 (+.f64 y y) (*.f64 y y))) (pow.f64 x (neg.f64 3)) (+.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 y y) y) (*.f64 x x))) (/.f64 (neg.f64 (+.f64 y y)) x)))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(fma.f64 -2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 (pow.f64 (/.f64 y x) 2) 2 (/.f64 (*.f64 -2 y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 3) 1) (fma.f64 (pow.f64 (/.f64 y x) 2) 2 (/.f64 (*.f64 -2 y) x)))","-1","(-.f64 (/.f64 x y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2)))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(fma.f64 (*.f64 (+.f64 x x) (*.f64 x x)) (pow.f64 y (neg.f64 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)))) 1)","(+.f64 (fma.f64 (neg.f64 (*.f64 (+.f64 x x) x)) (pow.f64 y (neg.f64 2)) (*.f64 (/.f64 (+.f64 x x) y) (pow.f64 (/.f64 x y) 2))) (fma.f64 2 (/.f64 x y) -1))"]],"time":82.129150390625,"type":"simplify"},{"compiler":[[1720,664]],"time":15.508056640625,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","next",0.01171875],["(/.f64 (-.f64 x y) (+.f64 x y))","done",0.01171875]],"compiler":[[13,6],[9,5],[13,6]],"count":[[103,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[102,1],"picked":[1,1]}],"min-error":[0],"time":21.27197265625,"type":"prune"},{"compiler":[[28,6]],"locations":[["(/.f64 x (+.f64 x y))",0.0078125,true],["(/.f64 y (+.f64 x y))",0.01953125,true],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))",0.0234375,true]],"time":4.7578125,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.2099609375],["(/.f64 x (+.f64 x y))","y","inf",0.234130859375],["(/.f64 x (+.f64 x y))","y","0",0.172119140625],["(/.f64 x (+.f64 x y))","x","-inf",0.3291015625],["(/.f64 x (+.f64 x y))","x","inf",0.202880859375],["(/.f64 x (+.f64 x y))","x","0",0.27392578125],["(/.f64 y (+.f64 x y))","x","-inf",0.22314453125],["(/.f64 y (+.f64 x y))","x","inf",0.26611328125],["(/.f64 y (+.f64 x y))","x","0",0.173095703125],["(/.f64 y (+.f64 x y))","y","-inf",0.22802734375],["(/.f64 y (+.f64 x y))","y","inf",0.20703125],["(/.f64 y (+.f64 x y))","y","0",0.319091796875],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","-inf",0.44384765625],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","inf",0.35498046875],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","0",0.27099609375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","-inf",0.3349609375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","inf",0.921142578125],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","0",0.343994140625]],"time":5.76708984375,"type":"series"},{"count":[[3,302]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","(/.f64 y (+.f64 x y))","(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 0) (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (*.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (+.f64 x y))) (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (*.f64 0 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 y (+.f64 x y))) (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (-.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (*.f64 y (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 x (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))))) (-.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (-.f64 y x)) (/.f64 1 (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (-.f64 y x)) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 (+.f64 x y) (-.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x y) (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x y) (-.f64 y x)) 1) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (-.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) (-.f64 y x)) (+.f64 x y)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 4)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (pow.f64 (cbrt.f64 (+.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) y) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 x (cbrt.f64 (+.f64 x y))))) (*.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (/.f64 x (cbrt.f64 (+.f64 x y))))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) y)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (+.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 y))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (pow.f64 (+.f64 x y) 2) (*.f64 (+.f64 x y) y))) (*.f64 (pow.f64 (+.f64 x y) 2) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (/.f64 y (cbrt.f64 (+.f64 x y))))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 y (cbrt.f64 (+.f64 x y))))) (*.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (+.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) y)) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 y (cbrt.f64 (+.f64 x y))))) (pow.f64 (cbrt.f64 (+.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) (-.f64 x y)) (neg.f64 (+.f64 x y))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 y x) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 y (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -1 (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) 1 (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) x (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 x y) (+.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (+.f64 x y)) 0) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 x y)) (*.f64 (/.f64 y (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (+.f64 x y))) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 x y)) (*.f64 0 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2) (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2) (neg.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) y) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (cbrt.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (+.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (+.f64 x y)) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 4)) (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (+.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (+.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 (/.f64 y (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (+.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (/.f64 (*.f64 y y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y (+.f64 x y))) (-.f64 (neg.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) y) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (+.f64 x y)) (neg.f64 (+.f64 x y))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (+.f64 x y)) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (cbrt.f64 y)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) y) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) y) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) y) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) y) (pow.f64 (cbrt.f64 (+.f64 x y)) 4)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x y) y) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (pow.f64 (cbrt.f64 (+.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y)))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))) (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y)))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (/.f64 (*.f64 y y) (+.f64 x y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (+.f64 x y)) (*.f64 y y))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))) (+.f64 x y)) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 (*.f64 y y) (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (*.f64 y y)))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 y y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (+.f64 x y)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 (*.f64 y y) (+.f64 x y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (*.f64 y y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (+.f64 x y) (*.f64 y y))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (+.f64 x y)) (*.f64 (+.f64 x y) (/.f64 (*.f64 y y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (neg.f64 (*.f64 y y)))) (*.f64 (+.f64 x y) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (neg.f64 (+.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 x y)) (*.f64 (pow.f64 (+.f64 x y) 2) (/.f64 (*.f64 y y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (*.f64 y y)))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)) (pow.f64 (*.f64 (+.f64 x y) y) 2)) (*.f64 (pow.f64 (+.f64 x y) 2) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 x y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 x y)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 (*.f64 x y) (+.f64 x y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 y y) (neg.f64 (+.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 y y) (+.f64 x y)) (*.f64 (pow.f64 (+.f64 x y) 2) (/.f64 (*.f64 x y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 y y) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (*.f64 x y)))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x y) y) 2) (*.f64 (pow.f64 (+.f64 x y) 2) (*.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) 2) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (+.f64 x y) (*.f64 x y))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (+.f64 x y)) (*.f64 (+.f64 x y) (/.f64 (*.f64 x y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (neg.f64 (*.f64 x y)))) (*.f64 (+.f64 x y) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (+.f64 x y)) (*.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))) (+.f64 x y)) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 x y) y)) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 x y) y) 3) (pow.f64 (+.f64 x y) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (+.f64 x y)) (/.f64 y (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (/.f64 y (+.f64 x y)) (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 (/.f64 y (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) (+.f64 x y)) (/.f64 1 (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (+.f64 x y)) (/.f64 x (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) 2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (/.f64 y (+.f64 x y)) (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 4)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 y (+.f64 x y)) 2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (+.f64 2 3)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y y) (+.f64 x y)) (/.f64 1 (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 4)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (pow.f64 (+.f64 x y) -2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 y (+.f64 x y))) (neg.f64 (/.f64 y (+.f64 x y))) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 x (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 0 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) (pow.f64 (/.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 2 3)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 (/.f64 x (+.f64 x y)) (+.f64 x y)) (/.f64 (/.f64 y (+.f64 x y)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (+.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 x y)) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 x y)) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (+.f64 x y)) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (+.f64 x y)) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (+.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 4)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (pow.f64 (cbrt.f64 (+.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y)))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x x) (neg.f64 (+.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (pow.f64 (+.f64 x y) 2) (*.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) 2) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x x) (+.f64 x y)) (*.f64 (pow.f64 (+.f64 x y) 2) (/.f64 (*.f64 x y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x x) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (*.f64 x y)))) (*.f64 (pow.f64 (+.f64 x y) 2) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (+.f64 x y)) (*.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (+.f64 x y)) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 (*.f64 x y) (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x x)) (pow.f64 (+.f64 x y) 2)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 x y))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x x)) (+.f64 x y)) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 (*.f64 x y) (+.f64 x y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 (pow.f64 (+.f64 x y) 2)) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (neg.f64 (/.f64 (*.f64 x y) (+.f64 x y))))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (*.f64 (+.f64 x y) (*.f64 x y))) (pow.f64 (+.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (+.f64 x y)) (*.f64 (+.f64 x y) (/.f64 (*.f64 x y) (+.f64 x y)))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 x y) (neg.f64 (*.f64 x y)))) (*.f64 (+.f64 x y) (neg.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (+.f64 x y) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 2 3)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (/.f64 x (+.f64 x y)) (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x x) (+.f64 x y)) (/.f64 1 (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) (/.f64 x (+.f64 x y)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 4)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 4)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (pow.f64 (+.f64 x y) -2) (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)))))))"]],"rules":[["egg-rr",84],["egg-rr",121],["egg-rr",97]],"time":46.010009765625,"type":"rewrite"},{"count":[[374,359]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(+.f64 (/.f64 (+.f64 x x) y) (fma.f64 (pow.f64 (/.f64 x y) 2) -2 -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","(+.f64 (*.f64 -2 (pow.f64 (/.f64 x y) 2)) (fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) -1))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (/.f64 (*.f64 -2 y) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 2) (+.f64 1 (fma.f64 -2 (/.f64 y x) (pow.f64 (/.f64 y x) 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (-.f64 (fma.f64 -2 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (pow.f64 (/.f64 y x) 3))) (pow.f64 (/.f64 y x) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))","(-.f64 1 (/.f64 (+.f64 y y) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x))))","(+.f64 1 (fma.f64 2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 (+.f64 y y) x))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (+.f64 1 (fma.f64 2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 (+.f64 y y) x)))))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (/.f64 (*.f64 -2 y) x))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 -2 (/.f64 y x) (*.f64 2 (pow.f64 (/.f64 y x) 2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (+.f64 1 (fma.f64 -2 (/.f64 y x) (*.f64 2 (pow.f64 (/.f64 y x) 2)))))","-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (-.f64 (fma.f64 2 (/.f64 x y) -1) (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 2))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (fma.f64 2 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2)) (-.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (pow.f64 (/.f64 x y) 3)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (/.f64 (+.f64 x x) y) (fma.f64 (pow.f64 (/.f64 x y) 2) -2 -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (*.f64 -2 (pow.f64 (/.f64 x y) 2)) (fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) -1))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(-.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (pow.f64 (/.f64 y x) 3) (-.f64 (-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (pow.f64 (/.f64 x y) 2) (-.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (pow.f64 (/.f64 x y) 2) (-.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (pow.f64 (/.f64 x y) 2) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (pow.f64 (/.f64 x y) 2) (-.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(-.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (pow.f64 (/.f64 y x) 3) (-.f64 (-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(-.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (pow.f64 (/.f64 y x) 3) (-.f64 (-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (pow.f64 (/.f64 x y) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (pow.f64 (/.f64 x y) 2))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (pow.f64 (/.f64 x y) 2))"]],"time":243.093017578125,"type":"simplify"},{"compiler":[[7854,2494]],"time":58.533935546875,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","done",0.01171875],["(/.f64 (-.f64 x y) (+.f64 x y))","done",0.01171875]],"compiler":[[13,6],[9,5]],"count":[[361,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[359,0],"picked":[1,1]}],"min-error":[0],"time":182.9521484375,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["y",0.01171875,1],["(/.f64 (-.f64 x y) (+.f64 x y))",0.01171875,1]],"compiler":[[3,2],[3,2],[9,5],[20,8]],"count":[[2,1]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","(/.f64 (-.f64 x y) (+.f64 x y))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, D"],"oracle":[0.0234375],"outputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))"]],"time":7.4638671875,"times":[["x",2.655029296875],["y",2.594970703125],["(/.f64 (-.f64 x y) (+.f64 x y))",1.679931640625]],"type":"regimes"},{"compiler":[[13,6]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","(/.f64 (-.f64 x y) (+.f64 x y))"]],"stop":[["done",1]],"time":20.424072265625,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[13,6]],"remove-preprocessing":[[]],"time":8.166015625,"type":"end"}]