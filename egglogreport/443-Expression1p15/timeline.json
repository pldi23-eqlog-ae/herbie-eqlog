[{"compiler":[[53,38]],"method":["search"],"sampling":[[1,8.673617379884045e-19,0.0,1.0],[0,0.0,8.673617379884045e-19,1.0]],"time":0.220947265625,"type":"analyze"},{"outcomes":[["body",256,"valid",554.441162109375,8256]],"time":562.5390625,"type":"sample"},{"compiler":[[14,9]],"inputs":[["0","1","2","3","4"],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 e d) c) a) b)","(+.f64 (+.f64 (+.f64 (+.f64 e d) a) b) c)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 a d) c) b) e)","(+.f64 (+.f64 (+.f64 (+.f64 e d) b) c) a)","(+.f64 (+.f64 (+.f64 (+.f64 e b) c) d) a)","(+.f64 (+.f64 (+.f64 (+.f64 b d) c) e) a)","(+.f64 (+.f64 (+.f64 (+.f64 e c) d) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 c d) e) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 d e) c) b) a)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e d) c) a) b)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e d) a) b) c)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 a d) c) b) e)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e d) b) c) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e b) c) d) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 b d) c) e) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 e c) d) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 c d) e) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)","(+.f64 (+.f64 (+.f64 (+.f64 d e) c) b) a)","(+.f64 (+.f64 (+.f64 (+.f64 e a) c) b) d)"]],"symmetry":[[]],"time":83.89501953125,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)"]],"time":19.760986328125,"type":"simplify"},{"compiler":[[14,9]],"time":0.239990234375,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","next",0.38804628907376815]],"compiler":[[14,9],[14,9]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.38804628907376815],"time":0.73095703125,"type":"prune"},{"compiler":[[34,9]],"locations":[["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)",0.171875,true],["(+.f64 (+.f64 e d) c)",0.2265625,true],["(+.f64 (+.f64 (+.f64 e d) c) b)",0.265625,true]],"time":5.81005859375,"type":"localize"},{"count":[[3,144]],"series":[["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","a","-inf",0.18603515625],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","a","inf",0.27490234375],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","a","0",0.179931640625],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","b","-inf",0.173828125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","b","inf",0.2001953125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","b","0",0.177978515625],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","c","-inf",0.19189453125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","c","inf",0.162841796875],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","c","0",0.2021484375],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","d","-inf",0.173095703125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","d","inf",0.169189453125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","d","0",0.197998046875],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","e","-inf",0.169921875],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","e","inf",0.200927734375],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","e","0",0.183837890625],["(+.f64 (+.f64 e d) c)","c","-inf",0.177001953125],["(+.f64 (+.f64 e d) c)","c","inf",0.14501953125],["(+.f64 (+.f64 e d) c)","c","0",0.155029296875],["(+.f64 (+.f64 e d) c)","d","-inf",0.178955078125],["(+.f64 (+.f64 e d) c)","d","inf",0.155029296875],["(+.f64 (+.f64 e d) c)","d","0",0.18408203125],["(+.f64 (+.f64 e d) c)","e","-inf",0.15380859375],["(+.f64 (+.f64 e d) c)","e","inf",0.18408203125],["(+.f64 (+.f64 e d) c)","e","0",0.193115234375],["(+.f64 (+.f64 (+.f64 e d) c) b)","b","-inf",0.18310546875],["(+.f64 (+.f64 (+.f64 e d) c) b)","b","inf",0.244873046875],["(+.f64 (+.f64 (+.f64 e d) c) b)","b","0",0.18603515625],["(+.f64 (+.f64 (+.f64 e d) c) b)","c","-inf",0.205078125],["(+.f64 (+.f64 (+.f64 e d) c) b)","c","inf",0.2138671875],["(+.f64 (+.f64 (+.f64 e d) c) b)","c","0",0.2080078125],["(+.f64 (+.f64 (+.f64 e d) c) b)","d","-inf",0.208984375],["(+.f64 (+.f64 (+.f64 e d) c) b)","d","inf",0.274169921875],["(+.f64 (+.f64 (+.f64 e d) c) b)","d","0",0.18408203125],["(+.f64 (+.f64 (+.f64 e d) c) b)","e","-inf",0.241943359375],["(+.f64 (+.f64 (+.f64 e d) c) b)","e","inf",0.29296875],["(+.f64 (+.f64 (+.f64 e d) c) b)","e","0",1.096923828125]],"time":8.307861328125,"type":"series"},{"count":[[3,141]],"inputs":[["(+.f64 (+.f64 (+.f64 e d) c) b)","(+.f64 (+.f64 e d) c)","(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 e d) c) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 e d)) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 b (+.f64 e d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c e)) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b d) (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c e) (+.f64 d b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 e (+.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 (+.f64 d c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 0) (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 e d) c) b) (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (*.f64 (+.f64 e (+.f64 c b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e d) (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (*.f64 (+.f64 (+.f64 d c) b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (+.f64 e d)) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (+.f64 e d) c) b)) (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 e d) c) b) (*.f64 0 (+.f64 (+.f64 (+.f64 e d) c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c b) (+.f64 e d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b e) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 c b)) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d c) b) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d c) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (*.f64 (+.f64 b (+.f64 e d)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b e) 1) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 (+.f64 e d) c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (+.f64 (+.f64 e d) c) b)))) (+.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 e d) c) b)))) (+.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 (+.f64 e d) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 (+.f64 e d) c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 e d)) (cbrt.f64 (pow.f64 (+.f64 e d) 2)) (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 e d) (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 e d) c) b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e d) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 e d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c e) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 e d) c) 0) (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 e d) c) (*.f64 (+.f64 (+.f64 e d) c) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 c e) 1) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 e d) c)) (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 e d) c) (*.f64 0 (+.f64 (+.f64 e d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d c) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (*.f64 (+.f64 c e) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 e d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 e d) c)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 e d) 2)) (-.f64 (cbrt.f64 (*.f64 c c)) (cbrt.f64 (*.f64 (+.f64 e d) c)))) (+.f64 (cbrt.f64 (+.f64 e d)) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 c c)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 e d) 2)) (cbrt.f64 (*.f64 (+.f64 e d) c)))) (+.f64 (cbrt.f64 c) (cbrt.f64 (+.f64 e d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)) (cbrt.f64 (+.f64 (+.f64 e d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 e d) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 e d) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 e d) c) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 e d) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 e d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (cbrt.f64 (*.f64 c c)) (+.f64 e d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 e) (cbrt.f64 (*.f64 e e)) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 e d)) (cbrt.f64 (pow.f64 (+.f64 e d) 2)) c)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 e (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 e d) c)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 c (+.f64 e d))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 (+.f64 e d) c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 a (+.f64 (+.f64 e d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) (+.f64 c e)) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 b (+.f64 e d))) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a c) (+.f64 b (+.f64 e d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 (+.f64 c e) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 (+.f64 e d) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c e) (+.f64 d (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 (+.f64 e (+.f64 c b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e d) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 e d)) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 (+.f64 b a) (+.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 0) (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) (*.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) (*.f64 0 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (*.f64 (+.f64 (+.f64 e d) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 e d) c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e d) (*.f64 (+.f64 b (+.f64 c a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (+.f64 (+.f64 e d) c)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (*.f64 (+.f64 (+.f64 b a) (+.f64 d c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) (+.f64 (+.f64 e d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 e d)) (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 e d) (+.f64 b a)) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) (+.f64 e d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) (+.f64 d c)) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c b) (+.f64 a (+.f64 e d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a e) (+.f64 (+.f64 d c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 b e)) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a d) (+.f64 e (+.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d c) (+.f64 e (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b e) (+.f64 (+.f64 d c) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (+.f64 a (+.f64 (+.f64 e d) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (+.f64 e d)) 1) (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 a a)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))) (+.f64 (cbrt.f64 a) (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) (-.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))) (+.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 2)) (cbrt.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 a a)) (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 e d) c)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 e d) c) 2)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (+.f64 (+.f64 (+.f64 e d) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 e d) c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 (+.f64 e d) c) b) a)))))"]],"rules":[["egg-rr",61],["egg-rr",34],["egg-rr",46]],"time":31.2841796875,"type":"rewrite"},{"count":[[285,160]],"inputs":[["(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","e","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","e","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 b e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","d","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","d","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 d (+.f64 b e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","c","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","c","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","b","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","b","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c d)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","e","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","e","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c e)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","d","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","d","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 d e)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","c","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","c","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 c (+.f64 d b))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","e","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","e","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 b e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","d","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","d","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 d (+.f64 b e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","c","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","c","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","b","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","b","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c d)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","e","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","e","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c e)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","d","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","d","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 d e)","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","c","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","c","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 d e))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 (+.f64 a d) (+.f64 c b))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))"]],"time":415.343994140625,"type":"simplify"},{"compiler":[[1937,524]],"time":16.764892578125,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))","fresh",0.203125],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","next",0.19140625],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) (-.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))) (+.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (cbrt.f64 a)))","fresh",0.6550751953688405],["(+.f64 d (+.f64 (+.f64 e (+.f64 c b)) a))","fresh",0.23113251953688402],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","fresh",0.19921875],["(+.f64 (+.f64 e d) (+.f64 b (+.f64 c a)))","fresh",0.25],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","done",0.38804628907376815]],"compiler":[[14,9],[14,9],[43,21],[14,9],[14,9],[14,9],[14,9],[14,9],[14,9],[43,21],[14,9],[14,9],[14,9]],"count":[[161,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[160,6],"picked":[1,1]}],"min-error":[0],"time":44.4951171875,"type":"prune"},{"compiler":[[34,9]],"locations":[["(+.f64 e (+.f64 b (+.f64 c a)))",0.15625,true],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))",0.16015625,true],["(+.f64 b (+.f64 c a))",0.22265625,true]],"time":5.92578125,"type":"localize"},{"count":[[3,144]],"series":[["(+.f64 e (+.f64 b (+.f64 c a)))","a","-inf",0.18701171875],["(+.f64 e (+.f64 b (+.f64 c a)))","a","inf",0.158935546875],["(+.f64 e (+.f64 b (+.f64 c a)))","a","0",0.18505859375],["(+.f64 e (+.f64 b (+.f64 c a)))","c","-inf",0.156005859375],["(+.f64 e (+.f64 b (+.f64 c a)))","c","inf",0.159912109375],["(+.f64 e (+.f64 b (+.f64 c a)))","c","0",0.19287109375],["(+.f64 e (+.f64 b (+.f64 c a)))","b","-inf",0.1640625],["(+.f64 e (+.f64 b (+.f64 c a)))","b","inf",0.18701171875],["(+.f64 e (+.f64 b (+.f64 c a)))","b","0",0.1669921875],["(+.f64 e (+.f64 b (+.f64 c a)))","e","-inf",0.16015625],["(+.f64 e (+.f64 b (+.f64 c a)))","e","inf",0.18603515625],["(+.f64 e (+.f64 b (+.f64 c a)))","e","0",0.1689453125],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","a","-inf",0.184814453125],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","a","inf",0.174072265625],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","a","0",0.1572265625],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","c","-inf",0.17919921875],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","c","inf",0.1669921875],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","c","0",0.177978515625],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","b","-inf",0.156005859375],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","b","inf",0.156982421875],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","b","0",0.176025390625],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","e","-inf",0.157958984375],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","e","inf",0.18798828125],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","e","0",0.152099609375],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","d","-inf",0.155029296875],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","d","inf",0.182861328125],["(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","d","0",0.160888671875],["(+.f64 b (+.f64 c a))","a","-inf",0.19287109375],["(+.f64 b (+.f64 c a))","a","inf",0.157958984375],["(+.f64 b (+.f64 c a))","a","0",0.161865234375],["(+.f64 b (+.f64 c a))","c","-inf",0.18603515625],["(+.f64 b (+.f64 c a))","c","inf",0.156005859375],["(+.f64 b (+.f64 c a))","c","0",0.193115234375],["(+.f64 b (+.f64 c a))","b","-inf",0.173095703125],["(+.f64 b (+.f64 c a))","b","inf",0.162109375],["(+.f64 b (+.f64 c a))","b","0",0.236083984375]],"time":6.569091796875,"type":"series"},{"count":[[3,174]],"inputs":[["(+.f64 b (+.f64 c a))","(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","(+.f64 e (+.f64 b (+.f64 c a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (cbrt.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (+.f64 c a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2)) (cbrt.f64 (*.f64 b (+.f64 c a))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2)) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (+.f64 c a))))) (+.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (+.f64 c a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b c)) (pow.f64 (cbrt.f64 (+.f64 b c)) 2) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (cbrt.f64 (*.f64 c c)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c c)) (cbrt.f64 c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 a) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 a) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 a a)) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2)) (cbrt.f64 (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c a) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b c) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 c (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c 1 (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 1 (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b c) 1 a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) 1 b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 b (+.f64 c a))) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e b) (+.f64 (+.f64 c a) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c a) d) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) a) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) (+.f64 b a)) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) (+.f64 b c)) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 d e) b) a) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 a (+.f64 e b))) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d b) (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 e b)) (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 (+.f64 e (+.f64 c a)) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) (+.f64 (+.f64 a e) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 c a)) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) (+.f64 a (+.f64 d e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) (+.f64 c (+.f64 d e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 (+.f64 b a) (+.f64 d e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 e (+.f64 (+.f64 c a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 (+.f64 c a) d)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 (+.f64 d e) (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (+.f64 (+.f64 d e) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 b c)) (+.f64 a e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 b c)) (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (neg.f64 d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 d) (neg.f64 (+.f64 e (+.f64 b (+.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))) (cbrt.f64 (pow.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 d d)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) (cbrt.f64 (*.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))) (+.f64 (cbrt.f64 d) (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) (-.f64 (cbrt.f64 (*.f64 d d)) (cbrt.f64 (*.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))) (+.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (cbrt.f64 d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 2)) (cbrt.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 d (+.f64 e (+.f64 b (+.f64 c a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (cbrt.f64 (*.f64 d d)) (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 d e)) (pow.f64 (cbrt.f64 (+.f64 d e)) 2) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d d)) (cbrt.f64 d) (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 d) (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 e e)) (cbrt.f64 e) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 e) (cbrt.f64 (*.f64 e e)) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 e) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 e (+.f64 b (+.f64 c a)))) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 e b)) (pow.f64 (cbrt.f64 (+.f64 e b)) 2) (+.f64 (+.f64 c a) d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 e (+.f64 b (+.f64 c a))) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 d e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d 1 (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d e) 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b (+.f64 c a)) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (+.f64 c a)) 1 (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 e (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 e 1 (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 e (+.f64 b (+.f64 c a))) 1 d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 e b) (+.f64 (+.f64 c a) d))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (+.f64 e b)) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) (+.f64 a e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 a (+.f64 e b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a e) (+.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 b c)) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e c) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 (+.f64 b a) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 e (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 e (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 e (+.f64 b (+.f64 c a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 e e)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (cbrt.f64 (*.f64 e (+.f64 b (+.f64 c a)))))) (+.f64 (cbrt.f64 e) (cbrt.f64 (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (-.f64 (cbrt.f64 (*.f64 e e)) (cbrt.f64 (*.f64 e (+.f64 b (+.f64 c a)))))) (+.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (cbrt.f64 e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 e (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 e (+.f64 b (+.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 e (+.f64 b (+.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 e (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 e) (cbrt.f64 (*.f64 e e)) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b c)) (pow.f64 (cbrt.f64 (+.f64 b c)) 2) (+.f64 a e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2)) (cbrt.f64 (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c a)) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2)) (cbrt.f64 (+.f64 c a)) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 e e)) (cbrt.f64 e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 e b)) (pow.f64 (cbrt.f64 (+.f64 e b)) 2) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b (+.f64 c a)) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 e (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b c) (+.f64 a e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 e b) 1 (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (+.f64 c a)) 1 e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) 1 (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c a) (+.f64 e b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 e 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 e b) (+.f64 c a))))))"]],"rules":[["egg-rr",56],["egg-rr",73],["egg-rr",45]],"time":31.81005859375,"type":"rewrite"},{"count":[[318,194]],"inputs":[["(+.f64 c a)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","b","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","b","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 a b)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","c","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","c","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c b)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","a","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","a","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","e","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","e","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","b","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","b","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 a (+.f64 b e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","c","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","c","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 b e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","a","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","a","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 c a)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","b","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","b","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 a b)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","c","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","c","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c b)","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","a","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","a","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 a (+.f64 c (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 a (+.f64 c (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a b))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","e","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","e","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","b","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","b","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 a (+.f64 b e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","c","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","c","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 b e))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","a","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","a","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 b e)))"]],"time":418.760986328125,"type":"simplify"},{"compiler":[[2286,621]],"time":21.487060546875,"type":"eval"},{"alts":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","next",0.1796875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","fresh",0.19921875],["(+.f64 d (+.f64 (+.f64 e c) (+.f64 b a)))","fresh",0.19140625],["(+.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))","fresh",0.203125],["(fma.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) d)","fresh",0.36328125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","done",0.38804628907376815]],"compiler":[[21,13],[14,9],[14,9],[14,9],[25,13],[14,9],[21,13],[14,9],[14,9],[14,9],[25,13]],"count":[[201,6]],"kept":[{"done":[1,1],"fresh":[5,2],"new":[194,3],"picked":[1,0]}],"min-error":[0],"time":63.448974609375,"type":"prune"},{"compiler":[[71,28]],"locations":[["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))",0.15625,true],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))",0.16015625,true],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)",0.234375,true],["(pow.f64 (+.f64 c a) 2)",0.4655075195368841,true]],"time":16.421875,"type":"localize"},{"count":[[4,132]],"series":[["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","b","-inf",0.154052734375],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","b","inf",0.216064453125],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","b","0",0.166015625],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","a","-inf",0.221923828125],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","a","inf",0.199951171875],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","a","0",0.39306640625],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","c","-inf",0.200927734375],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","c","inf",0.23388671875],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","c","0",0.484130859375],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","e","-inf",0.1669921875],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","e","inf",0.18798828125],["(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))","e","0",0.16796875],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","b","-inf",0.217041015625],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","b","inf",0.184814453125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","b","0",0.22802734375],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","a","-inf",0.223876953125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","a","inf",0.260009765625],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","a","0",0.47705078125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","c","-inf",0.216796875],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","c","inf",0.256103515625],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","c","0",0.47705078125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","e","-inf",0.18310546875],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","e","inf",0.19091796875],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","e","0",0.845947265625],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","d","-inf",0.205078125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","d","inf",0.180908203125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","d","0",0.8720703125],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","b","-inf",0.27001953125],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","b","inf",0.173095703125],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","b","0",1.73193359375],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","a","-inf",0.3359375],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","a","inf",0.333984375],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","a","0",1.822998046875],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","c","-inf",0.31396484375],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","c","inf",0.51611328125],["(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","c","0",1.89697265625],["(pow.f64 (+.f64 c a) 2)","a","-inf",0.27490234375],["(pow.f64 (+.f64 c a) 2)","a","inf",0.2529296875],["(pow.f64 (+.f64 c a) 2)","a","0",0.218994140625],["(pow.f64 (+.f64 c a) 2)","c","-inf",0.302001953125],["(pow.f64 (+.f64 c a) 2)","c","inf",0.2451171875],["(pow.f64 (+.f64 c a) 2)","c","0",0.424072265625]],"time":17.586181640625,"type":"series"},{"count":[[4,191]],"inputs":[["(pow.f64 (+.f64 c a) 2)","(fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)","(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","(+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 c a) c) (*.f64 (+.f64 c a) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 c a) a) (*.f64 (+.f64 c a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 c a) 2) 0) (pow.f64 (+.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 c a) 2) (*.f64 (pow.f64 (+.f64 c a) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 c a) c) 1) (*.f64 (*.f64 (+.f64 c a) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 c a) a) 1) (*.f64 (*.f64 (+.f64 c a) c) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 c a) 2)) (pow.f64 (+.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 c a) 2) (*.f64 0 (pow.f64 (+.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 c a) c)) (*.f64 (+.f64 c a) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 c a) a) (*.f64 1 (*.f64 (+.f64 c a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 c a) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 4)) (pow.f64 (+.f64 c a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 c a)) (neg.f64 (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 c a) 2/3) (cbrt.f64 (pow.f64 (+.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 c a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 c a) (+.f64 2/3 1)) (cbrt.f64 (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (+.f64 c a))) (*.f64 1 (neg.f64 (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (+.f64 c a)) 1) (*.f64 (neg.f64 (+.f64 c a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (+.f64 c a) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 4)) (pow.f64 (+.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 4)) (pow.f64 (+.f64 c a) 4))) (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) (+.f64 2 3)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 c a)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 c a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (+.f64 c a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (+.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 c a) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) c (*.f64 (+.f64 c a) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 c a) (*.f64 (+.f64 c a) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 c a) (*.f64 (+.f64 c a) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) a (*.f64 (+.f64 c a) c))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b c) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (+.f64 c a)) 0) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) (*.f64 (+.f64 b (+.f64 c a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (+.f64 c a))) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) (*.f64 0 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (+.f64 c a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (pow.f64 (+.f64 b (+.f64 c a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 2/3) (-.f64 (pow.f64 (+.f64 c a) 2/3) (*.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 c a))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 c a) 2/3) (-.f64 (pow.f64 b 2/3) (*.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 b)))) (+.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (cbrt.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (+.f64 c a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (+.f64 c a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (+.f64 c a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) 2/3) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 c a) 2/3) (cbrt.f64 (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c a) (+.f64 2/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) 4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 b 2/3) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c a) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 c a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c a) (+.f64 b e)) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 e (+.f64 c a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 d (+.f64 e (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 c a)) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d e) b) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 c a)) (+.f64 b d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (+.f64 (+.f64 b e) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (+.f64 b (+.f64 d e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 0) (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) (*.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d (+.f64 e (+.f64 c a))) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d (+.f64 b (+.f64 c a))) 1) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) (*.f64 0 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (*.f64 (+.f64 d (+.f64 b (+.f64 c a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) (pow.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 d 2/3) (-.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3) (cbrt.f64 (*.f64 d (+.f64 (+.f64 c a) (+.f64 b e)))))) (+.f64 (cbrt.f64 d) (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3) (-.f64 (pow.f64 d 2/3) (cbrt.f64 (*.f64 d (+.f64 (+.f64 c a) (+.f64 b e)))))) (+.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) (cbrt.f64 d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 2/3) (cbrt.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (pow.f64 d 2/3) (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 d e)) (cbrt.f64 (pow.f64 (+.f64 d e) 2)) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (+.f64 c a) (+.f64 b e))) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3) (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 e 2/3) (cbrt.f64 e) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 e) (pow.f64 e 2/3) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 e) (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (cbrt.f64 (+.f64 b (+.f64 c a))) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 d) (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 d 2/3) (cbrt.f64 d) (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 c a) (+.f64 b e)) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d e) 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 d e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 1 d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 e 1 (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 e (+.f64 d (+.f64 b (+.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b (+.f64 c a)) (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (+.f64 c a)) 1 (+.f64 d e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d 1 (+.f64 (+.f64 c a) (+.f64 b e)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 c a)) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 e (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b e) (+.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 a (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 c (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 0) (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c a) (+.f64 b e)) (*.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 c a) (+.f64 b e))) (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c a) (+.f64 b e)) (*.f64 0 (+.f64 (+.f64 c a) (+.f64 b e))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 e (+.f64 c a)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c a) (*.f64 (+.f64 b e) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 e 2/3) (-.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (cbrt.f64 (*.f64 e (+.f64 b (+.f64 c a)))))) (+.f64 (cbrt.f64 e) (cbrt.f64 (+.f64 b (+.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (-.f64 (pow.f64 e 2/3) (cbrt.f64 (*.f64 e (+.f64 b (+.f64 c a)))))) (+.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (cbrt.f64 e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 2/3) (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 c a) (+.f64 b e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 c a) (+.f64 b e))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 c a) (+.f64 b e))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 c a) (+.f64 b e))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 c a) (+.f64 b e))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 c a) (+.f64 b e)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 e) (pow.f64 e 2/3) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b (+.f64 c a))) (pow.f64 (+.f64 b (+.f64 c a)) 2/3) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 c a) 2/3) (cbrt.f64 (+.f64 c a)) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 c a) (+.f64 2/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) 4) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) 2/3) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 c a)) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 e 2/3) (cbrt.f64 e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 e) (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 b (+.f64 c a)) 2/3) (cbrt.f64 (+.f64 b (+.f64 c a))) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 e (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b (+.f64 c a)) e)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c a) 1 (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c a) (+.f64 b e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 e 1 (+.f64 b (+.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (+.f64 c a)) 1 e)))))"]],"rules":[["egg-rr",47],["egg-rr",60],["egg-rr",38],["egg-rr",46]],"time":37.35986328125,"type":"rewrite"},{"count":[[323,268]],"inputs":[["(pow.f64 a 2)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(pow.f64 c 2)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(pow.f64 c 2)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(pow.f64 c 2)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(pow.f64 a 2)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(pow.f64 a 2)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 (pow.f64 1 1/3) a) b)","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (*.f64 (pow.f64 1 1/3) a)))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (*.f64 (pow.f64 1 1/3) a))))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3)))))))))))","b","b","(+.f64 b (*.f64 c (pow.f64 1 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (*.f64 c (pow.f64 1 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))","b","b","(*.f64 (pow.f64 1 1/3) (+.f64 c a))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","d","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","d","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 d (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e))))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e)))))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b (+.f64 e (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3)))))))))))))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) e)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 d (+.f64 b (+.f64 e (*.f64 c (pow.f64 1 1/3))))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 d (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 d (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","b","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e))","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e))))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3))))))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))))","(+.f64 b e)","(+.f64 b e)","(+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) e))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 e (*.f64 c (pow.f64 1 1/3)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))))","(+.f64 b e)","(+.f64 b e)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) e)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 a 2)","(*.f64 a a)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(*.f64 a (+.f64 (*.f64 2 c) a))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (*.f64 c c) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (*.f64 c c) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a)))","(+.f64 (*.f64 c c) (*.f64 2 (*.f64 c a)))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(pow.f64 a 2)","(*.f64 a a)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(*.f64 a (+.f64 (*.f64 2 c) a))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(pow.f64 a 2)","(*.f64 a a)","(+.f64 (pow.f64 a 2) (*.f64 2 (*.f64 c a)))","(*.f64 a (+.f64 (*.f64 2 c) a))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (pow.f64 a 2) (+.f64 (pow.f64 c 2) (*.f64 2 (*.f64 c a))))","(+.f64 (*.f64 a (+.f64 (*.f64 2 c) a)) (*.f64 c c))","(+.f64 (*.f64 (pow.f64 1 1/3) a) b)","(+.f64 a b)","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (*.f64 (pow.f64 1 1/3) a)))","(fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 a b))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (*.f64 (pow.f64 1 1/3) a))))","(fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 a b)))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3)))))))))))","(+.f64 (fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 a b))) (*.f64 (pow.f64 c 3) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (pow.f64 a -14) 1/9))) (fma.f64 -2/27 (pow.f64 (pow.f64 a -2) 1/9) (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 1/27 -2/9)) (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (/.f64 1 a) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 a 5)))) a)))))))","b","b","(+.f64 b (*.f64 c (pow.f64 1 1/3)))","(+.f64 b c)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (*.f64 c (pow.f64 1 1/3))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 b c))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))","(+.f64 (fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 b c)) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (fma.f64 (fma.f64 -1/3 (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (/.f64 1 c) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 c 5)))) c) (fma.f64 -2/27 (pow.f64 (pow.f64 c -2) 1/9) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (pow.f64 c -14) 1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 c -2)) (+.f64 1/27 -2/9)))))) (pow.f64 a 3) (+.f64 (+.f64 b c) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a)))))","b","b","(*.f64 (pow.f64 1 1/3) (+.f64 c a))","(+.f64 c a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","d","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","d","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b))","(+.f64 (+.f64 d b) (+.f64 c a))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))","(+.f64 (+.f64 d (+.f64 b e)) a)","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e))))","(fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 (+.f64 d (+.f64 b e)) a))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e)))))","(fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 (+.f64 d (+.f64 b e)) a)))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b (+.f64 e (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3)))))))))))))","(+.f64 (fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (fma.f64 (pow.f64 c 3) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (pow.f64 a -14) 1/9))) (fma.f64 -2/27 (pow.f64 (pow.f64 a -2) 1/9) (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 1/27 -2/9)) (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (/.f64 1 a) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 a 5)))) a))))) (+.f64 a (+.f64 b e))))) d)","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) e)))","(+.f64 (+.f64 d (+.f64 b e)) c)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 d (+.f64 b (+.f64 e (*.f64 c (pow.f64 1 1/3))))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 (+.f64 d (+.f64 b e)) c))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 d (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))))","(+.f64 (+.f64 (fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 (+.f64 b e) c)) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a))) d)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 d (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (fma.f64 (fma.f64 -1/3 (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (/.f64 1 c) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 c 5)))) c) (fma.f64 -2/27 (pow.f64 (pow.f64 c -2) 1/9) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (pow.f64 c -14) 1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 c -2)) (+.f64 1/27 -2/9)))))) (pow.f64 a 3) (+.f64 (+.f64 (+.f64 c e) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a))) (+.f64 d b))))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 b e))","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) e))","(+.f64 (+.f64 (+.f64 d c) a) e)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","b","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 d (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 d (+.f64 b e)))","(+.f64 (+.f64 (+.f64 d (+.f64 b e)) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) b)","(+.f64 (+.f64 b c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","e","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) a) (+.f64 b e))","(+.f64 a (+.f64 b e))","(+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))","(fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 a (+.f64 b e)))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e))))","(fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (+.f64 a (+.f64 b e))))","(+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))) a))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 1/3))) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9))))) (+.f64 (*.f64 c (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 a 8)) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 a 4)) 1/9)))) (+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/9)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 a) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 a 16)) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 1 (pow.f64 a 5)) 1/3))) a) (pow.f64 1 1/3))))))) (+.f64 b (+.f64 (*.f64 (pow.f64 1 1/3) a) e)))))","(fma.f64 (*.f64 c c) (fma.f64 1/3 (/.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (neg.f64 a)) (fma.f64 2/9 (cbrt.f64 a) (*.f64 -1/9 (pow.f64 (/.f64 1 a) 1/9)))) (fma.f64 c (fma.f64 2/3 (pow.f64 (pow.f64 a 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 a 4) 1/9))) (fma.f64 (pow.f64 c 3) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (pow.f64 a -14) 1/9))) (fma.f64 -2/27 (pow.f64 (pow.f64 a -2) 1/9) (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 1/27 -2/9)) (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 a 16) 1/9) -1) (pow.f64 (/.f64 1 a) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 a 5)))) a))))) (+.f64 a (+.f64 b e)))))","(+.f64 b e)","(+.f64 b e)","(+.f64 b (+.f64 (*.f64 c (pow.f64 1 1/3)) e))","(+.f64 (+.f64 b e) c)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 e (*.f64 c (pow.f64 1 1/3)))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 (+.f64 b e) c))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2))))))","(+.f64 (fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (+.f64 (+.f64 b e) c)) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 c 8) 1) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 c 4) 1) 1/9))) a) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 c) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 8/27 (pow.f64 (*.f64 (pow.f64 c 5) 1) 1/3))) c) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/9)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 14)) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 c 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 a 3)) (+.f64 b (+.f64 e (+.f64 (*.f64 c (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 (pow.f64 c 16) 1) 1/9))) c) (pow.f64 1 1/3))))) (pow.f64 a 2)))))))","(fma.f64 (fma.f64 2/3 (pow.f64 (pow.f64 c 8) 1/9) (*.f64 1/3 (pow.f64 (pow.f64 c 4) 1/9))) a (fma.f64 (fma.f64 -1/3 (/.f64 (fma.f64 4/3 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (/.f64 1 c) 1/9))) (*.f64 8/27 (cbrt.f64 (pow.f64 c 5)))) c) (fma.f64 -2/27 (pow.f64 (pow.f64 c -2) 1/9) (fma.f64 1/9 (neg.f64 (*.f64 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1) (pow.f64 (pow.f64 c -14) 1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 c -2)) (+.f64 1/27 -2/9)))))) (pow.f64 a 3) (+.f64 (+.f64 (+.f64 b c) (*.f64 (fma.f64 -1/9 (pow.f64 (/.f64 1 c) 1/9) (fma.f64 2/9 (cbrt.f64 c) (/.f64 (*.f64 1/3 (fma.f64 4/3 (pow.f64 (pow.f64 c 16) 1/9) -1)) (neg.f64 c)))) (*.f64 a a))) e)))","(+.f64 b e)","(+.f64 b e)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) e)","(+.f64 (+.f64 c e) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","b","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 c a)) (+.f64 b e))","(+.f64 (+.f64 (+.f64 b e) c) a)"]],"time":493.242919921875,"type":"simplify"},{"compiler":[[6290,3471]],"time":68.482177734375,"type":"eval"},{"alts":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","done",0.1796875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","next",0.19921875],["(+.f64 d (fma.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) 2/3) (+.f64 b e)))","fresh",0.20703125],["(+.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))","fresh",0.203125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4) b)))","fresh",0.21875],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","done",0.38804628907376815]],"compiler":[[21,13],[14,9],[20,12],[14,9],[24,16],[14,9],[14,9],[20,12],[14,9],[24,16]],"count":[[274,6]],"kept":[{"done":[1,1],"fresh":[4,2],"new":[268,2],"picked":[1,1]}],"min-error":[0],"time":87.638916015625,"type":"prune"},{"compiler":[[30,9]],"locations":[["(+.f64 (+.f64 b a) d)",0.15625,true],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))",0.203125,true]],"time":5.8349609375,"type":"localize"},{"count":[[2,96]],"series":[["(+.f64 (+.f64 b a) d)","d","-inf",0.151123046875],["(+.f64 (+.f64 b a) d)","d","inf",0.154052734375],["(+.f64 (+.f64 b a) d)","d","0",0.1669921875],["(+.f64 (+.f64 b a) d)","a","-inf",0.150146484375],["(+.f64 (+.f64 b a) d)","a","inf",0.1630859375],["(+.f64 (+.f64 b a) d)","a","0",0.18798828125],["(+.f64 (+.f64 b a) d)","b","-inf",0.18798828125],["(+.f64 (+.f64 b a) d)","b","inf",0.175048828125],["(+.f64 (+.f64 b a) d)","b","0",0.16796875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","e","-inf",0.182861328125],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","e","inf",0.157958984375],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","e","0",0.155029296875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","c","-inf",0.18115234375],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","c","inf",0.1591796875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","c","0",0.156982421875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","d","-inf",0.176025390625],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","d","inf",0.166015625],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","d","0",0.175048828125],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","a","-inf",0.163818359375],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","a","inf",0.1650390625],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","a","0",0.175048828125],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","b","-inf",0.1689453125],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","b","inf",0.195068359375],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","b","0",0.219970703125]],"time":4.359130859375,"type":"series"},{"count":[[2,90]],"inputs":[["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","(+.f64 (+.f64 b a) d)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 c e) (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c e) (+.f64 b a)) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 b a) d) e) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 (+.f64 c e) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (+.f64 (+.f64 (+.f64 b a) d) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c e) (+.f64 d b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c e) a) (+.f64 d b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e (+.f64 b a)) (+.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d e) (+.f64 (+.f64 b a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 b (+.f64 d (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d c) (+.f64 e (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 d (+.f64 a (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d b) (+.f64 a (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) (*.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 0) (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) (*.f64 0 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 c e) (+.f64 b a)) 1) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (+.f64 d (+.f64 a (+.f64 c e))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (*.f64 (+.f64 b (+.f64 d (+.f64 c e))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 b a) d) c) e)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 c (*.f64 (+.f64 (+.f64 (+.f64 b a) d) e) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) (+.f64 d (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 e (+.f64 (+.f64 (+.f64 b a) d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 c e)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 c e) b) (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d (+.f64 a (+.f64 c e))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (+.f64 d (+.f64 c e))) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a d) (+.f64 (+.f64 c e) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 e b) (+.f64 d (+.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (*.f64 (+.f64 (+.f64 c e) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (+.f64 b a) d) e) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 c e) b) 1) (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 c e) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))) (+.f64 (cbrt.f64 (+.f64 c e)) (cbrt.f64 (+.f64 (+.f64 b a) d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 c e) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))) (+.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) (cbrt.f64 (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 2)) (cbrt.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c e)) (cbrt.f64 (pow.f64 (+.f64 c e) 2)) (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b a)) (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (+.f64 d (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 2)) (+.f64 c e))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 c e) (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b a) (+.f64 d (+.f64 c e)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 b a) d) (+.f64 c e))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b a) d)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d b) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (+.f64 d b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) d) (*.f64 (+.f64 (+.f64 b a) d) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 b a) d) 0) (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 b a) d) (*.f64 0 (+.f64 (+.f64 b a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 b a) d)) (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (*.f64 (+.f64 d b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a d) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d b) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 b a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 b a) d)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (-.f64 (cbrt.f64 (*.f64 d d)) (cbrt.f64 (*.f64 (+.f64 b a) d)))) (+.f64 (cbrt.f64 (+.f64 b a)) (cbrt.f64 d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 d d)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2)) (cbrt.f64 (*.f64 (+.f64 b a) d)))) (+.f64 (cbrt.f64 d) (cbrt.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 2)) (cbrt.f64 (+.f64 (+.f64 b a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 b a) d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 b a) d) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 b a) d) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 b a) d) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 b a) d)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 b a) d) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 b a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 b a) d) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (cbrt.f64 (*.f64 d d)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b a)) (cbrt.f64 (pow.f64 (+.f64 b a) 2)) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (+.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 b a) d)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d (+.f64 b a))))))"]],"rules":[["egg-rr",34],["egg-rr",56]],"time":27.016845703125,"type":"rewrite"},{"count":[[186,106]],"inputs":[["(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a d)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","b","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","b","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 d b)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","a","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","a","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a b)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","d","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","d","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 c (+.f64 a (+.f64 d e)))","(+.f64 a (+.f64 c (+.f64 d e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","b","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","a","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","d","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a (+.f64 d (+.f64 b e)))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","c","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d b)))","(+.f64 a (+.f64 (+.f64 d b) c))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","e","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 c (+.f64 a (+.f64 d (+.f64 b e))))","(+.f64 a d)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","b","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","b","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 d b)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","a","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","a","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a b)","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","d","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","d","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))","(+.f64 a (+.f64 d b))"]],"time":293.4111328125,"type":"simplify"},{"compiler":[[1263,313]],"time":10.77685546875,"type":"eval"},{"alts":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","done",0.1796875],["(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","done",0.19921875],["(+.f64 d (fma.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) 2/3) (+.f64 b e)))","fresh",0.20703125],["(+.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))","fresh",0.203125],["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4) b)))","fresh",0.21875],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)","done",0.38804628907376815]],"compiler":[[21,13],[14,9],[20,12],[14,9],[24,16],[14,9]],"count":[[112,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[106,0],"picked":[1,1]}],"min-error":[0],"time":24.885986328125,"type":"prune"},{"accuracy":[0.1796875],"baseline":[0.1796875],"branch":[["a",0.1796875,1],["b",0.1796875,1],["c",0.1796875,1],["d",0.1796875,1],["e",0.1796875,1],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)",0.1796875,1],["(+.f64 (+.f64 (+.f64 e d) c) b)",0.1796875,1],["(+.f64 (+.f64 (+.f64 e d) c) b)",0.1796875,1],["(+.f64 (+.f64 e d) c)",0.1796875,1],["(+.f64 (+.f64 e d) c)",0.1796875,1],["(+.f64 e d)",0.1796875,1],["(+.f64 e d)",0.1796875,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[12,8],[10,7],[10,7],[8,6],[8,6],[176,67]],"count":[[12,1]],"inputs":[["(+.f64 d (fma.f64 (cbrt.f64 (+.f64 c a)) (pow.f64 (+.f64 c a) 2/3) (+.f64 b e)))","(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 c a))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 c a) 2/3)) 4) b)))","(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","(+.f64 d (+.f64 (+.f64 e c) (+.f64 b a)))","(fma.f64 (cbrt.f64 (+.f64 e (+.f64 b (+.f64 c a)))) (cbrt.f64 (pow.f64 (+.f64 e (+.f64 b (+.f64 c a))) 2)) d)","(+.f64 (+.f64 (+.f64 b a) e) (+.f64 d c))","(+.f64 d (+.f64 e (+.f64 b (+.f64 c a))))","(*.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (+.f64 e d) c) b) 2)) (-.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)))) (+.f64 (cbrt.f64 (+.f64 (+.f64 (+.f64 e d) c) b)) (cbrt.f64 a)))","(+.f64 d (+.f64 (+.f64 e (+.f64 c b)) a))","(+.f64 (+.f64 (+.f64 b a) d) (+.f64 c e))","(+.f64 (+.f64 e d) (+.f64 b (+.f64 c a)))","(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)"]],"link":["."],"name":["Expression 1, p15"],"oracle":[0.9845277344426087],"outputs":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))"]],"time":61.897216796875,"times":[["a",4.89599609375],["b",4.80810546875],["c",4.93505859375],["d",4.869873046875],["e",4.751953125],["(+.f64 (+.f64 (+.f64 (+.f64 e d) c) b) a)",4.9130859375],["(+.f64 (+.f64 (+.f64 e d) c) b)",4.934814453125],["(+.f64 (+.f64 (+.f64 e d) c) b)",4.825927734375],["(+.f64 (+.f64 e d) c)",4.87890625],["(+.f64 (+.f64 e d) c)",4.81103515625],["(+.f64 e d)",4.887939453125],["(+.f64 e d)",4.9638671875]],"type":"regimes"},{"compiler":[[21,13]],"inputs":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 d (+.f64 e (fma.f64 (cbrt.f64 (+.f64 c a)) (cbrt.f64 (pow.f64 (+.f64 c a) 2)) b)))","(+.f64 (+.f64 d (+.f64 b (+.f64 c a))) e)"]],"stop":[["fuel",1]],"time":20.282958984375,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[21,13]],"remove-preprocessing":[[]],"time":9.97802734375,"type":"end"}]