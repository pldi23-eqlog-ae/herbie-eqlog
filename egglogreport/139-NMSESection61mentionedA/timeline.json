[{"compiler":[[32,26]],"method":["search"],"sampling":[[12,0.42878018121700734,0.13170722289942205,0.4395125958835706],[11,0.4282923766877502,0.1541462312452495,0.41756139206700027],[10,0.3570729154162109,0.2614632276818156,0.3814638569019735],[9,0.3551216972991824,0.30439002625644207,0.3404882764443755],[8,0.21073155663907528,0.5151215828955173,0.27414686046540737],[7,0.20292668417096138,0.5931703075766563,0.20390300825238228],[6,0.0,0.8741457164287567,0.1258542835712433],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":71.648193359375,"type":"analyze"},{"outcomes":[["body",512,"invalid",1.324951171875,8],["body",256,"invalid",68.0400390625,919],["body",1024,"invalid",5.32421875,20],["body",512,"valid",157.234375,1037],["body",1024,"valid",589.115234375,2101],["body",2048,"valid",113.873046875,248],["body",256,"valid",364.505126953125,4870]],"time":1309.997802734375,"type":"sample"},{"compiler":[[31,25]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 x)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 x) eps)))) (*.f64 (-.f64 (/.f64 1 x) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 x) eps))))) 2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(*.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (+.f64 1 (/.f64 -1 eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1/2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 x)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 x) eps)))) (*.f64 (-.f64 (/.f64 1 x) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 x) eps))))) 2)","(*.f64 (fma.f64 (+.f64 1 (/.f64 1 x)) (pow.f64 (/.f64 (exp.f64 x) (E.f64)) eps) (/.f64 (+.f64 (/.f64 -1 x) 1) (pow.f64 (*.f64 (exp.f64 x) (E.f64)) eps))) 1/2)"]],"symmetry":[[]],"time":71.045166015625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(*.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 eps -1) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1/2)"]],"time":25.225830078125,"type":"simplify"},{"compiler":[[57,41]],"time":0.730224609375,"type":"eval"},{"alts":[["(*.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 eps -1) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1/2)","fresh",48.13506838485097],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","next",30.27462146584641]],"compiler":[[28,18],[31,25],[28,18],[31,25]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[30.20520444559766],"time":1.972900390625,"type":"prune"},{"compiler":[[143,106]],"locations":[["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))",0.01171875,true],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))",0.01596665172363414,true],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))",0.01596665172363414,true],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.3566874811442404,true]],"time":35.241943359375,"type":"localize"},{"count":[[4,84]],"series":[["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","-inf",0.18994140625],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","inf",0.177978515625],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","0",0.31591796875],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","-inf",0.2080078125],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","inf",0.215087890625],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","0",0.30908203125],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","-inf",0.64892578125],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","inf",0.158935546875],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","0",0.2509765625],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","-inf",0.2998046875],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","inf",0.177001953125],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","0",0.244873046875],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","-inf",0.15380859375],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","inf",0.173095703125],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","0",0.22412109375],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","-inf",0.179931640625],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","inf",0.171875],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","0",0.298095703125],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","-inf",0.677001953125],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","inf",1.1259765625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","0",0.841064453125],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","-inf",0.88818359375],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","inf",0.6201171875],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","0",1.865966796875]],"time":10.84814453125,"type":"series"},{"count":[[4,231]],"inputs":[["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps)) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps) (+.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps) (-.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (-.f64 (/.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) eps) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 0) (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 0) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) eps)) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 2)) (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (-.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (/.f64 (+.f64 -1 eps) eps))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (/.f64 (+.f64 -1 eps) eps))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (/.f64 (+.f64 -1 eps) eps))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (+.f64 -1 eps) eps))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (/.f64 (+.f64 1 eps) eps))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 eps) eps) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (pow.f64 eps -3)))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 eps) eps) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 eps) eps) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (pow.f64 eps -3)))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (/.f64 (-.f64 1 eps) eps))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (/.f64 (-.f64 1 eps) eps))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (+.f64 1 (pow.f64 eps -3))) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (/.f64 (-.f64 1 eps) eps))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps)))) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (+.f64 (pow.f64 eps -3) -1))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (-.f64 1 eps) eps))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 eps -3)) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (*.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 -1 eps))) (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps) (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 2)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (+.f64 1 eps) eps) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) (*.f64 2 x))) (/.f64 (+.f64 1 eps) eps)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 1 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (+.f64 (/.f64 -1 eps) -1) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 2)) (cbrt.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 1 eps) eps) (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))) (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) (*.f64 2 x))) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 1 eps) eps)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 eps) eps) 2)) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (cbrt.f64 (/.f64 (+.f64 1 eps) eps))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 eps) eps) 2)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 0) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (*.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (*.f64 0 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 0 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) (neg.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) (*.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) (*.f64 2 x))) (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 -1 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) (*.f64 2 x))) (cbrt.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (E.f64) (exp.f64 eps)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (*.f64 (-.f64 1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (-.f64 1 eps))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 eps) 2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (+.f64 -1 eps) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (+.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (+.f64 -1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (+.f64 -1 eps) x))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 eps) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (E.f64) (exp.f64 eps)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (-.f64 1 eps) x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 eps) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) (-.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 eps) x) 2))) (cbrt.f64 (*.f64 (+.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 -1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (+.f64 -1 eps) x) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) 0) (exp.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (*.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (exp.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (*.f64 0 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 0 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 -1 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2)) (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (E.f64) (exp.f64 eps)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (*.f64 (+.f64 1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (-.f64 -1 eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 -1 eps) x) 2))) (cbrt.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (+.f64 1 eps) x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 -1 eps) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (-.f64 -1 eps) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (+.f64 1 eps))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (-.f64 -1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (-.f64 -1 eps) x))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 -1 eps) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (-.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 -1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (-.f64 -1 eps) x) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) eps) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) eps)) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 0) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) eps) 1) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (*.f64 0 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 eps -3) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (/.f64 1 (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (exp.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 eps -3) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (/.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (pow.f64 eps -3) -1)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 eps -3) -1)) 2) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 (/.f64 (-.f64 1 eps) eps) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) eps)) 1) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 (/.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (/.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) eps)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)) 1) (/.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2)) (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (cbrt.f64 (/.f64 (-.f64 1 eps) eps))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) eps)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) eps) 2)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2)) (/.f64 (-.f64 1 eps) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 eps) eps) (exp.f64 (*.f64 (-.f64 -1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (/.f64 (-.f64 1 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))) (/.f64 (+.f64 -1 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) eps) (neg.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 eps -3) -1) (/.f64 1 (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 eps -3) -1) (/.f64 1 (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (/.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 eps -3) -1) (/.f64 (exp.f64 (*.f64 (-.f64 -1 eps) x)) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 eps -3) -1) (/.f64 (/.f64 1 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps -3)) (neg.f64 (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 eps -3) -1) (*.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 eps -3) -1) (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 eps -3) -1) (/.f64 (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps -3)) (neg.f64 (*.f64 (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) eps) (neg.f64 (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (+.f64 (+.f64 (/.f64 -1 eps) -1) (neg.f64 (pow.f64 eps -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1) (+.f64 (pow.f64 eps -2) (/.f64 (+.f64 1 eps) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 -1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 1 eps) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x)) 3))))))"]],"rules":[["egg-rr",71],["egg-rr",41],["egg-rr",41],["egg-rr",78]],"time":56.65380859375,"type":"rewrite"},{"count":[[315,311]],"inputs":[["(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))) (*.f64 1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)))) (+.f64 (*.f64 -1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7))) (*.f64 -1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))))) (pow.f64 eps 6)) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","2","(+.f64 2 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2))))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (+.f64 (*.f64 (-.f64 (*.f64 1/6 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 3))) (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 3)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","1","(+.f64 1 (*.f64 (-.f64 eps 1) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (-.f64 eps 1) x)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (-.f64 eps 1) x) (*.f64 1/6 (*.f64 (pow.f64 (-.f64 eps 1) 3) (pow.f64 x 3))))))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 eps 1) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (pow.f64 (+.f64 eps 1) 3) (pow.f64 x 3))))))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(/.f64 (exp.f64 (neg.f64 x)) eps)","(+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))))))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (/.f64 1 eps) 1)","(-.f64 (+.f64 (/.f64 1 eps) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))) 1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x))))) 1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 3) (pow.f64 x 3)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))))) 1)","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (*.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (*.f64 1/2 (/.f64 (*.f64 x x) (exp.f64 x)))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (exp.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)))))) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (fma.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)) (*.f64 1/24 (/.f64 (pow.f64 x 4) (exp.f64 x)))) (fma.f64 -1/24 (/.f64 (pow.f64 x 4) (exp.f64 x)) (*.f64 -1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)))))) (+.f64 (*.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (*.f64 1/2 (/.f64 (*.f64 x x) (exp.f64 x)))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (exp.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)))))) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))) (*.f64 1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)))) (+.f64 (*.f64 -1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7))) (*.f64 -1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))))) (pow.f64 eps 6)) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (fma.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)) (*.f64 1/24 (/.f64 (pow.f64 x 4) (exp.f64 x)))) (fma.f64 -1/24 (/.f64 (pow.f64 x 4) (exp.f64 x)) (*.f64 -1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)))))) (*.f64 (-.f64 (fma.f64 1/720 (/.f64 (pow.f64 x 6) (exp.f64 x)) (*.f64 1/5040 (/.f64 (pow.f64 x 7) (exp.f64 x)))) (fma.f64 -1/5040 (/.f64 (pow.f64 x 7) (exp.f64 x)) (*.f64 -1/720 (/.f64 (pow.f64 x 6) (exp.f64 x))))) (pow.f64 eps 6))) (+.f64 (*.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (*.f64 1/2 (/.f64 (*.f64 x x) (exp.f64 x)))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (exp.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)))))) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))))","(+.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(+.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) eps) (exp.f64 (*.f64 (+.f64 eps -1) x))) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(+.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) eps) (exp.f64 (*.f64 (+.f64 eps -1) x))) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(+.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) eps) (exp.f64 (*.f64 (+.f64 eps -1) x))) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (-.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))) eps) (+.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (-.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))) eps) (+.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (-.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))) eps) (+.f64 (exp.f64 (*.f64 (+.f64 eps -1) x)) (exp.f64 (neg.f64 (fma.f64 eps x x)))))","2","(+.f64 2 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x))","(+.f64 2 (*.f64 (fma.f64 (+.f64 (/.f64 1 eps) 1) (+.f64 eps -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 1 eps))) x))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2))))","(+.f64 2 (fma.f64 (fma.f64 (+.f64 (/.f64 1 eps) 1) (+.f64 eps -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 1 eps))) x (*.f64 (*.f64 1/2 (+.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 eps -1) 2)) (*.f64 (-.f64 1 (/.f64 1 eps)) (pow.f64 (+.f64 1 eps) 2)))) (*.f64 x x))))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (+.f64 (*.f64 (-.f64 (*.f64 1/6 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 3))) (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 3)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2)))))","(+.f64 2 (fma.f64 (fma.f64 (+.f64 (/.f64 1 eps) 1) (+.f64 eps -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 1 eps))) x (fma.f64 (*.f64 1/6 (+.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 eps -1) 3)) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (+.f64 1 eps) 3)))) (pow.f64 x 3) (*.f64 (*.f64 1/2 (+.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 eps -1) 2)) (*.f64 (-.f64 1 (/.f64 1 eps)) (pow.f64 (+.f64 1 eps) 2)))) (*.f64 x x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(fma.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (*.f64 (+.f64 eps -1) x)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x))))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (exp.f64 (neg.f64 x)))","(fma.f64 eps (/.f64 x (exp.f64 x)) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(fma.f64 eps (/.f64 x (exp.f64 x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 eps eps) (exp.f64 x)) (*.f64 x x)) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (exp.f64 (neg.f64 x)))))","(fma.f64 eps (/.f64 x (exp.f64 x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 eps eps) (exp.f64 x)) (*.f64 x x)) (fma.f64 1/6 (*.f64 (/.f64 (pow.f64 eps 3) (exp.f64 x)) (pow.f64 x 3)) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (+.f64 eps -1) x))","1","(+.f64 1 (*.f64 (-.f64 eps 1) x))","(+.f64 1 (*.f64 (+.f64 eps -1) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (-.f64 eps 1) x)))","(fma.f64 1/2 (pow.f64 (*.f64 (+.f64 eps -1) x) 2) (+.f64 1 (*.f64 (+.f64 eps -1) x)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (-.f64 eps 1) x) (*.f64 1/6 (*.f64 (pow.f64 (-.f64 eps 1) 3) (pow.f64 x 3))))))","(fma.f64 1/2 (pow.f64 (*.f64 (+.f64 eps -1) x) 2) (+.f64 1 (fma.f64 (+.f64 eps -1) x (*.f64 1/6 (pow.f64 (*.f64 (+.f64 eps -1) x) 3)))))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (+.f64 eps -1) x))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (exp.f64 (neg.f64 x)))","(-.f64 (exp.f64 (neg.f64 x)) (*.f64 (/.f64 eps (exp.f64 x)) x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 eps eps) (exp.f64 x)) (*.f64 x x)) (exp.f64 (neg.f64 x))) (*.f64 (/.f64 eps (exp.f64 x)) x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x)))))","(-.f64 (fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 eps 3) (exp.f64 x)) (pow.f64 x 3)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 eps eps) (exp.f64 x)) (*.f64 x x)) (exp.f64 (neg.f64 x)))) (*.f64 (/.f64 eps (exp.f64 x)) x))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 eps 1) x)))","(-.f64 1 (fma.f64 eps x x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2)))))","(+.f64 (-.f64 1 (fma.f64 eps x x)) (*.f64 1/2 (pow.f64 (fma.f64 eps x x) 2)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (pow.f64 (+.f64 eps 1) 3) (pow.f64 x 3))))))","(+.f64 (-.f64 1 (fma.f64 eps x x)) (fma.f64 1/2 (pow.f64 (fma.f64 eps x x) 2) (*.f64 -1/6 (pow.f64 (fma.f64 eps x x) 3))))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(/.f64 (exp.f64 (neg.f64 x)) eps)","(+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (neg.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))))","(fma.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (*.f64 1/2 (/.f64 (*.f64 x x) (exp.f64 x)))) eps (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (neg.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))))))","(+.f64 (fma.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (*.f64 1/2 (/.f64 (*.f64 x x) (exp.f64 x)))) eps (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (neg.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))))) (*.f64 (*.f64 eps eps) (fma.f64 -1/2 (/.f64 (*.f64 x x) (exp.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 x 3) (exp.f64 x))))))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))))","(neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))","(neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(-.f64 (/.f64 1 eps) 1)","(+.f64 (/.f64 1 eps) -1)","(-.f64 (+.f64 (/.f64 1 eps) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))) 1)","(+.f64 (+.f64 (/.f64 1 eps) (*.f64 (-.f64 1 (/.f64 1 eps)) (fma.f64 eps x x))) -1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x))))) 1)","(+.f64 (+.f64 (/.f64 1 eps) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (fma.f64 eps x x) 2)) (*.f64 (-.f64 1 (/.f64 1 eps)) (fma.f64 eps x x)))) -1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 3) (pow.f64 x 3)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))))) 1)","(+.f64 (+.f64 (/.f64 1 eps) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (fma.f64 eps x x) 2)) (fma.f64 -1/6 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (fma.f64 eps x x) 3)) (*.f64 (-.f64 1 (/.f64 1 eps)) (fma.f64 eps x x))))) -1)","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(/.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (fma.f64 eps x x)))"]],"time":325.485107421875,"type":"simplify"},{"compiler":[[12318,7628]],"time":110.7138671875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","fresh",0.1939096239033163],["(/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)) 2)","next",0.1939096239033163],["(/.f64 2 2)","fresh",14.82749664449937]],"compiler":[[31,25],[27,14],[15,13],[5,5],[27,14],[15,13],[5,5]],"count":[[313,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[311,3],"picked":[1,1]}],"min-error":[0.0078125],"time":88.14111328125,"type":"prune"},{"compiler":[[48,31]],"locations":[["(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))",0.015625,true]],"time":10.60693359375,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","x","-inf",0.343017578125],["(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","x","inf",0.35986328125],["(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","x","0",0.316162109375]],"time":1.073974609375,"type":"series"},{"count":[[1,85]],"inputs":[["(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 0) (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x 1) (exp.f64 x))) (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (*.f64 0 (/.f64 (+.f64 x 1) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x)) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (+.f64 x 1)) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)) (/.f64 (+.f64 x 1) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 1)) (exp.f64 x)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 1)) 2) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 (neg.f64 x)) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (/.f64 (+.f64 (pow.f64 x 3) 1) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) 1) (/.f64 (exp.f64 (neg.f64 x)) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (/.f64 (exp.f64 (neg.f64 x)) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) 1) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) (cbrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) 1) (/.f64 (cbrt.f64 (+.f64 x 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (cbrt.f64 (exp.f64 x))) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) 1) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (/.f64 (neg.f64 (+.f64 x 1)) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (+.f64 x 1) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3) (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) (exp.f64 x)) (pow.f64 (+.f64 x 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 (neg.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 2/3) (/.f64 (cbrt.f64 (+.f64 x 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (+.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 1 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 (+.f64 x 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (+.f64 x 1)) (exp.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (exp.f64 x)) (*.f64 (neg.f64 (exp.f64 x)) x)) (*.f64 (neg.f64 (exp.f64 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 x) (*.f64 (exp.f64 x) x)) (*.f64 (exp.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (neg.f64 (exp.f64 x))) (neg.f64 (exp.f64 x))) (*.f64 (exp.f64 x) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (exp.f64 x)) (exp.f64 x)) (*.f64 (exp.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (neg.f64 (pow.f64 x 3)) -1)) (*.f64 (neg.f64 (exp.f64 x)) (neg.f64 (fma.f64 x x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) -1) (*.f64 (neg.f64 (fma.f64 x x (-.f64 1 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) 1) (*.f64 (neg.f64 (fma.f64 x x (-.f64 1 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 1) -1) (*.f64 (fma.f64 x x (-.f64 1 x)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x 1) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 1) (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 (neg.f64 (pow.f64 x 3)) -1)) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x 1)) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 1)) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x))) (cbrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) (exp.f64 (neg.f64 x))) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (+.f64 x 1)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) (*.f64 (neg.f64 (exp.f64 x)) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) (*.f64 (exp.f64 x) (neg.f64 (fma.f64 x x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 x 3)) -1) (neg.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x))) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 (+.f64 x 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (exp.f64 (neg.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 x) (exp.f64 x)) (pow.f64 x 2/3) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) x) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (pow.f64 (exp.f64 (neg.f64 x)) 2/3) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (exp.f64 (neg.f64 x))) -1 (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 x))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (exp.f64 x)) 1 (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 x)) 1 (/.f64 x (exp.f64 x)))))))"]],"rules":[["egg-rr",85]],"time":25.755126953125,"type":"rewrite"},{"count":[[97,98]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(*.f64 (exp.f64 (neg.f64 x)) x)","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(*.f64 (exp.f64 (*.f64 -1 x)) x)","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(fma.f64 -1/2 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 1/3 x))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 1/3 x))) (*.f64 -1/8 (pow.f64 x 4))))","(*.f64 (exp.f64 (neg.f64 x)) x)","(/.f64 x (exp.f64 x))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(/.f64 (+.f64 1 x) (exp.f64 x))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(/.f64 (+.f64 1 x) (exp.f64 x))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","(/.f64 (+.f64 1 x) (exp.f64 x))","(*.f64 (exp.f64 (*.f64 -1 x)) x)","(/.f64 x (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(/.f64 (+.f64 1 x) (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(/.f64 (+.f64 1 x) (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(/.f64 (+.f64 1 x) (exp.f64 x))"]],"time":61.8359375,"type":"simplify"},{"compiler":[[1922,1319]],"time":22.6220703125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x))) (-.f64 1 -1)) 2)","fresh",0.1939096239033163],["(/.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (-.f64 1 -1)) 2)","next",0.1939096239033163],["(/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)) 2)","done",0.1939096239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641]],"compiler":[[16,11],[14,12],[15,13],[31,25],[16,11],[14,12]],"count":[[102,4]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[98,2],"picked":[1,1]}],"min-error":[0],"time":23.593017578125,"type":"prune"},{"compiler":[[42,30]],"locations":[["(/.f64 (+.f64 x 1) (exp.f64 x))",0.015625,true]],"time":9.44189453125,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 (+.f64 x 1) (exp.f64 x))","x","-inf",0.34814453125],["(/.f64 (+.f64 x 1) (exp.f64 x))","x","inf",0.37109375],["(/.f64 (+.f64 x 1) (exp.f64 x))","x","0",0.260986328125]],"time":1.026123046875,"type":"series"},{"count":[[1,95]],"inputs":[["(/.f64 (+.f64 x 1) (exp.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 0) (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (exp.f64 (neg.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (*.f64 0 (/.f64 (+.f64 x 1) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x 1) (exp.f64 x))) (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 x))) (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 (+.f64 x 1) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) -1) (/.f64 (neg.f64 (pow.f64 (+.f64 x 1) 2/3)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (neg.f64 (exp.f64 x)))) (/.f64 (neg.f64 (pow.f64 (+.f64 x 1) 2/3)) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (/.f64 (exp.f64 (neg.f64 x)) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) -1) (/.f64 (cbrt.f64 (+.f64 x 1)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (pow.f64 (exp.f64 x) 2/3)) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) -1) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3) (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x)) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 1 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (-.f64 -1 x) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -1 x)) 1) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (/.f64 (+.f64 x 1) (neg.f64 (pow.f64 (exp.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 (exp.f64 (neg.f64 x)) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2) (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 2/3) (/.f64 (cbrt.f64 (+.f64 x 1)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x 1) 2/3) (cbrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (cbrt.f64 (exp.f64 x))) (/.f64 (/.f64 1 (fma.f64 x x (-.f64 1 x))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) -1) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) -2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (exp.f64 x) 2/3)) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) -1) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x 1)) (exp.f64 x)) (pow.f64 (+.f64 x 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x 1) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (exp.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (cbrt.f64 (fma.f64 x x (-.f64 1 x)))) (pow.f64 (cbrt.f64 (fma.f64 x x (-.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) 1) (*.f64 (fma.f64 x x (-.f64 1 x)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) 1) (*.f64 (neg.f64 (fma.f64 x x (-.f64 1 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) -1) (*.f64 (neg.f64 (fma.f64 x x (-.f64 1 x))) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (cbrt.f64 (exp.f64 (neg.f64 x)))) (*.f64 (neg.f64 (fma.f64 x x (-.f64 1 x))) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 1) -1) (*.f64 (fma.f64 x x (-.f64 1 x)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 1) (cbrt.f64 (exp.f64 (neg.f64 x)))) (*.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 -1 (neg.f64 (pow.f64 x 3)))) (*.f64 (pow.f64 (exp.f64 x) 2/3) (neg.f64 (fma.f64 x x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 (pow.f64 x 3) 1)) (*.f64 (pow.f64 (exp.f64 x) 2/3) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 -1 (neg.f64 (pow.f64 x 3)))) (*.f64 (neg.f64 (exp.f64 x)) (neg.f64 (fma.f64 x x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (neg.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x 1) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 1) (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 -1 (neg.f64 (pow.f64 x 3)))) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3) (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) (pow.f64 (+.f64 x 1) 2/3)) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 x 1)) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (exp.f64 (neg.f64 x))) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (neg.f64 (exp.f64 (neg.f64 x)))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) (pow.f64 (exp.f64 x) 2/3)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 1)) (/.f64 (pow.f64 (+.f64 x 1) 2/3) (exp.f64 x))) (cbrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 2/3)) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x))) 1) (pow.f64 (exp.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x)) 1) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 1) (/.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 1) (*.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (exp.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (*.f64 (neg.f64 (exp.f64 x)) (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (*.f64 (exp.f64 x) (neg.f64 (fma.f64 x x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 x)))) (neg.f64 (pow.f64 (exp.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 x 3) 1) (exp.f64 x))) (neg.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) 3))))))"]],"rules":[["egg-rr",95]],"time":32.638916015625,"type":"rewrite"},{"count":[[107,104]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(/.f64 x (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 x (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(fma.f64 (*.f64 x x) -1/2 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x 1/3))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x 1/3))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) 1))","(/.f64 x (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))","(/.f64 x (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 (+.f64 x 1) (exp.f64 x))"]],"time":61.43994140625,"type":"simplify"},{"compiler":[[2125,1532]],"time":26.451171875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)","next",0.1900033739033163],["(/.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (-.f64 1 -1)) 2)","done",0.1939096239033163],["(/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)) 2)","done",0.1939096239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641]],"compiler":[[17,13],[14,12],[15,13],[31,25],[17,13]],"count":[[108,4]],"kept":[{"done":[2,2],"fresh":[1,0],"new":[104,1],"picked":[1,1]}],"min-error":[0],"time":25.3359375,"type":"prune"},{"compiler":[[56,31]],"locations":[["(/.f64 x (exp.f64 x))",0.0078125,true],["(/.f64 1 (exp.f64 x))",0.01171875,true],["(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))",0.015625,true]],"time":10.808837890625,"type":"localize"},{"count":[[3,14]],"series":[["(/.f64 x (exp.f64 x))","x","-inf",0.406982421875],["(/.f64 x (exp.f64 x))","x","inf",0.27099609375],["(/.f64 x (exp.f64 x))","x","0",0.19189453125],["(/.f64 1 (exp.f64 x))","x","-inf",0.24609375],["(/.f64 1 (exp.f64 x))","x","inf",0.233154296875],["(/.f64 1 (exp.f64 x))","x","0",0.2060546875],["(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","x","-inf",0.586181640625],["(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","x","inf",0.447998046875],["(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","x","0",0.247802734375]],"time":2.941162109375,"type":"series"},{"count":[[3,194]],"inputs":[["(+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(/.f64 1 (exp.f64 x))","(/.f64 x (exp.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 0) (/.f64 (+.f64 1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) (*.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 1 x) (exp.f64 x))) (/.f64 (+.f64 1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) (*.f64 0 (/.f64 (+.f64 1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (exp.f64 x)) 0) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (neg.f64 (exp.f64 (neg.f64 x))) (/.f64 x (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 x)) (/.f64 (neg.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (exp.f64 x)) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (exp.f64 (*.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (exp.f64 x))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2)) (cbrt.f64 (/.f64 (+.f64 1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 x -2)) (fma.f64 (exp.f64 x) x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (cbrt.f64 (exp.f64 (*.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (+.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (exp.f64 x) x (exp.f64 x))) (/.f64 1 (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 x) (neg.f64 (exp.f64 x)) (exp.f64 x)) (exp.f64 (*.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (-.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (*.f64 x (exp.f64 (*.f64 x -2)))))) (+.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (cbrt.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (-.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (cbrt.f64 (*.f64 x (exp.f64 (*.f64 x -2)))))) (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (/.f64 x (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 x) (neg.f64 (exp.f64 x)) (exp.f64 x)) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (exp.f64 x) x (exp.f64 x))) (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) -1) (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 1 (pow.f64 x 3))) (+.f64 1 (*.f64 x (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2)) (cbrt.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) 1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (neg.f64 x) (neg.f64 (exp.f64 x)) (exp.f64 x)) 1) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 (exp.f64 x) x (exp.f64 x))) 1) (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 1 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (exp.f64 (neg.f64 x))) (+.f64 1 (*.f64 x (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (exp.f64 x) x (exp.f64 x))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 2))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 (exp.f64 x) x (exp.f64 x))) (exp.f64 x)) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 x) (neg.f64 (exp.f64 x)) (exp.f64 x)) (neg.f64 (exp.f64 x))) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) 1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) 4)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (pow.f64 (cbrt.f64 (exp.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (neg.f64 x)))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (neg.f64 (exp.f64 x)) (cbrt.f64 (exp.f64 (neg.f64 x))))) (*.f64 (neg.f64 (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (neg.f64 (exp.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) -1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (cbrt.f64 (exp.f64 (neg.f64 x))))) (pow.f64 (cbrt.f64 (exp.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) x) (*.f64 (exp.f64 x) (cbrt.f64 (exp.f64 (neg.f64 x))))) (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (exp.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (exp.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) x)) (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (neg.f64 (exp.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)) (*.f64 (exp.f64 x) (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (exp.f64 x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (*.f64 (neg.f64 (exp.f64 x)) (/.f64 x (cbrt.f64 (exp.f64 x))))) (*.f64 (neg.f64 (exp.f64 x)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (exp.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (neg.f64 x) (neg.f64 (exp.f64 x)) (exp.f64 x))) (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (exp.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (exp.f64 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (exp.f64 (neg.f64 x))) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 1 x) (neg.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (exp.f64 x) x (exp.f64 x)) (neg.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (exp.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (exp.f64 (neg.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (neg.f64 (exp.f64 (neg.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 (neg.f64 x))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (exp.f64 x)) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (neg.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (cbrt.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (exp.f64 x)) 1 (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (neg.f64 x)) 1 (/.f64 x (exp.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (neg.f64 x)) 0) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (neg.f64 x))) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 x)) (*.f64 0 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (neg.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) -1) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) -1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (exp.f64 (*.f64 x -2)))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (exp.f64 x))) (neg.f64 (exp.f64 x))) (pow.f64 (*.f64 (E.f64) (E.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 x 3)) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 x)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (neg.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (*.f64 x 3)) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (exp.f64 x)) 0) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 x)) (*.f64 (/.f64 x (exp.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (exp.f64 x))) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 x)) (*.f64 0 (/.f64 x (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 (*.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 x -2))) (/.f64 x (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (cbrt.f64 (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (exp.f64 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (exp.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (cbrt.f64 (/.f64 x (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2)) (cbrt.f64 x)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 2))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (exp.f64 x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (exp.f64 x)) 3))))))"]],"rules":[["egg-rr",45],["egg-rr",44],["egg-rr",105]],"time":34.322021484375,"type":"rewrite"},{"count":[[208,214]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(/.f64 x (exp.f64 x))","(/.f64 x (exp.f64 x))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) x))","(+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1/6 (pow.f64 x 4)) x)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(fma.f64 -1/2 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (*.f64 (*.f64 x x) (+.f64 (*.f64 x 1/3) -1/2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 (*.f64 (*.f64 x x) (+.f64 (*.f64 x 1/3) -1/2)) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) 1))","(/.f64 x (exp.f64 x))","(/.f64 x (exp.f64 x))","1","(+.f64 1 (*.f64 -1 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 1 (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1 x))))","(+.f64 (fma.f64 (pow.f64 x 3) -1/6 1) (fma.f64 1/2 (*.f64 x x) (neg.f64 x)))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(*.f64 x (-.f64 1 x))","(+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) x))","(fma.f64 1/2 (pow.f64 x 3) (*.f64 x (-.f64 1 x)))","(+.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1/6 (pow.f64 x 4)) x)))","(fma.f64 1/2 (pow.f64 x 3) (-.f64 (fma.f64 -1/6 (pow.f64 x 4) x) (*.f64 x x)))"]],"time":87.246826171875,"type":"simplify"},{"compiler":[[4337,2433]],"time":42.647216796875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)","done",0.1900033739033163],["(/.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (-.f64 1 -1)) 2)","done",0.1939096239033163],["(/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)) 2)","done",0.1939096239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641]],"compiler":[[17,13],[14,12],[15,13],[31,25]],"count":[[218,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[214,0],"picked":[1,1]}],"min-error":[0],"time":84.061767578125,"type":"prune"},{"accuracy":[0.1900033739033163],"baseline":[0.1900033739033163],"branch":[["x",0.1900033739033163,1],["eps",0.1900033739033163,1],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",0.19000337390331634,1],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",0.19000337390331634,1],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",0.19000337390331634,1],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",0.19000337390331634,1]],"compiler":[[3,2],[3,2],[31,25],[31,25],[29,23],[29,23],[139,92]],"count":[[8,1]],"inputs":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)","(/.f64 (*.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x))) (-.f64 1 -1)) 2)","(/.f64 (*.f64 (/.f64 (+.f64 x 1) (exp.f64 x)) (-.f64 1 -1)) 2)","(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","(/.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1)) (-.f64 1 -1)) 2)","(/.f64 2 2)","(*.f64 (fma.f64 (/.f64 (+.f64 1 eps) eps) (pow.f64 (/.f64 (exp.f64 eps) (E.f64)) x) (/.f64 (/.f64 (+.f64 eps -1) eps) (pow.f64 (*.f64 (E.f64) (exp.f64 eps)) x))) 1/2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)"]],"link":["."],"name":["NMSE Section 6.1 mentioned, A"],"oracle":[61.52794714581237],"outputs":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)"]],"time":19.3662109375,"times":[["x",3.85986328125],["eps",4.048095703125],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",2.212890625],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",2.216064453125],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.170166015625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.215087890625]],"type":"regimes"},{"compiler":[[17,13]],"inputs":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (/.f64 x (exp.f64 x))) (-.f64 1 -1)) 2)","(/.f64 (+.f64 1 x) (exp.f64 x))"]],"stop":[["done",1]],"time":22.473876953125,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[17,13]],"remove-preprocessing":[[]],"time":9.825927734375,"type":"end"}]