[{"compiler":[[42,27]],"method":["search"],"sampling":[[12,0.39200334013526117,0.4266205505203402,0.18137610934439863],[11,0.336420776981754,0.5138949259982155,0.1496842970200305],[10,0.29058954069728316,0.5753282852731445,0.13408217402957234],[9,0.16772282214742518,0.745001372794377,0.08727580505819788],[8,0.10141379943797801,0.8347135799895113,0.06387262057251064],[7,0.07801061495229078,0.8581167644751986,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":181.490966796875,"type":"analyze"},{"outcomes":[["body",256,"invalid",121.9052734375,1571],["body",256,"valid",673.568603515625,8256]],"time":804.724853515625,"type":"sample"},{"compiler":[[41,26]],"inputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 a 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))) (/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)))","(if (>=.f64 c 0) (/.f64 (*.f64 2 b) (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))) (/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 a)))","(if (>=.f64 a 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c))))) (/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b)))","(if (>=.f64 a 0) (/.f64 (*.f64 -2 c) (+.f64 (sqrt.f64 (fma.f64 a a (*.f64 -4 (*.f64 b c)))) a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 -4 (*.f64 b c)))) a) (/.f64 1/2 b)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 a) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 a) (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 c)))","(if (>=.f64 c 0) (/.f64 (*.f64 2 b) (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b))))) (/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a)))","(if (>=.f64 c 0) (/.f64 (*.f64 -2 b) (+.f64 (sqrt.f64 (fma.f64 c c (*.f64 -4 (*.f64 a b)))) c)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 -4 (*.f64 a b)))) c) (/.f64 1/2 a)))"]],"symmetry":[[]],"time":65.9111328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"method":["egg-herbie"],"outputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))"]],"time":23.70703125,"type":"simplify"},{"compiler":[[75,46]],"time":0.81396484375,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","next",19.99730401355955],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","fresh",20.04677209766013]],"compiler":[[41,26],[37,23],[41,26],[37,23]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[19.97386651355955],"time":3.237060546875,"type":"prune"},{"compiler":[[148,79]],"locations":[["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",1.2205830145978995,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))",1.40625,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",2.2813384479613337,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,true]],"time":28.642822265625,"type":"localize"},{"count":[[4,84]],"series":[["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.364990234375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.864990234375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.242919921875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.343994140625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.406005859375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.2490234375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.2890625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.2490234375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.331787109375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","-inf",0.37890625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","inf",0.300048828125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","0",0.31396484375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","-inf",0.2041015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","inf",0.31396484375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","0",0.33984375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","-inf",0.1669921875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","inf",0.27392578125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","0",0.305908203125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.3662109375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.420166015625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.3818359375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.278076171875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.328857421875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.402099609375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.221923828125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.458984375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.281005859375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","-inf",0.572998046875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","inf",0.635009765625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","0",0.39697265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","-inf",0.427001953125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","inf",0.60205078125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","0",0.4189453125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","-inf",0.321044921875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","inf",0.489990234375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","0",0.97314453125]],"time":14.448974609375,"type":"series"},{"count":[[4,217]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0) (-.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (-.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (-.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 0) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (+.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2) (*.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 0) (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 a c)) (*.f64 (neg.f64 (*.f64 b b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 0 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 1/2 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (*.f64 a c)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 b b)) (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b))))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 b 4)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (cbrt.f64 (*.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 0) (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2)) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (*.f64 4 a) c (neg.f64 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 -4 (*.f64 a c)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))"]],"rules":[["egg-rr",43],["egg-rr",64],["egg-rr",53],["egg-rr",57]],"time":43.89404296875,"type":"rewrite"},{"count":[[301,256]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 b -2 (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) -1/2 (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 b -2 (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 b -2 (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 b -2 (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))"]],"time":264.63916015625,"type":"simplify"},{"compiler":[[17743,10067]],"time":155.761962890625,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.947680687728308],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","next",20.038651523327992],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))) (*.f64 2 a)))","fresh",20.07382230171897],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.093709091707083],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","fresh",20.04677209766013],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.059510312401763],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126]],"compiler":[[71,42],[43,29],[32,21],[43,29],[33,21],[43,29],[37,23],[43,29],[42,28],[71,42],[43,29],[32,21],[43,29],[33,21],[43,29],[37,23],[43,29],[42,28]],"count":[[399,9]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[397,8],"picked":[1,0]}],"min-error":[4.846451146531699],"time":211.81201171875,"type":"prune"},{"compiler":[[204,110]],"locations":[["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))",9.50582753406694,true],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))",21.247553254343114,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,false],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))",21.785566980535908,true]],"time":44.1748046875,"type":"localize"},{"count":[[3,44]],"series":[["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","c","-inf",0.254150390625],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","c","inf",0.2841796875],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","c","0",0.192138671875],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","a","-inf",0.2919921875],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","a","inf",0.260009765625],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","a","0",0.218017578125],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","b","-inf",0.278076171875],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","b","inf",0.225830078125],["(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))","b","0",0.217041015625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","c","-inf",0.310791015625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","c","inf",0.2939453125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","c","0",0.203125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","a","-inf",0.306884765625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","a","inf",0.26904296875],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","a","0",0.23486328125],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","b","-inf",0.222900390625],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","b","inf",0.281005859375],["(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","b","0",0.300048828125],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","-inf",0.302001953125],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","inf",0.30517578125],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","0",0.617919921875],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","-inf",0.279052734375],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","inf",0.306884765625],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","0",0.801025390625],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","-inf",0.3330078125],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","inf",0.388916015625],["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","0",1.44091796875]],"time":9.828125,"type":"series"},{"count":[[3,134]],"inputs":[["(cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","(sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))","(-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2) (*.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 0 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 1/2 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (+.f64 1/3 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2/3)) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) (/.f64 1/3 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) (*.f64 1/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (-.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0) (-.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 2/3) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3) (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (pow.f64 b 2/3) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (pow.f64 b 2/3)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 (neg.f64 b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (neg.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))))"]],"rules":[["egg-rr",50],["egg-rr",51],["egg-rr",33]],"time":35.7958984375,"type":"rewrite"},{"count":[[178,181]],"inputs":[["(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b 6) (pow.f64 (cbrt.f64 -4) 8)))))))","(pow.f64 (pow.f64 b 2) 1/3)","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))))))) (pow.f64 (pow.f64 b 2) 1/3))))","(pow.f64 (pow.f64 b 2) 1/3)","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (pow.f64 a 3))))) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))","(cbrt.f64 (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (cbrt.f64 (*.f64 -4 (*.f64 c a))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4))))","(fma.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (pow.f64 b 4)) (pow.f64 (cbrt.f64 -4) 5)) -1/9 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (cbrt.f64 (*.f64 -4 (*.f64 c a)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b 4) (pow.f64 (cbrt.f64 -4) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b 2) (pow.f64 (cbrt.f64 -4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -4)) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b 6) (pow.f64 (cbrt.f64 -4) 8)))))))","(fma.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (pow.f64 b 4)) (pow.f64 (cbrt.f64 -4) 5)) -1/9 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (/.f64 (*.f64 b b) (cbrt.f64 16))) (fma.f64 5/81 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 8))) (pow.f64 b 6)) (pow.f64 (cbrt.f64 -4) 8)) (cbrt.f64 (*.f64 -4 (*.f64 c a))))))","(pow.f64 (pow.f64 b 2) 1/3)","(cbrt.f64 (*.f64 b b))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(fma.f64 (*.f64 -16/9 (pow.f64 (*.f64 c a) 2)) (pow.f64 (pow.f64 b -14) 1/9) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b))))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))))))) (pow.f64 (pow.f64 b 2) 1/3))))","(fma.f64 (*.f64 -16/9 (pow.f64 (*.f64 c a) 2)) (pow.f64 (pow.f64 b -14) 1/9) (fma.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b -4) 1/9)) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -4))) (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -4))) (+.f64 128/9 -64/27))) (cbrt.f64 (*.f64 b b)))))","(pow.f64 (pow.f64 b 2) 1/3)","(cbrt.f64 (*.f64 b b))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))","(fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3)))","(fma.f64 (*.f64 -16/9 (pow.f64 (*.f64 c a) 2)) (pow.f64 (pow.f64 b -14) 1/9) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b))))","(+.f64 (*.f64 -16/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 128/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3)))) (*.f64 -64/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3) (pow.f64 a 3))))) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/3))) (+.f64 (*.f64 -4/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b 4)) 1/9))) (pow.f64 (pow.f64 b 2) 1/3))))","(fma.f64 -16/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b -14) 1/9)) (fma.f64 -1/3 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -4))) (+.f64 128/9 -64/27)) (cbrt.f64 (pow.f64 b -4)))) (fma.f64 (*.f64 -4/3 (*.f64 c a)) (pow.f64 (pow.f64 b -4) 1/9) (cbrt.f64 (*.f64 b b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (-.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 -2 b (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 -2 b (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 -2 b (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))"]],"time":164.011962890625,"type":"simplify"},{"compiler":[[12159,7197]],"time":114.72802734375,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.947680687728308],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.038651523327992],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))) (*.f64 2 a)))","fresh",20.07382230171897],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 b b)) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",28.547981434677617],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","next",20.039315292864877],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.093709091707083],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","fresh",20.04677209766013],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318]],"compiler":[[71,42],[43,29],[43,29],[33,21],[38,25],[52,33],[43,29],[37,23],[42,28],[32,21],[71,42],[43,29],[33,21],[38,25],[52,33],[43,29],[37,23],[42,28],[32,21]],"count":[[262,10]],"kept":[{"done":[0,0],"fresh":[8,5],"new":[253,4],"picked":[1,1]}],"min-error":[4.846451146531699],"time":92.153076171875,"type":"prune"},{"compiler":[[228,119]],"locations":[["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",2.2813384479613337,false],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))",17.714510625540864,true],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))",21.247553254343114,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",21.247553254343114,false]],"time":46.89208984375,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","c","-inf",2.84912109375],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","c","inf",1.72509765625],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","c","0",1.136962890625],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","a","-inf",1.77001953125],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","a","inf",2.234130859375],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","a","0",2.171142578125],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","b","-inf",0.411865234375],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","b","inf",0.85400390625],["(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))","b","0",1.450927734375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","-inf",0.251953125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","inf",0.448974609375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","0",0.18408203125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","-inf",0.27001953125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","inf",0.27783203125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","0",0.18603515625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","-inf",0.199951171875],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","inf",0.238037109375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","0",0.31787109375]],"time":17.410888671875,"type":"series"},{"count":[[2,114]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","(fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (fabs.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1/3 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) (fabs.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1/3 1/2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (*.f64 1/2 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (*.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2)) (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2)))) (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 1/8) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (+.f64 1/3 1/2)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 1 (neg.f64 b))))))"]],"rules":[["egg-rr",44],["egg-rr",70]],"time":30.486083984375,"type":"rewrite"},{"count":[[162,185]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(*.f64 2 (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 2 (*.f64 -1 b)))))","(*.f64 -1 b)","(+.f64 b (*.f64 -1 b))","(+.f64 b (+.f64 (*.f64 -1 b) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 b (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (pow.f64 b 3))) (+.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (+.f64 (*.f64 -1 b) (*.f64 -2 (/.f64 (*.f64 c a) b))))))","(-.f64 (*.f64 -1 b) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b)) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4)))) b))) (pow.f64 a 2)) (*.f64 -1 b))) b)","(-.f64 (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2 (/.f64 (*.f64 c (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))))) b)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 c 3) (pow.f64 b 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (pow.f64 b 6))) (*.f64 -16/3 (/.f64 (pow.f64 c 3) (pow.f64 b 6))))) b)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4)))) b))) (pow.f64 a 2)) (*.f64 -1 b)))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 b 2))) (*.f64 c (pow.f64 a 3)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/768 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (+.f64 (*.f64 1/2048 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (*.f64 -1/24576 (/.f64 (pow.f64 b 6) (pow.f64 c 3)))))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (pow.f64 a 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (+.f64 (*.f64 -1/2048 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (*.f64 1/768 (/.f64 (pow.f64 b 6) (pow.f64 c 3))))))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))) c))) (pow.f64 a 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (pow.f64 a 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)))))) b)","(-.f64 (*.f64 -1 b) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b)) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4)))) b)))) (*.f64 -1 b))) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 a 3) (pow.f64 b 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 a 3) (pow.f64 b 6))) (*.f64 -16/3 (/.f64 (pow.f64 a 3) (pow.f64 b 6))))) b)) (*.f64 2 (/.f64 (*.f64 a (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))))) b)))) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4)))) b)))) (*.f64 -1 b)))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 2))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/2048 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/768 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (*.f64 -1/24576 (/.f64 (pow.f64 b 6) (pow.f64 a 3))))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a))) (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2))) (*.f64 (pow.f64 c 3) a)))))))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))))) b)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2))) a)) (*.f64 -2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (+.f64 (*.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (+.f64 (*.f64 1/768 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (*.f64 -1/2048 (/.f64 (pow.f64 b 6) (pow.f64 a 3)))))))) (pow.f64 c 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a))))))) b)"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 c a)) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 c a)) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (/.f64 (*.f64 -2 (*.f64 c a)) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 c a)) b))))","(*.f64 -1 b)","(neg.f64 b)","(*.f64 2 (*.f64 -1 b))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (*.f64 -1 b)))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (neg.f64 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 2 (*.f64 -1 b)))))","(fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 -2 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) -3/2) (pow.f64 b 3)) (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 b (*.f64 -1 b))","(*.f64 0 b)","(+.f64 b (+.f64 (*.f64 -1 b) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 0 b) (/.f64 (*.f64 -2 (*.f64 c a)) b))","(+.f64 b (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (pow.f64 b 3))) (+.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (+.f64 (*.f64 -1 b) (*.f64 -2 (/.f64 (*.f64 c a) b))))))","(+.f64 b (fma.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) -3/2) (pow.f64 b 3)) (+.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (neg.f64 b) (/.f64 (*.f64 -2 (*.f64 c a)) b)))))","(-.f64 (*.f64 -1 b) b)","(-.f64 (neg.f64 b) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b)) b)","(-.f64 (fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b)) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4)))) b))) (pow.f64 a 2)) (*.f64 -1 b))) b)","(-.f64 (fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 (+.f64 (neg.f64 (/.f64 (*.f64 c c) (pow.f64 b 3))) (*.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 4)) -3/2)) b)) (*.f64 a a) (neg.f64 b))) b)","(-.f64 (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2 (/.f64 (*.f64 c (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))))) b)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 c 3) (pow.f64 b 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (pow.f64 b 6))) (*.f64 -16/3 (/.f64 (pow.f64 c 3) (pow.f64 b 6))))) b)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 c 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 4)))) b))) (pow.f64 a 2)) (*.f64 -1 b)))) b)","(-.f64 (fma.f64 (pow.f64 a 3) (fma.f64 2 (/.f64 (*.f64 c (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 4)) -3/2)) b) (*.f64 -2 (*.f64 (fma.f64 -1/6 (/.f64 (pow.f64 c 3) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b 6)) -10/3)) b))) (fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 (+.f64 (neg.f64 (/.f64 (*.f64 c c) (pow.f64 b 3))) (*.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 4)) -3/2)) b)) (*.f64 a a) (neg.f64 b)))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) b)","(-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2))) b)","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) b) 2) (*.f64 c a)) (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))) b)","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512)) (*.f64 a a)) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) b) 2) (*.f64 c a)) (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) (/.f64 (*.f64 -1/256 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (pow.f64 b 4))) (pow.f64 (*.f64 c a) 2))))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 2)) (*.f64 c a))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 b 2))) (*.f64 c (pow.f64 a 3)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (+.f64 (*.f64 -1/768 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (+.f64 (*.f64 1/2048 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (*.f64 -1/24576 (/.f64 (pow.f64 b 6) (pow.f64 c 3)))))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))))) b)","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512)) (*.f64 a a)) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) b) 2) (*.f64 c a)) (fma.f64 1/8 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512) (*.f64 b b))) (*.f64 c (pow.f64 a 3))) (fma.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (fma.f64 -1/768 (/.f64 (pow.f64 b 6) (pow.f64 c 3)) (*.f64 (/.f64 (pow.f64 b 6) (pow.f64 c 3)) 11/24576))) (pow.f64 a 3)) (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) (/.f64 (*.f64 -1/256 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2)) (pow.f64 b 4))) (pow.f64 (*.f64 c a) 2))))))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) b)","(-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))) b)","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 b (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a)))))) 2) (*.f64 c a)) (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2)))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (pow.f64 a 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))))) b)","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 b (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a)))))) 2) (*.f64 c a)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))) (*.f64 a a)) (fma.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))) (pow.f64 (*.f64 c a) 2)) (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2)))))) b)","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 c a))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (+.f64 (*.f64 -1/2048 (/.f64 (pow.f64 b 6) (pow.f64 c 3))) (*.f64 1/768 (/.f64 (pow.f64 b 6) (pow.f64 c 3))))))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (*.f64 (pow.f64 b 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2))) c))) (pow.f64 a 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 c 2))) (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 c 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (pow.f64 a 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2)))))) b)","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 b (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a)))))) 2) (*.f64 c a)) (+.f64 (neg.f64 (/.f64 (fma.f64 -2 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2)) (fma.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 c 3)) (*.f64 (/.f64 (pow.f64 b 6) (pow.f64 c 3)) 5/6144))) (/.f64 (*.f64 -1/8 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512) (pow.f64 (*.f64 b (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a)))))) 2))) c)) (pow.f64 a 3))) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 c c)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))) (*.f64 a a)) (fma.f64 -1/256 (/.f64 (*.f64 (pow.f64 b 4) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))) (pow.f64 (*.f64 c a) 2)) (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 c)) (neg.f64 (log.f64 (/.f64 -1 a))))) 2))))))) b)","(-.f64 (*.f64 -1 b) b)","(-.f64 (neg.f64 b) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b)) b)","(-.f64 (fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b)) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4)))) b)))) (*.f64 -1 b))) b)","(-.f64 (fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 (*.f64 c c) (+.f64 (neg.f64 (/.f64 (*.f64 a a) (pow.f64 b 3))) (*.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 4)) -3/2)) b)) (neg.f64 b))) b)","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 a 3) (pow.f64 b 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 a 3) (pow.f64 b 6))) (*.f64 -16/3 (/.f64 (pow.f64 a 3) (pow.f64 b 6))))) b)) (*.f64 2 (/.f64 (*.f64 a (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))))) b)))) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) (*.f64 -2 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 a 2) (pow.f64 b 4))) (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 4)))) b)))) (*.f64 -1 b)))) b)","(-.f64 (fma.f64 2 (/.f64 (*.f64 c a) b) (fma.f64 (pow.f64 c 3) (fma.f64 -2 (*.f64 (fma.f64 -1/6 (/.f64 (pow.f64 a 3) (pow.f64 b 6)) (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 6)) -10/3)) b) (/.f64 (*.f64 2 (*.f64 a (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 4)) -3/2))) b)) (fma.f64 (*.f64 c c) (+.f64 (neg.f64 (/.f64 (*.f64 a a) (pow.f64 b 3))) (*.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 4)) -3/2)) b)) (neg.f64 b)))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) b)","(-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))) b)","(-.f64 (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (/.f64 (*.f64 1/8 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) b) 2)) (*.f64 c a))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 2))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))))) b)","(-.f64 (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (fma.f64 -1/256 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2)) (pow.f64 b 4)) (pow.f64 (*.f64 c a) 2)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (*.f64 c c)) (/.f64 (*.f64 1/8 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) b) 2)) (*.f64 c a))))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/2048 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/768 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (*.f64 -1/24576 (/.f64 (pow.f64 b 6) (pow.f64 a 3))))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a))) (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b 2))) (*.f64 (pow.f64 c 3) a)))))))) b)","(-.f64 (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (fma.f64 -1/256 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2)) (pow.f64 b 4)) (pow.f64 (*.f64 c a) 2)) (fma.f64 -2 (/.f64 (*.f64 (fma.f64 1/2048 (/.f64 (pow.f64 b 6) (pow.f64 a 3)) (*.f64 (/.f64 (pow.f64 b 6) (pow.f64 a 3)) -11/8192)) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (pow.f64 c 3)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) (*.f64 c c)) (*.f64 1/8 (+.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) b) 2) (*.f64 c a)) (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) b) 2)) (*.f64 (pow.f64 c 3) a)))))))) b)","(-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) b)","(-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) b)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))) b)","(-.f64 (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) (/.f64 (*.f64 1/8 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) b) 2)) (*.f64 c a))) b)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a)))))) b)","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) (*.f64 c c)) (fma.f64 -1/256 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2)) (pow.f64 b 4)) (pow.f64 (*.f64 c a) 2)) (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) (/.f64 (*.f64 1/8 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) b) 2)) (*.f64 c a))))) b)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2))) a)) (*.f64 -2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (+.f64 (*.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (+.f64 (*.f64 1/768 (/.f64 (pow.f64 b 6) (pow.f64 a 3))) (*.f64 -1/2048 (/.f64 (pow.f64 b 6) (pow.f64 a 3)))))))) (pow.f64 c 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 1/512 (/.f64 (pow.f64 b 4) (pow.f64 a 2))) (*.f64 -1/128 (/.f64 (pow.f64 b 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (pow.f64 b 2)) (*.f64 c a))))))) b)","(-.f64 (+.f64 (neg.f64 (/.f64 (fma.f64 -1/8 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) b) 2)) a) (*.f64 -2 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2)) (fma.f64 1/24576 (/.f64 (pow.f64 b 6) (pow.f64 a 3)) (*.f64 (/.f64 (pow.f64 b 6) (pow.f64 a 3)) 5/6144))))) (pow.f64 c 3))) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b 4) (*.f64 a a)) -3/512) (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) (*.f64 c c)) (fma.f64 -1/256 (/.f64 (*.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2)) (pow.f64 b 4)) (pow.f64 (*.f64 c a) 2)) (+.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) 2))) (/.f64 (*.f64 1/8 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (*.f64 4 a)) (neg.f64 (log.f64 (/.f64 -1 c))))) b) 2)) (*.f64 c a)))))) b)"]],"time":160.546875,"type":"simplify"},{"compiler":[[25020,14979]],"time":231.80908203125,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",35.533365697899704],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.947680687728308],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.038651523327992],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))) (*.f64 2 a)))","fresh",20.07382230171897],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",36.10341338659317],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.093709091707083],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",35.53283365751264],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.039315292864877],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","next",20.04677209766013],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318]],"compiler":[[48,37],[71,42],[43,29],[43,29],[33,21],[45,34],[43,29],[45,34],[52,33],[37,23],[42,28],[32,21],[48,37],[71,42],[43,29],[33,21],[45,34],[43,29],[45,34],[37,23],[42,28],[32,21]],"count":[[424,12]],"kept":[{"done":[1,1],"fresh":[8,7],"new":[414,3],"picked":[1,1]}],"min-error":[2.546195338442473],"time":216.44189453125,"type":"prune"},{"compiler":[[130,68]],"locations":[["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))",1.2205830145978995,true],["(fma.f64 b b (*.f64 (*.f64 a c) -4))",1.7538869832389217,true],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)",2.2813384479613337,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))",21.247553254343114,true]],"time":26.607177734375,"type":"localize"},{"count":[[4,84]],"series":[["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","-inf",0.300048828125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","inf",0.31689453125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","c","0",0.2109375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","-inf",0.302978515625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","inf",0.27685546875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","a","0",0.219970703125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","-inf",0.27490234375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","inf",0.235107421875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))","b","0",0.234130859375],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","-inf",0.179931640625],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","inf",0.153076171875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","c","0",0.260986328125],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","-inf",0.156982421875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","inf",0.154052734375],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","a","0",0.251220703125],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","-inf",0.280029296875],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","inf",0.217041015625],["(fma.f64 b b (*.f64 (*.f64 a c) -4))","b","0",0.2890625],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","-inf",0.248046875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","inf",0.27197265625],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","c","0",0.223876953125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","-inf",0.27392578125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","inf",0.2548828125],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","a","0",0.25],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","-inf",0.194091796875],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","inf",0.269775390625],["(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","b","0",0.22412109375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","-inf",0.264892578125],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","inf",0.26904296875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","c","0",0.18115234375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","-inf",0.25390625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","inf",0.282958984375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","a","0",0.343994140625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","-inf",0.217041015625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","inf",0.195068359375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","b","0",0.33203125]],"time":9.325927734375,"type":"series"},{"count":[[4,192]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))","(-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b)","(fma.f64 b b (*.f64 (*.f64 a c) -4))","(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2) (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 1/2 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 0 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0) (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 c -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a c) -4) 2)) (cbrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a c) -4) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -4) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 c -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2) (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0) (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (*.f64 (cbrt.f64 (neg.f64 b)) (neg.f64 (cbrt.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 2)) (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))))))"]],"rules":[["egg-rr",41],["egg-rr",63],["egg-rr",48],["egg-rr",40]],"time":40.178955078125,"type":"rewrite"},{"count":[[276,246]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (neg.f64 b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 -2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(+.f64 (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 b))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -2 (*.f64 c a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(+.f64 (fma.f64 -2 (fma.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b (neg.f64 3)) (/.f64 (*.f64 c a) b)) (*.f64 2 b)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))"]],"time":266.3359375,"type":"simplify"},{"compiler":[[15311,8896]],"time":146.30712890625,"type":"eval"},{"alts":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",35.533365697899704],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.038651523327992],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","fresh",20.050838420374347],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))) (*.f64 2 a)))","fresh",20.07382230171897],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","fresh",21.90994754937521],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 a)))","fresh",26.027101605529126],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) (/.f64 1/2 a)))","fresh",20.066967117197017],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",36.10341338659317],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 c -4)) (*.f64 b b))) b) (/.f64 1/2 a)))","fresh",26.860742888873375],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b)) (/.f64 1/2 a)))","fresh",20.10247881648604],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",20.093709091707083],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",35.53283365751264],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","done",20.039315292864877],["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","fresh",20.053238927311448],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","fresh",22.822226627346318]],"compiler":[[48,37],[43,29],[47,29],[43,29],[33,21],[42,28],[41,27],[45,34],[43,28],[49,31],[43,29],[45,34],[52,33],[42,26],[32,21]],"count":[[381,15]],"kept":[{"done":[2,2],"fresh":[9,8],"new":[369,5],"picked":[1,0]}],"min-error":[2.5383825925267574],"time":171.344970703125,"type":"prune"},{"accuracy":[4.961082096017046],"baseline":[19.99730401355955],"branch":[["a",12.822449373765481,8],["b",4.961082096017046,3],["c",15.544425370543843,6],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))",5.697571594669593,5]],"compiler":[[4,3],[4,3],[4,3],[41,26],[890,516]],"count":[[22,3]],"inputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))) b)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 c -4)) (*.f64 b b))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (neg.f64 b)) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (*.f64 -4 c))))) 2)) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (log.f64 (*.f64 -4 a)) (neg.f64 (neg.f64 (log.f64 c))))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 (exp.f64 (*.f64 (*.f64 1/4 (+.f64 (neg.f64 (neg.f64 (log.f64 a))) (log.f64 (*.f64 -4 c)))) 2))) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 b b)) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (neg.f64 b))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (-.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3)))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) 3))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 3))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) 2))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))) 3/2))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) b) (/.f64 1/2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"link":["."],"name":["jeff quadratic root 2"],"oracle":[58.32523610149057],"outputs":[["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))","(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))"]],"time":150.552978515625,"times":[["a",51.181884765625],["b",19.18896484375],["c",40.290771484375],["(if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))",25.0048828125]],"type":"regimes"},{"bstep":[[5.90599088767833e+105,3.6920366301231343e+109,143.093017578125],[-7.142240343968105e+108,-1.2931160815051085e+107,45.10791015625]],"compiler":[[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[33,22],[42,27],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[42,27],[34,22],[43,28],[4,3]],"method":["binary-search","binary-search"],"time":188.614013671875,"type":"bsearch"},{"compiler":[[108,64]],"inputs":[["(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (neg.f64 b)) (*.f64 2 a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))) (if (>=.f64 b 0) (/.f64 (*.f64 2 c) (-.f64 (neg.f64 b) b)) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)))))","(if (<=.f64 b -130000000000000005723571947544438292554521954144678769275685764875122985731145995914860441978030839927144448) (if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (neg.f64 (/.f64 b a))) (if (<=.f64 b 6000000000000000138808799035313392809073586289177287132633595691717291609982710620416248105857626077659136) (if (>=.f64 b 0) (/.f64 (*.f64 -2 c) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) (/.f64 1/2 a))) (if (>=.f64 b 0) (neg.f64 (/.f64 c b)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))) b) (/.f64 1/2 a)))))"]],"stop":[["fuel",1]],"time":28.882080078125,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[108,64]],"remove-preprocessing":[[]],"time":26.285888671875,"type":"end"}]