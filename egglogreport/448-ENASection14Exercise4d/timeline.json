[{"compiler":[[25,17]],"method":["search"],"sampling":[[12,0.08018590647134821,0.0030720167451884772,0.9167420767834633],[11,0.0792454931820048,0.00413781847311101,0.9166166883448842],[10,0.07824238567337183,0.006269421928956076,0.9154881923976721],[9,0.07824238567337183,0.008024860069063777,0.9137327542575644],[8,0.07623617065610588,0.012037290103595666,0.9117265392402985],[7,0.07623617065610588,0.016049720138127554,0.9077141092057666],[6,0.072223740621574,0.024074580207191332,0.9037016791712347],[5,0.072223740621574,0.03209944027625511,0.8956768191021709],[4,0.06419888055251022,0.048149160414382663,0.8876519590331071],[3,0.06419888055251022,0.06419888055251022,0.8716022388949796],[2,0.0,0.12839776110502044,0.8716022388949796],[1,0.0,0.12839776110502044,0.8716022388949796],[0,0.0,0.12839776110502044,0.8716022388949796]],"time":9.597900390625,"type":"analyze"},{"outcomes":[["body",256,"invalid",8.097900390625,180],["body",512,"valid",98.0546875,1152],["body",1024,"valid",141.957275390625,1160],["body",2048,"valid",5.22216796875,33],["body",256,"valid",278.3740234375,5911]],"time":541.344970703125,"type":"sample"},{"compiler":[[10,6]],"inputs":[["0","1"],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(-.f64 eps (sqrt.f64 (-.f64 (*.f64 eps eps) x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","(-.f64 eps (sqrt.f64 (-.f64 (*.f64 eps eps) x)))","(-.f64 eps (sqrt.f64 (fma.f64 eps eps (neg.f64 x))))"]],"symmetry":[[]],"time":58.965087890625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))"]],"time":18.224853515625,"type":"simplify"},{"compiler":[[18,10]],"time":0.360107421875,"type":"eval"},{"alts":[["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","next",24.214644929817577]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[24.214644929817577],"time":0.85302734375,"type":"prune"},{"compiler":[[25,6]],"locations":[["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))",0.0078125,true],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))",4.365915405152007,true]],"time":4.81884765625,"type":"localize"},{"count":[[2,24]],"series":[["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","eps","-inf",0.302978515625],["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","eps","inf",0.313232421875],["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","eps","0",0.18212890625],["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","x","-inf",0.236083984375],["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","x","inf",0.202880859375],["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))","x","0",0.449951171875],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","-inf",0.388916015625],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","inf",0.662109375],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","0",0.498779296875],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","-inf",0.47216796875],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","inf",0.68603515625],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","0",0.706787109375]],"time":5.277099609375,"type":"series"},{"count":[[2,88]],"inputs":[["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","(sqrt.f64 (fma.f64 x x (neg.f64 eps)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2) (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 1/2 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x))) (cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2)) (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1/2) (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 0) (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 1/2 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 0 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fabs.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 0) (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (neg.f64 eps)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))"]],"rules":[["egg-rr",40],["egg-rr",48]],"time":25.298095703125,"type":"rewrite"},{"count":[[112,120]],"inputs":[["(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 eps 4) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 x 6))))) x)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(*.f64 -1 x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1 x))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 eps x))","(/.f64 (*.f64 1/2 eps) x)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (/.f64 (*.f64 1/2 eps) x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (+.f64 (*.f64 1/2 (+.f64 (/.f64 (fma.f64 (pow.f64 eps 4) 1/16 (pow.f64 (*.f64 -1/8 (*.f64 eps eps)) 2)) (pow.f64 x 7)) (/.f64 eps x))) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 2 x (/.f64 (*.f64 -1/8 (*.f64 eps eps)) (pow.f64 x 3))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 2 x (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (/.f64 (*.f64 -1/8 (*.f64 eps eps)) (pow.f64 x 3)))))","(*.f64 1/2 (/.f64 eps x))","(/.f64 (*.f64 1/2 eps) x)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (/.f64 (*.f64 1/2 eps) x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 eps 4) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 x 6))))) x)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 eps 4) (fma.f64 1/16 (pow.f64 x -6) (pow.f64 (pow.f64 (/.f64 -1/2 x) 3) 2))) x) 1/2 (fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5)))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(fma.f64 -1/2 (/.f64 eps x) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x))","(fma.f64 1/2 (/.f64 eps x) (neg.f64 x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (neg.f64 x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1 x))))","(fma.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) 1/8 (fma.f64 (/.f64 eps x) 1/2 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (neg.f64 x))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(fma.f64 -1/2 (/.f64 eps x) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x)))"]],"time":83.305908203125,"type":"simplify"},{"compiler":[[1827,684]],"time":18.445068359375,"type":"eval"},{"alts":[["(*.f64 1/2 (/.f64 eps x))","fresh",35.68870459337826],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","done",24.214644929817577],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)","fresh",24.675981534752985],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","next",24.54451727222146],["(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","fresh",39.88798473881868],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","fresh",24.595913351406733],["(pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)","fresh",24.647058749784108]],"compiler":[[7,5],[10,6],[18,9],[19,8],[17,13],[34,16],[13,9],[7,5],[18,9],[19,8],[17,13],[34,16],[13,9]],"count":[[121,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[120,6],"picked":[1,1]}],"min-error":[0.14233706197650375],"time":22.2099609375,"type":"prune"},{"compiler":[[49,8]],"locations":[["(sqrt.f64 (fma.f64 x x (neg.f64 eps)))",0.0078125,false],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))",0.06640625,true],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)",24.52555349549782,true]],"time":7.281982421875,"type":"localize"},{"count":[[2,36]],"series":[["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","-inf",0.376953125],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","inf",0.822021484375],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","eps","0",0.31298828125],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","-inf",0.461181640625],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","inf",0.56591796875],["(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","x","0",0.587890625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","eps","-inf",1.52783203125],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","eps","inf",1.933837890625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","eps","0",0.802001953125],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","x","-inf",0.40478515625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","x","inf",0.9580078125],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","x","0",1.123046875]],"time":10.132080078125,"type":"series"},{"count":[[2,86]],"inputs":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","(sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2) (*.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 0 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 1/2 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 2/3) (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 x) (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 x) (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (neg.f64 x) (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) (neg.f64 (pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 5/6)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12))) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 1/2 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) -1) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 1) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)) (cbrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8))) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)) (cbrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8))) (*.f64 -1 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (-.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 0) (-.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fabs.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 0 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)))) (+.f64 0 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (+.f64 0 (*.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) 0))) (-.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0) (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 2) 1/8)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/12) 0)))))"]],"rules":[["egg-rr",52],["egg-rr",34]],"time":27.0009765625,"type":"rewrite"},{"count":[[122,143]],"inputs":[["x","(+.f64 (*.f64 -1 x) x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))))","x","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 2 x))))","(+.f64 (*.f64 -1 x) x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1 x) x))))","(+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 4)) (pow.f64 eps 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4))) (pow.f64 x 2))) (pow.f64 eps 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 4)) (pow.f64 eps 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (+.f64 (*.f64 1/32 (pow.f64 x 6)) (*.f64 -1/384 (pow.f64 x 6))))) (pow.f64 eps 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/384 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (*.f64 1/32 (pow.f64 x 6))))) (pow.f64 eps 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x)))))))","(pow.f64 (*.f64 -1 eps) 1/4)","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))))","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (*.f64 -3/32 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (pow.f64 x 4)))))","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (+.f64 (*.f64 -7/128 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/4) (pow.f64 x 6))) (*.f64 -3/32 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (pow.f64 x 4))))))","(sqrt.f64 x)","(+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/384 (pow.f64 eps 3)) (+.f64 (*.f64 -1/12 (pow.f64 eps 3)) (*.f64 1/32 (pow.f64 eps 3)))) (sqrt.f64 (/.f64 1 (pow.f64 x 11)))) (+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))","(*.f64 (pow.f64 1 1/4) (sqrt.f64 x))","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)))","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (+.f64 (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)) (*.f64 -3/32 (*.f64 (pow.f64 eps 2) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 7))))))))","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (+.f64 (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)) (+.f64 (*.f64 -7/128 (*.f64 (pow.f64 eps 3) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 11)))))) (*.f64 -3/32 (*.f64 (pow.f64 eps 2) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))))))))","(exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps))))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (+.f64 (*.f64 1/32 (pow.f64 x 6)) (*.f64 -1/384 (pow.f64 x 6))))) (pow.f64 eps 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))))","(pow.f64 (*.f64 -1 eps) 1/4)","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2)))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/4) (+.f64 (*.f64 -1/32 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 6)) (*.f64 1/384 (pow.f64 x 6)))))))))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1 x) x)","0","(+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))","(fma.f64 1/2 (/.f64 eps x) 0)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))))","(+.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 eps eps) -3/32)) (*.f64 -1/16 (*.f64 eps eps))) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) 0))","x","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 2 x))))","(+.f64 (/.f64 (+.f64 (*.f64 1/16 (*.f64 eps eps)) (*.f64 2 (*.f64 (*.f64 eps eps) -3/32))) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 eps x) (*.f64 2 x)))","(+.f64 (*.f64 -1 x) x)","0","(+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x))","(fma.f64 1/2 (/.f64 eps x) 0)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 -1 x) x)))","(fma.f64 1/8 (*.f64 (*.f64 eps eps) (pow.f64 x -3)) (fma.f64 1/2 (/.f64 eps x) 0))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1 x) x))))","(fma.f64 1/8 (*.f64 (*.f64 eps eps) (pow.f64 x -3)) (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) 0)))","(+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x)","(-.f64 x (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x))","(fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) x) 2) eps) (-.f64 x (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 4)) (pow.f64 eps 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x))))","(+.f64 (/.f64 (+.f64 (*.f64 -1/16 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (pow.f64 x 4))) (*.f64 -2 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 (pow.f64 x 4) -3/32)))) (*.f64 eps eps)) (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) x) 2) eps) (-.f64 x (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4))) (pow.f64 x 2))) (pow.f64 eps 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 4)) (pow.f64 eps 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (+.f64 (*.f64 1/32 (pow.f64 x 6)) (*.f64 -1/384 (pow.f64 x 6))))) (pow.f64 eps 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (+.f64 (*.f64 -1/384 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (*.f64 1/32 (pow.f64 x 6))))) (pow.f64 eps 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 x 2)) eps)) (+.f64 (*.f64 -1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) x)))))))","(fma.f64 1/2 (*.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 (*.f64 (pow.f64 x 4) -3/32) (*.f64 x x))) (pow.f64 eps -3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (pow.f64 x 4)) (*.f64 eps eps)) (-.f64 (fma.f64 -2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 (pow.f64 x 4) -3/32)) (*.f64 eps eps)) (-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) x) 2) eps) (-.f64 x (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))))) (*.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 (pow.f64 x 6) (+.f64 11/384 -1/12))) (pow.f64 eps -3)))) (*.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 (pow.f64 x 6) (+.f64 11/384 -1/12))) (pow.f64 eps -3)))))","(pow.f64 (*.f64 -1 eps) 1/4)","(pow.f64 (neg.f64 eps) 1/4)","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))))","(+.f64 (pow.f64 (neg.f64 eps) 1/4) (*.f64 (*.f64 -1/4 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4)) (*.f64 x x)))","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (*.f64 -3/32 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (pow.f64 x 4)))))","(+.f64 (pow.f64 (neg.f64 eps) 1/4) (fma.f64 -1/4 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4) (*.f64 x x)) (*.f64 -3/32 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -7)) 1/4) (pow.f64 x 4)))))","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (+.f64 (*.f64 -7/128 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/4) (pow.f64 x 6))) (*.f64 -3/32 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (pow.f64 x 4))))))","(+.f64 (pow.f64 (neg.f64 eps) 1/4) (fma.f64 -1/4 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4) (*.f64 x x)) (fma.f64 -7/128 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/4) (pow.f64 x 6)) (*.f64 -3/32 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -7)) 1/4) (pow.f64 x 4))))))","(sqrt.f64 x)","(+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x))","(+.f64 (*.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 (*.f64 (*.f64 eps eps) -3/32) (sqrt.f64 (pow.f64 x -7)) (fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/32 (pow.f64 eps 2)) (*.f64 -1/8 (pow.f64 eps 2))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 (+.f64 (*.f64 -1/384 (pow.f64 eps 3)) (+.f64 (*.f64 -1/12 (pow.f64 eps 3)) (*.f64 1/32 (pow.f64 eps 3)))) (sqrt.f64 (/.f64 1 (pow.f64 x 11)))) (+.f64 (sqrt.f64 x) (*.f64 -1/4 (*.f64 eps (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))","(fma.f64 (*.f64 (*.f64 eps eps) -3/32) (sqrt.f64 (pow.f64 x -7)) (fma.f64 (*.f64 (pow.f64 eps 3) (+.f64 -1/384 -5/96)) (sqrt.f64 (pow.f64 x -11)) (fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x))))","(*.f64 (pow.f64 1 1/4) (sqrt.f64 x))","(sqrt.f64 x)","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)))","(fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x))","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (+.f64 (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)) (*.f64 -3/32 (*.f64 (pow.f64 eps 2) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 7))))))))","(+.f64 (fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x)) (*.f64 (*.f64 -3/32 (*.f64 eps eps)) (sqrt.f64 (pow.f64 x -7))))","(+.f64 (*.f64 -1/4 (*.f64 eps (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))) (+.f64 (*.f64 (pow.f64 1 1/4) (sqrt.f64 x)) (+.f64 (*.f64 -7/128 (*.f64 (pow.f64 eps 3) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 11)))))) (*.f64 -3/32 (*.f64 (pow.f64 eps 2) (*.f64 (pow.f64 1 1/4) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))))))))","(+.f64 (fma.f64 -1/4 (*.f64 eps (sqrt.f64 (pow.f64 x -3))) (sqrt.f64 x)) (fma.f64 -7/128 (*.f64 (pow.f64 eps 3) (sqrt.f64 (pow.f64 x -11))) (*.f64 (*.f64 -3/32 (*.f64 eps eps)) (sqrt.f64 (pow.f64 x -7)))))","(exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))","(pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))","(+.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps))))","(+.f64 (+.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 (pow.f64 x 4) -3/32)) (*.f64 eps eps))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 6)) (+.f64 (*.f64 1/32 (pow.f64 x 6)) (*.f64 -1/384 (pow.f64 x 6))))) (pow.f64 eps 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (pow.f64 eps 2)) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))))","(+.f64 (+.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 (pow.f64 x 6) (+.f64 11/384 -1/12))) (pow.f64 eps -3))) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 (pow.f64 x 4) -3/32)) (*.f64 eps eps)) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps))))","(pow.f64 (*.f64 -1 eps) 1/4)","(pow.f64 (neg.f64 eps) 1/4)","(+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))))","(+.f64 (pow.f64 (neg.f64 eps) 1/4) (*.f64 (*.f64 -1/4 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4)) (*.f64 x x)))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2)))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps -7)) 1/4) (*.f64 (pow.f64 x 4) -3/32) (+.f64 (pow.f64 (neg.f64 eps) 1/4) (*.f64 (*.f64 -1/4 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4)) (*.f64 x x))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/4) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 4)))) (+.f64 (pow.f64 (*.f64 -1 eps) 1/4) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 3)) 1/4) (pow.f64 x 2))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/4) (+.f64 (*.f64 -1/32 (pow.f64 x 6)) (+.f64 (*.f64 1/12 (pow.f64 x 6)) (*.f64 1/384 (pow.f64 x 6)))))))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps -7)) 1/4) (*.f64 (pow.f64 x 4) -3/32) (+.f64 (pow.f64 (neg.f64 eps) 1/4) (fma.f64 -1/4 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -3)) 1/4) (*.f64 x x)) (*.f64 (neg.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/4)) (*.f64 (pow.f64 x 6) (+.f64 11/128 -1/32))))))"]],"time":153.06494140625,"type":"simplify"},{"compiler":[[9173,3868]],"time":81.39208984375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)","fresh",24.647058749784108],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)","fresh",24.675981534752985],["(*.f64 1/2 (/.f64 eps x))","fresh",35.68870459337826],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","done",24.214644929817577],["(fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))) x)","fresh",24.627175780266615],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","done",24.54451727222146],["(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","fresh",39.88798473881868],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","next",24.595913351406733]],"compiler":[[13,9],[18,9],[7,5],[10,6],[20,11],[19,8],[17,13],[34,16],[13,9],[18,9],[7,5],[20,11],[17,13],[34,16]],"count":[[345,8]],"kept":[{"done":[1,1],"fresh":[5,4],"new":[338,2],"picked":[1,1]}],"min-error":[0.13641411740466258],"time":73.094970703125,"type":"prune"},{"compiler":[[135,16]],"locations":[["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))",0.240566259768442,true],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))",4.50145410104065,true],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))",10.09154110310454,true],["(cbrt.f64 (*.f64 x x))",22.191321566993658,true]],"time":16.423828125,"type":"localize"},{"count":[[4,34]],"series":[["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","-inf",1.9560546875],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","inf",2.991943359375],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","0",1.629150390625],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","-inf",1.635009765625],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","inf",2.1591796875],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","0",1.698974609375],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","-inf",0.427978515625],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","inf",0.507080078125],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","0",0.3740234375],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","-inf",0.402099609375],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","inf",0.34716796875],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","0",0.2958984375],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","-inf",0.826171875],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","inf",0.86083984375],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","eps","0",1.585205078125],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","-inf",0.740234375],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","inf",0.739990234375],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","x","0",0.671875],["(cbrt.f64 (*.f64 x x))","x","-inf",0.239990234375],["(cbrt.f64 (*.f64 x x))","x","inf",0.315185546875],["(cbrt.f64 (*.f64 x x))","x","0",0.4169921875]],"time":21.2421875,"type":"series"},{"count":[[4,181]],"inputs":[["(cbrt.f64 (*.f64 x x))","(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))","(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) 0) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) 1/2) (*.f64 (pow.f64 x 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 x 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 0 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 x 2/3)) (*.f64 1/2 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cbrt.f64 x)) -1) (*.f64 (neg.f64 (cbrt.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4) (cbrt.f64 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cbrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1/2) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 0 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 1/2 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))) (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (*.f64 (pow.f64 x 2/3) (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 x))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (cbrt.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))) (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1/2) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 1/2 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 x) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (neg.f64 (cbrt.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (neg.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cbrt.f64 x) 0) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3) (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))) (pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (-.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3)) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 x) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) 1 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3)) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 0) (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1/2) (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1 (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1 (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x))) (*.f64 1 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 x (*.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3))) (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 1 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 0 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1) (*.f64 (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) 1) (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1) (*.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1) (*.f64 (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) 1) (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (*.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1) (*.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3)) 1) (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) 1) (*.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 x (*.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (neg.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (pow.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 2/3) (cbrt.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))) (pow.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (pow.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x) (*.f64 (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))))"]],"rules":[["egg-rr",71],["egg-rr",46],["egg-rr",32],["egg-rr",32]],"time":50.0048828125,"type":"rewrite"},{"count":[[215,248]],"inputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)))))","(+.f64 (*.f64 -55/1296 (*.f64 (pow.f64 eps 3) (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3)))))","(*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 17)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6))))))))))","(*.f64 -1 (pow.f64 (*.f64 -1 eps) 1/6))","(*.f64 -1 (pow.f64 (*.f64 1 x) 1/3))","(*.f64 -1 (pow.f64 (*.f64 -1 x) 1/3))","(-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3))) (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3))))) (pow.f64 (pow.f64 x 2) 1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3))) (*.f64 55/1296 (*.f64 (pow.f64 eps 3) (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/3)))))) (pow.f64 (pow.f64 x 2) 1/6))","(-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2)))) (pow.f64 (/.f64 -1 eps) -1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2))))) (pow.f64 (/.f64 -1 eps) -1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 17)) 1/6) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2)))))) (pow.f64 (/.f64 -1 eps) -1/6))","(*.f64 -1 (*.f64 (pow.f64 -1 1/6) (*.f64 (sqrt.f64 eps) (*.f64 (pow.f64 1 1/3) (cbrt.f64 -1)))))","(*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)))","(+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps))","(+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps)))","(+.f64 (*.f64 (+.f64 (*.f64 55/1296 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)))) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 -55/1296 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9)))))))) (pow.f64 eps 3)) (+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps))))","(*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 (pow.f64 x 2) 1/3)) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))","(*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 -1/6 (*.f64 eps (cbrt.f64 (pow.f64 x -4))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)))))","(+.f64 (fma.f64 -1/6 (*.f64 eps (cbrt.f64 (pow.f64 x -4))) (cbrt.f64 (*.f64 x x))) (*.f64 (*.f64 -5/72 (*.f64 eps eps)) (cbrt.f64 (pow.f64 x -10))))","(+.f64 (*.f64 -55/1296 (*.f64 (pow.f64 eps 3) (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))))))","(fma.f64 -55/1296 (*.f64 (pow.f64 eps 3) (cbrt.f64 (pow.f64 x -16))) (+.f64 (fma.f64 -1/6 (*.f64 eps (cbrt.f64 (pow.f64 x -4))) (cbrt.f64 (*.f64 x x))) (*.f64 (*.f64 -5/72 (*.f64 eps eps)) (cbrt.f64 (pow.f64 x -10)))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(*.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))))","(fma.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (/.f64 (*.f64 -1/6 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (cbrt.f64 (pow.f64 x 7)))) eps))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2)))))","(fma.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (cbrt.f64 (pow.f64 x 7))) eps) (/.f64 (*.f64 (cbrt.f64 x) (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))) (*.f64 eps eps))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3)))))","(fma.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (cbrt.f64 (pow.f64 x 7))) eps) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 6) (+.f64 1/72 -73/1296)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) (pow.f64 eps 3)) (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 eps eps))))))","(*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3))","(*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)))","(fma.f64 -1/6 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6) (cbrt.f64 (pow.f64 x 7))) (*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x)))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/6) (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 4) -5/72)) (fma.f64 -1/6 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6) (cbrt.f64 (pow.f64 x 7))) (*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 17)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6))))))))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/6) (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 4) -5/72)) (-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6) (cbrt.f64 (pow.f64 x 7))) (*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x))) (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -17)) 1/6) (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 6) (+.f64 -1/72 73/1296))))))","(*.f64 -1 (pow.f64 (*.f64 -1 eps) 1/6))","(neg.f64 (pow.f64 (neg.f64 eps) 1/6))","(*.f64 -1 (pow.f64 (*.f64 1 x) 1/3))","(cbrt.f64 (neg.f64 x))","(*.f64 -1 (pow.f64 (*.f64 -1 x) 1/3))","(cbrt.f64 x)","(-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))","(-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/6))","(+.f64 (cbrt.f64 x) (fma.f64 (*.f64 1/6 eps) (cbrt.f64 (pow.f64 x -5)) (neg.f64 (pow.f64 (*.f64 x x) 1/6))))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3))) (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3))))) (pow.f64 (pow.f64 x 2) 1/6))","(+.f64 (fma.f64 5/72 (*.f64 (*.f64 eps eps) (cbrt.f64 (pow.f64 x -11))) (*.f64 (*.f64 1/6 eps) (cbrt.f64 (pow.f64 x -5)))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3))) (*.f64 55/1296 (*.f64 (pow.f64 eps 3) (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/3)))))) (pow.f64 (pow.f64 x 2) 1/6))","(+.f64 (fma.f64 5/72 (*.f64 (*.f64 eps eps) (cbrt.f64 (pow.f64 x -11))) (fma.f64 1/6 (*.f64 eps (cbrt.f64 (pow.f64 x -5))) (*.f64 (*.f64 55/1296 (pow.f64 eps 3)) (cbrt.f64 (pow.f64 x -17))))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)))","(-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(+.f64 (cbrt.f64 x) (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps) (neg.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (-.f64 (+.f64 (cbrt.f64 x) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps))) (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 eps eps))) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))) (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (pow.f64 x 2)) eps)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))","(-.f64 (-.f64 (+.f64 (cbrt.f64 x) (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (*.f64 x x)) eps) (/.f64 (*.f64 (*.f64 (pow.f64 x 6) (+.f64 1/72 -73/1296)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) (neg.f64 (pow.f64 eps 3))))) (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) (*.f64 eps eps))) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))","(-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))","(-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))","(-.f64 (+.f64 (pow.f64 x 1/3) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2)))) (pow.f64 (/.f64 -1 eps) -1/6))","(+.f64 (*.f64 (*.f64 1/6 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6)) (*.f64 x x)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2))))) (pow.f64 (/.f64 -1 eps) -1/6))","(+.f64 (-.f64 (*.f64 (*.f64 1/6 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6)) (*.f64 x x)) (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/6) (*.f64 (pow.f64 x 4) -5/72))) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))","(-.f64 (+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 17)) 1/6) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 5)) 1/6) (pow.f64 x 2)))))) (pow.f64 (/.f64 -1 eps) -1/6))","(+.f64 (-.f64 (fma.f64 (pow.f64 (neg.f64 (pow.f64 eps -17)) 1/6) (*.f64 (pow.f64 x 6) (+.f64 -1/72 73/1296)) (*.f64 (*.f64 1/6 (pow.f64 (neg.f64 (pow.f64 eps -5)) 1/6)) (*.f64 x x))) (*.f64 (pow.f64 (neg.f64 (pow.f64 eps -11)) 1/6) (*.f64 (pow.f64 x 4) -5/72))) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))","(*.f64 -1 (*.f64 (pow.f64 -1 1/6) (*.f64 (sqrt.f64 eps) (*.f64 (pow.f64 1 1/3) (cbrt.f64 -1)))))","(*.f64 (pow.f64 -1 1/6) (sqrt.f64 eps))","(*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)))","(*.f64 (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))","(+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps))","(fma.f64 (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)) (*.f64 (fma.f64 (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4)))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 x -5))) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))) eps))","(+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps)))","(fma.f64 (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)) (fma.f64 (*.f64 eps eps) (fma.f64 (fma.f64 -5/72 (cbrt.f64 (pow.f64 x -10)) (*.f64 -1/9 (pow.f64 (pow.f64 x -14) 1/9))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (fma.f64 1/6 (*.f64 (cbrt.f64 (pow.f64 x -5)) (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4))))) (*.f64 5/72 (*.f64 (cbrt.f64 (pow.f64 x -11)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))))) (*.f64 (fma.f64 (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4)))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 x -5))) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))) eps)))","(+.f64 (*.f64 (+.f64 (*.f64 55/1296 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)))) (+.f64 (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 -55/1296 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9)))))))) (pow.f64 eps 3)) (+.f64 (*.f64 (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 -1/9 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))))) (*.f64 5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/3) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (pow.f64 (pow.f64 x 2) 1/3))))) eps))))","(fma.f64 (fma.f64 55/1296 (*.f64 (cbrt.f64 (pow.f64 x -17)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2))) (fma.f64 5/72 (*.f64 (cbrt.f64 (pow.f64 x -11)) (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4))))) (fma.f64 (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (fma.f64 -55/1296 (cbrt.f64 (pow.f64 x -16)) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 x -4)) (+.f64 2/9 -1/27)) (cbrt.f64 (pow.f64 x -4))))) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 x -5))) (fma.f64 -5/72 (cbrt.f64 (pow.f64 x -10)) (*.f64 -1/9 (pow.f64 (pow.f64 x -14) 1/9))))))) (pow.f64 eps 3) (fma.f64 (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)) (fma.f64 (*.f64 eps eps) (fma.f64 (fma.f64 -5/72 (cbrt.f64 (pow.f64 x -10)) (*.f64 -1/9 (pow.f64 (pow.f64 x -14) 1/9))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (fma.f64 1/6 (*.f64 (cbrt.f64 (pow.f64 x -5)) (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4))))) (*.f64 5/72 (*.f64 (cbrt.f64 (pow.f64 x -11)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))))) (*.f64 (fma.f64 (fma.f64 -1/3 (pow.f64 (pow.f64 x -4) 1/9) (*.f64 -1/6 (cbrt.f64 (pow.f64 x -4)))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 x -5))) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 2)))) eps))))","(*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))) (pow.f64 (pow.f64 x 2) 1/3)) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))","(*.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (cbrt.f64 (*.f64 x x))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))))","(*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (pow.f64 (*.f64 1 x) 1/3)) (pow.f64 (pow.f64 x 2) 1/3)) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))","(*.f64 (fma.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x) (cbrt.f64 (*.f64 x x))) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))"]],"time":160.60693359375,"type":"simplify"},{"compiler":[[11421,3258]],"time":63.6201171875,"type":"eval"},{"alts":[["(*.f64 1/2 (/.f64 eps x))","fresh",35.68870459337826],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","done",24.214644929817577],["(fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))) x)","fresh",24.627175780266615],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)","fresh",24.675981534752985],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","done",24.54451727222146],["(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","fresh",39.88798473881868],["(fma.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))","next",24.55495160086684]],"compiler":[[7,5],[10,6],[20,11],[18,9],[19,8],[17,13],[43,16],[7,5],[20,11],[18,9],[17,13],[43,16]],"count":[[256,7]],"kept":[{"done":[2,2],"fresh":[5,4],"new":[248,1],"picked":[1,0]}],"min-error":[0.13641411740466258],"time":49.657958984375,"type":"prune"},{"compiler":[[134,22]],"locations":[["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))",0.21875,true],["(-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))",4.50145410104065,false],["(pow.f64 x 2/3)",5.528149387766984,true],["(cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))",10.09154110310454,false]],"time":24.862060546875,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","-inf",1.718017578125],["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","inf",1.996826171875],["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","eps","0",0.949951171875],["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","-inf",1.572998046875],["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","inf",1.220947265625],["(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","x","0",0.855224609375],["(pow.f64 x 2/3)","x","-inf",6.60009765625],["(pow.f64 x 2/3)","x","inf",5.555908203125],["(pow.f64 x 2/3)","x","0",16.77685546875]],"time":37.529052734375,"type":"series"},{"count":[[2,70]],"inputs":[["(pow.f64 x 2/3)","(*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) 1/2) (*.f64 (pow.f64 x 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 2/3) 0) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 x 2/3)) (*.f64 1/2 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 x 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x 2/3) (*.f64 0 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 x 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1/2) (*.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 0) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)) (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)) 1) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 1/2 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 0 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (neg.f64 (-.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 2/3) (cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (neg.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (pow.f64 (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (cbrt.f64 x) (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (neg.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))) (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))))))))"]],"rules":[["egg-rr",43],["egg-rr",27]],"time":29.9609375,"type":"rewrite"},{"count":[[94,97]],"inputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(pow.f64 (pow.f64 x 2) 1/3)","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))","(+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))))","(+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 5/72 (/.f64 1 (pow.f64 x 3))) (*.f64 -5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))))))))","(+.f64 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -5/216 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -55/1296 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 55/1296 (/.f64 1 (pow.f64 x 5)))))) (+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 5/72 (/.f64 1 (pow.f64 x 3))) (*.f64 -5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))))))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))))","(+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3)) (+.f64 (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 eps 2)) (pow.f64 (*.f64 1 (pow.f64 x 13)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3)) (+.f64 (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 eps 2)) (pow.f64 (*.f64 1 (pow.f64 x 13)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 3)) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3)))))))))))","(*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))","(+.f64 (*.f64 -1/36 (pow.f64 (/.f64 (*.f64 -1 (pow.f64 x 13)) (pow.f64 eps 5)) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 -1 x) (pow.f64 eps 5)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))))))","(+.f64 (*.f64 -1/36 (pow.f64 (/.f64 (*.f64 -1 (pow.f64 x 13)) (pow.f64 eps 5)) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 -1 x) (pow.f64 eps 5)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 -1 (*.f64 eps x)) 1/3) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6)))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))))) (pow.f64 eps 3))) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 2/3) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 2/3) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 2/3) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(exp.f64 (*.f64 2/3 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 2/3) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))","(*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)))","(+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))))","(fma.f64 eps (fma.f64 -1/6 (*.f64 (cbrt.f64 (pow.f64 x -4)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))) (/.f64 1/6 x)) (*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))))","(+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 5/72 (/.f64 1 (pow.f64 x 3))) (*.f64 -5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))))))))","(fma.f64 eps (fma.f64 -1/6 (*.f64 (cbrt.f64 (pow.f64 x -4)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))) (/.f64 1/6 x)) (fma.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (*.f64 eps eps) (+.f64 (*.f64 (pow.f64 x -3) (+.f64 -1/36 5/72)) (*.f64 (*.f64 -5/72 (cbrt.f64 (pow.f64 x -10))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)))))))","(+.f64 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -5/216 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -55/1296 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 55/1296 (/.f64 1 (pow.f64 x 5)))))) (+.f64 (*.f64 eps (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6)))) (*.f64 1/6 (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 5/72 (/.f64 1 (pow.f64 x 3))) (*.f64 -5/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (pow.f64 x 2) 1/6))))))))))","(fma.f64 (fma.f64 -5/216 (pow.f64 x -5) (fma.f64 -55/1296 (*.f64 (cbrt.f64 (pow.f64 x -16)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))) (*.f64 55/1296 (pow.f64 x -5)))) (pow.f64 eps 3) (fma.f64 eps (fma.f64 -1/6 (*.f64 (cbrt.f64 (pow.f64 x -4)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))) (/.f64 1/6 x)) (fma.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6)) (*.f64 (*.f64 eps eps) (+.f64 (*.f64 (pow.f64 x -3) (+.f64 -1/36 5/72)) (*.f64 (*.f64 -5/72 (cbrt.f64 (pow.f64 x -10))) (-.f64 (cbrt.f64 x) (pow.f64 (*.f64 x x) 1/6))))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))))","(*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))))","(+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 x 7)) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) eps) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))) eps)))) (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3)) (+.f64 (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 eps 2)) (pow.f64 (*.f64 1 (pow.f64 x 13)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))))))))","(+.f64 (*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) (*.f64 (pow.f64 x 4) -5/72)) (*.f64 eps eps)) (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) eps) (/.f64 (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) eps)))) (fma.f64 -1/36 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (cbrt.f64 (pow.f64 x 13))) (*.f64 eps eps)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 x 7)) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) eps) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))) eps)))) (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 2)) (pow.f64 (*.f64 1 x) 1/3)) (+.f64 (*.f64 -1/36 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) (pow.f64 eps 2)) (pow.f64 (*.f64 1 (pow.f64 x 13)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2)) (pow.f64 eps 3)) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) 2) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 6)) (+.f64 (*.f64 -1/1296 (pow.f64 x 6)) (*.f64 -1/18 (pow.f64 x 6)))) (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps))))))))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 x) 1/3)) (*.f64 -1/6 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))) (-.f64 (pow.f64 x 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 eps)))))))) eps) (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3)))))))))))","(+.f64 (*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) (*.f64 (pow.f64 x 4) -5/72)) (*.f64 eps eps)) (/.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) (*.f64 (pow.f64 x 6) (+.f64 1/72 -73/1296))) (pow.f64 eps 3)))) (fma.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) eps) (/.f64 (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))) eps)) (cbrt.f64 x) (fma.f64 -1/36 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps)))) (cbrt.f64 (pow.f64 x 13))) (*.f64 eps eps)) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/72) (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) (cbrt.f64 (pow.f64 x 7))) (pow.f64 eps -3)) (+.f64 (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))) (*.f64 (*.f64 (*.f64 (pow.f64 x 6) (+.f64 1/72 -73/1296)) (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps)))))) (pow.f64 eps -3)))) (*.f64 (cbrt.f64 (pow.f64 x 7)) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (*.f64 2 (+.f64 (log.f64 -1) (log.f64 eps))))) eps) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))) (-.f64 (cbrt.f64 x) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (log.f64 eps))))) eps)))))))))","(*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))","(*.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))","(fma.f64 (*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)) (/.f64 (fma.f64 -1/6 (cbrt.f64 (*.f64 (neg.f64 eps) (pow.f64 x 7))) (*.f64 1/6 (*.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 (pow.f64 x 7)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))))) (neg.f64 eps)))","(+.f64 (*.f64 -1/36 (pow.f64 (/.f64 (*.f64 -1 (pow.f64 x 13)) (pow.f64 eps 5)) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 -1 x) (pow.f64 eps 5)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))))))","(fma.f64 -1/36 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 x 13)) (pow.f64 eps -5))) (-.f64 (-.f64 (fma.f64 (pow.f64 (neg.f64 (pow.f64 eps (neg.f64 11))) 1/6) (*.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 4) -5/72)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))) (*.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))))) (*.f64 (cbrt.f64 (*.f64 (neg.f64 x) (pow.f64 eps -5))) (*.f64 (pow.f64 x 4) -5/72))) (/.f64 (fma.f64 -1/6 (cbrt.f64 (*.f64 (neg.f64 eps) (pow.f64 x 7))) (*.f64 1/6 (*.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 (pow.f64 x 7)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)))","(+.f64 (*.f64 -1/36 (pow.f64 (/.f64 (*.f64 -1 (pow.f64 x 13)) (pow.f64 eps 5)) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 7)) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 -1 x) (pow.f64 eps 5)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 -1 (*.f64 eps x)) 1/3) (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 -1 (*.f64 eps (pow.f64 x 7))) 1/3) (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))))) (*.f64 (pow.f64 (*.f64 -1 eps) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 -1/72 (pow.f64 x 6)) (+.f64 (*.f64 1/18 (pow.f64 x 6)) (*.f64 1/1296 (pow.f64 x 6)))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))))) (pow.f64 eps 3))) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 11)) 1/6) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 (+.f64 (*.f64 1/72 (pow.f64 x 4)) (*.f64 -1/12 (pow.f64 x 4))) (-.f64 (pow.f64 x 1/3) (pow.f64 (/.f64 -1 eps) -1/6))))))))))","(fma.f64 -1/36 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 x 13)) (pow.f64 eps -5))) (-.f64 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (neg.f64 x) (pow.f64 eps -5)))) (*.f64 (pow.f64 x 4) -5/72) (fma.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))) (fma.f64 (pow.f64 (neg.f64 (pow.f64 eps (neg.f64 11))) 1/6) (*.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 4) -5/72)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))) (*.f64 (-.f64 (fma.f64 (*.f64 (pow.f64 (neg.f64 eps) 1/6) (cbrt.f64 x)) (*.f64 (*.f64 (pow.f64 x 6) (+.f64 -1/72 73/1296)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6))) (*.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (neg.f64 eps) (pow.f64 x 7))) (*.f64 (pow.f64 x 4) -5/72)))) (*.f64 (cbrt.f64 (neg.f64 (*.f64 eps x))) (*.f64 (pow.f64 x 6) (+.f64 -1/72 73/1296)))) (neg.f64 (pow.f64 eps -3)))))) (/.f64 (fma.f64 -1/6 (cbrt.f64 (*.f64 (neg.f64 eps) (pow.f64 x 7))) (*.f64 1/6 (*.f64 (pow.f64 (neg.f64 eps) 1/6) (*.f64 (cbrt.f64 (pow.f64 x 7)) (-.f64 (cbrt.f64 x) (pow.f64 (/.f64 -1 eps) -1/6)))))) eps)))"]],"time":115.444091796875,"type":"simplify"},{"compiler":[[17596,5879]],"time":114.519775390625,"type":"eval"},{"alts":[["(*.f64 1/2 (/.f64 eps x))","fresh",35.68870459337826],["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","done",24.214644929817577],["(fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))) x)","fresh",24.627175780266615],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)","fresh",24.675981534752985],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","done",24.54451727222146],["(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","fresh",39.88798473881868],["(fma.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))","done",24.55495160086684]],"compiler":[[7,5],[10,6],[20,11],[18,9],[19,8],[17,13],[43,16]],"count":[[312,7]],"kept":[{"done":[2,2],"fresh":[4,4],"new":[305,0],"picked":[1,1]}],"min-error":[0.13641411740466258],"time":67.112060546875,"type":"prune"},{"accuracy":[0.8883952604002915],"baseline":[24.214644929817577],"branch":[["x",8.5523436602371,2],["eps",10.13284250206261,2],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",0.8883952604002915,2]],"compiler":[[3,2],[3,2],[10,6],[184,56]],"count":[[11,2]],"inputs":[["(fma.f64 (+.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))))))","(pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)","(fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/8) (neg.f64 (sqrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/4))) x)","(*.f64 1/2 (/.f64 eps x))","(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (neg.f64 (fma.f64 x x (neg.f64 eps)))) x)","(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) x)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (*.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (sqrt.f64 (fma.f64 x x (neg.f64 eps))))))","(pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))) 3)","(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"link":["."],"name":["ENA, Section 1.4, Exercise 4d"],"oracle":[62.44428475319866],"outputs":[["(-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps))))","(*.f64 1/2 (/.f64 eps x))"]],"time":32.524169921875,"times":[["x",12.918212890625],["eps",8.757080078125],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",8.091064453125]],"type":"regimes"},{"bstep":[[-2.2659394579105163e-153,0.0,0.10498046875]],"compiler":[[5,4],[10,6]],"method":["left-value"],"time":0.220947265625,"type":"bsearch"},{"compiler":[[26,16]],"inputs":[["(if (<=.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) -7547924849643083/3773962424821541352241554580988268890916921220416440428376206300245624162392148852086126725177658767541468375030763844899770584629924792632561434251432696043649395326976) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 1/2 (/.f64 eps x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) -7547924849643083/3773962424821541352241554580988268890916921220416440428376206300245624162392148852086126725177658767541468375030763844899770584629924792632561434251432696043649395326976) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (*.f64 1/2 (/.f64 eps x)))","(if (<=.f64 (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) -7547924849643083/3773962424821541352241554580988268890916921220416440428376206300245624162392148852086126725177658767541468375030763844899770584629924792632561434251432696043649395326976) (-.f64 x (sqrt.f64 (fma.f64 x x (neg.f64 eps)))) (/.f64 (*.f64 1/2 eps) x))"]],"stop":[["fuel",1]],"time":21.761962890625,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[26,16]],"remove-preprocessing":[[]],"time":14.06396484375,"type":"end"}]