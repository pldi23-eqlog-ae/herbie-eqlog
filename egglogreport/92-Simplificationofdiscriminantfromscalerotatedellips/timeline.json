[{"compiler":[[115,84]],"method":["search"],"sampling":[[12,0.062347561048245126,0.9352134157236769,0.0024390232280779856],[11,0.062347561048245126,0.9352134157236769,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":2090.120849609375,"type":"analyze"},{"outcomes":[["body",512,"invalid",209.79736328125,255],["body",8192,"valid",945.518310546875,72],["body",512,"valid",290.977783203125,366],["body",1024,"invalid",1058.393310546875,717],["body",256,"invalid",433.719970703125,1159],["body",2048,"invalid",3130.0830078125,1191],["body",8192,"invalid",628.6513671875,48],["body",4096,"valid",7695.85888671875,1497],["body",1024,"valid",1299.472412109375,910],["body",4096,"invalid",4468.502685546875,875],["body",256,"valid",1465.125244140625,3634],["body",2048,"valid",4626.1396484375,1777]],"time":26265.47412109375,"type":"sample"},{"compiler":[[114,83]],"inputs":[["0","1","2","3","4"],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 x-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) a) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 x-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) a) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) a) a)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 y-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) a) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 y-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) a)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) a) a)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 x-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) b) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 x-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) b) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) b) b)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 y-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) b) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 y-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) b)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) b) b)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) angle) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) angle) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2)) angle) angle)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) x-scale) angle) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) x-scale) angle)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2)) angle) angle)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) y-scale) x-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) y-scale) x-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b a) (-.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) x-scale) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b a) (-.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) x-scale) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b angle) (-.f64 b angle))) (sin.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) x-scale) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 a (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 x-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) a) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 x-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) a) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) a) a)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b x-scale) (-.f64 b x-scale))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) a) a)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 y-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) a) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 y-scale 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) a)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) a) a)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b y-scale) (-.f64 b y-scale))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) x-scale) a) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) a) a)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 angle a) (-.f64 angle a))) (sin.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) x-scale) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (*.f64 b (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 x-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) b) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 x-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) b) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) b) b)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 x-scale a) (-.f64 x-scale a))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) b) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 x-scale (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) b) b)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 x-scale (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 y-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) b) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 y-scale 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) b)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) b) b)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 y-scale a) (-.f64 y-scale a))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) x-scale) b) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 y-scale (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 y-scale (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) b) b)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) angle) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) angle) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2)) angle) angle)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 x-scale 180) (PI.f64)))) 2)) y-scale) y-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b a) (-.f64 b a))) (sin.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) angle) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) 2)) angle) angle)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 x-scale (PI.f64)) 1/180))) 2)) y-scale) y-scale)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) x-scale) angle) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) x-scale) angle)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 y-scale 180) (PI.f64)))) 2)) angle) angle)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b a) (-.f64 b a))) (sin.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) (cos.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) x-scale) angle) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 y-scale (PI.f64)) 1/180))) 2)) angle) angle)))","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) y-scale) x-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) y-scale) x-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)))","(-.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (*.f64 2 (*.f64 (+.f64 b a) (-.f64 b a))) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) x-scale) y-scale) 2) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) y-scale) y-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) x-scale) x-scale)))"]],"symmetry":[[]],"time":110.85693359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)"]],"time":32.083984375,"type":"simplify"},{"compiler":[[188,133]],"time":1.916015625,"type":"eval"},{"alts":[["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","fresh",40.66446381520047],["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","next",39.44853138828055]],"compiler":[[114,83],[79,56],[114,83],[79,56]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[38.39994404570044],"time":4.5029296875,"type":"prune"},{"compiler":[[554,339]],"locations":[["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))",26.021220226928804,true],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))",26.178320054505573,true],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))",26.291705300413454,true],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))",27.73435998995636,true]],"time":138.608154296875,"type":"localize"},{"count":[[4,84]],"series":[["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","-inf",0.1640625],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","inf",0.15087890625],["(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))","angle","0",0.302001953125],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","-inf",0.14697265625],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","inf",0.14892578125],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","0",0.248046875],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","-inf",0.14990234375],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","inf",0.1708984375],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","0",0.343994140625],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","x-scale","-inf",1.97216796875],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","x-scale","inf",1.169921875],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","x-scale","0",3.992919921875],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","angle","-inf",3.294189453125],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","angle","inf",4.677978515625],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","angle","0",5.58203125],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","a","-inf",0.8720703125],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","a","inf",1.041015625],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","a","0",1.840087890625],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","b","-inf",1.5791015625],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","b","inf",2.26708984375],["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","b","0",2.3828125]],"time":33.416015625,"type":"series"},{"count":[[4,157]],"inputs":[["(-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (neg.f64 x-scale)) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 4)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))) (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) (cbrt.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))) (cbrt.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale))) (/.f64 1 (*.f64 1/4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) 2)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (cbrt.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (-.f64 (neg.f64 (PI.f64)) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (PI.f64)) (-.f64 (neg.f64 (*.f64 (PI.f64) (PI.f64))) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 (fma.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) 2)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4) 2))) (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (cbrt.f64 (*.f64 1/4 x-scale)))) (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (cbrt.f64 (*.f64 1/4 x-scale)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (neg.f64 x-scale)) (*.f64 4 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (neg.f64 x-scale))) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (neg.f64 x-scale)) (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (cbrt.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (neg.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (fma.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (+.f64 (PI.f64) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) 0) (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 2)) (cbrt.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 4)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4) 2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4))))) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (neg.f64 x-scale)) (*.f64 (*.f64 1/4 x-scale) (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))))) (*.f64 (*.f64 1/4 x-scale) (neg.f64 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale) (*.f64 (*.f64 1/4 x-scale) (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))))) (*.f64 (*.f64 1/4 x-scale) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (neg.f64 (*.f64 x-scale x-scale))) (*.f64 (*.f64 1/4 x-scale) (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)))) (*.f64 (*.f64 1/4 x-scale) (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale x-scale)) (*.f64 (*.f64 1/4 x-scale) (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2))) (*.f64 (*.f64 1/4 x-scale) (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 1/4 x-scale)) (*.f64 x-scale (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 x-scale (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 1/4 x-scale)) (*.f64 (neg.f64 x-scale) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (neg.f64 (*.f64 x-scale (*.f64 1/4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)) (*.f64 1/4 x-scale)) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (*.f64 1/4 x-scale)) (*.f64 (*.f64 x-scale x-scale) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (*.f64 x-scale x-scale) (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) 1/4) (*.f64 (*.f64 x-scale x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale))) (*.f64 (*.f64 x-scale x-scale) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 (*.f64 x-scale x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 (*.f64 x-scale x-scale) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 1/4 x-scale)) (*.f64 x-scale (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 x-scale (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 x-scale (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 x-scale (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 x-scale -1/4)) (*.f64 x-scale (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 x-scale (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 1/4 x-scale)) (*.f64 (neg.f64 x-scale) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (neg.f64 (*.f64 x-scale (*.f64 1/4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 (neg.f64 x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 (neg.f64 x-scale) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 x-scale -1/4)) (*.f64 (neg.f64 x-scale) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (neg.f64 x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)) 1/4) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)) (*.f64 1/4 x-scale)) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2)) (*.f64 x-scale -1/4)) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (neg.f64 (*.f64 x-scale x-scale)) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (*.f64 1/4 x-scale)) (*.f64 (*.f64 x-scale x-scale) (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (*.f64 x-scale x-scale) (*.f64 1/4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (*.f64 x-scale -1/4)) (*.f64 (*.f64 x-scale x-scale) (/.f64 (*.f64 (-.f64 (neg.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale))) (*.f64 (*.f64 x-scale x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) 1/4) (*.f64 x-scale (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale))) (*.f64 1/4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) 1/4) (*.f64 (neg.f64 x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) x-scale))) (*.f64 x-scale -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) x-scale) (*.f64 4 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 4)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 4)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) 1 (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) x-scale) (/.f64 (*.f64 (*.f64 (-.f64 a b) (+.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (/.f64 1 x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (/.f64 1 x-scale) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (/.f64 (/.f64 1 x-scale) x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (PI.f64) (PI.f64)) 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))))))))","((#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2)) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 2)) (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))) (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 2)) (cbrt.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (+.f64 (sin.f64 0) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))))))"]],"rules":[["egg-rr",20],["egg-rr",15],["egg-rr",15],["egg-rr",107]],"time":79.015869140625,"type":"rewrite"},{"count":[[241,234]],"inputs":[["(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (+.f64 a (*.f64 -1 a)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b))) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (+.f64 a (*.f64 -1 a)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b) (*.f64 2 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 3))) (pow.f64 x-scale 2)))))) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))))) x-scale)) (+.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale) (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) b)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2))))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))) (*.f64 (pow.f64 angle 4) (-.f64 (*.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 4))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)))))))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))) (+.f64 (*.f64 (pow.f64 angle 4) (-.f64 (*.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 4))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2))))))) (*.f64 (pow.f64 angle 6) (-.f64 (+.f64 (*.f64 1/19131876000000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 1/31886460000000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 6))) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/816293376000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/12244400640000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6)))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/816293376000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/12244400640000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)))))))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (*.f64 (pow.f64 a 4) (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (*.f64 x-scale x-scale)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (*.f64 x-scale x-scale)) (*.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (+.f64 a (*.f64 -1 a)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b))) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(+.f64 (fma.f64 (+.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (/.f64 (pow.f64 (*.f64 (*.f64 0 a) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b) (+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (*.f64 x-scale x-scale)) (*.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale)))) b))) (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(-.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (+.f64 a (*.f64 -1 a)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2))) (pow.f64 x-scale 2)))) b) (*.f64 2 (/.f64 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 3))) (pow.f64 x-scale 2)))))) (*.f64 4 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(+.f64 (fma.f64 (+.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (/.f64 (pow.f64 (*.f64 (*.f64 0 a) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b) (+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 4)) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (neg.f64 (/.f64 (*.f64 (*.f64 0 a) (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale)))) b (/.f64 (*.f64 2 (*.f64 (*.f64 0 a) (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 3)))) (*.f64 x-scale x-scale))))) (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 b (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))))) x-scale)) (+.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (*.f64 a a) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 b (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b)))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 (+.f64 (+.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2)) (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale)))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale) (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))))) x-scale)) b)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 a 2)) (pow.f64 x-scale 2))) (+.f64 (pow.f64 (+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale) (*.f64 -1 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 b 2)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (+.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 (*.f64 a a) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale))) (*.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) b)) (fma.f64 (+.f64 (+.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale))) (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2)) (neg.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2) (*.f64 x-scale x-scale)))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (*.f64 x-scale x-scale)))","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(-.f64 (fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 a (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2))) (*.f64 x-scale x-scale)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (*.f64 x-scale x-scale))) (/.f64 (*.f64 4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (*.f64 x-scale x-scale)))","(-.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(+.f64 (fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 a (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (*.f64 x-scale x-scale)))) (*.f64 -4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (pow.f64 x-scale 2))))) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 a (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 4)) (*.f64 x-scale x-scale))))) (*.f64 -4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 b 4) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 a (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))","(*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (pow.f64 x-scale 2))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 b (*.f64 -1 b)) 2) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (pow.f64 b 2)) (pow.f64 x-scale 2)) (/.f64 (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (pow.f64 x-scale 2))))) (pow.f64 a 2)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)))) (pow.f64 x-scale 2))) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (pow.f64 x-scale 2))))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 a (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2))) (*.f64 x-scale x-scale)) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))))","(fma.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale x-scale)) (*.f64 (*.f64 angle angle) (fma.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 (PI.f64) (+.f64 a b)) 2)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (*.f64 b b))) (*.f64 x-scale x-scale)))))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))) (*.f64 (pow.f64 angle 4) (-.f64 (*.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 4))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)))))))))","(fma.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale x-scale)) (fma.f64 (*.f64 angle angle) (fma.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 (PI.f64) (+.f64 a b)) 2)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (*.f64 b b))) (*.f64 x-scale x-scale))))) (*.f64 (pow.f64 angle 4) (fma.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (pow.f64 (PI.f64) 4)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (+.f64 (/.f64 (*.f64 (fma.f64 1/12597120000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (fma.f64 1/4199040000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/3149280000 (*.f64 b b)) (pow.f64 (PI.f64) 4)))) (*.f64 b b)) (*.f64 x-scale x-scale)) (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/3149280000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) 1/3149280000))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2))))) (*.f64 x-scale x-scale)))))))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) (+.f64 (*.f64 (pow.f64 angle 2) (-.f64 (*.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (pow.f64 b 2)) (pow.f64 x-scale 2)))))) (+.f64 (*.f64 (pow.f64 angle 4) (-.f64 (*.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 4))) (pow.f64 x-scale 2))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2))))))) (*.f64 (pow.f64 angle 6) (-.f64 (+.f64 (*.f64 1/19131876000000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2))) (*.f64 1/31886460000000 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (*.f64 (pow.f64 (+.f64 a b) 2) (pow.f64 (PI.f64) 6))) (pow.f64 x-scale 2)))) (*.f64 4 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/816293376000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/12244400640000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6)))))) (pow.f64 b 2)) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/816293376000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (+.f64 (*.f64 -1/12244400640000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))) (pow.f64 x-scale 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/4199040000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (*.f64 -1/3149280000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))) (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))) (pow.f64 x-scale 2)) (/.f64 (*.f64 (+.f64 (*.f64 -1/32400 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))) (*.f64 1/32400 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4))) (+.f64 (*.f64 1/12597120000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))) (*.f64 1/4199040000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))) (pow.f64 x-scale 2)))))))))))","(fma.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale x-scale)) (fma.f64 (*.f64 angle angle) (fma.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 (PI.f64) (+.f64 a b)) 2)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (*.f64 b b))) (*.f64 x-scale x-scale))))) (fma.f64 (pow.f64 angle 4) (fma.f64 -1/196830000 (/.f64 (*.f64 (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (pow.f64 (PI.f64) 4)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (+.f64 (/.f64 (*.f64 (fma.f64 1/12597120000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (fma.f64 1/4199040000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/3149280000 (*.f64 b b)) (pow.f64 (PI.f64) 4)))) (*.f64 b b)) (*.f64 x-scale x-scale)) (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/3149280000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) 1/3149280000))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2))))) (*.f64 x-scale x-scale)))))) (*.f64 (pow.f64 angle 6) (+.f64 (fma.f64 1/19131876000000 (/.f64 (*.f64 (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (pow.f64 (PI.f64) 6)) (*.f64 x-scale x-scale)) (/.f64 (*.f64 1/31886460000000 (*.f64 (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (pow.f64 (PI.f64) 6))) (*.f64 x-scale x-scale))) (*.f64 -4 (+.f64 (/.f64 (*.f64 (fma.f64 -1/816293376000000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) (fma.f64 1/1224440064000000 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) (fma.f64 -1/12244400640000000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) (*.f64 (*.f64 1/2040733440000000 (*.f64 b b)) (pow.f64 (PI.f64) 6))))) (*.f64 b b)) (*.f64 x-scale x-scale)) (+.f64 (/.f64 (*.f64 (*.f64 a a) (fma.f64 1/1224440064000000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) (fma.f64 -1/816293376000000 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) (fma.f64 -1/12244400640000000 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) (*.f64 (*.f64 1/2040733440000000 (*.f64 a a)) (pow.f64 (PI.f64) 6)))))) (*.f64 x-scale x-scale)) (/.f64 (+.f64 (*.f64 (fma.f64 1/12597120000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (fma.f64 1/4199040000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/3149280000 (*.f64 b b)) (pow.f64 (PI.f64) 4)))) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (fma.f64 -1/3149280000 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) 1/3149280000)))) (*.f64 x-scale x-scale))))))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(-.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (pow.f64 x-scale 2)) (*.f64 4 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))) (pow.f64 x-scale 2))))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(/.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (+.f64 a b) 2))) (*.f64 4 (*.f64 (+.f64 (*.f64 (pow.f64 a 2) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) (*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (pow.f64 b 2)) (*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (pow.f64 x-scale 2))","(/.f64 (fma.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (pow.f64 (*.f64 (-.f64 b a) (+.f64 a b)) 2) (neg.f64 (*.f64 4 (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) b) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (*.f64 x-scale x-scale))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 -1/30855889612800000000 (pow.f64 (*.f64 angle (PI.f64)) 7)))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (+.f64 1 (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/90 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 1/90 (*.f64 angle (PI.f64)) (*.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3)))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/90 (*.f64 angle (PI.f64)) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5))))","(+.f64 (*.f64 1/90 (*.f64 angle (PI.f64))) (+.f64 (*.f64 -1/241061637600000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))) (+.f64 (*.f64 -1/4374000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/708588000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(fma.f64 1/90 (*.f64 angle (PI.f64)) (fma.f64 -1/241061637600000000 (pow.f64 (*.f64 angle (PI.f64)) 7) (fma.f64 -1/4374000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 1/708588000000 (pow.f64 (*.f64 angle (PI.f64)) 5)))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))"]],"time":284.924072265625,"type":"simplify"},{"compiler":[[26353,16745]],"time":238.387939453125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","next",27.398098679343654],["(/.f64 (/.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 (*.f64 x-scale x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 (*.f64 x-scale x-scale) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2)))) y-scale) y-scale)","fresh",51.786100310679174],["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (+.f64 1 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","fresh",46.17808894018881],["(/.f64 (/.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",38.358840884183046],["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","fresh",39.57394282592364],["(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (cbrt.f64 (*.f64 1/4 x-scale)))) (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (cbrt.f64 (*.f64 1/4 x-scale)) -2)))) y-scale) y-scale)","fresh",37.28076698866009],["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","done",39.44853138828055],["(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))) y-scale) y-scale)","fresh",36.941675529842485],["(/.f64 (/.f64 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale x-scale)) (*.f64 (*.f64 angle angle) (fma.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 (PI.f64) (+.f64 a b)) 2)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (*.f64 b b))) (*.f64 x-scale x-scale))))))) y-scale) y-scale)","fresh",48.78783319954708],["(/.f64 (/.f64 (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",37.431228073205034],["(/.f64 (/.f64 (fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b)))) y-scale) y-scale)","fresh",39.236720335911784],["(/.f64 (/.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) y-scale) y-scale)","fresh",35.808662131359384],["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","fresh",39.4453706163591],["(/.f64 (/.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 4)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) y-scale) y-scale)","fresh",38.77214638246308],["(/.f64 (/.f64 (-.f64 (PI.f64) (+.f64 (PI.f64) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))) y-scale) y-scale)","fresh",37.60959703571608],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","fresh",40.66446381520047],["(/.f64 (/.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))) y-scale) y-scale)","fresh",38.58141210043356],["(/.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) y-scale) y-scale)","fresh",38.81486313994036],["(/.f64 (/.f64 (fma.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (/.f64 1 x-scale) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) y-scale) y-scale)","fresh",39.3691581085803]],"compiler":[[20,14],[98,70],[82,59],[47,32],[74,53],[86,63],[79,56],[80,58],[87,55],[47,32],[141,88],[22,17],[82,59],[97,64],[81,57],[114,83],[138,85],[113,80],[93,61],[20,14],[98,70],[82,59],[47,32],[74,53],[86,63],[80,58],[87,55],[47,32],[141,88],[22,17],[82,59],[97,64],[81,57],[114,83],[138,85],[113,80],[93,61]],"count":[[282,19]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[280,17],"picked":[1,1]}],"min-error":[21.31963291447705],"time":130.095947265625,"type":"prune"},{"compiler":[[68,33]],"locations":[["(pow.f64 (*.f64 a b) 2)",0.22494125976844204,true],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)",5.329505278972203,true],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)",7.948237711591317,true],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))",14.950808820831696,true]],"time":13.56005859375,"type":"localize"},{"count":[[4,156]],"series":[["(pow.f64 (*.f64 a b) 2)","b","-inf",0.404052734375],["(pow.f64 (*.f64 a b) 2)","b","inf",0.385009765625],["(pow.f64 (*.f64 a b) 2)","b","0",0.365966796875],["(pow.f64 (*.f64 a b) 2)","a","-inf",0.406005859375],["(pow.f64 (*.f64 a b) 2)","a","inf",0.39306640625],["(pow.f64 (*.f64 a b) 2)","a","0",0.366943359375],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","y-scale","-inf",0.201171875],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","y-scale","inf",0.469970703125],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","y-scale","0",0.556884765625],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","x-scale","-inf",0.18310546875],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","x-scale","inf",0.391845703125],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","x-scale","0",0.72607421875],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","b","-inf",0.182861328125],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","b","inf",0.51708984375],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","b","0",0.73583984375],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","a","-inf",0.18212890625],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","a","inf",0.571044921875],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","a","0",0.901123046875],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","y-scale","-inf",0.285888671875],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","y-scale","inf",0.526123046875],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","y-scale","0",0.9912109375],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","x-scale","-inf",0.177978515625],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","x-scale","inf",0.375],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","x-scale","0",0.590087890625],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","b","-inf",0.196044921875],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","b","inf",0.43603515625],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","b","0",0.614990234375],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","a","-inf",0.199951171875],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","a","inf",0.43994140625],["(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","a","0",0.697021484375],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","x-scale","-inf",0.196044921875],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","x-scale","inf",0.359130859375],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","x-scale","0",4.2958984375],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","b","-inf",0.197021484375],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","b","inf",0.47802734375],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","b","0",1.139892578125],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","a","-inf",0.219970703125],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","a","inf",0.546142578125],["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","a","0",1.113037109375]],"time":22.569091796875,"type":"series"},{"count":[[4,305]],"inputs":[["(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))","(/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale)","(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","(pow.f64 (*.f64 a b) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 0) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (*.f64 0 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 x-scale x-scale))) (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)) (pow.f64 x-scale 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (neg.f64 (pow.f64 x-scale -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (/.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)) (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) x-scale) (/.f64 (cbrt.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4))) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (pow.f64 x-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) (/.f64 -4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x-scale -2) (*.f64 -4 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -64 (*.f64 x-scale x-scale))) (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x-scale -2)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (pow.f64 x-scale -2))) (/.f64 -4 (cbrt.f64 (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x-scale) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 x-scale) (/.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (/.f64 1 (cbrt.f64 (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (/.f64 -1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (cbrt.f64 (pow.f64 x-scale -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (*.f64 x-scale x-scale) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x-scale) (*.f64 4 (pow.f64 (*.f64 a b) 2))) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x-scale) (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64 (*.f64 x-scale x-scale))) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (neg.f64 (pow.f64 (*.f64 a b) 2))) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)))) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) (cbrt.f64 (/.f64 -64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) 1) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) 4) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) x-scale) (cbrt.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x-scale -2)) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (pow.f64 x-scale -2))) -4) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (/.f64 1 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (pow.f64 x-scale 4)))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (cbrt.f64 (pow.f64 x-scale 4)))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 x-scale)) (/.f64 -4 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale 4))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)) (pow.f64 x-scale 4)))) (cbrt.f64 (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2))) (cbrt.f64 (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)) (pow.f64 x-scale 4)))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 16 (pow.f64 (*.f64 a b) 4)) (pow.f64 x-scale 4)))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) 1) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) 1) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) 1) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64 x-scale)) (/.f64 (pow.f64 (*.f64 a b) 2) x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 (neg.f64 (*.f64 x-scale x-scale)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 (*.f64 x-scale x-scale) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2)))) (neg.f64 (cbrt.f64 (pow.f64 x-scale 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale))) (cbrt.f64 (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) (neg.f64 (/.f64 (*.f64 x-scale x-scale) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 x-scale 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 x-scale 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 0) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y-scale)) (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4 x-scale) (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) (/.f64 (pow.f64 x-scale -2) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 (pow.f64 x-scale -2) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2) (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -4 x-scale) (cbrt.f64 y-scale)) (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (/.f64 1 (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 1 (*.f64 (*.f64 x-scale x-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale) (neg.f64 (pow.f64 x-scale -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (pow.f64 x-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 (*.f64 x-scale x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 -4 x-scale) (cbrt.f64 y-scale)) (/.f64 (pow.f64 (*.f64 a b) 2) x-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 y-scale)) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) (pow.f64 x-scale -2)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2)))) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 x-scale x-scale) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 4 (pow.f64 (*.f64 a b) 2))) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale))) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) (cbrt.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (/.f64 -1 y-scale)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (/.f64 -1 y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 -1 y-scale)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale)) 1) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) 1) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 1) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale) 1) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) (cbrt.f64 (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) y-scale)) (cbrt.f64 (neg.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) y-scale)) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2)) y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 (*.f64 y-scale y-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (/.f64 1 y-scale)) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (/.f64 1 y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 1 y-scale)) (/.f64 (*.f64 x-scale x-scale) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (/.f64 1 y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 (pow.f64 x-scale -2) (cbrt.f64 (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2) (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) 2) (*.f64 y-scale y-scale)))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64 x-scale)) (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (*.f64 (*.f64 x-scale x-scale) y-scale) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (/.f64 (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 x-scale y-scale) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 (*.f64 x-scale x-scale) y-scale) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (*.f64 1 (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 1 (*.f64 (*.f64 x-scale x-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (neg.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (neg.f64 (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 y-scale -3)) (pow.f64 x-scale 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 y-scale -3)) (pow.f64 x-scale 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 0) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) (*.f64 0 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y-scale)) (/.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale)) (/.f64 (/.f64 1 y-scale) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (pow.f64 y-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2) (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (/.f64 1 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (/.f64 1 (neg.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (neg.f64 (neg.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (*.f64 y-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (neg.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2)) (cbrt.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 4 (pow.f64 (*.f64 a b) 2))) (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 x-scale x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (cbrt.f64 y-scale)) (/.f64 1 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2) (*.f64 y-scale y-scale)))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2) (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 2))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 y-scale)) 1) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale) (neg.f64 (*.f64 (*.f64 x-scale x-scale) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 y-scale)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 (*.f64 x-scale x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 y-scale)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (/.f64 (/.f64 1 y-scale) (cbrt.f64 (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 (*.f64 y-scale y-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (pow.f64 y-scale -2)) (cbrt.f64 (pow.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (pow.f64 y-scale -2)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (pow.f64 y-scale -2)) (*.f64 x-scale x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 y-scale -2)) (/.f64 (*.f64 x-scale x-scale) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 4 (pow.f64 (*.f64 a b) 2)) (pow.f64 y-scale -2)) (neg.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (pow.f64 y-scale -2)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 4 x-scale)) (pow.f64 y-scale -2)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale)))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) y-scale)) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2)))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) 2)) y-scale)) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (/.f64 (neg.f64 (*.f64 y-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) (/.f64 (*.f64 y-scale y-scale) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 x-scale 6)) (pow.f64 (*.f64 y-scale y-scale) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) y-scale) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale) (/.f64 1 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) (pow.f64 y-scale -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 4 (*.f64 (pow.f64 (*.f64 a b) 2) (pow.f64 x-scale -2))) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 (*.f64 x-scale x-scale))) y-scale) y-scale) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 x-scale 6)) (pow.f64 (*.f64 y-scale y-scale) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 0) (pow.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 a b) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 a b) 2)) (pow.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 a b) 2) (*.f64 0 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a b)) (pow.f64 (cbrt.f64 (*.f64 a b)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b b) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 (*.f64 a b) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 4)) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 b (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 a (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (cbrt.f64 b)) (*.f64 a (cbrt.f64 b))) (*.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 (cbrt.f64 (*.f64 b b)) a) (*.f64 (cbrt.f64 (*.f64 b b)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 (*.f64 a a)) b) (*.f64 (cbrt.f64 (*.f64 a a)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 b (cbrt.f64 a)) (*.f64 b (cbrt.f64 a))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (*.f64 a b))) (*.f64 1 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 a b)) 1) (*.f64 (neg.f64 (*.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) -1) (*.f64 (*.f64 a b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 a b)) -1) (*.f64 (neg.f64 (*.f64 a b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a b) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a b) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a b) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a b)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a b) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 a b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a b) 6))))))"]],"rules":[["egg-rr",40],["egg-rr",78],["egg-rr",100],["egg-rr",87]],"time":48.905029296875,"type":"rewrite"},{"count":[[461,314]],"inputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2)))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 x-scale -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale (pow.f64 x-scale 2))))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) y-scale)))","(*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)","(*.f64 (pow.f64 a 2) (pow.f64 b 2))","(pow.f64 (*.f64 a b) 2)"]],"time":447.1259765625,"type":"simplify"},{"compiler":[[6589,3518]],"time":60.73291015625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (+.f64 1 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","fresh",46.17808894018881],["(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","fresh",18.740008724998095],["(/.f64 (/.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",38.358840884183046],["(/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (pow.f64 x-scale -2)) y-scale)","fresh",26.555148822458804],["(/.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) y-scale) y-scale)","fresh",38.81486313994036],["(/.f64 (*.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (pow.f64 y-scale -2)) (cbrt.f64 (pow.f64 x-scale 4)))","fresh",34.14566574294952],["(/.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 x-scale x-scale) y-scale))","fresh",26.490580208697835],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","done",27.398098679343654],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","next",16.72648611154013],["(/.f64 (*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2))) y-scale)","fresh",28.850378400152863],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 3)) (*.f64 x-scale x-scale)) y-scale) y-scale)","fresh",27.424121250038073],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","fresh",40.66446381520047],["(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))) y-scale) y-scale)","fresh",36.941675529842485],["(/.f64 (/.f64 (*.f64 -4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) x-scale) y-scale)","fresh",17.339053020794818],["(/.f64 (/.f64 (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",37.431228073205034]],"compiler":[[82,59],[18,14],[47,32],[20,15],[113,80],[26,21],[22,16],[20,14],[20,14],[20,14],[23,17],[114,83],[80,58],[20,14],[47,32],[82,59],[18,14],[47,32],[20,15],[113,80],[26,21],[22,16],[20,14],[20,14],[23,17],[114,83],[80,58],[20,14],[47,32]],"count":[[333,15]],"kept":[{"done":[1,0],"fresh":[17,6],"new":[314,8],"picked":[1,1]}],"min-error":[10.05216297198783],"time":147.81298828125,"type":"prune"},{"compiler":[[60,31]],"locations":[["(pow.f64 (*.f64 a b) 2)",0.22494125976844204,false],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))",5.046295363613095,true],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)",6.888505009353204,true],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))",8.774823024262808,true]],"time":12.922119140625,"type":"localize"},{"count":[[3,132]],"series":[["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","b","-inf",0.1630859375],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","b","inf",0.343994140625],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","b","0",0.462890625],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","a","-inf",0.18505859375],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","a","inf",0.330078125],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","a","0",0.472900390625],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","x-scale","-inf",0.31201171875],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","x-scale","inf",0.324951171875],["(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))","x-scale","0",0.368896484375],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","y-scale","-inf",0.27099609375],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","y-scale","inf",0.337158203125],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","y-scale","0",0.640869140625],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","b","-inf",0.18994140625],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","b","inf",0.47412109375],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","b","0",0.60107421875],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","a","-inf",0.19091796875],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","a","inf",0.5361328125],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","a","0",0.6611328125],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","x-scale","-inf",0.2919921875],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","x-scale","inf",0.452880859375],["(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","x-scale","0",0.5390625],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","y-scale","-inf",0.191162109375],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","y-scale","inf",0.212158203125],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","y-scale","0",0.174072265625],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","b","-inf",0.198974609375],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","b","inf",0.19091796875],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","b","0",0.173095703125],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","a","-inf",0.18310546875],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","a","inf",0.194091796875],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","a","0",0.19189453125],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","x-scale","-inf",0.2060546875],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","x-scale","inf",0.22509765625],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","x-scale","0",0.2548828125]],"time":11.0048828125,"type":"series"},{"count":[[3,228]],"inputs":[["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)","(*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 0) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) (*.f64 0 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 -1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2) (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) y-scale) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 x-scale y-scale))) (/.f64 (/.f64 1 y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) x-scale) (/.f64 (/.f64 1 y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (/.f64 1 y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x-scale) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale))) (pow.f64 (cbrt.f64 (*.f64 x-scale y-scale)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 1 (*.f64 y-scale (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 1 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale y-scale)) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (neg.f64 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (neg.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale y-scale)) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale))) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x-scale) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) x-scale) (/.f64 1 y-scale)) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x-scale y-scale))) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) -1) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 x-scale y-scale))) (/.f64 1 y-scale)) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2)) (cbrt.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))) (cbrt.f64 (neg.f64 (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2)) (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))) (cbrt.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) y-scale) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2))) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale y-scale)) 1) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (cbrt.f64 y-scale)) 1) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale) 1) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale))) 1) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (/.f64 (/.f64 1 y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (/.f64 (/.f64 1 y-scale) (*.f64 x-scale y-scale))) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 (/.f64 1 y-scale) (*.f64 x-scale y-scale))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x-scale)) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (/.f64 1 y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))) (cbrt.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2) (pow.f64 (*.f64 x-scale y-scale) 2)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2))) (cbrt.f64 (neg.f64 (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2) (pow.f64 (*.f64 x-scale y-scale) 2)))) (cbrt.f64 (neg.f64 (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 2))) (cbrt.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2) (pow.f64 (*.f64 x-scale y-scale) 2)))) (cbrt.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))) (cbrt.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) (/.f64 1 (*.f64 x-scale y-scale))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (/.f64 1 y-scale) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 x-scale)) (/.f64 1 y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 -1 (*.f64 x-scale y-scale))) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (*.f64 x-scale y-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (*.f64 x-scale y-scale))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 y-scale (*.f64 x-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) x-scale) (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 0) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 0 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y-scale)) (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 y-scale)) (/.f64 (/.f64 -4 x-scale) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 -4 x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)) (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4))) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -4 x-scale) (cbrt.f64 y-scale)) (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 (pow.f64 (*.f64 a b) 2) 4)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 y-scale)) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 -4 x-scale) (cbrt.f64 y-scale)) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 y-scale)) (/.f64 -4 x-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2)) (cbrt.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)))) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 y-scale y-scale))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (/.f64 1 y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (/.f64 1 y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 -4 x-scale) (cbrt.f64 (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4))) y-scale)) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) 1) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale)) 1) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (/.f64 -1 y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 a b) 2) y-scale) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64 x-scale)) (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) (/.f64 x-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)) (*.f64 y-scale y-scale)))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))) (cbrt.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)) (*.f64 y-scale y-scale)))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 2))) (cbrt.f64 (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (neg.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 (*.f64 x-scale y-scale) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 -64 (pow.f64 (*.f64 a b) 6)) (pow.f64 (*.f64 x-scale y-scale) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) 0) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) (*.f64 0 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4 x-scale)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -4 x-scale) 2)) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -64 x-scale)) (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4))) (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 a b) -4) x-scale) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (pow.f64 (*.f64 a b) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (/.f64 -4 x-scale))) (cbrt.f64 (pow.f64 (/.f64 -4 x-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 4)) (/.f64 -4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 x-scale) (neg.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (pow.f64 (cbrt.f64 x-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (/.f64 -1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64 x-scale)) (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) -1) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4))) (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 a b) 2) 4)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) (/.f64 x-scale -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (/.f64 -64 x-scale))) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 2) (/.f64 x-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) 1) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) 1) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (cbrt.f64 (*.f64 x-scale x-scale)))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 -4 x-scale) 2) (pow.f64 (*.f64 a b) 4)))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -4 x-scale) 2)) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (neg.f64 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -4 x-scale) 2)) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (pow.f64 (*.f64 a b) 2)) (/.f64 x-scale -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale))) (neg.f64 (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a b) 6) (pow.f64 (/.f64 -4 x-scale) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 4 x-scale) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 6) (pow.f64 (/.f64 -4 x-scale) 3)))))))"]],"rules":[["egg-rr",53],["egg-rr",70],["egg-rr",105]],"time":41.43701171875,"type":"rewrite"},{"count":[[360,235]],"inputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)"]],"time":379.577880859375,"type":"simplify"},{"compiler":[[5894,3050]],"time":53.14306640625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (+.f64 1 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","fresh",46.17808894018881],["(/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale))) x-scale)","fresh",20.423625810296414],["(/.f64 (/.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",38.358840884183046],["(/.f64 (/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (pow.f64 (cbrt.f64 x-scale) -2)) y-scale) (*.f64 x-scale y-scale))","fresh",16.794813662697585],["(/.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) y-scale) y-scale)","fresh",38.81486313994036],["(/.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 x-scale x-scale) y-scale))","fresh",26.490580208697835],["(/.f64 (*.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) (*.f64 x-scale y-scale))","fresh",19.33839995666905],["(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","done",27.398098679343654],["(/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 -4 x-scale) y-scale)) (*.f64 x-scale y-scale))","fresh",15.402654322256923],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","next",13.225194467835662],["(/.f64 (*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2))) y-scale)","fresh",28.850378400152863],["(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 3)) y-scale) (*.f64 x-scale y-scale))","fresh",16.765184902929224],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","fresh",40.66446381520047],["(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))) y-scale) y-scale)","fresh",36.941675529842485],["(/.f64 (/.f64 (*.f64 -4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) x-scale) y-scale)","fresh",17.339053020794818],["(/.f64 (/.f64 (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",37.431228073205034]],"compiler":[[82,59],[22,16],[47,32],[26,18],[113,80],[22,16],[20,14],[20,14],[20,14],[22,13],[20,14],[23,17],[114,83],[80,58],[20,14],[47,32],[82,59],[22,16],[47,32],[26,18],[113,80],[22,16],[20,14],[20,14],[22,13],[20,14],[23,17],[114,83],[80,58],[20,14],[47,32]],"count":[[291,16]],"kept":[{"done":[1,1],"fresh":[13,9],"new":[276,6],"picked":[1,0]}],"min-error":[9.18017652831586],"time":124.693115234375,"type":"prune"},{"compiler":[[69,28]],"locations":[["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))",0.15234375,true],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)",4.8612075503286425,true],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)",6.888505009353204,true],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))",8.774823024262808,true]],"time":12.56396484375,"type":"localize"},{"count":[[4,168]],"series":[["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","x-scale","-inf",0.156982421875],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","x-scale","inf",0.162109375],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","x-scale","0",1.27685546875],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","b","-inf",0.155029296875],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","b","inf",0.1728515625],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","b","0",0.156005859375],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","a","-inf",0.156005859375],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","a","inf",0.172119140625],["(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))","a","0",0.1591796875],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","x-scale","-inf",0.281005859375],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","x-scale","inf",0.458984375],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","x-scale","0",0.575927734375],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","b","-inf",0.291015625],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","b","inf",0.3759765625],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","b","0",0.4541015625],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","a","-inf",0.260009765625],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","a","inf",0.467041015625],["(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","a","0",0.47509765625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","y-scale","-inf",0.177001953125],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","y-scale","inf",0.158935546875],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","y-scale","0",0.162109375],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","x-scale","-inf",0.177978515625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","x-scale","inf",0.16015625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","x-scale","0",0.17822265625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","b","-inf",0.16015625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","b","inf",0.1611328125],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","b","0",0.18212890625],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","a","-inf",0.160888671875],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","a","inf",0.178955078125],["(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","a","0",0.162841796875],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","y-scale","-inf",0.176025390625],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","y-scale","inf",0.193115234375],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","y-scale","0",0.173828125],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","x-scale","-inf",0.203125],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","x-scale","inf",0.18896484375],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","x-scale","0",0.19287109375],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","b","-inf",0.19189453125],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","b","inf",0.215087890625],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","b","0",0.176025390625],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","a","-inf",0.2001953125],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","a","inf",0.226806640625],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","a","0",0.2529296875]],"time":11.1630859375,"type":"series"},{"count":[[4,200]],"inputs":[["(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale)","(/.f64 (*.f64 (*.f64 a b) -4) x-scale)","(*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 0) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) (*.f64 0 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (/.f64 -1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2) (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) y-scale) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) x-scale) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (cbrt.f64 (*.f64 x-scale y-scale))) (/.f64 (/.f64 1 y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (/.f64 (/.f64 1 y-scale) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) x-scale) (/.f64 (/.f64 1 y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (/.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 x-scale y-scale))) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x-scale) (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) y-scale) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (/.f64 1 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (*.f64 x-scale y-scale)) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (/.f64 1 (*.f64 y-scale (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale))) (pow.f64 (cbrt.f64 (*.f64 x-scale y-scale)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (neg.f64 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (neg.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (*.f64 x-scale y-scale)) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale))) (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) y-scale) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (*.f64 y-scale (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (/.f64 (neg.f64 (*.f64 y-scale (*.f64 x-scale y-scale))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (/.f64 (*.f64 y-scale (*.f64 x-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (cbrt.f64 (*.f64 x-scale y-scale)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x-scale y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (*.f64 x-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) (/.f64 1 (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (*.f64 x-scale y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) x-scale) (neg.f64 y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 x-scale y-scale)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 0) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 2)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (/.f64 -1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 y-scale)) (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 2) (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (/.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) (cbrt.f64 y-scale)) (/.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (cbrt.f64 y-scale)) (/.f64 (*.f64 a b) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (/.f64 1 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y-scale) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 y-scale)) (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (cbrt.f64 y-scale)) (pow.f64 (cbrt.f64 y-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (/.f64 1 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) y-scale) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) (neg.f64 y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) y-scale) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (cbrt.f64 y-scale)) (cbrt.f64 (*.f64 y-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (*.f64 x-scale y-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (cbrt.f64 y-scale))) (neg.f64 (cbrt.f64 (*.f64 y-scale y-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (neg.f64 (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) y-scale)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (*.f64 x-scale y-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) y-scale) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 0) (/.f64 (*.f64 a (*.f64 b -4)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (*.f64 0 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (/.f64 (*.f64 a (*.f64 b -4)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 a b) (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x-scale)) (/.f64 (*.f64 a b) (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (*.f64 a b)) (/.f64 -1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 x-scale)) (/.f64 (*.f64 b -4) (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (*.f64 b -4) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -64 x-scale)) (/.f64 (*.f64 a b) (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (/.f64 (*.f64 a b) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 a (*.f64 b -4)) 2) (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (*.f64 b -4))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 a (*.f64 b -4)) 2)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) (cbrt.f64 x-scale)) (cbrt.f64 (/.f64 -64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (/.f64 -4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (*.f64 b -4)) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x-scale) (*.f64 a (*.f64 b -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 2)) (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x-scale)) (/.f64 (*.f64 a b) (cbrt.f64 (/.f64 (*.f64 x-scale x-scale) -64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 a (*.f64 b -4)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 a b) (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) x-scale) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) (neg.f64 x-scale)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a b)) (/.f64 1 (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (*.f64 b -4)) (cbrt.f64 x-scale)) (pow.f64 (cbrt.f64 x-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (*.f64 b -4)) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a b) (*.f64 x-scale -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (*.f64 a b)) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (*.f64 b -4)) (cbrt.f64 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a b)) (/.f64 x-scale 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a b) (/.f64 (*.f64 x-scale -1/4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a b) x-scale) -1/4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a b) (/.f64 x-scale 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 a (*.f64 b -4)) (cbrt.f64 x-scale))) (neg.f64 (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 a b) (/.f64 x-scale 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a b) (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 0) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) (*.f64 0 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a b)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 a (*.f64 b -4)) x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) (cbrt.f64 x-scale)) (/.f64 (*.f64 a b) (cbrt.f64 (/.f64 (*.f64 x-scale x-scale) -64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (/.f64 (*.f64 a (*.f64 b -4)) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (/.f64 1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (*.f64 b -4)) (*.f64 (/.f64 1 x-scale) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) 2)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 a (/.f64 (*.f64 a (*.f64 b -4)) x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a b) 2) (neg.f64 x-scale)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (*.f64 (/.f64 (*.f64 a b) (/.f64 x-scale 4)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a b) (/.f64 x-scale 4)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a b)) (/.f64 (*.f64 a b) (/.f64 x-scale 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (cbrt.f64 x-scale)) (pow.f64 (cbrt.f64 x-scale) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (/.f64 -1 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) x-scale)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) (neg.f64 x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (cbrt.f64 x-scale)) (cbrt.f64 (*.f64 x-scale x-scale)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 x-scale 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) -4) (cbrt.f64 x-scale))) (neg.f64 (cbrt.f64 (*.f64 x-scale x-scale))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) 4) x-scale))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 -4 x-scale)) 3) 1))))))"]],"rules":[["egg-rr",49],["egg-rr",46],["egg-rr",46],["egg-rr",59]],"time":39.741943359375,"type":"rewrite"},{"count":[[368,209]],"inputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 y-scale 2) (pow.f64 x-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 (pow.f64 x-scale 2) (pow.f64 y-scale 2))))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 y-scale x-scale) -2) -4))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 y-scale x-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (*.f64 x-scale y-scale)))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 y-scale x-scale))","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 a b) x-scale))","(/.f64 (*.f64 (*.f64 -4 b) a) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)","(*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) x-scale))","(/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) x-scale)"]],"time":479.3388671875,"type":"simplify"},{"compiler":[[4281,2132]],"time":37.93603515625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale))) x-scale)","fresh",20.423625810296414],["(/.f64 (/.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",38.358840884183046],["(/.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale)) (*.f64 x-scale y-scale))","fresh",9.737476967381207],["(/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 -4 x-scale) y-scale)) (*.f64 x-scale y-scale))","fresh",15.402654322256923],["(/.f64 (*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2))) y-scale)","fresh",28.850378400152863],["(/.f64 (*.f64 (/.f64 a (cbrt.f64 y-scale)) (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) (cbrt.f64 (*.f64 y-scale y-scale)))) (*.f64 x-scale y-scale))","fresh",26.450564454569747],["(/.f64 (*.f64 a (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) y-scale)) (*.f64 x-scale y-scale))","fresh",17.20283446044018],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))","fresh",40.66446381520047],["(/.f64 (/.f64 (*.f64 (*.f64 a b) (*.f64 a (/.f64 (*.f64 b -4) x-scale))) y-scale) (*.f64 x-scale y-scale))","fresh",15.38600381035974],["(/.f64 (/.f64 (*.f64 -4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) x-scale) y-scale)","fresh",17.339053020794818],["(/.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) y-scale) y-scale)","fresh",38.81486313994036],["(/.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 x-scale x-scale) y-scale))","fresh",26.490580208697835],["(/.f64 (/.f64 (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","fresh",37.431228073205034]],"compiler":[[22,16],[47,32],[22,14],[20,14],[20,14],[28,18],[22,14],[114,83],[22,14],[20,14],[113,80],[22,16],[47,32]],"count":[[225,13]],"kept":[{"done":[1,0],"fresh":[14,9],"new":[209,4],"picked":[1,0]}],"min-error":[7.109648227770302],"time":75.76513671875,"type":"prune"},{"accuracy":[9.737476967381205],"baseline":[9.737476967381207],"branch":[["a",9.737476967381209,1],["b",9.737476967381209,1],["angle",9.737476967381207,1],["x-scale",9.737476967381205,1],["y-scale",9.737476967381209,1],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))",9.737476967381209,1],["(*.f64 (/.f64 angle 180) (PI.f64))",9.737476967381207,1],["(/.f64 angle 180)",9.737476967381207,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[114,83],[10,9],[8,7],[1797,1081]],"count":[[37,1]],"inputs":[["(/.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale)) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (/.f64 a (cbrt.f64 y-scale)) (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) (cbrt.f64 (*.f64 y-scale y-scale)))) (*.f64 x-scale y-scale))","(/.f64 (*.f64 a (/.f64 (/.f64 (*.f64 b (*.f64 a b)) (*.f64 x-scale -1/4)) y-scale)) (*.f64 x-scale y-scale))","(/.f64 (/.f64 (*.f64 (*.f64 a b) (*.f64 a (/.f64 (*.f64 b -4) x-scale))) y-scale) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (/.f64 1 (*.f64 x-scale y-scale))) x-scale)","(/.f64 (/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 x-scale)) (pow.f64 (cbrt.f64 x-scale) -2)) y-scale) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (/.f64 -4 x-scale) (/.f64 (pow.f64 (*.f64 a b) 2) y-scale)) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (pow.f64 (*.f64 a b) 2) (/.f64 (/.f64 -4 x-scale) y-scale)) (*.f64 x-scale y-scale))","(/.f64 (/.f64 (*.f64 (*.f64 a b) (/.f64 (*.f64 (*.f64 a b) -4) x-scale)) y-scale) (*.f64 x-scale y-scale))","(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 3)) y-scale) (*.f64 x-scale y-scale))","(*.f64 (pow.f64 (*.f64 a b) 2) (*.f64 (pow.f64 (*.f64 x-scale y-scale) -2) -4))","(/.f64 (*.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) y-scale) (pow.f64 x-scale -2)) y-scale)","(/.f64 (*.f64 (*.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 x-scale -2))) (pow.f64 y-scale -2)) (cbrt.f64 (pow.f64 x-scale 4)))","(/.f64 (*.f64 (/.f64 1 y-scale) (*.f64 -4 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 x-scale x-scale) y-scale))","(/.f64 (/.f64 (*.f64 (/.f64 -4 x-scale) (pow.f64 (*.f64 a b) 2)) y-scale) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (/.f64 -4 y-scale) (*.f64 (*.f64 a a) (pow.f64 (/.f64 b x-scale) 2))) y-scale)","(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 3)) (*.f64 x-scale x-scale)) y-scale) y-scale)","(/.f64 (/.f64 (*.f64 -4 (/.f64 (/.f64 (pow.f64 (*.f64 a b) 2) x-scale) y-scale)) x-scale) y-scale)","(/.f64 (/.f64 (/.f64 (*.f64 -4 (pow.f64 (*.f64 a b) 2)) (*.f64 x-scale x-scale)) y-scale) y-scale)","(/.f64 (/.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) 2) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2))) (*.f64 (*.f64 x-scale x-scale) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (cbrt.f64 (*.f64 1/4 x-scale))))) (*.f64 (*.f64 x-scale x-scale) (cbrt.f64 (pow.f64 (*.f64 1/4 x-scale) 2)))) y-scale) y-scale)","(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (+.f64 1 (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","(/.f64 (/.f64 (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (neg.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (cbrt.f64 (*.f64 1/4 x-scale)))) (*.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (pow.f64 (cbrt.f64 (*.f64 1/4 x-scale)) -2)))) y-scale) y-scale)","(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (neg.f64 x-scale)) (*.f64 (/.f64 1 (*.f64 1/4 x-scale)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))))) y-scale) y-scale)","(/.f64 (/.f64 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 a b) 2) (*.f64 x-scale x-scale)) (*.f64 (*.f64 angle angle) (fma.f64 1/8100 (/.f64 (*.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 (PI.f64) (+.f64 a b)) 2)) (*.f64 x-scale x-scale)) (neg.f64 (*.f64 4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (fma.f64 -1/32400 (pow.f64 (*.f64 b (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 a (PI.f64)) 2)))) (*.f64 (fma.f64 -1/32400 (pow.f64 (*.f64 a (PI.f64)) 2) (*.f64 1/32400 (pow.f64 (*.f64 b (PI.f64)) 2))) (*.f64 b b))) (*.f64 x-scale x-scale))))))) y-scale) y-scale)","(/.f64 (/.f64 (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))) y-scale) y-scale)","(/.f64 (/.f64 (fma.f64 2 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) (*.f64 (pow.f64 b 3) (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)))) x-scale) (fma.f64 (pow.f64 b 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale))) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) x-scale)) 2) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) a) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4)) (*.f64 (*.f64 a a) (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 b b)))) y-scale) y-scale)","(/.f64 (/.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 b 2)) (pow.f64 x-scale 2))) y-scale) y-scale)","(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","(/.f64 (/.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 4)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2)) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) y-scale) y-scale)","(/.f64 (/.f64 (-.f64 (PI.f64) (+.f64 (PI.f64) (fma.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (*.f64 1/4 x-scale)) (neg.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2))))) y-scale) y-scale)","(/.f64 (/.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 0 b) (*.f64 (pow.f64 a 3) (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2))) (*.f64 x-scale x-scale)) (fma.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (*.f64 0 b) (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64))))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 -2 (pow.f64 (*.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) b) 2)) (*.f64 x-scale x-scale))) (*.f64 -4 (/.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4) (*.f64 b b)) (*.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 4))) (*.f64 x-scale x-scale)))) (*.f64 a a) (*.f64 (pow.f64 a 4) (-.f64 (/.f64 (pow.f64 (sin.f64 (*.f64 1/90 (*.f64 angle (PI.f64)))) 2) (*.f64 x-scale x-scale)) (/.f64 (*.f64 4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (*.f64 x-scale x-scale)))))) y-scale) y-scale)","(/.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale)) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 x-scale -1/4)) (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) (*.f64 (neg.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64))))) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) x-scale) (*.f64 1/4 x-scale))))) y-scale) y-scale)","(/.f64 (/.f64 (fma.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64))))) (*.f64 (/.f64 1 x-scale) (*.f64 (sin.f64 (*.f64 angle (*.f64 1/90 (PI.f64)))) (/.f64 (*.f64 (+.f64 b a) (-.f64 b a)) x-scale))) (/.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 angle 1/180) (PI.f64)))) 2))) x-scale) (*.f64 x-scale -1/4))) y-scale) y-scale)","(/.f64 (/.f64 (-.f64 (pow.f64 (/.f64 (*.f64 (*.f64 (+.f64 b a) (-.f64 b a)) (sin.f64 (*.f64 (*.f64 angle 1/180) (+.f64 (PI.f64) (PI.f64))))) x-scale) 2) (*.f64 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)) x-scale) (/.f64 x-scale 4)) (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)))) y-scale) y-scale)","(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))"]],"link":["."],"name":["Simplification of discriminant from scale-rotated-ellipse"],"oracle":[58.680886073481574],"outputs":[["(/.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale)) (*.f64 x-scale y-scale))"]],"time":119.052978515625,"times":[["a",9.859130859375],["b",9.830078125],["angle",9.89501953125],["x-scale",9.97900390625],["y-scale",14.387939453125],["(-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale) (/.f64 (/.f64 (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) x-scale) y-scale)) (*.f64 (*.f64 4 (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) x-scale) x-scale)) (/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2)) y-scale) y-scale)))",5.9501953125],["(*.f64 (/.f64 angle 180) (PI.f64))",9.951904296875],["(/.f64 angle 180)",10.56103515625]],"type":"regimes"},{"compiler":[[22,14]],"inputs":[["(/.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale)) (*.f64 x-scale y-scale))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (/.f64 (*.f64 a (*.f64 b -4)) x-scale) (/.f64 (*.f64 a b) y-scale)) (*.f64 x-scale y-scale))","(/.f64 (*.f64 (*.f64 a (*.f64 b -4)) (*.f64 a b)) (pow.f64 (*.f64 x-scale y-scale) 2))"]],"stop":[["fuel",1]],"time":20.696044921875,"type":"simplify"},{"time":0.019775390625,"type":"soundness"},{"compiler":[[22,14]],"remove-preprocessing":[[]],"time":9.086181640625,"type":"end"}]