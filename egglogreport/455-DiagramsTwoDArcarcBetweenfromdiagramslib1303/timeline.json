[{"compiler":[[22,13]],"method":["search"],"sampling":[[12,0.9068286198889837,0.09219505602959543,0.0009763240814208984],[11,0.8770725436042994,0.12195113231427968,0.0009763240814208984],[10,0.8175603910349309,0.18146328488364816,0.0009763240814208984],[9,0.7609750656411052,0.23804861027747393,0.0009763240814208984],[8,0.6243897974491119,0.37463387846946716,0.0009763240814208984],[7,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[6,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":37.041015625,"type":"analyze"},{"outcomes":[["body",256,"valid",395.277099609375,8256]],"time":402.860107421875,"type":"sample"},{"compiler":[[21,12]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)) (+.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","(/.f64 (-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)) (+.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)))","(/.f64 (fma.f64 y y (*.f64 -4 (*.f64 x x))) (fma.f64 y y (*.f64 (*.f64 x x) 4)))"]],"symmetry":[[]],"time":63.0068359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))"]],"time":19.38720703125,"type":"simplify"},{"compiler":[[38,20]],"time":0.458984375,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","next",32.7578125]],"compiler":[[19,10],[19,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[32.7578125],"time":0.933837890625,"type":"prune"},{"compiler":[[52,22]],"locations":[["(*.f64 -4 (*.f64 y y))",0.030292529305326048,true],["(*.f64 (*.f64 y y) 4)",0.030292529305326048,true],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))",1.753886983238922,true],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))",32.105880768775066,true]],"time":10.628173828125,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 -4 (*.f64 y y))","y","-inf",0.13916015625],["(*.f64 -4 (*.f64 y y))","y","inf",0.18896484375],["(*.f64 -4 (*.f64 y y))","y","0",0.18408203125],["(*.f64 (*.f64 y y) 4)","y","-inf",0.159912109375],["(*.f64 (*.f64 y y) 4)","y","inf",0.261962890625],["(*.f64 (*.f64 y y) 4)","y","0",0.281005859375],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","y","-inf",0.18310546875],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","y","inf",0.248046875],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","y","0",0.280029296875],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","x","-inf",0.287841796875],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","x","inf",0.51904296875],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))","x","0",0.337890625],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","-inf",0.30078125],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","inf",0.572998046875],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","0",0.538818359375],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","-inf",0.379150390625],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","inf",0.56787109375],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","0",0.712890625]],"time":6.421875,"type":"series"},{"count":[[4,233]],"inputs":[["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","(fma.f64 x x (*.f64 -4 (*.f64 y y)))","(*.f64 (*.f64 y y) 4)","(*.f64 -4 (*.f64 y y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 x x)) (*.f64 (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 -4 (*.f64 y y))) (*.f64 (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 0) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (*.f64 (*.f64 -4 (*.f64 y y)) (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 (*.f64 y y)) (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (*.f64 (*.f64 x x) (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (*.f64 0 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) -1/3) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) -1/3)) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) -1) (/.f64 (neg.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3)) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (cbrt.f64 (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x)))) (/.f64 (neg.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3)) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) (/.f64 -1 (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (fma.f64 x x (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 2/3) (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 x x (*.f64 (*.f64 y y) 4))) (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) -1) (/.f64 -1 (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))) -2)) (/.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) -1/3)) (/.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))) -2) (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) -1) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x))) 1) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 2/3) (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 2/3) (cbrt.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)))) (cbrt.f64 (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x))) (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 2/3)) (cbrt.f64 (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) -1) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4))))) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3)) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) -1/3) (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 1) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (cbrt.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 1) (pow.f64 (fma.f64 x x (*.f64 (*.f64 y y) 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (-.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (*.f64 x x))) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 0) (fma.f64 x x (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (*.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 x x)) -1) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (fma.f64 x x (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (*.f64 0 (fma.f64 x x (*.f64 -4 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (+.f64 y y)) (-.f64 x (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x))) (neg.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) -1) (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 2/3) (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (*.f64 y y) 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (pow.f64 x 4/3) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 5) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4/3) (pow.f64 x 2/3) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 -4 y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)) (cbrt.f64 (*.f64 -4 (*.f64 y y))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 y) (cbrt.f64 y)) (pow.f64 y 2/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 2/3) (*.f64 (pow.f64 y 4/3) -4) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (*.f64 y y))) (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (pow.f64 y 2/3)) (pow.f64 y 4/3) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 y) y (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) -4 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (*.f64 y y)) 1 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 y y) 4) (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 3) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y y) (*.f64 (*.f64 y y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 y y) 2) 1) (*.f64 (*.f64 (*.f64 y y) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 y y) 4) 0) (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 4) (*.f64 (*.f64 (*.f64 y y) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 y y)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y y) (*.f64 3 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 2) (*.f64 (*.f64 y y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 y y) 4)) (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 4) (*.f64 0 (*.f64 (*.f64 y y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 y 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y 4) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 y 2/3)) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (cbrt.f64 4)) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (pow.f64 y 2/3) (*.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (*.f64 (pow.f64 y 4/3) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 16) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 2/3) (*.f64 y 4)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 16) (*.f64 y y)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 4/3) (*.f64 4 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) 4) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16) (*.f64 (*.f64 y y) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (*.f64 -4 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16))) (cbrt.f64 (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 y y) (cbrt.f64 -4))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 -4 y) (cbrt.f64 y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y 2/3)) (*.f64 (pow.f64 y 4/3) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -4 (pow.f64 y 2/3))) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -4 y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (neg.f64 (*.f64 (cbrt.f64 16) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (neg.f64 (*.f64 -4 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (cbrt.f64 -4)) (neg.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -4 y) (cbrt.f64 y)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (neg.f64 (*.f64 (pow.f64 y 4/3) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 y y))) (neg.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 y 2/3)) (neg.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 y) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 y) -2) (*.f64 (neg.f64 y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y -2) (*.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 y) 2) (*.f64 (neg.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (+.f64 y y)) (*.f64 -1 (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 y y) 1) (*.f64 (+.f64 y y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 y y) -1) (*.f64 (+.f64 y y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (neg.f64 y)) (*.f64 -2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (neg.f64 y)) (*.f64 2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 y) (*.f64 -2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)) (cbrt.f64 (*.f64 (*.f64 y y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4 (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (*.f64 y y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (*.f64 y y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y y)) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 64 (pow.f64 y 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 y y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 64 (pow.f64 y 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 (*.f64 y y)) 0) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 y y)) (*.f64 (*.f64 -4 (*.f64 y y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -4 (*.f64 y y))) (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 y y)) (*.f64 0 (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 y) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 -4 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -4 y) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (pow.f64 y 2/3)) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (*.f64 (pow.f64 y 4/3) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (cbrt.f64 -4)) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 16) (*.f64 y y)) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16) (*.f64 (*.f64 y y) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (*.f64 (*.f64 -4 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) -4) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 4/3) (*.f64 -4 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (pow.f64 y 2/3) (*.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 4 (pow.f64 y 2/3))) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16))) (cbrt.f64 (*.f64 (*.f64 y y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y 2/3)) (*.f64 (pow.f64 y 4/3) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 y y)) (+.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (*.f64 y 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 y y) (cbrt.f64 4))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y 4)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (neg.f64 (*.f64 (pow.f64 y 2/3) (*.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (neg.f64 (*.f64 (cbrt.f64 16) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 y 2/3)) (neg.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (neg.f64 (*.f64 (pow.f64 y 4/3) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 y y) (neg.f64 (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 y y) 4)) (neg.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (neg.f64 (*.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (cbrt.f64 4)) (neg.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y 4) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 y y))) (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 16)) (cbrt.f64 (*.f64 -4 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -4 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) 4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y y)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 y y) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (*.f64 (*.f64 y y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4 (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) 2) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (neg.f64 (*.f64 (*.f64 y y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 6) -64) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -4 (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 y y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 6) -64))))))"]],"rules":[["egg-rr",54],["egg-rr",67],["egg-rr",50],["egg-rr",62]],"time":45.608154296875,"type":"rewrite"},{"count":[[305,262]],"inputs":[["-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (pow.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(fma.f64 -1/8 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","(+.f64 (fma.f64 -1/8 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 1/32 (pow.f64 x 6)) (pow.f64 y 6)))) -1)","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (*.f64 (*.f64 -4 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y)))) (pow.f64 x -4))) (/.f64 (/.f64 (*.f64 -8 (*.f64 y y)) x) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)) -4 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (*.f64 -8 (*.f64 y y))) (pow.f64 x 6)))) (/.f64 (/.f64 (*.f64 -8 (*.f64 y y)) x) x)))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (*.f64 (*.f64 -4 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y)))) (pow.f64 x -4))) (/.f64 (/.f64 (*.f64 -8 (*.f64 y y)) x) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)) -4 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (*.f64 -8 (*.f64 y y))) (pow.f64 x 6)))) (/.f64 (/.f64 (*.f64 -8 (*.f64 y y)) x) x)))","1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) 32 1))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 32 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (/.f64 (*.f64 -128 (pow.f64 y 6)) (pow.f64 x 6))))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 -1/4 (*.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 x x)) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 (/.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (pow.f64 x 4)) (pow.f64 y 6)) 1/16 (fma.f64 -1/4 (*.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 x x)) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 -1/4 (*.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 x x)) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 (/.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (pow.f64 x 4)) (pow.f64 y 6)) 1/16 (fma.f64 -1/4 (*.f64 (*.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 x x)) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 4 (pow.f64 y 2))","(*.f64 4 (*.f64 y y))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)"]],"time":230.472900390625,"type":"simplify"},{"compiler":[[6118,3134]],"time":59.60693359375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","fresh",32.76171875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","fresh",32.75390625],["1","next",28.248303745163835],["-1","fresh",35.538296261390315]],"compiler":[[22,13],[19,11],[3,3],[3,3],[22,13],[19,11],[3,3],[3,3]],"count":[[263,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[262,4],"picked":[1,0]}],"min-error":[0.22332710598768418],"time":69.791015625,"type":"prune"},{"compiler":[[3,3]],"time":0.751953125,"type":"localize"},{"compiler":[[2,2]],"time":0.0849609375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","fresh",32.76171875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","next",32.75390625],["1","done",28.248303745163835],["-1","fresh",35.538296261390315]],"compiler":[[22,13],[19,11],[3,3],[3,3],[22,13],[19,11],[3,3]],"count":[[4,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[0,0],"picked":[1,1]}],"min-error":[0.22332710598768418],"time":1.983154296875,"type":"prune"},{"compiler":[[53,23]],"locations":[["(*.f64 (*.f64 y y) 4)",0.030292529305326048,false],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))",1.7499807332389217,true],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))",32.105880768775066,true]],"time":11.65087890625,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","x","-inf",0.150146484375],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","x","inf",0.232177734375],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","x","0",0.257080078125],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","y","-inf",0.455078125],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","y","inf",0.299072265625],["(fma.f64 (*.f64 -4 y) y (*.f64 x x))","y","0",0.27392578125],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","-inf",0.261962890625],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","inf",0.2919921875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","x","0",0.244873046875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","-inf",0.322998046875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","inf",0.323974609375],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","y","0",0.327880859375]],"time":3.635009765625,"type":"series"},{"count":[[2,112]],"inputs":[["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","(fma.f64 (*.f64 -4 y) y (*.f64 x x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 0) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 x x)) (*.f64 (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 (*.f64 -4 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 (*.f64 -4 y) y)) (*.f64 (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) (*.f64 0 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (*.f64 (*.f64 (*.f64 -4 y) y) (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -4 y) y) (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (*.f64 (*.f64 x x) (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (cbrt.f64 (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x))))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2))) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) (neg.f64 1/3)) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x))) 1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x))) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (/.f64 -1 (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (fma.f64 (*.f64 -4 y) y (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 2)) (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 y (*.f64 y 4) (*.f64 x x))) (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))) (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (/.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))) -2) (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))) -2)) (/.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) -1) (/.f64 -1 (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (fma.f64 y (*.f64 y 4) (*.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 2)) (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)))) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 2)) (cbrt.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))) (cbrt.f64 (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 2))) (cbrt.f64 (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) -1) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) (neg.f64 1/3)) (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2))) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) 1) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (cbrt.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)))) 1) (cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y 4) (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 -4 y) (neg.f64 (*.f64 x x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 y (*.f64 y 4) (*.f64 x x))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 0) (fma.f64 (*.f64 -4 y) y (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (*.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (fma.f64 (*.f64 -4 y) y (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (*.f64 0 (fma.f64 (*.f64 -4 y) y (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 y) y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) (*.f64 y (*.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (+.f64 y y)) (-.f64 x (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 x) (+.f64 y y)) (-.f64 (neg.f64 x) (+.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 x 4)) (+.f64 (cbrt.f64 (*.f64 (pow.f64 y 4) 16)) (*.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 y (*.f64 y 4)))))) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 y (*.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -4 y) y (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 2)) (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 y) y (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (neg.f64 x) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x x)) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 x 4)) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) x) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 -4 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -4 y) y)) (cbrt.f64 (*.f64 (pow.f64 y 4) 16)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 y)) (*.f64 (cbrt.f64 (*.f64 (*.f64 y y) 16)) y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 -4 y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -4 y) y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 y) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 y) y) 1 (*.f64 x x))))))"]],"rules":[["egg-rr",48],["egg-rr",64]],"time":29.51318359375,"type":"rewrite"},{"count":[[160,141]],"inputs":[["1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 32 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) 1))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 32 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (/.f64 (*.f64 -128 (pow.f64 y 6)) (pow.f64 x 6))))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 (*.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (*.f64 x x)) (pow.f64 y -4)) -1/4 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/16 (/.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (pow.f64 x 4)) (pow.f64 y 6)) (fma.f64 (*.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (*.f64 x x)) (pow.f64 y -4)) -1/4 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 (*.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (*.f64 x x)) (pow.f64 y -4)) -1/4 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(fma.f64 1/16 (/.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (pow.f64 x 4)) (pow.f64 y 6)) (fma.f64 (*.f64 (*.f64 (*.f64 (*.f64 x x) 1/2) (*.f64 x x)) (pow.f64 y -4)) -1/4 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)))","-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -1/8 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) -1))","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","(+.f64 (fma.f64 -1/8 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 1/32 (pow.f64 x 6)) (pow.f64 y 6)))) -1)","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (*.f64 -4 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)))) (/.f64 (*.f64 -8 (*.f64 y y)) (*.f64 x x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)) -4 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (*.f64 -8 (*.f64 y y))) (pow.f64 x 6)))) (/.f64 (*.f64 -8 (*.f64 y y)) (*.f64 x x))))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (*.f64 -4 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)))) (/.f64 (*.f64 -8 (*.f64 y y)) (*.f64 x x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (*.f64 (*.f64 y y) (*.f64 -8 (*.f64 y y))) (pow.f64 x -4)) -4 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (*.f64 -8 (*.f64 y y))) (pow.f64 x 6)))) (/.f64 (*.f64 -8 (*.f64 y y)) (*.f64 x x))))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (*.f64 y y))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (*.f64 y y))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 -4 (*.f64 y y))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))"]],"time":157.995849609375,"type":"simplify"},{"compiler":[[5101,2672]],"time":49.51708984375,"type":"eval"},{"alts":[["-1","fresh",35.538296261390315],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","next",32.76171875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","done",32.75390625],["1","done",28.248303745163835]],"compiler":[[3,3],[22,13],[19,11],[3,3],[3,3],[22,13]],"count":[[213,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[209,1],"picked":[1,1]}],"min-error":[0.22332710598768418],"time":50.513916015625,"type":"prune"},{"compiler":[[91,41]],"locations":[["(*.f64 -4 (*.f64 y y))",0.030292529305326048,false],["(*.f64 (*.f64 y y) 4)",0.030292529305326048,false],["(fma.f64 x x (*.f64 -4 (*.f64 y y)))",1.753886983238922,false],["(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))",32.105880768775066,false]],"time":21.0,"type":"localize"},{"compiler":[[6904,3920]],"time":72.2080078125,"type":"eval"},{"alts":[["-1","fresh",35.538296261390315],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","done",32.76171875],["(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","done",32.75390625],["1","done",28.248303745163835]],"compiler":[[3,3],[22,13],[19,11],[3,3]],"count":[[266,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[262,0],"picked":[1,1]}],"min-error":[0.22332710598768418],"time":67.623046875,"type":"prune"},{"accuracy":[9.842778247098176],"baseline":[28.248303745163835],"branch":[["x",11.572300585172957,4],["y",11.61446204322898,4],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",14.926866106801006,2],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",14.926866106801006,2],["(*.f64 x x)",10.86071864508994,3],["(*.f64 x x)",10.86071864508994,3],["(*.f64 (*.f64 y 4) y)",9.842778247098176,6],["(*.f64 (*.f64 y 4) y)",9.842778247098176,6]],"compiler":[[3,2],[3,2],[21,12],[21,12],[5,3],[5,3],[7,5],[7,5],[78,40]],"count":[[7,6]],"inputs":[["-1","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","(/.f64 (fma.f64 (*.f64 -4 y) y (*.f64 x x)) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","1","-1","(/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))","(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))"]],"link":["."],"name":["Diagrams.TwoD.Arc:arcBetween from diagrams-lib-1.3.0.3"],"oracle":[63.51103048290413],"outputs":[["1","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","1","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3)","1","-1"]],"time":77.25,"times":[["x",12.963134765625],["y",13.173828125],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",3.27099609375],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",3.256103515625],["(*.f64 x x)",7.363037109375],["(*.f64 x x)",7.3671875],["(*.f64 (*.f64 y 4) y)",13.776123046875],["(*.f64 (*.f64 y 4) y)",14.248046875]],"type":"regimes"},{"bstep":[[1.1702125510864191e+235,4.0972214478399175e+238,0.026123046875],[1.1328892878391548e+96,1.881617418571508e+101,0.027099609375],[6.384358150701406e-107,4.731816591071036e-106,0.028076171875],[4.255072126526894e-217,2.8747132830734305e-212,0.031005859375],[1.2076260910009817e-280,5.029645480426045e-277,0.08203125]],"compiler":[[15,8],[7,5]],"method":["left-value","left-value","left-value","left-value","left-value"],"time":0.3310546875,"type":"bsearch"},{"compiler":[[86,57]],"inputs":[["(if (<=.f64 (*.f64 (*.f64 y 4) y) 2043740476963553/10218702384817765435680628290748613458265350453429542612493041881278524886369096016818984783322294789577433327842265575649138882500575199542984559607218336872038429045509558663769793133795138494375185186532064890845853749530218856391110938974453986086436459043203870933208875495579361330830770176) 1 (if (<=.f64 (*.f64 (*.f64 y 4) y) 1552518092300709/3105036184601417870297958976925005110513772034233393222278104076052101905372753772661756817657292955900975461394262146412343160088229628782888574550082362278408909952041699811100530571263196889650525998387432937501785693707632115712) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3) (if (<=.f64 (*.f64 (*.f64 y 4) y) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) 1 (if (<=.f64 (*.f64 (*.f64 y 4) y) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3) (if (<=.f64 (*.f64 (*.f64 y 4) y) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) 1 -1)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (*.f64 y 4) y) 2043740476963553/10218702384817765435680628290748613458265350453429542612493041881278524886369096016818984783322294789577433327842265575649138882500575199542984559607218336872038429045509558663769793133795138494375185186532064890845853749530218856391110938974453986086436459043203870933208875495579361330830770176) 1 (if (<=.f64 (*.f64 (*.f64 y 4) y) 1552518092300709/3105036184601417870297958976925005110513772034233393222278104076052101905372753772661756817657292955900975461394262146412343160088229628782888574550082362278408909952041699811100530571263196889650525998387432937501785693707632115712) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3) (if (<=.f64 (*.f64 (*.f64 y 4) y) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) 1 (if (<=.f64 (*.f64 (*.f64 y 4) y) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x x (*.f64 -4 (*.f64 y y))) (fma.f64 x x (*.f64 (*.f64 y y) 4)))) 3) (if (<=.f64 (*.f64 (*.f64 y 4) y) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) 1 -1)))))","(if (<=.f64 (*.f64 (*.f64 y y) 4) 2043740476963553/10218702384817765435680628290748613458265350453429542612493041881278524886369096016818984783322294789577433327842265575649138882500575199542984559607218336872038429045509558663769793133795138494375185186532064890845853749530218856391110938974453986086436459043203870933208875495579361330830770176) 1 (if (<=.f64 (*.f64 (*.f64 y y) 4) 1552518092300709/3105036184601417870297958976925005110513772034233393222278104076052101905372753772661756817657292955900975461394262146412343160088229628782888574550082362278408909952041699811100530571263196889650525998387432937501785693707632115712) (/.f64 (fma.f64 x x (*.f64 (*.f64 -4 y) y)) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (if (<=.f64 (*.f64 (*.f64 y y) 4) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) 1 (if (<=.f64 (*.f64 (*.f64 y y) 4) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (/.f64 (fma.f64 x x (*.f64 (*.f64 -4 y) y)) (fma.f64 x x (*.f64 (*.f64 y y) 4))) (if (<=.f64 (*.f64 (*.f64 y y) 4) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) 1 -1)))))"]],"stop":[["fuel",1]],"time":22.65283203125,"type":"simplify"},{"time":0.023193359375,"type":"soundness"},{"compiler":[[86,57]],"remove-preprocessing":[[]],"time":27.185791015625,"type":"end"}]