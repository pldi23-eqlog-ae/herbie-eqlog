[{"compiler":[[23,16]],"method":["search"],"sampling":[[12,0.0,0.6528691805327651,0.3471308194672349],[11,0.0,0.671856427393897,0.32814357260610305],[10,0.0,0.8451759115621776,0.15482408843782236],[9,0.0,0.8958085698585293,0.1041914301414707],[8,0.0,0.9035982095964296,0.09640179040357044],[7,0.0,0.9035982095964296,0.09640179040357044],[6,0.0,0.9970738864512326,0.002926113548767373],[5,0.0,0.9970738864512326,0.002926113548767373],[4,0.0,0.9970738864512326,0.002926113548767373],[3,0.0,0.9970738864512326,0.002926113548767373],[2,0.0,0.9970738864512326,0.002926113548767373],[1,0.0,0.9970738864512326,0.002926113548767373],[0,0.0,0.9970738864512326,0.002926113548767373]],"time":172.442138671875,"type":"analyze"},{"outcomes":[["body",256,"invalid",271.658935546875,4199],["body",512,"valid",0.278076171875,2],["body",256,"valid",591.492919921875,8254]],"time":875.157958984375,"type":"sample"},{"compiler":[[22,15]],"inputs":[["0","1","2","3","4","5"],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 y x) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 z y) x) (*.f64 x (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 t y) z) (*.f64 z (log.f64 x))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 a y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 x 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 b y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) x))","(+.f64 (-.f64 (+.f64 (+.f64 x z) y) (*.f64 y (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x t) z) (*.f64 z (log.f64 y))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x a) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 y 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x b) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) y))","(+.f64 (-.f64 (+.f64 (+.f64 x y) t) (*.f64 t (log.f64 z))) (*.f64 (-.f64 a 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) a) (*.f64 a (log.f64 t))) (*.f64 (-.f64 z 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) b) (*.f64 b (log.f64 t))) (*.f64 (-.f64 a 1/2) z))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 a))) (*.f64 (-.f64 t 1/2) b))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 b))) (*.f64 (-.f64 a 1/2) t))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 b 1/2) a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5"],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 y x) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 z y) x) (*.f64 x (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 z y) (*.f64 x (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 t y) z) (*.f64 z (log.f64 x))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 t y) (*.f64 z (-.f64 1 (log.f64 x)))))","(+.f64 (-.f64 (+.f64 (+.f64 a y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 x 1/2) b))","(fma.f64 (+.f64 x -1/2) b (+.f64 (+.f64 a y) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 b y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) x))","(fma.f64 x (+.f64 a -1/2) (+.f64 (+.f64 b y) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x z) y) (*.f64 y (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x z) (*.f64 y (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x t) z) (*.f64 z (log.f64 y))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x t) (*.f64 z (-.f64 1 (log.f64 y)))))","(+.f64 (-.f64 (+.f64 (+.f64 x a) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 y 1/2) b))","(fma.f64 b (+.f64 y -1/2) (+.f64 (+.f64 x a) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x b) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) y))","(fma.f64 y (+.f64 a -1/2) (+.f64 (+.f64 x b) (*.f64 z (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) t) (*.f64 t (log.f64 z))) (*.f64 (-.f64 a 1/2) b))","(fma.f64 (+.f64 a -1/2) b (+.f64 (+.f64 x y) (*.f64 t (-.f64 1 (log.f64 z)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) a) (*.f64 a (log.f64 t))) (*.f64 (-.f64 z 1/2) b))","(fma.f64 (+.f64 z -1/2) b (+.f64 (+.f64 x y) (*.f64 a (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) b) (*.f64 b (log.f64 t))) (*.f64 (-.f64 a 1/2) z))","(fma.f64 (+.f64 a -1/2) z (+.f64 (+.f64 x y) (*.f64 b (-.f64 1 (log.f64 t)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 a))) (*.f64 (-.f64 t 1/2) b))","(fma.f64 (+.f64 t -1/2) b (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 a)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 b))) (*.f64 (-.f64 a 1/2) t))","(fma.f64 (+.f64 a -1/2) t (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 b)))))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 b 1/2) a))","(fma.f64 (+.f64 b -1/2) a (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))))"]],"symmetry":[[]],"time":111.2470703125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))","(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))"]],"time":22.947998046875,"type":"simplify"},{"compiler":[[37,20]],"time":0.45703125,"type":"eval"},{"alts":[["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","next",0.10546875]],"compiler":[[21,14],[21,14]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.10546875],"time":1.0048828125,"type":"prune"},{"compiler":[[55,24]],"locations":[["(*.f64 (-.f64 1/2 a) b)",0.0078125,true],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))",0.05859375,true],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))",0.10546875,true]],"time":13.282958984375,"type":"localize"},{"count":[[3,132]],"series":[["(*.f64 (-.f64 1/2 a) b)","b","-inf",0.211181640625],["(*.f64 (-.f64 1/2 a) b)","b","inf",0.201171875],["(*.f64 (-.f64 1/2 a) b)","b","0",0.22607421875],["(*.f64 (-.f64 1/2 a) b)","a","-inf",0.14697265625],["(*.f64 (-.f64 1/2 a) b)","a","inf",0.170166015625],["(*.f64 (-.f64 1/2 a) b)","a","0",0.203125],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","b","-inf",0.23291015625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","b","inf",0.18896484375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","b","0",0.237060546875],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","a","-inf",0.19482421875],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","a","inf",0.218994140625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","a","0",0.22900390625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","t","-inf",0.258056640625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","t","inf",0.230224609375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","t","0",0.238037109375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","z","-inf",0.22998046875],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","z","inf",0.22900390625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","z","0",0.22705078125],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","y","-inf",0.238037109375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","y","inf",0.269775390625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","y","0",3.467041015625],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","x","-inf",0.23388671875],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","x","inf",0.260986328125],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","x","0",1.10302734375],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","b","-inf",0.27587890625],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","b","inf",0.280029296875],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","b","0",1.034912109375],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","a","-inf",0.25],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","a","inf",0.3349609375],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","a","0",1.06787109375],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","z","-inf",0.31494140625],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","z","inf",0.291015625],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","z","0",1.844970703125],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","t","-inf",9.73095703125],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","t","inf",5.718017578125],["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","t","0",13.59814453125]],"time":44.712158203125,"type":"series"},{"count":[[3,151]],"inputs":[["(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(*.f64 (-.f64 1/2 a) b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 b) (+.f64 (neg.f64 (*.f64 a b)) (*.f64 (log.f64 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 b) (+.f64 (neg.f64 (*.f64 b a)) (*.f64 (log.f64 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 (neg.f64 z) (log.f64 t))) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 0) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (*.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 z) (log.f64 t)) -1) (*.f64 (*.f64 (+.f64 a -1/2) b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (*.f64 0 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) z) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (-.f64 1/2 a)) (*.f64 (log.f64 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (log.f64 t) z) (*.f64 1/2 b)) (neg.f64 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (log.f64 t) z) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (log.f64 t) z) (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 2)) (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x y) (-.f64 z (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 z (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (-.f64 (+.f64 x y) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 x y) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) z)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) x) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (+.f64 z x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) y) (+.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (log.f64 t)) (+.f64 (*.f64 (+.f64 a -1/2) b) (+.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (-.f64 (+.f64 z x) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 y z) (+.f64 x (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 z x) (+.f64 y (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (-.f64 (+.f64 y z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 y z) (-.f64 x (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 z x) (-.f64 y (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) x)) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 x y))) z)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 0) (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (*.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (log.f64 t)) (*.f64 -1 (fma.f64 b (-.f64 1/2 a) (neg.f64 (+.f64 (+.f64 x y) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 (-.f64 (+.f64 x y) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (-.f64 (+.f64 z x) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 (+.f64 y z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (*.f64 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (*.f64 (neg.f64 (+.f64 (+.f64 x y) z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log.f64 t) z) -1) (*.f64 (fma.f64 b (-.f64 1/2 a) (neg.f64 (+.f64 (+.f64 x y) z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (+.f64 (+.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 z) (log.f64 t)) (neg.f64 (fma.f64 b (-.f64 1/2 a) (neg.f64 (+.f64 (+.f64 x y) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x y) z) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 y z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 z x) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (-.f64 1 (log.f64 t))) (-.f64 (*.f64 b (-.f64 1/2 a)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 z (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 b (-.f64 1/2 a))) (*.f64 (log.f64 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 z) (log.f64 t)) (fma.f64 b (-.f64 1/2 a) (neg.f64 (+.f64 (+.f64 x y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x y) (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) (neg.f64 (+.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (+.f64 x y) z) 0) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (+.f64 (+.f64 x y) z)) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) z) 2)) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))) (-.f64 (cbrt.f64 (+.f64 (+.f64 x y) z)) (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 2)) (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (-.f64 z (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 x y) z)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) z) 2)) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x y) (-.f64 z (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 x y) z) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 x y) z) 1 (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) z) 2)) (cbrt.f64 (+.f64 (+.f64 x y) z)) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (+.f64 x y) z)) (neg.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 b) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 b) (neg.f64 (*.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 a b)) (*.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 b a)) (*.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (-.f64 1/2 a)) 0) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (-.f64 1/2 a)) (*.f64 (*.f64 b (-.f64 1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 1/2 b)) (*.f64 1 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 1/2 b)) (*.f64 1 (neg.f64 (*.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 b (-.f64 1/2 a))) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (-.f64 1/2 a)) (*.f64 0 (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 b) 1) (*.f64 (neg.f64 (*.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 b) 1) (*.f64 (neg.f64 (*.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (-.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))) (/.f64 (-.f64 1/8 (pow.f64 a 3)) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1/8 (pow.f64 a 3)) 1) (/.f64 b (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1/8 (pow.f64 a 3)) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))) (/.f64 b (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b (-.f64 1/2 a))) (cbrt.f64 (pow.f64 (*.f64 b (-.f64 1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1/2 a)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1/2 a) 2)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/2 a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 b (-.f64 1/2 a)) 2)) (cbrt.f64 (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1/2 a) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (cbrt.f64 (-.f64 1/2 a))) (cbrt.f64 (pow.f64 (-.f64 1/2 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (-.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 b) (+.f64 a -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a -1/2) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) (/.f64 1 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (-.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (-.f64 (pow.f64 a 3) 1/8)) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 b (-.f64 1/8 (pow.f64 a 3)))) (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 a 3) 1/8) b) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1/8 (pow.f64 a 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1/2 a) 2)) b)) (cbrt.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) 1) (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) 1) (+.f64 1/4 (*.f64 a (+.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3)))) (neg.f64 (+.f64 1/4 (*.f64 a (+.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (-.f64 1/8 (pow.f64 a 3))) (+.f64 1/4 (*.f64 (neg.f64 a) (-.f64 (neg.f64 a) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (-.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 b (-.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (-.f64 1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (-.f64 1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (-.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 a -1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 b (-.f64 1/2 a)) 3))))))"]],"rules":[["egg-rr",48],["egg-rr",76],["egg-rr",27]],"time":36.827880859375,"type":"rewrite"},{"count":[[283,193]],"inputs":[["(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(*.f64 -1 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(*.f64 -1 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y z) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","x","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","x","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 z x) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","y","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","y","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y x) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z)","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(*.f64 (-.f64 a 1/2) b)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(*.f64 -1 (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(*.f64 1/2 b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 -1 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 -1 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z))","(fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t)))","(fma.f64 z (log.f64 t) (*.f64 1/2 b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 -1 (*.f64 a b))","(neg.f64 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 -1 (*.f64 a b))","(neg.f64 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 a b)) (*.f64 z (log.f64 t))))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 z (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t)))","(fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b))","(-.f64 (+.f64 y z) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","x","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","x","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 z x) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 z x) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","y","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","y","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y x) (*.f64 (-.f64 1/2 a) b))","(+.f64 x (fma.f64 (+.f64 a -1/2) b y))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 t))) z) (+.f64 y x)) (*.f64 (-.f64 1/2 a) b))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x (fma.f64 (+.f64 a -1/2) b y)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) z)) (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 (-.f64 1/2 a) b) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (-.f64 1/2 a) b (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 t)))) z)))","(-.f64 (+.f64 y (+.f64 z x)) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 z x))) (+.f64 (*.f64 1/2 b) (*.f64 z (log.f64 t))))","(-.f64 (fma.f64 a b (+.f64 y (+.f64 z x))) (fma.f64 z (log.f64 t) (*.f64 1/2 b)))","(-.f64 (+.f64 y (+.f64 z x)) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(*.f64 -1 (*.f64 (-.f64 1/2 a) b))","(*.f64 (+.f64 a -1/2) b)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 1/2 a) b)) (+.f64 y (+.f64 z x))) (*.f64 z (log.f64 t)))","(-.f64 (+.f64 y (+.f64 z x)) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(*.f64 1/2 b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(*.f64 -1 (*.f64 a b))","(neg.f64 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(*.f64 -1 (*.f64 a b))","(neg.f64 (*.f64 a b))","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)","(+.f64 (*.f64 1/2 b) (*.f64 -1 (*.f64 a b)))","(*.f64 (-.f64 1/2 a) b)"]],"time":397.0390625,"type":"simplify"},{"compiler":[[3661,1597]],"time":41.4169921875,"type":"eval"},{"alts":[["(-.f64 (+.f64 (+.f64 x y) z) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 3))","fresh",0.42984023444260855],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","next",0.078125],["(pow.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) 3)","fresh",0.7876703614323551],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","done",0.10546875],["(*.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z))) 2))","fresh",0.756420361432355]],"compiler":[[24,17],[25,18],[24,17],[21,14],[42,25],[24,17],[25,18],[24,17],[42,25]],"count":[[194,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[193,4],"picked":[1,1]}],"min-error":[0.015625],"time":76.183837890625,"type":"prune"},{"compiler":[[82,38]],"locations":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))",0.00390625,true],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))",0.0078125,true],["(-.f64 1 (log.f64 t))",0.01953125,true],["(*.f64 z (-.f64 1 (log.f64 t)))",0.28125,true]],"time":17.18212890625,"type":"localize"},{"count":[[4,148]],"series":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","a","-inf",0.299072265625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","a","inf",0.296875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","a","0",0.3759765625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","b","-inf",0.3291015625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","b","inf",0.446044921875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","b","0",0.363037109375],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","t","-inf",0.260009765625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","t","inf",0.287841796875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","t","0",0.39697265625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","z","-inf",0.214111328125],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","z","inf",0.23291015625],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","z","0",0.26904296875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","y","-inf",0.22412109375],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","y","inf",0.20703125],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","y","0",0.302001953125],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","x","-inf",0.225830078125],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","x","inf",0.208984375],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","x","0",0.363037109375],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","t","-inf",0.2109375],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","t","inf",0.223876953125],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","t","0",0.177978515625],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","z","-inf",0.197021484375],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","z","inf",0.263916015625],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","z","0",0.183837890625],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","y","-inf",0.201171875],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","y","inf",0.18994140625],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","y","0",0.22802734375],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","x","-inf",0.199951171875],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","x","inf",0.175048828125],["(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","x","0",0.252197265625],["(-.f64 1 (log.f64 t))","t","-inf",0.156982421875],["(-.f64 1 (log.f64 t))","t","inf",0.151123046875],["(-.f64 1 (log.f64 t))","t","0",0.1591796875],["(*.f64 z (-.f64 1 (log.f64 t)))","t","-inf",0.319091796875],["(*.f64 z (-.f64 1 (log.f64 t)))","t","inf",0.3427734375],["(*.f64 z (-.f64 1 (log.f64 t)))","t","0",0.30908203125],["(*.f64 z (-.f64 1 (log.f64 t)))","z","-inf",1.235107421875],["(*.f64 z (-.f64 1 (log.f64 t)))","z","inf",0.39208984375],["(*.f64 z (-.f64 1 (log.f64 t)))","z","0",9.49609375]],"time":20.927978515625,"type":"series"},{"count":[[4,184]],"inputs":[["(*.f64 z (-.f64 1 (log.f64 t)))","(-.f64 1 (log.f64 t))","(+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (neg.f64 (*.f64 (log.f64 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (log.f64 t) z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 (log.f64 t) -1) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2)) (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (/.f64 z (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 z (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 (log.f64 t) -1) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 t) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3)))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (+.f64 -1 (pow.f64 (log.f64 t) 3))) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) z) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) z)) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3)))) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (log.f64 t) -1) z))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (log.f64 t)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) (neg.f64 (/.f64 (pow.f64 (log.f64 t) 3) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (log.f64 t)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (log.f64 t)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (log.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) (/.f64 (pow.f64 (log.f64 t) 3) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (log.f64 t) -1))) (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) 2) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) 1) (/.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 (-.f64 1 (log.f64 t)) (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (log.f64 t) 3) 3)) (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (+.f64 (+.f64 1 (pow.f64 (log.f64 t) 6)) (pow.f64 (log.f64 t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (log.f64 t) 3) 3)) 1) (*.f64 (+.f64 (+.f64 1 (pow.f64 (log.f64 t) 6)) (pow.f64 (log.f64 t) 3)) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (pow.f64 (log.f64 t) 3))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)))) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) 1) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (log.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x y) z) (neg.f64 (*.f64 (log.f64 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (+.f64 (neg.f64 (*.f64 (log.f64 t) z)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x y) (*.f64 (+.f64 (log.f64 t) -1) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (cbrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 2)) (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (cbrt.f64 (+.f64 x y))))) (+.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2)) (*.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t))))))) (+.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 x y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a b) (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x y) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (+.f64 x y) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (+.f64 -1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 b (+.f64 -1/2 a))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 b (+.f64 -1/2 a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x y) (*.f64 b (+.f64 -1/2 a))) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) y) (+.f64 x (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 (+.f64 x y) (*.f64 -1/2 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) (+.f64 x y)) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) x) (+.f64 y (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (*.f64 -1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (+.f64 (+.f64 x (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 b) (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)) (+.f64 (+.f64 x y) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x) (+.f64 y (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 x (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (+.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (+.f64 (neg.f64 (*.f64 (log.f64 t) z)) (+.f64 (+.f64 x y) (*.f64 b (+.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (+.f64 x (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 b (+.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (-.f64 (+.f64 x (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 b) (-.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)) (-.f64 (+.f64 x y) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x) (-.f64 y (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 y (*.f64 z (-.f64 1 (log.f64 t)))) (-.f64 x (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x) (*.f64 b (-.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 0) (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 (neg.f64 (*.f64 a b)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) (*.f64 -1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 (neg.f64 (*.f64 a b)) (+.f64 x y))) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (-.f64 (neg.f64 (*.f64 a b)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) (*.f64 -1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 a b) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (*.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a b) (-.f64 (*.f64 1/2 b) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (-.f64 (neg.f64 (*.f64 a b)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) (*.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (neg.f64 (*.f64 a b))) (*.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 2)) (cbrt.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))) (cbrt.f64 (*.f64 a b))))) (+.f64 (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))) (cbrt.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) 2)) (*.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))))))) (+.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))) (cbrt.f64 (neg.f64 (*.f64 a b)))))) (-.f64 (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))) (cbrt.f64 (neg.f64 (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (*.f64 b (-.f64 1/2 a)) (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y))) (cbrt.f64 (pow.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) 2)) (*.f64 b (+.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) (fma.f64 (-.f64 1 (log.f64 t)) z (*.f64 -1/2 b))) 2)) (*.f64 a b))))))"]],"rules":[["egg-rr",64],["egg-rr",32],["egg-rr",51],["egg-rr",37]],"time":45.609130859375,"type":"rewrite"},{"count":[[332,226]],"inputs":[["(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) y)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","y","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","y","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 y x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) y)) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","x","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","x","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","y","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","y","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y x)) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(*.f64 (-.f64 a 1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a))))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x)) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z)","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t))))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) y)","(fma.f64 z (-.f64 1 (log.f64 t)) y)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","x","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","x","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) x)","(fma.f64 z (-.f64 1 (log.f64 t)) x)","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","y","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","y","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y x)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(*.f64 (-.f64 1 (log.f64 t)) z)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x))","(+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))","(+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) y)) (*.f64 1/2 b))","(fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 (fma.f64 a b y) (*.f64 -1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","x","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","x","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) x)) (*.f64 1/2 b))","(fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 (fma.f64 a b x) (*.f64 -1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","y","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","y","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y x)) (*.f64 1/2 b))","(fma.f64 b (+.f64 a -1/2) (+.f64 y x))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z) x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(+.f64 (+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x)) (*.f64 (+.f64 a -1/2) b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(+.f64 (+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x)) (*.f64 (+.f64 a -1/2) b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(+.f64 (+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x)) (*.f64 (+.f64 a -1/2) b))","(-.f64 (+.f64 (*.f64 a b) (+.f64 y (+.f64 (*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z) x))) (*.f64 1/2 b))","(+.f64 (+.f64 y (fma.f64 (+.f64 (-.f64 1 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 t)))) z x)) (*.f64 (+.f64 a -1/2) b))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))","(fma.f64 (-.f64 1 (log.f64 t)) z (+.f64 y x))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 (-.f64 a 1/2) b)","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 (-.f64 a 1/2) b) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a))))","(*.f64 (+.f64 a -1/2) b)","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 -1 (*.f64 b (+.f64 1/2 (*.f64 -1 a)))) (+.f64 y x)))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x)) (*.f64 1/2 b))","(fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 (+.f64 y x) (*.f64 -1/2 b)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 a b) (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 z (-.f64 1 (log.f64 t))) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(*.f64 a b)","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (log.f64 t)) z) (+.f64 (*.f64 a b) (+.f64 y x))) (*.f64 1/2 b))","(fma.f64 (-.f64 1 (log.f64 t)) z (fma.f64 b (+.f64 a -1/2) (+.f64 y x)))"]],"time":448.06298828125,"type":"simplify"},{"compiler":[[5310,2551]],"time":49.22900390625,"type":"eval"},{"alts":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1387100586106521],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (/.f64 (-.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (pow.f64 (log.f64 t) 3))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1387100586106521],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (/.f64 z (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.11947250976844201],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.109375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","done",0.10546875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","next",0.10841752930532605],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 z (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.21853266606351424]],"compiler":[[34,25],[65,31],[39,26],[38,26],[21,14],[34,25],[51,31],[34,25],[65,31],[39,26],[38,26],[34,25],[51,31]],"count":[[231,7]],"kept":[{"done":[1,1],"fresh":[3,0],"new":[226,6],"picked":[1,0]}],"min-error":[0.0078125],"time":98.618896484375,"type":"prune"},{"compiler":[[150,88]],"locations":[["(cbrt.f64 (-.f64 1 (log.f64 t)))",0.1328125,true],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))",0.28125,true],["(*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))",0.36947250976844204,true],["(pow.f64 (-.f64 1 (log.f64 t)) 2)",0.5381050293053261,true]],"time":35.341064453125,"type":"localize"},{"count":[[4,56]],"series":[["(cbrt.f64 (-.f64 1 (log.f64 t)))","t","-inf",1.002197265625],["(cbrt.f64 (-.f64 1 (log.f64 t)))","t","inf",0.9931640625],["(cbrt.f64 (-.f64 1 (log.f64 t)))","t","0",0.94482421875],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","t","-inf",0.4638671875],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","t","inf",0.325927734375],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","t","0",0.93115234375],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","z","-inf",0.23095703125],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","z","inf",0.25],["(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","z","0",1.059814453125],["(*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))","t","-inf",0.298828125],["(*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))","t","inf",0.296142578125],["(*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))","t","0",1.303955078125],["(pow.f64 (-.f64 1 (log.f64 t)) 2)","t","-inf",0.39501953125],["(pow.f64 (-.f64 1 (log.f64 t)) 2)","t","inf",0.39208984375],["(pow.f64 (-.f64 1 (log.f64 t)) 2)","t","0",0.40087890625]],"time":9.501953125,"type":"series"},{"count":[[4,217]],"inputs":[["(pow.f64 (-.f64 1 (log.f64 t)) 2)","(*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))","(*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))","(cbrt.f64 (-.f64 1 (log.f64 t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 t)) (+.f64 1 (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log.f64 t) -1) (log.f64 t)) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) (*.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 0) (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) (*.f64 0 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 1 (log.f64 t)) 2)) (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (neg.f64 (log.f64 t)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (log.f64 t) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 (log.f64 t) -1) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (-.f64 (/.f64 (pow.f64 (log.f64 t) 3) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 t) -1) (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (pow.f64 (-.f64 1 (log.f64 t)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (pow.f64 (-.f64 1 (log.f64 t)) 4))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) (*.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (+.f64 2 3)) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3)) (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) (/.f64 1 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 (-.f64 1 (log.f64 t)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1)) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (log.f64 t) -1) (+.f64 -1 (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) 1) (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (+.f64 (log.f64 t) -1)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (+.f64 -1 (pow.f64 (log.f64 t) 3))) (*.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2) 1) (*.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2)) (neg.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 -1 (pow.f64 (log.f64 t) 3))) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (-.f64 1 (log.f64 t))) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3)))) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log.f64 t) -1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 2))) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 (log.f64 t) -1) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (log.f64 t)) 1 (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 (log.f64 t)) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (*.f64 (log.f64 t) (+.f64 (log.f64 t) -1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 (-.f64 1 (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (log.f64 t)) 0) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 0 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 1 (log.f64 t))) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (log.f64 t)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (neg.f64 (/.f64 (pow.f64 (log.f64 t) 3) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (log.f64 t)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (log.f64 t)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (log.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (/.f64 (pow.f64 (log.f64 t) 3) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 2)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 2))) (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log.f64 t) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)) (neg.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) (-.f64 1 (pow.f64 (log.f64 t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (/.f64 (-.f64 1 (log.f64 t)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (log.f64 t) 3) 3)) (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 6) (pow.f64 (log.f64 t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) 1) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (*.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) (pow.f64 (log.f64 t) 3))) (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (log.f64 t) 3) 3)) 1) (*.f64 (+.f64 1 (+.f64 (pow.f64 (log.f64 t) 6) (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) 1) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (pow.f64 (-.f64 1 (log.f64 t)) 2))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (log.f64 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (log.f64 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 t)) (neg.f64 (pow.f64 (log.f64 t) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 1 (log.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 z (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) 0) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 (neg.f64 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 0 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (neg.f64 (log.f64 t))) z)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (log.f64 t)) z) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 z 2/3) (-.f64 1 (log.f64 t))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2/3) (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 z (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) z) (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (+.f64 -1 (pow.f64 (log.f64 t) 3))) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3)) z) (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (*.f64 z (pow.f64 (-.f64 1 (log.f64 t)) 2/3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (log.f64 t) -1) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 0) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 0 (cbrt.f64 (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (/.f64 1 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 1)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (/.f64 1 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t))))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) (+.f64 2/3 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (*.f64 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)))) (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) 1) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 -1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (neg.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (+.f64 (log.f64 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (-.f64 1 (log.f64 t)))))))"]],"rules":[["egg-rr",27],["egg-rr",40],["egg-rr",73],["egg-rr",77]],"time":39.4609375,"type":"rewrite"},{"count":[[273,225]],"inputs":[["(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 2)","(pow.f64 (-.f64 1 (log.f64 t)) 2)","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (log.f64 t))","(-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(-.f64 1 (log.f64 t))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(*.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) z)","(*.f64 (-.f64 1 (log.f64 t)) z)","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (log.f64 t)) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (*.f64 -1 (log.f64 (/.f64 1 t)))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))","(pow.f64 (-.f64 1 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) 1/3)","(cbrt.f64 (-.f64 1 (log.f64 t)))"]],"time":179.442138671875,"type":"simplify"},{"compiler":[[7330,4035]],"time":65.927001953125,"type":"eval"},{"alts":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1387100586106521],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.14718632814753618],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.11298754884221009],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (/.f64 z (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.11947250976844201],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","next",0.109375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","done",0.10546875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (/.f64 1 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1660538086106521]],"compiler":[[34,25],[64,47],[61,42],[39,26],[38,26],[21,14],[51,36],[34,25],[64,47],[61,42],[39,26],[38,26],[51,36]],"count":[[232,7]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[225,3],"picked":[1,0]}],"min-error":[0.00390625],"time":97.39990234375,"type":"prune"},{"compiler":[[185,92]],"locations":[["(+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))",0.234375,true],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))",0.28125,true],["(*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))",0.29296875,true],["(pow.f64 (log.f64 t) 2)",0.5316200683790943,true]],"time":39.590087890625,"type":"localize"},{"count":[[4,56]],"series":[["(+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))","t","-inf",0.220947265625],["(+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))","t","inf",0.182861328125],["(+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))","t","0",0.166015625],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","t","-inf",0.593994140625],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","t","inf",0.583984375],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","t","0",0.47705078125],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","z","-inf",0.399169921875],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","z","inf",0.48583984375],["(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","z","0",2.1611328125],["(*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))","t","-inf",2.298828125],["(*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))","t","inf",2.677978515625],["(*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))","t","0",2.055908203125],["(pow.f64 (log.f64 t) 2)","t","-inf",8.625],["(pow.f64 (log.f64 t) 2)","t","inf",0.360107421875],["(pow.f64 (log.f64 t) 2)","t","0",0.413818359375]],"time":21.996826171875,"type":"series"},{"count":[[4,340]],"inputs":[["(pow.f64 (log.f64 t) 2)","(*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))","(*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))","(+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 t) 2) (*.f64 (pow.f64 (log.f64 t) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 t) 2) 0) (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 t) 2) (*.f64 0 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (log.f64 t) 2)) (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 t) (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (pow.f64 (log.f64 t) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 t)) (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log.f64 t) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (pow.f64 (log.f64 t) 4))) (cbrt.f64 (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (log.f64 t) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 t) (+.f64 2/3 1)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (log.f64 t))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) (+.f64 2 1/3)) (pow.f64 (cbrt.f64 (log.f64 t)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (cbrt.f64 (pow.f64 (log.f64 t) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log.f64 t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 t)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 t) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (log.f64 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 t) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))) (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 1) (cbrt.f64 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (+.f64 (cbrt.f64 (log.f64 t)) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 t) 2/3) (+.f64 (+.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (+.f64 1 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 (-.f64 1 (log.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (log.f64 t)) 0) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3)) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (log.f64 t)) (*.f64 0 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 1 (log.f64 t))) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (-.f64 (pow.f64 (log.f64 t) 2/3) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (log.f64 t) 2/3) (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))) 1) (*.f64 (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 1) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (cbrt.f64 (neg.f64 (log.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 1 (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (log.f64 t)) (+.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (*.f64 (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (/.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (/.f64 (log.f64 t) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 0) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 (cbrt.f64 (log.f64 t)) -1) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (cbrt.f64 (log.f64 t)) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) (/.f64 (pow.f64 (log.f64 t) 3) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 1) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (-.f64 (/.f64 (log.f64 t) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t))))) (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 -1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (log.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (/.f64 1 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (/.f64 (-.f64 1 (log.f64 t)) (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (log.f64 t)) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)) (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (log.f64 t)) -1) (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)) (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (/.f64 (-.f64 1 (log.f64 t)) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) -1) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 (-.f64 1 (log.f64 t)) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))) (/.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))) (/.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (*.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (-.f64 1 (cbrt.f64 (log.f64 t)))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) (/.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (log.f64 t)) -1) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (/.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (/.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 1) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 1) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (*.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (-.f64 1 (cbrt.f64 (log.f64 t))))) (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 1) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) 1) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (log.f64 t)) 3)) (+.f64 1 (-.f64 (pow.f64 (log.f64 t) 2) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (+.f64 -1 (log.f64 t))) (*.f64 (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (-.f64 1 (log.f64 t))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (+.f64 -1 (log.f64 t))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (*.f64 (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (log.f64 t)) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (*.f64 (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log.f64 t) 3))) (neg.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 -1 (log.f64 t))) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (log.f64 t)) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) -1) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 -1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 (cbrt.f64 (log.f64 t)) -1) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t)))) (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (-.f64 1 (cbrt.f64 (log.f64 t))) (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 1 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (log.f64 t)) (/.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 1 (cbrt.f64 (log.f64 t))) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 1 (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))) (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (+.f64 (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 1 (pow.f64 (log.f64 t) 2/3))) (+.f64 (*.f64 z (cbrt.f64 (log.f64 t))) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (+.f64 z (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (log.f64 t))) 0) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) 1) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (pow.f64 (log.f64 t) 2/3)) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (cbrt.f64 (log.f64 t))) (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3)))) (*.f64 z (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (*.f64 z (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 z (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 z (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (+.f64 1 (pow.f64 (log.f64 t) 2/3)))) (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (log.f64 t))) (*.f64 0 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (*.f64 (pow.f64 (log.f64 t) 2/3) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 t) 2/3) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (*.f64 (+.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (*.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (log.f64 t) 2/3))) z) (*.f64 (-.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (*.f64 (+.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (neg.f64 (log.f64 t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 (neg.f64 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) z) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (+.f64 1 (pow.f64 (log.f64 t) 2/3))) (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 (*.f64 z (cbrt.f64 (log.f64 t))) (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (*.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)) (/.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (/.f64 (-.f64 1 (log.f64 t)) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) -1) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 (-.f64 1 (log.f64 t)) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 2/3) (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log.f64 t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (*.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t))))) (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (pow.f64 (-.f64 1 (log.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 z 2/3) (-.f64 1 (log.f64 t))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) z) (cbrt.f64 (-.f64 1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2/3) (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) 2/3) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (-.f64 1 (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (-.f64 1 (log.f64 t)) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z)) (+.f64 (cbrt.f64 (log.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (-.f64 1 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) (/.f64 1 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (pow.f64 (log.f64 t) 3))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) z) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (log.f64 t)) (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (*.f64 (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (log.f64 t)) (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t)))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (-.f64 1 (cbrt.f64 (log.f64 t)))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (+.f64 -1 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (-.f64 (-.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)) (*.f64 z (-.f64 1 (cbrt.f64 (log.f64 t))))) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (cbrt.f64 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) z) (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (log.f64 t)) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) z) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (/.f64 1 (fma.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (+.f64 -1 (log.f64 t))) (+.f64 -1 (neg.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))) (-.f64 1 (log.f64 t))) (+.f64 1 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (+.f64 -1 (log.f64 t))) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (log.f64 t)) (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z)) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3)) (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) -1) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t)))) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (-.f64 1 (log.f64 t))) z) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (-.f64 1 (log.f64 t))) 1) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 z (-.f64 1 (log.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 -1 (log.f64 t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (+.f64 -1 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 1 (log.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1))) (pow.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) 2/3) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z)) (pow.f64 (cbrt.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z)) 2) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) 1 (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1) z (*.f64 (fma.f64 z (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) z) (cbrt.f64 (neg.f64 (log.f64 t)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (log.f64 t) 2/3) 0) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 0) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) (*.f64 0 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 t) 2/3) (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (log.f64 t)))) (neg.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (neg.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 2/3) (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (+.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (cbrt.f64 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) (+.f64 2/3 1))) (cbrt.f64 (pow.f64 (log.f64 t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (+.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (pow.f64 (log.f64 t) (+.f64 2/3 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (-.f64 (cbrt.f64 (neg.f64 (log.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (-.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t)))) (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (-.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (cbrt.f64 (log.f64 t)))) (+.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (+.f64 1 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cbrt.f64 (log.f64 t))) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (log.f64 t)) (+.f64 1 (log.f64 t))) (-.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (log.f64 t)) (cbrt.f64 (log.f64 t))) (-.f64 (+.f64 1 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 t)) (cbrt.f64 (log.f64 t)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 t)) 1 (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (cbrt.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (cbrt.f64 (neg.f64 (log.f64 t))) (pow.f64 (log.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 t) 2/3) 1 (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 t) 4))) (cbrt.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (cbrt.f64 (pow.f64 (log.f64 t) (+.f64 2/3 1))) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (log.f64 t) 2/3)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (log.f64 t))) (cbrt.f64 (neg.f64 (log.f64 t))) (cbrt.f64 (log.f64 t)))))))"]],"rules":[["egg-rr",48],["egg-rr",114],["egg-rr",144],["egg-rr",34]],"time":60.968017578125,"type":"rewrite"},{"count":[[396,351]],"inputs":[["(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (log.f64 (/.f64 1 t)) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (log.f64 t) 2)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)","(pow.f64 (log.f64 t) 2)","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(-.f64 1 (log.f64 t))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(-.f64 1 (log.f64 t))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(-.f64 1 (log.f64 t))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1))))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(-.f64 1 (log.f64 t))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)))","(-.f64 1 (log.f64 t))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (-.f64 1 (pow.f64 (log.f64 t) 1/3)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))) (*.f64 z (-.f64 1 (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))) (*.f64 (-.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3)) z))","(*.f64 z (-.f64 1 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 t) 2) 1/3) (pow.f64 (log.f64 t) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 1 t)) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 t))) 1/3) (cbrt.f64 -1)))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 1/3))","(+.f64 (pow.f64 (log.f64 t) 2/3) (cbrt.f64 (log.f64 t)))"]],"time":194.732177734375,"type":"simplify"},{"compiler":[[13540,6639]],"time":105.080810546875,"type":"eval"},{"alts":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1387100586106521],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.14718632814753618],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.11298754884221009],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (/.f64 z (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.11947250976844201],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","done",0.109375],["(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","done",0.10546875],["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (/.f64 1 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","fresh",0.1660538086106521]],"compiler":[[34,25],[64,47],[61,42],[39,26],[38,26],[21,14],[51,36]],"count":[[358,7]],"kept":[{"done":[1,1],"fresh":[5,5],"new":[351,0],"picked":[1,1]}],"min-error":[0.00390625],"time":161.320068359375,"type":"prune"},{"accuracy":[0.078125],"baseline":[0.078125],"branch":[["x",0.078125,1],["y",0.078125,1],["z",0.078125,1],["t",0.078125,1],["a",0.078125,1],["b",0.078125,1],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))",0.078125,1],["(-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t)))",0.078125,1],["(+.f64 x y)",0.078125,1],["(log.f64 t)",0.078125,1],["(*.f64 (-.f64 a 1/2) b)",0.078125,1],["(-.f64 a 1/2)",0.078125,1]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[22,15],[16,11],[9,7],[8,7],[11,9],[9,8],[511,259]],"count":[[15,1]],"inputs":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (log.f64 t)))) 4) (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 4)) (-.f64 1 (log.f64 t)))))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 (log.f64 t)) (-.f64 1 (pow.f64 (log.f64 t) 3))) (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (/.f64 1 (cbrt.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1))) (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (+.f64 1 (log.f64 t)) 1) 2)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (*.f64 z (cbrt.f64 (-.f64 1 (log.f64 t)))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (/.f64 (-.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (pow.f64 (log.f64 t) 3))) (*.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))) (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) 1) (/.f64 z (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (cbrt.f64 (log.f64 t)))) (-.f64 1 (cbrt.f64 (log.f64 t)))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (*.f64 (cbrt.f64 (-.f64 1 (log.f64 t))) (cbrt.f64 (pow.f64 (-.f64 1 (log.f64 t)) 2))))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 (/.f64 (-.f64 1 (pow.f64 (log.f64 t) 3)) (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t))))) (/.f64 z (pow.f64 (cbrt.f64 (+.f64 1 (fma.f64 (log.f64 t) (log.f64 t) (log.f64 t)))) 2)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(-.f64 (+.f64 (+.f64 x y) z) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a)))) 3))","(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(pow.f64 (cbrt.f64 (-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))))) 3)","(*.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z)))) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 (log.f64 t) z (*.f64 b (-.f64 1/2 a))) (+.f64 (+.f64 x y) z))) 2))","(-.f64 (+.f64 (+.f64 x y) z) (fma.f64 (log.f64 t) z (*.f64 (-.f64 1/2 a) b)))","(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))"]],"link":["."],"name":["Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, A"],"oracle":[1.0170406740225],"outputs":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))"]],"time":82.587890625,"times":[["x",5.873046875],["y",5.995849609375],["z",5.609130859375],["t",6.205078125],["a",7.025146484375],["b",5.719970703125],["(+.f64 (-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t))) (*.f64 (-.f64 a 1/2) b))",6.773193359375],["(-.f64 (+.f64 (+.f64 x y) z) (*.f64 z (log.f64 t)))",5.856201171875],["(+.f64 x y)",5.9169921875],["(log.f64 t)",6.248046875],["(*.f64 (-.f64 a 1/2) b)",5.81201171875],["(-.f64 a 1/2)",4.008056640625]],"type":"regimes"},{"compiler":[[25,18]],"inputs":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (-.f64 (+.f64 (+.f64 x y) (*.f64 z (-.f64 1 (log.f64 t)))) (*.f64 1/2 b)) (neg.f64 (*.f64 a b)))","(+.f64 (fma.f64 z (-.f64 1 (log.f64 t)) (+.f64 x y)) (*.f64 b (+.f64 -1/2 a)))"]],"stop":[["fuel",1]],"time":25.14013671875,"type":"simplify"},{"time":0.031005859375,"type":"soundness"},{"compiler":[[25,18]],"remove-preprocessing":[[]],"time":11.260986328125,"type":"end"}]