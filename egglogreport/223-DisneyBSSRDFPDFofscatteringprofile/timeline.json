[{"compiler":[[50,36]],"method":["search"],"sampling":[[12,0.0024111446540980323,3.8272137366635437e-5,0.9975505832085353],[11,0.002372872516731397,7.654427473327087e-5,0.9975505832085354],[10,0.002372872516731397,7.654427473327087e-5,0.9975505832085354],[9,0.0022963282419981262,0.00015308854946654175,0.9975505832085354],[8,0.0022963282419981262,0.00015308854946654175,0.9975505832085354],[7,0.0021432396925315845,0.0003061770989330835,0.9975505832085353],[6,0.0021432396925315845,0.0003061770989330835,0.9975505832085353],[5,0.0018370625935985008,0.000612354197866167,0.9975505832085353],[4,0.0018370625935985008,0.000612354197866167,0.9975505832085353],[3,0.001224708395732334,0.001224708395732334,0.9975505832085354],[2,0.001224708395732334,0.001224708395732334,0.9975505832085354],[1,0.0,0.002449416791464668,0.9975505832085353],[0,0.0,0.002449416791464668,0.9975505832085353]],"time":14.531005859375,"type":"analyze"},{"outcomes":[["body",256,"valid",708.416015625,8256]],"time":715.804931640625,"type":"sample"},{"compiler":[[35,25]],"inputs":[["0","1"],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 s) r))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) r) s)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 s) (*.f64 3 r)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) r) s)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","(/.f64 (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (neg.f64 (/.f64 r s))) (*.f64 (PI.f64) s))) (*.f64 1/8 (/.f64 (exp.f64 (/.f64 r (*.f64 -3 s))) (*.f64 (PI.f64) s)))) r)","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 s) r))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) r) s)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 s) (*.f64 3 r)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) r) s)))","(/.f64 (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (neg.f64 (/.f64 s r))) (*.f64 (PI.f64) r))) (*.f64 1/8 (/.f64 (exp.f64 (/.f64 s (*.f64 -3 r))) (*.f64 (PI.f64) r)))) s)"]],"symmetry":[[]],"time":55.55908203125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)"]],"time":28.19189453125,"type":"simplify"},{"compiler":[[55,35]],"time":0.593017578125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","next",0.05704632078844846],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","fresh",0.24623402500535]],"compiler":[[35,25],[22,13],[35,25],[22,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0479762891677947],"time":1.718017578125,"type":"prune"},{"compiler":[[148,83]],"locations":[["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)",0.26953125,true],["(*.f64 (*.f64 6 (PI.f64)) s)",0.26953125,true],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)",0.28515625,true],["(/.f64 (neg.f64 r) (*.f64 3 s))",0.296875,true]],"time":31.22412109375,"type":"localize"},{"count":[[4,84]],"series":[["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","r","-inf",0.251953125],["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","r","inf",0.264892578125],["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","r","0",0.2529296875],["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","s","-inf",0.990966796875],["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","s","inf",0.2509765625],["(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","s","0",0.281005859375],["(*.f64 (*.f64 6 (PI.f64)) s)","s","-inf",0.2451171875],["(*.f64 (*.f64 6 (PI.f64)) s)","s","inf",0.40185546875],["(*.f64 (*.f64 6 (PI.f64)) s)","s","0",0.325927734375],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","r","-inf",0.266845703125],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","r","inf",0.529052734375],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","r","0",0.553955078125],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","s","-inf",0.2861328125],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","s","inf",0.419921875],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","s","0",0.9560546875],["(/.f64 (neg.f64 r) (*.f64 3 s))","s","-inf",0.260986328125],["(/.f64 (neg.f64 r) (*.f64 3 s))","s","inf",0.424072265625],["(/.f64 (neg.f64 r) (*.f64 3 s))","s","0",0.630126953125],["(/.f64 (neg.f64 r) (*.f64 3 s))","r","-inf",0.341796875],["(/.f64 (neg.f64 r) (*.f64 3 s))","r","inf",0.548095703125],["(/.f64 (neg.f64 r) (*.f64 3 s))","r","0",0.554931640625]],"time":9.300048828125,"type":"series"},{"count":[[4,230]],"inputs":[["(/.f64 (neg.f64 r) (*.f64 3 s))","(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/3 s) 0) (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 r -1/3) s) 0) (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 r -1/3) s) (*.f64 (/.f64 (*.f64 r -1/3) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 r -1/3) s)) (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 r -1/3) s) (*.f64 0 (/.f64 (*.f64 r -1/3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 r (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 r -1/3) s)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)) (cbrt.f64 (/.f64 (*.f64 r -1/3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 r -1/3) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 r (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 r)) (*.f64 (cbrt.f64 (*.f64 r r)) (/.f64 1/3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/3 s)) (/.f64 r (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 s) (*.f64 r 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 r s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 r)) s) (cbrt.f64 (/.f64 (*.f64 r r) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 r) -3) (/.f64 (cbrt.f64 (*.f64 r r)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 r) (/.f64 1/3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/3 s) (neg.f64 r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r -1/3) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 -1/3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/3 s)) (/.f64 (neg.f64 r) (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (*.f64 r -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (neg.f64 (/.f64 r s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 r (*.f64 3 s)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (cbrt.f64 r) s)) (cbrt.f64 (/.f64 (*.f64 r r) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 r 27))) (/.f64 (cbrt.f64 (*.f64 r r)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 r (*.f64 3 s))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 r) s) (neg.f64 (cbrt.f64 (/.f64 (*.f64 r r) 27))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 r) (neg.f64 (*.f64 (cbrt.f64 (*.f64 r r)) (/.f64 1/3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 r 27)) (neg.f64 (/.f64 (cbrt.f64 (*.f64 r r)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) (/.f64 1 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r 1/3) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) (pow.f64 (cbrt.f64 (*.f64 3 s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 r s)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 r 1/3) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (*.f64 3 s) (/.f64 r s))) (*.f64 (*.f64 3 s) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (*.f64 9 (*.f64 s s)))) (*.f64 (*.f64 3 s) (*.f64 r (cbrt.f64 (/.f64 1/3 s))))) (*.f64 (*.f64 3 s) (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (*.f64 -3 s)) (*.f64 (*.f64 3 s) (neg.f64 r))) (*.f64 (*.f64 3 s) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 s) (*.f64 (*.f64 3 s) (*.f64 r 1/3))) (*.f64 (*.f64 3 s) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 3 (/.f64 r s))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (*.f64 9 (*.f64 s s)))) (*.f64 3 (*.f64 r (cbrt.f64 (/.f64 1/3 s))))) (*.f64 3 (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (*.f64 3 s)) (*.f64 3 r)) (*.f64 3 (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (*.f64 -3 s)) (*.f64 3 (neg.f64 r))) (*.f64 3 (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (cbrt.f64 1/3)) (*.f64 s (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sqrt.f64 1/3)) (*.f64 s (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) 1) (*.f64 (cbrt.f64 (*.f64 9 (*.f64 s s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) 1) (*.f64 (cbrt.f64 (*.f64 s s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 r) (cbrt.f64 1/3)) 1) (*.f64 (cbrt.f64 9) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 r) (sqrt.f64 1/3)) 1) (*.f64 (sqrt.f64 3) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 r -1/3)) (cbrt.f64 (*.f64 r r))) (*.f64 (cbrt.f64 s) (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 r 1/3) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s))) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 r -1/3) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 r (*.f64 -3 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 r) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 r s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1/3 s)) r) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 r) -3) (cbrt.f64 (*.f64 r r))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 r) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 r -1/3) s)) (cbrt.f64 (*.f64 r r))) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 r (cbrt.f64 (/.f64 1/3 s)))) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 r s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (neg.f64 r)) s) (cbrt.f64 (*.f64 r r))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (neg.f64 r)) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/3 s)) (neg.f64 r)) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r -1/3) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) (*.f64 (neg.f64 r) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) (neg.f64 r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) r) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) (*.f64 (neg.f64 r) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)) (cbrt.f64 (neg.f64 r))) (cbrt.f64 (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)) (cbrt.f64 (*.f64 r -1/3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2)) (cbrt.f64 r)) (cbrt.f64 (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 s) r) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 r)) (/.f64 (cbrt.f64 (*.f64 r r)) s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 r (cbrt.f64 (*.f64 9 (*.f64 s s))))) (cbrt.f64 (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 r) (cbrt.f64 (*.f64 9 (*.f64 s s)))) (cbrt.f64 (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) 1) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) 1) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 r s)) 1) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 r) (cbrt.f64 1/3)) (/.f64 1 s)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 r s) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 r) (sqrt.f64 1/3)) (/.f64 1 s)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 r)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2))) (cbrt.f64 (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 r -1/3)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 r) (cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 2))) (cbrt.f64 (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) (pow.f64 (cbrt.f64 (cbrt.f64 s)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 s)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) 1) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 s)) (cbrt.f64 s)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 r) (cbrt.f64 (*.f64 27 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 r) (*.f64 s (cbrt.f64 3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 r) (cbrt.f64 s)) (cbrt.f64 (*.f64 (*.f64 s s) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 r) (*.f64 s (sqrt.f64 3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (cbrt.f64 1/3)) (*.f64 (cbrt.f64 9) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) 1) (cbrt.f64 (*.f64 9 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 r (cbrt.f64 (*.f64 -3 s))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 s))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 s))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r -1/3) (cbrt.f64 (*.f64 s s))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r -1/3) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 r s)) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 r s)) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 r s)) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 r s)) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 r s)) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 r (cbrt.f64 (/.f64 1/3 s))) (neg.f64 (cbrt.f64 (*.f64 9 (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (*.f64 3 s)) (*.f64 (*.f64 3 s) r)) (*.f64 9 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 s) (*.f64 3 (*.f64 r 1/3))) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 r -1/3) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 r -1/3) s)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 r -1/3) s)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 r -1/3) s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 r (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 r (*.f64 3 s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1/3 s) r))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 r -1/3) s) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 r (*.f64 3 s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 r -1/3) s) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (*.f64 r -1/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (*.f64 r -1/3) s))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 0) (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) (*.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)) (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) (*.f64 0 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 s r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) 2)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) (*.f64 s r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 r r) (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (+.f64 (PI.f64) (PI.f64))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 2 (*.f64 s r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 (+.f64 (PI.f64) (PI.f64)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 2)) (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (*.f64 (PI.f64) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 (+.f64 (PI.f64) (PI.f64)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) (cbrt.f64 r)) (cbrt.f64 (*.f64 r r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 r) (*.f64 (cbrt.f64 (*.f64 r r)) (*.f64 (+.f64 (PI.f64) (PI.f64)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 r) (*.f64 (+.f64 (PI.f64) (PI.f64)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) (neg.f64 r)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) s) r) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) s) 3) (*.f64 (*.f64 (PI.f64) s) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) 0) (*.f64 6 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 (*.f64 (PI.f64) s)) (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 (PI.f64) s)) (*.f64 3 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 6 (*.f64 (PI.f64) s))) (*.f64 6 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 (*.f64 (PI.f64) s)) (*.f64 0 (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 6) (*.f64 (cbrt.f64 36) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (cbrt.f64 (*.f64 s s)) (*.f64 6 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 6 (PI.f64))) (*.f64 (cbrt.f64 (*.f64 36 (*.f64 (PI.f64) (PI.f64)))) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (PI.f64)) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 6 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s 6) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 6 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 6 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))) (cbrt.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 2)) (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 (PI.f64)) (cbrt.f64 s)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (*.f64 6 (PI.f64)))) (cbrt.f64 (*.f64 36 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 6) (*.f64 (sqrt.f64 6) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) s) 6)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 6 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 6 (*.f64 (PI.f64) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 0) (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) (*.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)) (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) (*.f64 0 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 2)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 6 (PI.f64))) (*.f64 (cbrt.f64 (*.f64 36 (*.f64 (PI.f64) (PI.f64)))) (*.f64 s r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (PI.f64)) (*.f64 s r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s r) (*.f64 6 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r 6) (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (*.f64 6 (PI.f64))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 (*.f64 6 (PI.f64)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 6 (*.f64 s r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 2)) (cbrt.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (cbrt.f64 (*.f64 6 (*.f64 (PI.f64) s)))) (cbrt.f64 (pow.f64 (*.f64 6 (*.f64 (PI.f64) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (*.f64 (*.f64 (PI.f64) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 6 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) (cbrt.f64 r)) (cbrt.f64 (*.f64 r r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 r) (*.f64 (cbrt.f64 (*.f64 r r)) (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 r) (*.f64 6 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) (neg.f64 r)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 3))))))"]],"rules":[["egg-rr",35],["egg-rr",33],["egg-rr",35],["egg-rr",127]],"time":38.203857421875,"type":"rewrite"},{"count":[[314,234]],"inputs":[["(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 -1/3 (/.f64 r s))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 -1/3 (/.f64 r s))","(/.f64 (*.f64 -1/3 r) s)","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 2 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 s r) (+.f64 (PI.f64) (PI.f64)))","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (PI.f64)))","(*.f64 (*.f64 6 (PI.f64)) s)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)","(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)"]],"time":238.922119140625,"type":"simplify"},{"compiler":[[8831,5081]],"time":69.9248046875,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 r (+.f64 (PI.f64) (PI.f64))) s)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","fresh",0.05085506102000644],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","next",0.04923382078844846],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","fresh",0.24623402500535],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (pow.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 3) 1/3)))","fresh",42.05653394859079]],"compiler":[[35,24],[35,25],[22,13],[39,29],[35,24],[35,25],[22,13],[39,29]],"count":[[236,4]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[234,3],"picked":[1,0]}],"min-error":[0.037755218426504596],"time":107.489013671875,"type":"prune"},{"compiler":[[148,74]],"locations":[["(*.f64 s (*.f64 r (PI.f64)))",0.23828125,true],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))",0.28125,true],["(*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)",0.28515625,false],["(/.f64 (neg.f64 r) (*.f64 3 s))",0.296875,false]],"time":29.085205078125,"type":"localize"},{"count":[[2,0]],"series":[["(*.f64 s (*.f64 r (PI.f64)))","r","-inf",0.26904296875],["(*.f64 s (*.f64 r (PI.f64)))","r","inf",0.162109375],["(*.f64 s (*.f64 r (PI.f64)))","r","0",0.14990234375],["(*.f64 s (*.f64 r (PI.f64)))","s","-inf",0.2978515625],["(*.f64 s (*.f64 r (PI.f64)))","s","inf",0.14599609375],["(*.f64 s (*.f64 r (PI.f64)))","s","0",0.14892578125],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","r","-inf",0.18115234375],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","r","inf",0.1650390625],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","r","0",0.1689453125],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","s","-inf",0.1650390625],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","s","inf",0.1748046875],["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","s","0",0.208984375]],"time":2.345947265625,"type":"series"},{"count":[[2,83]],"inputs":[["(*.f64 6 (*.f64 s (*.f64 r (PI.f64))))","(*.f64 s (*.f64 r (PI.f64)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 s (*.f64 r (PI.f64))) 3) (*.f64 (*.f64 s (*.f64 r (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 s (*.f64 r (PI.f64)))) (*.f64 3 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 s) (*.f64 r (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (PI.f64)) (*.f64 6 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (*.f64 s r)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (*.f64 r (PI.f64))) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 s) r) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 s) (PI.f64)) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s r) (*.f64 (PI.f64) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (*.f64 r (PI.f64)))) (*.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 6 (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 (*.f64 6 s) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 6) (*.f64 s r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 6 (*.f64 s r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (*.f64 6 s) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3) 6) (cbrt.f64 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))) (pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 2/3) (cbrt.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (*.f64 r (PI.f64))) (cbrt.f64 6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 216 (*.f64 s (*.f64 r (PI.f64))))) (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 6 s) (cbrt.f64 (*.f64 r (PI.f64)))) (pow.f64 (*.f64 r (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (*.f64 s (*.f64 r (PI.f64))) (cbrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3) (cbrt.f64 (*.f64 216 (*.f64 s (*.f64 r (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 r (PI.f64)) 2/3) (*.f64 (*.f64 6 s) (cbrt.f64 (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64))))) (neg.f64 (pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (*.f64 r (PI.f64))) (sqrt.f64 6)) (sqrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 6) (*.f64 (*.f64 s (*.f64 r (PI.f64))) (sqrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 6) (*.f64 (cbrt.f64 36) (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (*.f64 s (*.f64 r (PI.f64)))) (cbrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (*.f64 s (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (*.f64 r (PI.f64))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 3 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (*.f64 s (*.f64 r (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (*.f64 r (PI.f64))) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -6 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 6 (*.f64 s (*.f64 r (PI.f64)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 s (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 s (*.f64 r (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 r (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (PI.f64)) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 r (PI.f64))) (*.f64 (pow.f64 (*.f64 r (PI.f64)) 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s r) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 s r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s r) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 r (PI.f64)) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (PI.f64)) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (pow.f64 s 2/3) (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 s (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 s 2/3) (*.f64 r (PI.f64))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 r (PI.f64)) 2/3) s) (cbrt.f64 (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 s r) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s 2/3) (*.f64 (*.f64 r (PI.f64)) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (*.f64 r (PI.f64)))) (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3) (cbrt.f64 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (*.f64 r (PI.f64)))) (pow.f64 (*.f64 r (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 r (PI.f64)) 2/3) (*.f64 s (cbrt.f64 (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 s (*.f64 r (PI.f64))))) (neg.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 s (*.f64 r (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 s (*.f64 r (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (*.f64 r (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 s (*.f64 r (PI.f64))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (*.f64 r (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 s (*.f64 r (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 s (*.f64 r (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 s (*.f64 r (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 s (*.f64 r (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3))))))"]],"rules":[["egg-rr",34],["egg-rr",49]],"time":42.636962890625,"type":"rewrite"},{"count":[[83,83]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":27.0439453125,"type":"simplify"},{"compiler":[[9229,4893]],"time":72.636962890625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (pow.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3) 1/3))))","fresh",42.3068949299936],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","done",0.04923382078844846],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","next",0.24623402500535]],"compiler":[[39,29],[35,25],[22,13],[39,29],[22,13]],"count":[[250,3]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[246,1],"picked":[1,1]}],"min-error":[0.0377273886044992],"time":125.02197265625,"type":"prune"},{"compiler":[[82,19]],"locations":[["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)",0.01171875,true],["(*.f64 (PI.f64) s)",0.20703125,true],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))",0.2312646118039529,true],["(/.f64 1/8 (*.f64 (PI.f64) s))",0.34375,true]],"time":11.9921875,"type":"localize"},{"count":[[4,72]],"series":[["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","r","-inf",0.98291015625],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","r","inf",0.908935546875],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","r","0",2.18896484375],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","s","-inf",1.051025390625],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","s","inf",1.171875],["(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","s","0",0.662841796875],["(*.f64 (PI.f64) s)","s","-inf",0.260009765625],["(*.f64 (PI.f64) s)","s","inf",0.156982421875],["(*.f64 (PI.f64) s)","s","0",0.14892578125],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","s","-inf",0.508056640625],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","s","inf",0.594970703125],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","s","0",0.916015625],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","r","-inf",1.02294921875],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","r","inf",1.203857421875],["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","r","0",0.527099609375],["(/.f64 1/8 (*.f64 (PI.f64) s))","s","-inf",0.278076171875],["(/.f64 1/8 (*.f64 (PI.f64) s))","s","inf",0.498046875],["(/.f64 1/8 (*.f64 (PI.f64) s))","s","0",0.393798828125]],"time":13.764892578125,"type":"series"},{"count":[[4,173]],"inputs":[["(/.f64 1/8 (*.f64 (PI.f64) s))","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(*.f64 (PI.f64) s)","(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 0) (/.f64 1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (*.f64 0 (/.f64 1/8 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1/8 (*.f64 (PI.f64) s))) (/.f64 1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (PI.f64) s))) (/.f64 -1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (*.f64 (PI.f64) s) 1/8)) (/.f64 -1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (/.f64 0 (/.f64 (*.f64 (PI.f64) s) 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))) (/.f64 (cbrt.f64 1/64) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/8) (PI.f64)) (/.f64 (cbrt.f64 1/64) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/8) (/.f64 (cbrt.f64 1/64) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/8) s) (/.f64 (cbrt.f64 1/64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/8) (cbrt.f64 (*.f64 (PI.f64) s))) (/.f64 (sqrt.f64 1/8) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/8) (PI.f64)) (/.f64 (sqrt.f64 1/8) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/8) (/.f64 (sqrt.f64 1/8) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/8) s) (/.f64 (sqrt.f64 1/8) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))) (pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 2/3) (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/8 (PI.f64)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) s) -1/3) (/.f64 1/8 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 1/8 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (/.f64 1/8 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/8 (/.f64 -1 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/8 (/.f64 (/.f64 1 (PI.f64)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (PI.f64)) s) 1/8)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1/8 (PI.f64)) (cbrt.f64 s)) (pow.f64 (cbrt.f64 s) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/8 s) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/8 (PI.f64)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/8 (PI.f64)) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/8 s) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/8 (PI.f64)) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/8 (PI.f64)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/8 (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/8 (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (PI.f64) s) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (*.f64 (PI.f64) s) 1/8) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (*.f64 (PI.f64) s) 1/8) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (PI.f64)) s) (/.f64 1 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (*.f64 (PI.f64) s)) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (PI.f64) s) -1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 s) (/.f64 (PI.f64) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (*.f64 (PI.f64) s) 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 1/8 (PI.f64)) (cbrt.f64 s))) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 1/8 s)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) s) 1/8) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/8 (*.f64 (PI.f64) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) 0) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 0 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (exp.f64 (/.f64 r s)))) (neg.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (/.f64 0 (cbrt.f64 (exp.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 2/3)) (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 4/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (exp.f64 (/.f64 r s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (cbrt.f64 (exp.f64 (/.f64 r s))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (cbrt.f64 (exp.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (exp.f64 (/.f64 r s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 r s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (/.f64 r s)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (neg.f64 (/.f64 r s)) 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 (neg.f64 (/.f64 r s)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (/.f64 r s)) 1/3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) s) (*.f64 (*.f64 (PI.f64) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) s) 0) (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) s) (*.f64 0 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (PI.f64) s)) (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (pow.f64 s 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) s)) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (PI.f64) s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) s) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) s) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) (*.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 0) (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 r) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (exp.f64 (/.f64 r s)))) (*.f64 (/.f64 1 r) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (cbrt.f64 (exp.f64 (/.f64 r s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 r) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (cbrt.f64 (exp.f64 (/.f64 r s))))) (*.f64 (/.f64 1 r) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (exp.f64 (/.f64 r s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) (*.f64 0 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (exp.f64 (/.f64 r s))) (/.f64 1 r)) (*.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (cbrt.f64 (exp.f64 (/.f64 r s)))) (/.f64 1 r)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (cbrt.f64 (exp.f64 (/.f64 r s)))) (/.f64 1 r)) (*.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (exp.f64 (/.f64 r s))) (/.f64 1 r)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 r)) (/.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (cbrt.f64 r)) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (pow.f64 r 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) (/.f64 (pow.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) 2/3) (pow.f64 r 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (cbrt.f64 r)) (/.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (pow.f64 r 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 r -1/3) (/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (pow.f64 r 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (cbrt.f64 r)) (pow.f64 (cbrt.f64 r) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) (pow.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 2/3) (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (/.f64 -1 r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))))) (/.f64 (pow.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) 2/3) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (/.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (/.f64 1 r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 r) (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (/.f64 1 (*.f64 (*.f64 (PI.f64) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r) (/.f64 (/.f64 1 (PI.f64)) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (cbrt.f64 r)) (pow.f64 r 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) -1/8) (neg.f64 (*.f64 (*.f64 (PI.f64) s) r)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (neg.f64 r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r) (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (*.f64 (*.f64 (PI.f64) s) r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (/.f64 (*.f64 (*.f64 (PI.f64) s) r) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/8 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)) (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) (cbrt.f64 r))) (neg.f64 (pow.f64 r 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1/8 (*.f64 (PI.f64) s)) (/.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))) (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) r)) 3))))))"]],"rules":[["egg-rr",51],["egg-rr",29],["egg-rr",31],["egg-rr",62]],"time":42.18408203125,"type":"rewrite"},{"count":[[245,204]],"inputs":[["(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(+.f64 1 (+.f64 (*.f64 1/18 (/.f64 (pow.f64 r 2) (pow.f64 s 2))) (*.f64 -1/3 (/.f64 r s))))","(+.f64 1 (+.f64 (*.f64 1/18 (/.f64 (pow.f64 r 2) (pow.f64 s 2))) (+.f64 (*.f64 -1/162 (/.f64 (pow.f64 r 3) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (*.f64 -1/3 (/.f64 r s))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 r 3)) (+.f64 (*.f64 -1/27 (pow.f64 r 3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)))) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (*.f64 -1/3 (/.f64 r s))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)) (*.f64 1/27 (pow.f64 r 3)))) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3)))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 r 2) (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 r 3)) (+.f64 (*.f64 -1/27 (pow.f64 r 3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)))) (*.f64 r (PI.f64))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3)))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 r 2) (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)) (*.f64 1/27 (pow.f64 r 3)))) (*.f64 r (PI.f64))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 5/72 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64)))) (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64)))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(-.f64 (+.f64 (*.f64 5/72 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64)))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 -7/324 (/.f64 (pow.f64 r 2) (*.f64 (pow.f64 s 4) (PI.f64)))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","(/.f64 1/8 (*.f64 s (PI.f64)))","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(fma.f64 (/.f64 r s) -1/3 1)","(+.f64 1 (+.f64 (*.f64 1/18 (/.f64 (pow.f64 r 2) (pow.f64 s 2))) (*.f64 -1/3 (/.f64 r s))))","(+.f64 (fma.f64 (/.f64 r s) -1/3 1) (/.f64 (/.f64 (*.f64 1/18 (*.f64 r r)) s) s))","(+.f64 1 (+.f64 (*.f64 1/18 (/.f64 (pow.f64 r 2) (pow.f64 s 2))) (+.f64 (*.f64 -1/162 (/.f64 (pow.f64 r 3) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","(+.f64 1 (fma.f64 (/.f64 (*.f64 r r) (*.f64 s s)) 1/18 (fma.f64 -1/162 (pow.f64 (/.f64 r s) 3) (/.f64 (*.f64 -1/3 r) s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","(pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(fma.f64 (/.f64 r s) -1/3 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (*.f64 -1/3 (/.f64 r s))))","(fma.f64 (/.f64 (/.f64 (*.f64 (*.f64 r r) 1/6) s) s) 1/3 (fma.f64 (/.f64 r s) -1/3 1))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 r 3)) (+.f64 (*.f64 -1/27 (pow.f64 r 3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)))) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","(+.f64 (fma.f64 (/.f64 (/.f64 (*.f64 (*.f64 r r) 1/6) s) s) 1/3 1) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 (pow.f64 r 3) (-.f64 -1/6 -1/27)) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 r r) 1/6) r))) (pow.f64 s 3)) (/.f64 (*.f64 -1/3 r) s)))","1","(+.f64 1 (*.f64 -1/3 (/.f64 r s)))","(fma.f64 (/.f64 r s) -1/3 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (*.f64 -1/3 (/.f64 r s))))","(fma.f64 (/.f64 (/.f64 (*.f64 (*.f64 r r) 1/6) s) s) 1/3 (fma.f64 (/.f64 r s) -1/3 1))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (pow.f64 s 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)) (*.f64 1/27 (pow.f64 r 3)))) (pow.f64 s 3))) (*.f64 -1/3 (/.f64 r s)))))","(fma.f64 (/.f64 (/.f64 (*.f64 (*.f64 r r) 1/6) s) s) 1/3 (fma.f64 -1/3 (fma.f64 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 r r) 1/6) r) (pow.f64 (*.f64 1/3 r) 3))) (pow.f64 s (neg.f64 3)) (/.f64 r s)) 1))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 s (PI.f64))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64))))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3)))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (fma.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (*.f64 r r) 1/6) (*.f64 r (PI.f64))) (/.f64 (*.f64 1/2 r) (PI.f64))) (pow.f64 s 3)) 1/8 (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 r 2) (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/6 (pow.f64 r 3)) (+.f64 (*.f64 -1/27 (pow.f64 r 3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)))) (*.f64 r (PI.f64))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(fma.f64 (/.f64 (fma.f64 -1/6 (/.f64 (*.f64 r r) (PI.f64)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 (pow.f64 r 3) (-.f64 -1/6 -1/27)) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 r r) 1/6) r)))) (*.f64 r (PI.f64)))) (pow.f64 s 4)) 1/8 (+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (fma.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (*.f64 r r) 1/6) (*.f64 r (PI.f64))) (/.f64 (*.f64 1/2 r) (PI.f64))) (pow.f64 s 3)) 1/8 (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64))))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64))))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3)))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (fma.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (*.f64 r r) 1/6) (*.f64 r (PI.f64))) (/.f64 (*.f64 1/2 r) (PI.f64))) (pow.f64 s 3)) 1/8 (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64)))))","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 r 2) (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) r)) (*.f64 1/27 (pow.f64 r 3)))) (*.f64 r (PI.f64))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 r (PI.f64))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/2 (pow.f64 r 2)) (*.f64 1/3 (pow.f64 r 2))) (*.f64 r (PI.f64))))) (pow.f64 s 3))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(fma.f64 -1/8 (/.f64 (fma.f64 1/6 (/.f64 (*.f64 r r) (PI.f64)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 1/6 (pow.f64 r 3)) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 r r) 1/6) r) (pow.f64 (*.f64 1/3 r) 3)))) (*.f64 r (PI.f64)))) (pow.f64 s 4)) (+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (fma.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (*.f64 r r) 1/6) (*.f64 r (PI.f64))) (/.f64 (*.f64 1/2 r) (PI.f64))) (pow.f64 s 3)) 1/8 (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64))))))","(/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))","(-.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64))))","(-.f64 (+.f64 (*.f64 5/72 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64)))) (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64)))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(fma.f64 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64))) 5/72 (+.f64 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64)))) (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64)))))","(-.f64 (+.f64 (*.f64 5/72 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64)))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 s (*.f64 r (PI.f64))))) (*.f64 -7/324 (/.f64 (pow.f64 r 2) (*.f64 (pow.f64 s 4) (PI.f64)))))) (*.f64 1/6 (/.f64 1 (*.f64 (pow.f64 s 2) (PI.f64)))))","(fma.f64 (/.f64 r (*.f64 (pow.f64 s 3) (PI.f64))) 5/72 (+.f64 (fma.f64 (/.f64 (/.f64 (*.f64 r r) (PI.f64)) (pow.f64 s 4)) -7/324 (/.f64 1/4 (*.f64 s (*.f64 r (PI.f64))))) (/.f64 -1/6 (*.f64 (*.f64 s s) (PI.f64)))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (pow.f64 (exp.f64 (neg.f64 (/.f64 r s))) 1/3) (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))","(*.f64 1/8 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) (pow.f64 (exp.f64 (*.f64 -1 (/.f64 r s))) 1/3)) (*.f64 s (*.f64 r (PI.f64)))))","(/.f64 (*.f64 1/8 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (exp.f64 (neg.f64 (/.f64 r s))))) (*.f64 s (*.f64 r (PI.f64))))"]],"time":250.97705078125,"type":"simplify"},{"compiler":[[5532,2031]],"time":35.77978515625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","next",0.23842152500535],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (pow.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3) 1/3))))","fresh",42.3068949299936],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","done",0.04923382078844846]],"compiler":[[30,18],[39,29],[35,25],[30,18],[39,29]],"count":[[207,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[204,1],"picked":[1,0]}],"min-error":[0.0338211386044992],"time":70.156005859375,"type":"prune"},{"compiler":[[128,40]],"locations":[["(cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s))))",0.2312646118039529,false],["(/.f64 1/512 (*.f64 (PI.f64) s))",0.34375,true],["(*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))",0.38671875,true],["(pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)",0.48540883791597833,true]],"time":22.63916015625,"type":"localize"},{"count":[[3,24]],"series":[["(/.f64 1/512 (*.f64 (PI.f64) s))","s","-inf",0.26904296875],["(/.f64 1/512 (*.f64 (PI.f64) s))","s","inf",0.278076171875],["(/.f64 1/512 (*.f64 (PI.f64) s))","s","0",0.33203125],["(*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))","s","-inf",3.02099609375],["(*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))","s","inf",0.6181640625],["(*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))","s","0",2.076904296875],["(pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)","s","-inf",0.919921875],["(pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)","s","inf",0.363037109375],["(pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)","s","0",0.81689453125]],"time":8.828857421875,"type":"series"},{"count":[[3,229]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)","(*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))","(/.f64 1/512 (*.f64 (PI.f64) s))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 0) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (*.f64 0 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (/.f64 0 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (*.f64 (*.f64 (PI.f64) s) (PI.f64)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (PI.f64) -1/3) (cbrt.f64 (*.f64 s (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (PI.f64) 2/3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (PI.f64) s) -1/3) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) 4)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) s) 2) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) s) (neg.f64 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (PI.f64) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 0) (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (*.f64 0 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))))) (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (pow.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 2/3) (cbrt.f64 (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (pow.f64 (*.f64 (PI.f64) s) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 (/.f64 1/512 (PI.f64)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/512)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (PI.f64))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (cbrt.f64 (PI.f64))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (cbrt.f64 s)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 -1/512)) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/512) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) 1) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) 1) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) -1) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512)) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s)))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) (cbrt.f64 1/512))) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 0) (/.f64 1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (*.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1/512 (*.f64 (PI.f64) s))) (/.f64 1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (*.f64 0 (/.f64 1/512 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (PI.f64) s))) (/.f64 -1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (/.f64 0 (/.f64 (*.f64 (PI.f64) s) 1/512)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (*.f64 (PI.f64) s) 1/512)) (/.f64 -1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) (/.f64 1 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 -1/512 (*.f64 (PI.f64) s))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/512 (/.f64 1 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (PI.f64) s)) 1/512)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/512) (/.f64 (sqrt.f64 1/512) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/512 (PI.f64)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/512 (/.f64 (/.f64 -1 s) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 1/512 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (/.f64 1/512 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) s) -1/3) (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/512) (PI.f64)) (/.f64 (cbrt.f64 1/262144) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/512) s) (/.f64 (cbrt.f64 1/262144) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/512) (PI.f64)) (/.f64 (sqrt.f64 1/512) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/512) s) (/.f64 (sqrt.f64 1/512) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/512) (cbrt.f64 (*.f64 (PI.f64) s))) (/.f64 (sqrt.f64 1/512) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/262144) (PI.f64)) (/.f64 (cbrt.f64 1/512) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 s) (PI.f64)) -1/512)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/512 s) (/.f64 1 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/512) (pow.f64 (*.f64 (PI.f64) s) 2/3)) (/.f64 (sqrt.f64 1/512) (cbrt.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/512 (*.f64 (PI.f64) s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (pow.f64 (*.f64 (PI.f64) s) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/262144) s) (/.f64 (cbrt.f64 1/512) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 1/512) (*.f64 (PI.f64) s)) (sqrt.f64 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/512 (PI.f64)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/512) (/.f64 (cbrt.f64 1/262144) (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/262144) (*.f64 (PI.f64) s)) (cbrt.f64 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 s) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) s) -1/3) 1/512) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) -1/512) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) 1/512) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) 1) (/.f64 (PI.f64) 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 1/512) (cbrt.f64 (*.f64 (PI.f64) s))) (sqrt.f64 1/512)) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3) (cbrt.f64 (/.f64 1/512 (PI.f64)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/512) (PI.f64)) (cbrt.f64 1/262144)) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/512) s) (cbrt.f64 1/262144)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 1/512) s) (sqrt.f64 1/512)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (cbrt.f64 1/262144)) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/512) (/.f64 (cbrt.f64 1/262144) s)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/512 (/.f64 1 s)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 s) (/.f64 (PI.f64) 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/512)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (PI.f64))) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/512) (/.f64 (sqrt.f64 1/512) s)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/262144) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/512 (PI.f64)) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/512 s) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) 1) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/512 s) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (cbrt.f64 (PI.f64))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (cbrt.f64 s)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 s) -1) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 s) (pow.f64 (PI.f64) 2/3)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) (cbrt.f64 s)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) (cbrt.f64 (pow.f64 s 2/3))) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) s) (PI.f64)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 s (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (PI.f64)) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (PI.f64)) (pow.f64 s 2/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1/134217728 (PI.f64))) (*.f64 (cbrt.f64 s) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1/134217728 (PI.f64))) (*.f64 (pow.f64 (PI.f64) 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (cbrt.f64 s)) (*.f64 (pow.f64 s 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (PI.f64) s) -1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (*.f64 (PI.f64) s) 1/512) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (*.f64 (PI.f64) s)) 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) 3) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/134217728 (PI.f64))) 1) (*.f64 (pow.f64 (PI.f64) 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/262144) (cbrt.f64 (/.f64 1/512 (PI.f64)))) (*.f64 (cbrt.f64 s) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/262144) (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s))) (cbrt.f64 1/512)) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s))) (cbrt.f64 (/.f64 1/512 (PI.f64)))) (cbrt.f64 (*.f64 s (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s))) (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/512) (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s)))) (pow.f64 (*.f64 (PI.f64) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (PI.f64))) (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s)))) (cbrt.f64 (*.f64 s (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (PI.f64))) (cbrt.f64 1/262144)) (*.f64 (cbrt.f64 s) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) (cbrt.f64 1/262144)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (*.f64 (PI.f64) s) 1/512)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 1/512 s)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s))) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/512 (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/512 (PI.f64)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (PI.f64)) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/512 (*.f64 (PI.f64) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (PI.f64) s) 1/512))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 s) (cbrt.f64 (/.f64 1/134217728 (PI.f64)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3) (cbrt.f64 -1/512)) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3) (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s)))) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/134217728 (PI.f64))) (/.f64 1 s)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/512) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 2/3)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s))) (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s)))) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/512) (/.f64 (sqrt.f64 1/512) (pow.f64 (*.f64 (PI.f64) s) 2/3))) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) 1) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) 1) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/512 (cbrt.f64 (*.f64 (PI.f64) s))) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) 1) (cbrt.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) -1) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s)))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1/512 s) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1/512 (PI.f64)) (cbrt.f64 s)) 1) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (pow.f64 (PI.f64) 2/3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (PI.f64) s))) 4)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 -1) (neg.f64 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (*.f64 s (cbrt.f64 (PI.f64)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/512 (*.f64 (PI.f64) (cbrt.f64 s))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (PI.f64) 1/512) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s))) (cbrt.f64 -1/512)) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/512) (/.f64 (cbrt.f64 1/262144) (cbrt.f64 (*.f64 (PI.f64) s)))) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 s (/.f64 (PI.f64) 1/512)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 1/512 (pow.f64 (*.f64 (PI.f64) s) 2/3))) (cbrt.f64 (neg.f64 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 1/134217728 (*.f64 (PI.f64) s)))) (neg.f64 (pow.f64 (*.f64 (PI.f64) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) s) 1/512) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1/512 (*.f64 (PI.f64) s)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -1/512 (/.f64 1 (*.f64 (PI.f64) s))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1/512 (*.f64 (PI.f64) s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) s)) -1/512))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1/512 (*.f64 (PI.f64) s)) 3))))))"]],"rules":[["egg-rr",149],["egg-rr",45],["egg-rr",35]],"time":37.708984375,"type":"rewrite"},{"count":[[253,232]],"inputs":[["(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(*.f64 -1 (/.f64 (cbrt.f64 -1/512) (*.f64 s (*.f64 (pow.f64 (cbrt.f64 -1) 2) (PI.f64)))))","(/.f64 (cbrt.f64 1/512) (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))","(/.f64 1/512 (*.f64 s (PI.f64)))"]],"time":84.4951171875,"type":"simplify"},{"compiler":[[9639,3660]],"time":63.6650390625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","done",0.23842152500535],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (pow.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3) 1/3))))","fresh",42.3068949299936],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","done",0.04923382078844846]],"compiler":[[30,18],[39,29],[35,25]],"count":[[280,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[277,0],"picked":[1,1]}],"min-error":[0.0338211386044992],"time":133.633056640625,"type":"prune"},{"accuracy":[0.04923382078844846],"baseline":[0.04923382078844846],"branch":[["s",0.04923382078844846,1],["r",0.04923382078844846,1],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))",0.04923382078844846,1]],"compiler":[[3,2],[3,2],[35,25],[223,124]],"count":[[7,1]],"inputs":[["(/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/512 (*.f64 (PI.f64) s))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) s)) -2)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (pow.f64 (pow.f64 (*.f64 s (*.f64 r (PI.f64))) 3) 1/3))))","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 r (+.f64 (PI.f64) (PI.f64))) s)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (pow.f64 (pow.f64 (*.f64 (*.f64 6 (*.f64 (PI.f64) s)) r) 3) 1/3)))","(/.f64 (*.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (+.f64 (exp.f64 (neg.f64 (/.f64 r s))) (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))))) r)","(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))"]],"link":["."],"name":["Disney BSSRDF, PDF of scattering profile"],"oracle":[42.51567652470652],"outputs":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))"]],"time":13.722900390625,"times":[["s",4.577880859375],["r",3.469970703125],["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 (*.f64 (*.f64 6 (PI.f64)) s) r)))",2.1240234375]],"type":"regimes"},{"compiler":[[35,25]],"inputs":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 1/4 (exp.f64 (/.f64 (neg.f64 r) s))) (*.f64 (*.f64 (*.f64 2 (PI.f64)) s) r)) (/.f64 (*.f64 3/4 (exp.f64 (/.f64 (neg.f64 r) (*.f64 3 s)))) (*.f64 6 (*.f64 s (*.f64 r (PI.f64))))))","(fma.f64 1/8 (/.f64 (cbrt.f64 (exp.f64 (neg.f64 (/.f64 r s)))) (*.f64 (*.f64 (PI.f64) s) r)) (/.f64 (/.f64 (/.f64 1/8 (*.f64 (PI.f64) s)) (exp.f64 (/.f64 r s))) r))"]],"stop":[["fuel",1]],"time":29.23291015625,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[35,25]],"remove-preprocessing":[[]],"time":13.06201171875,"type":"end"}]