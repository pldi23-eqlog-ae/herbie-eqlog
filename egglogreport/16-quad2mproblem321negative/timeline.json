[{"compiler":[[17,11]],"method":["search"],"sampling":[[12,0.29058954069728316,0.5246213855541555,0.18478907374856135],[11,0.22233025261402872,0.6250600523052299,0.1526096950807414],[10,0.15212069915696702,0.7215981883086897,0.12628111253434326],[9,0.10141379943797801,0.803509334008595,0.09507686655342695],[8,0.062408491961832624,0.8815199489608858,0.05607155907728156],[7,0.0,0.9517295024179475,0.048270497582052485],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":129.81787109375,"type":"analyze"},{"outcomes":[["body",256,"invalid",75.21875,1535],["body",4096,"valid",87.277587890625,393],["body",512,"valid",35.65673828125,388],["body",1024,"valid",99.3212890625,731],["body",2048,"valid",206.13818359375,1181],["body",256,"valid",286.124267578125,5563]],"time":799.919189453125,"type":"sample"},{"compiler":[[16,10]],"inputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 b_2 c)))) b_2)","(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 c a)))) c)","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 a b_2)))) a)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 b_2 c)))) b_2)","(/.f64 (+.f64 a (sqrt.f64 (fma.f64 a a (neg.f64 (*.f64 b_2 c))))) (neg.f64 b_2))","(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 c a)))) c)","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 a b_2)))) a)","(/.f64 (+.f64 c (sqrt.f64 (fma.f64 c c (neg.f64 (*.f64 a b_2))))) (neg.f64 a))"]],"symmetry":[[]],"time":78.77880859375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))"]],"time":21.091064453125,"type":"simplify"},{"compiler":[[29,17]],"time":0.421142578125,"type":"eval"},{"alts":[["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","next",32.51795945779134]],"compiler":[[16,10],[16,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[32.51795945779134],"time":0.9228515625,"type":"prune"},{"compiler":[[53,10]],"locations":[["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))",0.125,true],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))",0.2539034976055602,true],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))",0.8944631528467288,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))",23.59808729629627,true]],"time":8.401123046875,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","a","-inf",0.518798828125],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","a","inf",0.7509765625],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","a","0",0.322998046875],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","c","-inf",0.387939453125],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","c","inf",0.60009765625],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","c","0",0.322021484375],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","b_2","-inf",0.879150390625],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","b_2","inf",0.419189453125],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","b_2","0",0.712890625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","a","-inf",0.24609375],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","a","inf",0.254150390625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","a","0",0.218994140625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","c","-inf",0.23095703125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","c","inf",0.22802734375],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","c","0",0.2890625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","b_2","-inf",0.264892578125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","b_2","inf",0.30810546875],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","b_2","0",0.30712890625],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","a","-inf",0.339111328125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","a","inf",0.35595703125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","a","0",0.221923828125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","c","-inf",0.343017578125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","c","inf",0.430908203125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","c","0",0.23095703125],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","b_2","-inf",0.447021484375],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","b_2","inf",0.218994140625],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","b_2","0",0.27392578125],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","-inf",0.583984375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","inf",0.585205078125],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","0",0.75],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","-inf",0.4990234375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","inf",0.712890625],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","0",0.31396484375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","-inf",0.491943359375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","inf",0.4990234375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","0",1.012939453125]],"time":16.100830078125,"type":"series"},{"count":[[4,207]],"inputs":[["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 0 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (fabs.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 0) (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (*.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1/2) (*.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (*.f64 0 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (*.f64 1/2 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (-.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b_2) (cbrt.f64 (*.f64 b_2 b_2)) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1 b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b_2 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b_2 b_2) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 c a)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 0) (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/2) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 1/2 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 c a) (*.f64 b_2 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b_2 b_2) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2)) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 0) (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 c a) (*.f64 b_2 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b_2) (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) b_2) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 (pow.f64 b_2 4)) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b_2 4)) (cbrt.f64 (*.f64 b_2 b_2)) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (neg.f64 a) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 c a))) (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) c (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (neg.f64 c) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (neg.f64 a))) (cbrt.f64 (*.f64 a a)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c a)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (neg.f64 a)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (cbrt.f64 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 c) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b_2 b_2) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c a) -1 (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 c a)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 c a) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 c a)) 1 (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b_2 b_2) 1 (neg.f64 (*.f64 c a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 0) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 1/2) (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 a) b_2) (*.f64 (/.f64 -1 a) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 a) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (*.f64 (/.f64 -1 a) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) (*.f64 0 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (*.f64 1/2 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b_2 (/.f64 -1 a)) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 a) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2)) (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 a)) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) a) (cbrt.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)) (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (pow.f64 (cbrt.f64 (neg.f64 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) -1) (*.f64 (cbrt.f64 (*.f64 a a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a)))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a)))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2)) (cbrt.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2)) (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 a)) (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) 3))))))"]],"rules":[["egg-rr",59],["egg-rr",66],["egg-rr",40],["egg-rr",42]],"time":41.33203125,"type":"rewrite"},{"count":[[291,258]],"inputs":[["b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1 b_2)","(+.f64 (*.f64 -1 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 1/2 (/.f64 (*.f64 c a) b_2))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (pow.f64 b_2 7))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -2 (/.f64 b_2 a))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(*.f64 -2 (/.f64 b_2 a))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(*.f64 -2 (/.f64 b_2 a))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))"]],"method":["egg-herbie"],"outputs":[["b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","(*.f64 -1 b_2)","(neg.f64 b_2)","(+.f64 (*.f64 -1 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 1/2 (/.f64 (*.f64 c a) b_2) (neg.f64 b_2))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)) b_2)","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 1/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) (-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)) b_2))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 -1/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) (fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(*.f64 1/2 (/.f64 (*.f64 c a) b_2))","(/.f64 (*.f64 1/2 (*.f64 c a)) b_2)","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) 1/16 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (pow.f64 b_2 7))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -1/8 -1/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b_2 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) 1/16 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 -1/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) (fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 -1/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) (fma.f64 b_2 2 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))","(*.f64 -2 (/.f64 b_2 a))","(/.f64 (*.f64 -2 b_2) a)","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 c) b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 1/2 c) b_2))))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -1/8 -1/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b_2 7))) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(*.f64 -2 (/.f64 b_2 a))","(/.f64 (*.f64 -2 b_2) a)","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 c) b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 1/2 c) b_2))))","(*.f64 -2 (/.f64 b_2 a))","(/.f64 (*.f64 -2 b_2) a)","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 c) b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 1/2 c) b_2))))"]],"time":257.762939453125,"type":"simplify"},{"compiler":[[5270,1640]],"time":37.4990234375,"type":"eval"},{"alts":[["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.78178616770977],["(/.f64 (+.f64 b_2 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3))) (neg.f64 a))","fresh",32.925047097762636],["(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","next",32.69717395208958],["(/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))","fresh",46.26434869489996],["(*.f64 -2 (/.f64 b_2 a))","fresh",45.6596790785587],["(*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (pow.f64 (cbrt.f64 (neg.f64 a)) -2))","fresh",32.81925715084487],["(+.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))","fresh",32.873137144842765],["(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","fresh",46.90084635324488],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",42.170844669718306],["(/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) (neg.f64 a))","fresh",33.25150191250692],["(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","done",32.51795945779134]],"compiler":[[13,9],[19,13],[31,15],[22,14],[8,6],[23,14],[21,14],[19,13],[8,6],[26,11],[16,10],[13,9],[19,13],[31,15],[22,14],[8,6],[23,14],[21,14],[19,13],[8,6],[26,11]],"count":[[259,11]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[258,10],"picked":[1,1]}],"min-error":[5.872924728110869],"time":71.531005859375,"type":"prune"},{"compiler":[[121,25]],"locations":[["(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))",0.2539034976055602,false],["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))",0.8944631528467288,false],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))",12.753659531004702,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))",23.59808729629627,false]],"time":16.7861328125,"type":"localize"},{"count":[[1,8]],"series":[["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","a","-inf",3.657958984375],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","a","inf",3.468017578125],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","a","0",2.818115234375],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","c","-inf",0.9990234375],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","c","inf",3.2919921875],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","c","0",1.799072265625],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","b_2","-inf",1.294921875],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","b_2","inf",0.838134765625],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))","b_2","0",1.656982421875]],"time":20.01904296875,"type":"series"},{"count":[[1,28]],"inputs":[["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) (*.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 0) (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 1/2) (*.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) (*.f64 0 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) (*.f64 1/2 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 4))) (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) -1) (*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (*.f64 -1 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (neg.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 4)) (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))))))"]],"rules":[["egg-rr",28]],"time":22.264892578125,"type":"rewrite"},{"count":[[36,40]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3))))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (-.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a 3) (pow.f64 b_2 4))) (*.f64 1/8 (/.f64 (pow.f64 a 3) (pow.f64 b_2 4)))) (+.f64 (*.f64 -8/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (pow.f64 a 3) (pow.f64 (cbrt.f64 4) 2)))) (*.f64 -4/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3))))) a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 10)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 5)) 1/3))))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 3) (pow.f64 b_2 4))) (*.f64 -1/4 (/.f64 (pow.f64 c 3) (pow.f64 b_2 4)))) (+.f64 (*.f64 -8/27 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (*.f64 -4/3 (*.f64 (*.f64 c (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 10)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 5)) 1/3))))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4))","(cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))","(fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3))))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 b_2 -4)) (*.f64 (*.f64 c c) (fma.f64 (/.f64 (/.f64 (*.f64 a a) b_2) b_2) -1/4 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (*.f64 a a)) (/.f64 1 (cbrt.f64 (cbrt.f64 4)))))))) (cbrt.f64 16)) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (-.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 a 3) (pow.f64 b_2 4))) (*.f64 1/8 (/.f64 (pow.f64 a 3) (pow.f64 b_2 4)))) (+.f64 (*.f64 -8/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (pow.f64 a 3) (pow.f64 (cbrt.f64 4) 2)))) (*.f64 -4/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 a 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3))))) a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 10)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 5)) 1/3))))))) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 b_2 -4)) (+.f64 (/.f64 (*.f64 1/3 (*.f64 (*.f64 c c) (fma.f64 (/.f64 (/.f64 (*.f64 a a) b_2) b_2) -1/4 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (*.f64 a a)) (/.f64 1 (cbrt.f64 (cbrt.f64 4)))))))) (cbrt.f64 16)) (/.f64 (*.f64 1/3 (*.f64 (pow.f64 c 3) (-.f64 (/.f64 (*.f64 (pow.f64 a 3) -1/8) (pow.f64 b_2 4)) (fma.f64 -8/27 (/.f64 (*.f64 (cbrt.f64 (pow.f64 b_2 -4)) (pow.f64 a 3)) (cbrt.f64 16)) (*.f64 -4/3 (*.f64 (fma.f64 (/.f64 (/.f64 (*.f64 a a) b_2) b_2) -1/4 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (*.f64 a a)) (/.f64 1 (cbrt.f64 (cbrt.f64 4)))))) (*.f64 a (*.f64 (pow.f64 (pow.f64 b_2 -10) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 4) -5)))))))))) (cbrt.f64 16)))) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4))","(cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))","(fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3))))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 (*.f64 a a) (fma.f64 (/.f64 (*.f64 c c) (*.f64 b_2 b_2)) -1/4 (*.f64 -4/3 (*.f64 (*.f64 c c) (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (/.f64 1 (cbrt.f64 (cbrt.f64 4)))))))) (cbrt.f64 (pow.f64 b_2 -4))) (cbrt.f64 16)) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 3) (pow.f64 b_2 4))) (*.f64 -1/4 (/.f64 (pow.f64 c 3) (pow.f64 b_2 4)))) (+.f64 (*.f64 -8/27 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 (cbrt.f64 4) 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (*.f64 -4/3 (*.f64 (*.f64 c (-.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2))) (*.f64 -1/2 (/.f64 (pow.f64 c 2) (pow.f64 b_2 2)))) (*.f64 4/3 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 2)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 4)) 1/3)))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 10)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 5)) 1/3))))))) (pow.f64 (cbrt.f64 4) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (cbrt.f64 4)) (*.f64 -2/3 (*.f64 (*.f64 c a) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 b_2 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 4) 2)) 1/3)))))))","(+.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 b_2 -4))) (+.f64 (/.f64 (*.f64 (*.f64 a a) (fma.f64 (/.f64 (*.f64 c c) (*.f64 b_2 b_2)) -1/4 (*.f64 -4/3 (*.f64 (*.f64 c c) (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (/.f64 1 (cbrt.f64 (cbrt.f64 4)))))))) (cbrt.f64 16)) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 (*.f64 (pow.f64 c 3) -1/8) (pow.f64 b_2 4)) (fma.f64 -4/3 (*.f64 c (*.f64 (fma.f64 (/.f64 (*.f64 c c) (*.f64 b_2 b_2)) -1/4 (*.f64 -4/3 (*.f64 (*.f64 c c) (*.f64 (pow.f64 (pow.f64 b_2 -2) 1/9) (/.f64 1 (cbrt.f64 (cbrt.f64 4))))))) (*.f64 (pow.f64 (pow.f64 b_2 -10) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 4) -5))))) (*.f64 -8/27 (/.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b_2 -4))) (cbrt.f64 16)))))) (cbrt.f64 16)))) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 c a) (pow.f64 (pow.f64 b_2 -4) 1/9)) (cbrt.f64 (cbrt.f64 (/.f64 1 16)))) (cbrt.f64 (*.f64 4 (*.f64 b_2 b_2)))))"]],"time":46.5849609375,"type":"simplify"},{"compiler":[[15098,5041]],"time":95.166015625,"type":"eval"},{"alts":[["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.78178616770977],["(/.f64 (+.f64 b_2 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3))) (neg.f64 a))","fresh",32.925047097762636],["(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3) 1/3)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","fresh",41.87375869205194],["(/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))","fresh",46.26434869489996],["(*.f64 -2 (/.f64 b_2 a))","fresh",45.6596790785587],["(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 2)) (neg.f64 a)))","fresh",32.76401016090233],["(+.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))","fresh",32.873137144842765],["(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","fresh",46.90084635324488],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",42.170844669718306],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","next",32.68714083950187],["(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) 2)) (neg.f64 a)))","fresh",32.991897741054814]],"compiler":[[13,9],[19,13],[35,19],[22,14],[8,6],[59,26],[21,14],[19,13],[8,6],[41,17],[41,17],[13,9],[19,13],[35,19],[22,14],[8,6],[59,26],[21,14],[19,13],[8,6],[41,17],[41,17]],"count":[[417,11]],"kept":[{"done":[1,0],"fresh":[9,7],"new":[406,4],"picked":[1,0]}],"min-error":[5.851934538051618],"time":134.73095703125,"type":"prune"},{"compiler":[[170,27]],"locations":[["(+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))",0.8944631528467288,false],["(cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2))",12.753659531004702,false],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)",19.700544032762192,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))",23.59808729629627,false]],"time":20.968017578125,"type":"localize"},{"count":[[1,32]],"series":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","a","-inf",1.799072265625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","a","inf",1.736083984375],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","a","0",1.097900390625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","c","-inf",1.676025390625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","c","inf",2.763916015625],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","c","0",2.656982421875],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","b_2","-inf",0.3662109375],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","b_2","inf",0.866943359375],["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)","b_2","0",1.048095703125]],"time":14.322021484375,"type":"series"},{"count":[[1,39]],"inputs":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 1/2) (*.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) (*.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 0) (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) (*.f64 1/2 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 2)) (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (-.f64 (cbrt.f64 (*.f64 b_2 b_2)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 b_2)))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (+.f64 1/3 1/2)) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2))) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/8) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/8) (sqrt.f64 (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b_2) (cbrt.f64 (*.f64 b_2 b_2)) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1 b_2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b_2 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))"]],"rules":[["egg-rr",39]],"time":21.341064453125,"type":"rewrite"},{"count":[[71,91]],"inputs":[["b_2","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","b_2","(+.f64 (*.f64 -1 b_2) b_2)","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c a) b_2)) b_2))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c a) b_2)) (+.f64 b_2 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3)))))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4)))))) (*.f64 1/16 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/32 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))))) b_2) (+.f64 (*.f64 b_2 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/32 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)))))) (*.f64 -1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) b_2))))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4)))))) (*.f64 1/16 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) b_2)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))))) (pow.f64 c 2))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 b_2 2))) (*.f64 (pow.f64 c 3) a))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))))) (pow.f64 c 2))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 -1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))))))","(+.f64 b_2 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))","(+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))) a))) (pow.f64 c 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))))))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/16 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))))) (pow.f64 a 2)) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/16 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))))) (pow.f64 a 2)) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (*.f64 -1/384 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))))))) (*.f64 -1/2 (/.f64 (*.f64 c (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))) b_2)))) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(+.f64 b_2 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2))","(+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))))) (*.f64 c (pow.f64 a 3)))) (+.f64 b_2 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) b_2)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) b_2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 -1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))))) c))) (pow.f64 a 3))) (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))))))))"]],"method":["egg-herbie"],"outputs":[["b_2","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (+.f64 1/8 -1/4)) (fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","b_2","(+.f64 (*.f64 -1 b_2) b_2)","0","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c a) b_2)) b_2))","(+.f64 0 (/.f64 (*.f64 1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c a) b_2)) (+.f64 b_2 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3)))))))","(-.f64 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (+.f64 (fma.f64 1/2 (/.f64 (*.f64 c a) b_2) b_2) (/.f64 (*.f64 1/4 (pow.f64 (*.f64 c a) 2)) (pow.f64 b_2 3)))) b_2)","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 2 b_2) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4)))))) (*.f64 1/16 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 2 b_2 (fma.f64 (*.f64 c c) (fma.f64 2 (*.f64 b_2 (/.f64 (*.f64 (*.f64 a a) -3/32) (pow.f64 b_2 4))) (/.f64 (*.f64 1/16 (*.f64 a a)) (pow.f64 b_2 3))) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/32 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))))) b_2) (+.f64 (*.f64 b_2 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/32 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)))))) (*.f64 -1/2 (/.f64 (*.f64 a (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) b_2))))) (+.f64 (*.f64 2 b_2) (+.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4)))))) (*.f64 1/16 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (pow.f64 c 3) (+.f64 (*.f64 2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)) (+.f64 -5/96 -1/384)) b_2)) (/.f64 (*.f64 -1/2 (*.f64 a (/.f64 (*.f64 (*.f64 a a) -3/32) (pow.f64 b_2 4)))) b_2)) (fma.f64 2 b_2 (fma.f64 (*.f64 c c) (fma.f64 2 (*.f64 b_2 (/.f64 (*.f64 (*.f64 a a) -3/32) (pow.f64 b_2 4))) (/.f64 (*.f64 1/16 (*.f64 a a)) (pow.f64 b_2 3))) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) b_2)","(+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) b_2)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))","(+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (+.f64 b_2 (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) b_2) 2)) (*.f64 c a))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))))) (pow.f64 c 2))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))))","(fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a))) (*.f64 c c)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (pow.f64 b_2 4)) (pow.f64 (*.f64 c a) 2)) (+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (+.f64 b_2 (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) b_2) 2)) (*.f64 c a))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 b_2 2))) (*.f64 (pow.f64 c 3) a))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))))) (pow.f64 c 2))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 b_2 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 -1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) 2) (pow.f64 b_2 2)) (*.f64 c a)))))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a))) (*.f64 b_2 b_2)) (*.f64 (pow.f64 c 3) a)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a))) (*.f64 c c)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (pow.f64 b_2 4)) (pow.f64 (*.f64 c a) 2)) (+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (+.f64 b_2 (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)) (+.f64 -11/128 1/32))) (pow.f64 c 3)) (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) b_2) 2)) (*.f64 c a))))))))","(+.f64 b_2 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))","(+.f64 b_2 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))))","(+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)))","(+.f64 b_2 (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))) (pow.f64 (*.f64 c a) 2)) (fma.f64 2 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))) (*.f64 c c)) (+.f64 b_2 (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))) a))) (pow.f64 c 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (pow.f64 c 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) 2))))))","(-.f64 (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))) (pow.f64 (*.f64 c a) 2)) (fma.f64 2 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))) (*.f64 c c)) (+.f64 b_2 (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))))))) (/.f64 (fma.f64 2 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)) (+.f64 11/128 -1/32))) (/.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 a a)) (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) 2))) a)) (pow.f64 c 3)))","(*.f64 2 b_2)","(+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 (+.f64 (*.f64 1/16 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))))) (pow.f64 a 2)) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 (fma.f64 1/16 (/.f64 (*.f64 c c) (pow.f64 b_2 3)) (*.f64 2 (*.f64 b_2 (/.f64 (*.f64 (*.f64 c c) -3/32) (pow.f64 b_2 4))))) (*.f64 a a) (fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/16 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))))) (pow.f64 a 2)) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2 (*.f64 b_2 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (*.f64 -1/384 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))))))) (*.f64 -1/2 (/.f64 (*.f64 c (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/32 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))))) b_2)))) (+.f64 (*.f64 2 b_2) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (fma.f64 1/16 (/.f64 (*.f64 c c) (pow.f64 b_2 3)) (*.f64 2 (*.f64 b_2 (/.f64 (*.f64 (*.f64 c c) -3/32) (pow.f64 b_2 4))))) (*.f64 a a) (fma.f64 (pow.f64 a 3) (fma.f64 2 (*.f64 b_2 (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6)) (+.f64 -1/12 11/384))) (/.f64 (*.f64 -1/2 (*.f64 c (/.f64 (*.f64 (*.f64 c c) -3/32) (pow.f64 b_2 4)))) b_2)) (fma.f64 2 b_2 (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(+.f64 b_2 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2))","(+.f64 b_2 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))))","(+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))","(+.f64 b_2 (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 b_2 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))) (pow.f64 (*.f64 c a) 2)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c))) (*.f64 a a)) (+.f64 b_2 (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))))) (*.f64 c (pow.f64 a 3)))) (+.f64 b_2 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 -1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)) (*.f64 c a))) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) 2)))))))","(fma.f64 1/16 (/.f64 (*.f64 (pow.f64 b_2 4) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))) (pow.f64 (*.f64 c a) 2)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c))) (*.f64 a a)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) 2) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c))) (*.f64 c (pow.f64 a 3))) (+.f64 b_2 (fma.f64 2 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)) (+.f64 -1/384 -5/96)) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))) (pow.f64 a 3)) (fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 b_2 (pow.f64 (exp.f64 1/4) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) 2) (*.f64 c a)) (pow.f64 (exp.f64 1/4) (*.f64 2 (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))))))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) b_2)","(+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) b_2)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) b_2))","(fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) b_2) 2) (*.f64 c a)) (+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) b_2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2))))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) b_2) 2) (*.f64 c a)) (+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c))) (*.f64 a a)) (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (pow.f64 b_2 4)) (pow.f64 (*.f64 c a) 2)))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 2)) (*.f64 c a))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))))) (pow.f64 a 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/384 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 -1/32 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 b_2 2) (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 -1/8 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))))) c))) (pow.f64 a 3))) (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 2) (pow.f64 b_2 4)) (*.f64 (pow.f64 c 2) (pow.f64 a 2)))))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) b_2) 2) (*.f64 c a)) (+.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c))) (*.f64 a a)) (-.f64 (+.f64 b_2 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (pow.f64 b_2 4)) (pow.f64 (*.f64 c a) 2)))) (/.f64 (fma.f64 2 (*.f64 (pow.f64 (exp.f64 1/4) (*.f64 2 (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)) (+.f64 1/384 5/96))) (/.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) b_2) 2) (/.f64 (*.f64 (pow.f64 b_2 4) -3/32) (*.f64 c c)))) c)) (pow.f64 a 3))))))"]],"time":171.125,"type":"simplify"},{"compiler":[[18887,6773]],"time":118.508056640625,"type":"eval"},{"alts":[["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.78178616770977],["(/.f64 (+.f64 b_2 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3))) (neg.f64 a))","fresh",32.925047097762636],["(/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))","fresh",46.26434869489996],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) 1/3)) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","fresh",41.50094090544391],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 2)) (neg.f64 a)))","next",32.74290284370121],["(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","fresh",46.90084635324488],["(*.f64 -2 (/.f64 b_2 a))","fresh",45.6596790785587],["(+.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))","fresh",32.873137144842765],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",42.170844669718306],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","done",32.68714083950187],["(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) 2)) (neg.f64 a)))","fresh",32.991897741054814]],"compiler":[[13,9],[19,13],[22,14],[44,22],[69,27],[19,13],[8,6],[21,14],[8,6],[41,17],[41,17],[13,9],[19,13],[22,14],[44,22],[69,27],[19,13],[8,6],[21,14],[8,6],[41,17]],"count":[[368,11]],"kept":[{"done":[0,0],"fresh":[10,8],"new":[357,2],"picked":[1,1]}],"min-error":[5.851934538051618],"time":96.36181640625,"type":"prune"},{"compiler":[[414,37]],"locations":[["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))",22.041484892565677,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))",23.59808729629627,false],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))",24.143570521787655,true],["(cbrt.f64 (*.f64 b_2 b_2))",29.48683766117052,true]],"time":38.908203125,"type":"localize"},{"count":[[3,36]],"series":[["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","a","-inf",1.010009765625],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","a","inf",1.030029296875],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","a","0",0.763916015625],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","c","-inf",1.0419921875],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","c","inf",1.034912109375],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","c","0",0.879150390625],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","b_2","-inf",0.762939453125],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","b_2","inf",1.203125],["(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))","b_2","0",0.751953125],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","-inf",3.102783203125],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","inf",0.287109375],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","a","0",0.617919921875],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","-inf",0.298095703125],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","inf",0.27099609375],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","c","0",0.77001953125],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","-inf",0.197998046875],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","inf",0.2470703125],["(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","b_2","0",1.294189453125],["(cbrt.f64 (*.f64 b_2 b_2))","b_2","-inf",0.2470703125],["(cbrt.f64 (*.f64 b_2 b_2))","b_2","inf",0.326904296875],["(cbrt.f64 (*.f64 b_2 b_2))","b_2","0",0.3798828125]],"time":16.90185546875,"type":"series"},{"count":[[3,92]],"inputs":[["(cbrt.f64 (*.f64 b_2 b_2))","(cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))","(cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 b_2 2/3) 0) (pow.f64 b_2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 b_2 2/3) 1/2) (*.f64 (pow.f64 b_2 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 b_2 2/3) (*.f64 (pow.f64 b_2 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 b_2 2/3)) (pow.f64 b_2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 b_2 2/3)) (*.f64 1/2 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 b_2 2/3) (*.f64 0 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 b_2 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 b_2 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b_2 4))) (cbrt.f64 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b_2) (cbrt.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 b_2)) (cbrt.f64 (neg.f64 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 b_2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b_2 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 b_2 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 b_2)) 1) (*.f64 (cbrt.f64 (neg.f64 b_2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 b_2)) -1) (*.f64 (cbrt.f64 (neg.f64 b_2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b_2 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 b_2 4)) (pow.f64 b_2 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 b_2)) (cbrt.f64 (*.f64 (pow.f64 b_2 2/3) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 b_2)) (cbrt.f64 (cbrt.f64 (*.f64 b_2 (pow.f64 b_2 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 b_2 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 b_2 b_2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 b_2 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 b_2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 b_2 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 b_2 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 b_2 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 b_2 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 b_2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 b_2 b_2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1/2) (*.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (*.f64 1/2 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 0 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (+.f64 (neg.f64 (*.f64 b_2 b_2)) (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (neg.f64 (*.f64 b_2 b_2)) (*.f64 c a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (*.f64 -1 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2/3)) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (+.f64 1/3 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2) (/.f64 1/3 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 2) (*.f64 1/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (+.f64 (neg.f64 (*.f64 b_2 b_2)) (*.f64 c a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 0) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1/2) (*.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (*.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (*.f64 1/2 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (*.f64 0 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2)))) (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2))) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 b_2))) (cbrt.f64 (pow.f64 b_2 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (*.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b_2 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 b_2)) (cbrt.f64 (*.f64 (pow.f64 b_2 2/3) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 b_2)) (cbrt.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) (*.f64 b_2 b_2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))))))"]],"rules":[["egg-rr",30],["egg-rr",32],["egg-rr",30]],"time":29.922119140625,"type":"rewrite"},{"count":[[128,151]],"inputs":[["(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b_2 4) (pow.f64 (cbrt.f64 -1) 5))))))","(+.f64 (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b_2 6) (pow.f64 (cbrt.f64 -1) 8)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b_2 4) (pow.f64 (cbrt.f64 -1) 5)))))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (pow.f64 a 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))))) (pow.f64 c 3)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3)))) (*.f64 -1/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))))))) (pow.f64 (pow.f64 b_2 2) 1/3))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (pow.f64 (pow.f64 b_2 2) 1/3))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 -1/12 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/72 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (+.f64 (*.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 -1/12 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (+.f64 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3)) (pow.f64 (*.f64 1 b_2) 1/3)) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3)))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 -1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3)) (pow.f64 (*.f64 1 b_2) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3)))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (pow.f64 (pow.f64 b_2 2) 1/3))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/72 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4)))) (pow.f64 a 2)) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (*.f64 -1/1296 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/72 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4)))) (pow.f64 a 2)) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))) (pow.f64 a 2))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 -1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)))))) (pow.f64 a 3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))) (pow.f64 a 2))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))","(+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 2)) (pow.f64 (*.f64 1 b_2) 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 3)) (pow.f64 (*.f64 1 b_2) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 2)) (pow.f64 (*.f64 1 b_2) 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1))","(cbrt.f64 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (*.f64 b_2 b_2)) (cbrt.f64 (neg.f64 (*.f64 c a))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b_2 4) (pow.f64 (cbrt.f64 -1) 5))))))","(+.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (*.f64 b_2 b_2)) (cbrt.f64 (neg.f64 (*.f64 c a)))) (*.f64 -1/9 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (neg.f64 (pow.f64 b_2 4)))))","(+.f64 (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 8) (pow.f64 a 8))) 1/3) (/.f64 (pow.f64 b_2 6) (pow.f64 (cbrt.f64 -1) 8)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 1/3) (/.f64 (pow.f64 b_2 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 c (*.f64 1 a)) 1/3) (cbrt.f64 -1)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 c 5) (pow.f64 a 5))) 1/3) (/.f64 (pow.f64 b_2 4) (pow.f64 (cbrt.f64 -1) 5)))))))","(fma.f64 5/81 (*.f64 (pow.f64 b_2 6) (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 8)))) (+.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 2))) (*.f64 b_2 b_2)) (cbrt.f64 (neg.f64 (*.f64 c a)))) (*.f64 -1/9 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) (neg.f64 5))) (neg.f64 (pow.f64 b_2 4))))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(cbrt.f64 (*.f64 b_2 b_2))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))","(fma.f64 -1/3 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (cbrt.f64 (*.f64 b_2 b_2)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3)))","(fma.f64 -1/3 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (fma.f64 -1/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b_2 -14) 1/9)) (cbrt.f64 (*.f64 b_2 b_2))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (pow.f64 a 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))))) (pow.f64 c 3)) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (*.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 b_2 -4)) (pow.f64 a 3)) (+.f64 2/9 -1/27)) (pow.f64 c 3)) (cbrt.f64 (pow.f64 b_2 -4))))) (fma.f64 -1/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b_2 -14) 1/9)) (cbrt.f64 (*.f64 b_2 b_2))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(cbrt.f64 (*.f64 b_2 b_2))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3))","(fma.f64 -1/3 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (cbrt.f64 (*.f64 b_2 b_2)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (pow.f64 (pow.f64 b_2 2) 1/3)))","(fma.f64 -1/3 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (fma.f64 -1/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b_2 -14) 1/9)) (cbrt.f64 (*.f64 b_2 b_2))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/9))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 (/.f64 1 (pow.f64 b_2 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3)))) (*.f64 -1/27 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))))))) (pow.f64 (pow.f64 b_2 2) 1/3))))","(fma.f64 -1/3 (*.f64 c (*.f64 a (pow.f64 (pow.f64 b_2 -4) 1/9))) (fma.f64 -1/9 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (pow.f64 b_2 -14) 1/9)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 b_2 -4)) (*.f64 (pow.f64 a 3) (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b_2 -4))) (+.f64 2/9 -1/27)))) (cbrt.f64 (*.f64 b_2 b_2)))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(cbrt.f64 (*.f64 b_2 b_2))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (pow.f64 (pow.f64 b_2 2) 1/3))","(fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (cbrt.f64 (*.f64 b_2 b_2)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 -1/12 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3)))","(fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) (+.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 (*.f64 a a) -5/72) (pow.f64 b_2 4))) 1)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (pow.f64 c 3) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6))) (*.f64 1/72 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (+.f64 (*.f64 (*.f64 (pow.f64 c 2) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))) (*.f64 -1/12 (/.f64 (pow.f64 a 2) (pow.f64 b_2 4))))) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) (+.f64 (*.f64 (pow.f64 c 3) (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b_2 6)) (+.f64 17/1296 -1/18))) (*.f64 (*.f64 c c) (/.f64 (*.f64 (*.f64 a a) -5/72) (pow.f64 b_2 4))))) (fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (cbrt.f64 (*.f64 b_2 b_2))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))))","(*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (+.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (*.f64 c c)))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (+.f64 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c)))))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3)) (pow.f64 (*.f64 1 b_2) 1/3)) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 a)) (*.f64 -1 (log.f64 (/.f64 1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3)))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (+.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)) (+.f64 -1/24 -1/1296))) (pow.f64 c 3)) (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 (neg.f64 a)) (log.f64 c)))) (*.f64 c c))))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))","(*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))","(fma.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (/.f64 (*.f64 -1/6 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (cbrt.f64 (pow.f64 b_2 7)))) (*.f64 c a)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3))))","(fma.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (/.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) (cbrt.f64 b_2)) (*.f64 c c))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (+.f64 (*.f64 1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3))) (*.f64 -1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)))))) (pow.f64 c 3)) (pow.f64 (*.f64 1 b_2) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 a 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 a))) (*.f64 -1 (log.f64 (/.f64 -1 c))))))) (pow.f64 c 2)) (pow.f64 (*.f64 1 b_2) 1/3)))))","(+.f64 (*.f64 (cbrt.f64 b_2) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 a 3)) (+.f64 -17/1296 1/18))) (neg.f64 (pow.f64 c 3))) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c))))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (/.f64 (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (neg.f64 (log.f64 (neg.f64 c)))))) (cbrt.f64 b_2)) (*.f64 c c))))","(pow.f64 (pow.f64 b_2 2) 1/3)","(cbrt.f64 (*.f64 b_2 b_2))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (pow.f64 (pow.f64 b_2 2) 1/3))","(fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (cbrt.f64 (*.f64 b_2 b_2)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/72 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4)))) (pow.f64 a 2)) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3)))","(fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 c c) -5/72) (pow.f64 b_2 4)) (*.f64 a a)) 1)))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 c a) (pow.f64 (/.f64 1 (pow.f64 b_2 4)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))) (*.f64 -1/1296 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4))) (*.f64 1/72 (/.f64 (pow.f64 c 2) (pow.f64 b_2 4)))) (pow.f64 a 2)) (pow.f64 (*.f64 1 (pow.f64 b_2 2)) 1/3)) (pow.f64 (pow.f64 b_2 2) 1/3))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) (+.f64 (*.f64 (pow.f64 a 3) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 b_2 6)) (+.f64 -73/1296 1/72))) (*.f64 (/.f64 (*.f64 (*.f64 c c) -5/72) (pow.f64 b_2 4)) (*.f64 a a)))) (fma.f64 -1/6 (*.f64 c (*.f64 a (cbrt.f64 (pow.f64 b_2 -4)))) (cbrt.f64 (*.f64 b_2 b_2))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))))","(*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))))","(+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))) (pow.f64 a 2))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (+.f64 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 c c)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 -1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)))))) (pow.f64 a 3))) (+.f64 (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))) (pow.f64 a 2))) (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 a))) (log.f64 (neg.f64 c)))))))))","(fma.f64 (cbrt.f64 b_2) (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))) (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)) (+.f64 17/1296 -1/18))) (pow.f64 a 3)) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c)))) (cbrt.f64 (pow.f64 b_2 7))) (*.f64 c a)) (*.f64 (cbrt.f64 b_2) (+.f64 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 c c)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 a) (log.f64 (neg.f64 c))))))))","(*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))))","(*.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))","(fma.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) (/.f64 (*.f64 -1/6 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) (cbrt.f64 (pow.f64 b_2 7)))) (*.f64 c a)))","(+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 2)) (pow.f64 (*.f64 1 b_2) 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3)))))","(+.f64 (*.f64 (cbrt.f64 b_2) (+.f64 (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 c c)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (*.f64 a a)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))))) (/.f64 (*.f64 -1/6 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) (cbrt.f64 (pow.f64 b_2 7)))) (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))) (*.f64 1/1296 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 3)) (pow.f64 (*.f64 1 b_2) 1/3))) (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2))) (*.f64 1/72 (/.f64 (pow.f64 b_2 4) (pow.f64 c 2)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (pow.f64 a 2)) (pow.f64 (*.f64 1 b_2) 1/3)) (+.f64 (*.f64 (pow.f64 (*.f64 1 b_2) 1/3) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a))))))) (*.f64 -1/6 (*.f64 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 (neg.f64 (*.f64 -1 c))) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) (*.f64 c a)) (pow.f64 (*.f64 1 (pow.f64 b_2 7)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 b_2) (+.f64 (/.f64 (*.f64 (*.f64 (/.f64 (pow.f64 b_2 6) (pow.f64 c 3)) (+.f64 73/1296 -1/72)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (neg.f64 (pow.f64 a 3))) (/.f64 (*.f64 (/.f64 (*.f64 (pow.f64 b_2 4) -5/72) (*.f64 c c)) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a)))))) (*.f64 a a)))) (fma.f64 (cbrt.f64 b_2) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) (/.f64 (*.f64 -1/6 (*.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (neg.f64 (log.f64 (neg.f64 a))))) (cbrt.f64 (pow.f64 b_2 7)))) (*.f64 c a))))"]],"time":169.177001953125,"type":"simplify"},{"compiler":[[29884,6660]],"time":117.72900390625,"type":"eval"},{"alts":[["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.78178616770977],["(/.f64 (+.f64 b_2 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3))) (neg.f64 a))","fresh",32.925047097762636],["(/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))","fresh",46.26434869489996],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) 1/3)) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","fresh",41.50094090544391],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 2)) (neg.f64 a)))","done",32.74290284370121],["(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","fresh",46.90084635324488],["(*.f64 -2 (/.f64 b_2 a))","fresh",45.6596790785587],["(+.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))","fresh",32.873137144842765],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",42.170844669718306],["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","done",32.68714083950187],["(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) 2)) (neg.f64 a)))","fresh",32.991897741054814]],"compiler":[[13,9],[19,13],[22,14],[44,22],[69,27],[19,13],[8,6],[21,14],[8,6],[41,17],[41,17]],"count":[[390,11]],"kept":[{"done":[1,1],"fresh":[9,9],"new":[379,0],"picked":[1,1]}],"min-error":[5.851934538051618],"time":119.333984375,"type":"prune"},{"accuracy":[10.512757809114888],"baseline":[32.51795945779134],"branch":[["a",28.322475818472977,5],["b_2",10.512757809114888,3],["c",27.538855666059124,9],["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)",14.308875654605597,5]],"compiler":[[4,3],[4,3],[4,3],[16,10],[460,123]],"count":[[18,3]],"inputs":[["(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))) 3/2) 1/3)) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 2)) (neg.f64 a)))","(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 3) 1/3)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (-.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (cbrt.f64 (*.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))))) (+.f64 (cbrt.f64 b_2) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))))) 2)) (neg.f64 a)))","(*.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) 2)) (neg.f64 a)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(/.f64 (+.f64 b_2 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) 3))) (neg.f64 a))","(*.f64 (cbrt.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) 2)) (neg.f64 a)))","(/.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))","(*.f64 -2 (/.f64 b_2 a))","(*.f64 (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (cbrt.f64 (neg.f64 a))) (pow.f64 (cbrt.f64 (neg.f64 a)) -2))","(+.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))) (/.f64 -1 a)) (*.f64 b_2 (/.f64 -1 a)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(/.f64 (fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) b_2) (neg.f64 a))","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)"]],"link":["."],"name":["quad2m (problem 3.2.1, negative)"],"oracle":[63.694968196837436],"outputs":[["(/.f64 (*.f64 -1/2 c) b_2)","(/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))"]],"time":135.285888671875,"times":[["a",34.588134765625],["b_2",17.333984375],["c",57.10888671875],["(/.f64 (-.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)",19.883056640625]],"type":"regimes"},{"bstep":[[4.33265050415617e+151,3.538844027462676e+154,20.375],[-1.0656517422526733e-79,-6.638849991865585e-83,24.65283203125]],"compiler":[[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[14,10],[17,11],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[17,11],[9,7],[18,12],[4,3]],"method":["binary-search","binary-search"],"time":45.296142578125,"type":"bsearch"},{"compiler":[[39,25]],"inputs":[["(if (<=.f64 b_2 -1161976947540975/17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608) (/.f64 (*.f64 -1/2 c) b_2) (if (<=.f64 b_2 44000000000000001337282404474065153633188704281347629956935333708734585781432455192874988159307500664932042793002440921672514241371703574326073320538112) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) (fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b_2 -1161976947540975/17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608) (/.f64 (*.f64 -1/2 c) b_2) (if (<=.f64 b_2 44000000000000001337282404474065153633188704281347629956935333708734585781432455192874988159307500664932042793002440921672514241371703574326073320538112) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) (fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))))","(if (<=.f64 b_2 -1161976947540975/17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608) (/.f64 (*.f64 -1/2 c) b_2) (if (<=.f64 b_2 44000000000000001337282404474065153633188704281347629956935333708734585781432455192874988159307500664932042793002440921672514241371703574326073320538112) (/.f64 (+.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 c a))))) (neg.f64 a)) (fma.f64 -2 (/.f64 b_2 a) (/.f64 c (*.f64 b_2 2)))))"]],"stop":[["fuel",1]],"time":24.72998046875,"type":"simplify"},{"time":0.02880859375,"type":"soundness"},{"compiler":[[39,25]],"remove-preprocessing":[[]],"time":14.97216796875,"type":"end"}]