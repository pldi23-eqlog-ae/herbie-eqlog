[{"compiler":[[17,11]],"method":["search"],"sampling":[[12,0.29058954069728316,0.5246213855541555,0.18478907374856135],[11,0.22233025261402872,0.6250600523052299,0.1526096950807414],[10,0.15212069915696702,0.7215981883086897,0.12628111253434326],[9,0.10141379943797801,0.803509334008595,0.09507686655342695],[8,0.062408491961832624,0.8815199489608858,0.05607155907728156],[7,0.0,0.9517295024179475,0.048270497582052485],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":128.469970703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",74.523193359375,1529],["body",4096,"valid",86.566162109375,394],["body",512,"valid",33.12060546875,363],["body",1024,"valid",93.673095703125,720],["body",2048,"valid",204.012939453125,1186],["body",256,"valid",286.50390625,5593]],"time":788.930908203125,"type":"sample"},{"compiler":[[16,10]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 b_2 c)))) b_2)","(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 c a)))) c)","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 a b_2)))) a)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 b_2 c)))) b_2)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (neg.f64 (*.f64 b_2 c)))) a) b_2)","(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 c a)))) c)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) c)","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 a b_2)))) a)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (neg.f64 (*.f64 a b_2)))) c) a)"]],"symmetry":[[]],"time":75.760009765625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)"]],"time":20.4140625,"type":"simplify"},{"compiler":[[28,15]],"time":0.383056640625,"type":"eval"},{"alts":[["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","next",31.753826749134422]],"compiler":[[15,9],[15,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[31.753826749134422],"time":0.934814453125,"type":"prune"},{"compiler":[[50,9]],"locations":[["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)",0.10546875,true],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))",0.7499917428166807,true],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)",0.7810423254223576,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))",21.90404124836004,true]],"time":8.76708984375,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","c","-inf",0.386962890625],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","c","inf",0.485107421875],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","c","0",0.36083984375],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","a","-inf",0.48095703125],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","a","inf",0.7158203125],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","a","0",0.3349609375],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","b_2","-inf",0.77783203125],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","b_2","inf",0.428955078125],["(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","b_2","0",0.462158203125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","c","-inf",0.20703125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","c","inf",0.27197265625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","c","0",0.22802734375],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","a","-inf",0.2470703125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","a","inf",0.256103515625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","a","0",0.423828125],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","b_2","-inf",0.31396484375],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","b_2","inf",0.297119140625],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","b_2","0",0.279052734375],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","c","-inf",0.371826171875],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","c","inf",0.43505859375],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","c","0",0.383056640625],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","a","-inf",0.32421875],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","a","inf",0.36083984375],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","a","0",0.384033203125],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","b_2","-inf",0.217041015625],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","b_2","inf",0.43603515625],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","b_2","0",0.27783203125],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","c","-inf",0.576904296875],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","c","inf",0.653076171875],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","c","0",0.388916015625],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","a","-inf",0.43212890625],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","a","inf",0.613037109375],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","a","0",0.344970703125],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","b_2","-inf",0.463134765625],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","b_2","inf",0.487060546875],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","b_2","0",0.947998046875]],"time":15.575927734375,"type":"series"},{"count":[[4,235]],"inputs":[["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))","(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)","(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 0) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 0) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b_2) (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) b_2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (+.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b_2)) (cbrt.f64 (*.f64 b_2 b_2)) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b_2) (neg.f64 (cbrt.f64 (*.f64 b_2 b_2))) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 1 (neg.f64 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b_2) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b_2 b_2) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 a c)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 0) (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1/2) (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (*.f64 1/2 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 a c) (*.f64 b_2 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b_2 b_2) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 2)) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 0) (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 a c) (*.f64 b_2 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (neg.f64 c) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) a (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (neg.f64 a) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) c (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2))) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (cbrt.f64 (neg.f64 (*.f64 a c))) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 c)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b_2) (*.f64 (cbrt.f64 (*.f64 b_2 b_2)) b_2) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b_2 b_2) 1 (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 a c) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 a c)) (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 a c)) 1 (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -1 (*.f64 b_2 b_2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b_2 b_2) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b_2 b_2)) (cbrt.f64 (pow.f64 b_2 4)) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b_2 4)) (cbrt.f64 (*.f64 b_2 b_2)) (neg.f64 (*.f64 a c)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 b_2 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (neg.f64 b_2)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 (/.f64 1 a) (neg.f64 b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 0) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1/2) (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 (neg.f64 (/.f64 b_2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) (*.f64 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (*.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 a a)) (/.f64 (*.f64 a b_2) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 a) (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 b_2 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2)) a) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a (neg.f64 (*.f64 a b_2))) (/.f64 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 b_2 (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)) (*.f64 a (neg.f64 b_2))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) b_2)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 b_2 (cbrt.f64 a)))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 b_2))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (*.f64 (neg.f64 a) b_2)) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 b_2 (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 b_2))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a (neg.f64 (*.f64 a b_2)))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a (neg.f64 (*.f64 a b_2))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a (neg.f64 (*.f64 a b_2))) 1) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a (neg.f64 (*.f64 a b_2))) a) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (cbrt.f64 (/.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (*.f64 a a))) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (pow.f64 (cbrt.f64 a) -2)) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (pow.f64 (cbrt.f64 a) -2)) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))))"]],"rules":[["egg-rr",77],["egg-rr",64],["egg-rr",50],["egg-rr",44]],"time":43.6240234375,"type":"rewrite"},{"count":[[319,295]],"inputs":[["b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1 b_2)","(+.f64 (*.f64 -1 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (pow.f64 b_2 7))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -2 b_2)","(+.f64 (*.f64 -2 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -2 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -2 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 4)) b_2)) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) b_2)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(pow.f64 b_2 2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(*.f64 -2 (/.f64 b_2 a))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 3)) b_2)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) (*.f64 a b_2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))"]],"method":["egg-herbie"],"outputs":[["b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","(*.f64 -1 b_2)","(neg.f64 b_2)","(+.f64 (*.f64 -1 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 1/2 (/.f64 (*.f64 c a) b_2) (neg.f64 b_2))","(+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)) b_2)","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 1/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) (-.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)) b_2))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","b_2","(+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 b_2 (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 c a) b_2) b_2)))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (pow.f64 b_2 7))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -1/8 -1/8))) (pow.f64 b_2 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(*.f64 -2 b_2)","(+.f64 (*.f64 -2 b_2) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -2 b_2 (/.f64 (*.f64 1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 -2 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 b_2 -2 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -2 b_2) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) 1/16 (fma.f64 b_2 -2 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 (*.f64 c a)) b_2))))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 4)) b_2)) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)) 1/16 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 c c)) (pow.f64 b_2 3)) 2)) (pow.f64 a 4)) (*.f64 c a)) b_2) (/.f64 (*.f64 -1/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b_2 3))))","(*.f64 -1/2 (/.f64 (*.f64 c a) b_2))","(/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))","(fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) b_2)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 (*.f64 c a) b_2)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b_2 5)) -1/16 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6)) (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 a a)) (pow.f64 b_2 3)) 2))) b_2) (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2))))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(pow.f64 b_2 2)","(*.f64 b_2 b_2)","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(*.f64 -1 (*.f64 c a))","(neg.f64 (*.f64 c a))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(+.f64 (*.f64 -1 (*.f64 c a)) (pow.f64 b_2 2))","(fma.f64 b_2 b_2 (neg.f64 (*.f64 c a)))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -1/8 -1/8))) (*.f64 a (pow.f64 b_2 7))) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(*.f64 -2 (/.f64 b_2 a))","(/.f64 (*.f64 -2 b_2) a)","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 c) b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 1/2 c) b_2))))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 3)) b_2)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 (*.f64 (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)) 1/16 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 c c)) (pow.f64 b_2 3)) 2)) (pow.f64 a 3)) b_2) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) (*.f64 a b_2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6)) (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 a a)) (pow.f64 b_2 3)) 2))) (*.f64 a b_2)) (fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))"]],"time":294.215087890625,"type":"simplify"},{"compiler":[[6052,2081]],"time":46.68505859375,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53516959860899],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","fresh",32.52139745073018],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53967685966285],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","next",31.96550443161032],["(/.f64 (*.f64 -2 b_2) a)","fresh",44.974238715312346],["(fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))","fresh",34.50359658264012],["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.13128548888089],["(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","fresh",44.32345937820363],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",39.737038015717175]],"compiler":[[28,12],[17,10],[27,13],[21,13],[8,6],[19,12],[13,9],[19,13],[8,6],[28,12],[17,10],[27,13],[21,13],[8,6],[19,12],[13,9],[19,13],[8,6]],"count":[[296,9]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[295,9],"picked":[1,0]}],"min-error":[4.252772477317203],"time":86.02197265625,"type":"prune"},{"compiler":[[78,19]],"locations":[["(pow.f64 (cbrt.f64 a) -2)",0.5114250488422101,true],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))",0.7499917428166807,false],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)",0.7810423254223576,false],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))",21.90404124836004,false]],"time":13.171875,"type":"localize"},{"count":[[1,0]],"series":[["(pow.f64 (cbrt.f64 a) -2)","a","-inf",0.927001953125],["(pow.f64 (cbrt.f64 a) -2)","a","inf",0.589111328125],["(pow.f64 (cbrt.f64 a) -2)","a","0",0.823974609375]],"time":2.385986328125,"type":"series"},{"count":[[1,22]],"inputs":[["(pow.f64 (cbrt.f64 a) -2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 a) -2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 2/3)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) -2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3))))))"]],"rules":[["egg-rr",22]],"time":39.548095703125,"type":"rewrite"},{"count":[[22,22]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":27.5439453125,"type":"simplify"},{"compiler":[[5550,2192]],"time":43.735107421875,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53516959860899],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","fresh",32.52139745073018],["(/.f64 (*.f64 (*.f64 -2 b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","fresh",45.155623869073644],["(fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))","fresh",34.50359658264012],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53967685966285],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","done",31.96550443161032],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",39.737038015717175],["(/.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","fresh",47.47423066207847],["(/.f64 (*.f64 -2 b_2) a)","fresh",44.974238715312346],["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.13128548888089],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","next",32.06863088390776]],"compiler":[[28,12],[17,10],[14,10],[19,12],[27,13],[21,13],[8,6],[29,19],[8,6],[13,9],[24,16],[28,12],[17,10],[14,10],[19,12],[27,13],[8,6],[29,19],[8,6],[13,9],[24,16]],"count":[[229,11]],"kept":[{"done":[0,0],"fresh":[8,7],"new":[220,3],"picked":[1,1]}],"min-error":[4.248863126614234],"time":51.39794921875,"type":"prune"},{"compiler":[[97,34]],"locations":[["(pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)",0.6759339844426088,true],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))",0.7499917428166807,false],["(-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)",0.7810423254223576,false],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))",21.90404124836004,false]],"time":19.130859375,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)","a","-inf",3.364013671875],["(pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)","a","inf",4.916015625],["(pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)","a","0",15.7490234375]],"time":24.092041015625,"type":"series"},{"count":[[1,25]],"inputs":[["(pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 a) -2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) 5) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))) (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 7/3) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -4))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 4/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -4) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) -2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3))))))"]],"rules":[["egg-rr",25]],"time":38.885986328125,"type":"rewrite"},{"count":[[37,29]],"inputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3))","(cbrt.f64 (pow.f64 a -2))","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(cbrt.f64 (pow.f64 a -2))","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(cbrt.f64 (pow.f64 a -2))","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(cbrt.f64 (pow.f64 a -2))","(pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3)","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(cbrt.f64 (pow.f64 a -2))","(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))","(cbrt.f64 (pow.f64 a -2))"]],"time":54.946044921875,"type":"simplify"},{"compiler":[[6329,2873]],"time":58.89697265625,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53516959860899],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","next",32.52139745073018],["(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53967685966285],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","done",31.96550443161032],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",39.737038015717175],["(/.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","fresh",47.47423066207847],["(/.f64 (*.f64 -2 b_2) a)","fresh",44.974238715312346],["(fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))","fresh",34.50359658264012],["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.13128548888089],["(/.f64 (*.f64 (*.f64 -2 b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","fresh",45.182603227823584],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","done",32.06863088390776]],"compiler":[[28,12],[17,10],[27,13],[21,13],[8,6],[29,19],[8,6],[19,12],[13,9],[17,13],[24,16],[28,12],[17,10],[27,13],[8,6],[29,19],[8,6],[19,12],[13,9],[17,13]],"count":[[238,11]],"kept":[{"done":[1,1],"fresh":[9,8],"new":[227,1],"picked":[1,1]}],"min-error":[4.248863126614234],"time":49.89013671875,"type":"prune"},{"compiler":[[55,10]],"locations":[["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)",0.10546875,true],["(fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))",0.7499917428166807,false],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))",6.949430343836323,true],["(sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))",21.90404124836004,false]],"time":8.682861328125,"type":"localize"},{"count":[[2,32]],"series":[["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","c","-inf",0.325927734375],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","c","inf",0.361083984375],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","c","0",0.211181640625],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","a","-inf",0.276123046875],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","a","inf",0.3330078125],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","a","0",0.18212890625],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","b_2","-inf",0.22802734375],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","b_2","inf",0.197998046875],["(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)","b_2","0",0.4111328125],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","c","-inf",0.385986328125],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","c","inf",0.427978515625],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","c","0",0.3359375],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","a","-inf",0.47607421875],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","a","inf",0.425048828125],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","a","0",0.326904296875],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","b_2","-inf",0.22509765625],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","b_2","inf",0.48681640625],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","b_2","0",4.385009765625]],"time":10.281005859375,"type":"series"},{"count":[[2,151]],"inputs":[["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","(/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 b_2 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1/2) (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 0) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) (*.f64 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (*.f64 1/2 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 b_2 a)) (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (pow.f64 a -2)) (neg.f64 (/.f64 (*.f64 a b_2) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 b_2 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (pow.f64 a -2)) (/.f64 (*.f64 a b_2) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 0) (/.f64 b_2 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a))) (*.f64 a a)) (/.f64 (*.f64 a b_2) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (pow.f64 a -2))) (*.f64 b_2 (cbrt.f64 (pow.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)) (neg.f64 (/.f64 b_2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (/.f64 1 (neg.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (pow.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (+.f64 (cbrt.f64 (pow.f64 (/.f64 b_2 a) 2)) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 (/.f64 b_2 a) a))))) (-.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (cbrt.f64 (/.f64 b_2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) 1) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) 1) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (*.f64 a (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 (*.f64 a a))) (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (cbrt.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) a) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) b_2)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 b_2))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 b_2 (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 b_2) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a b_2))) (*.f64 (*.f64 a a) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 b_2 (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 b_2 (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) b_2)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 b_2 (cbrt.f64 a)))) (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 b_2))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2)) (neg.f64 a)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 b_2 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 b_2 a))) (cbrt.f64 (pow.f64 (/.f64 b_2 a) 2)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b_2) (/.f64 1 a) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 b_2 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 b_2 a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 b_2 a) 2))) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b_2 (/.f64 -1 a) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 -1 a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1 (neg.f64 (/.f64 b_2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 b_2 a) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1/2) (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 0) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (*.f64 0 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2))) (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))))) (cbrt.f64 (*.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))) (pow.f64 a -2)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) 3))))))"]],"rules":[["egg-rr",47],["egg-rr",104]],"time":37.22607421875,"type":"rewrite"},{"count":[[183,186]],"inputs":[["(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(*.f64 -2 (/.f64 b_2 a))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 3)) b_2)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(*.f64 -1/2 (/.f64 c b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) (*.f64 a b_2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))","(*.f64 -1 (/.f64 b_2 a))","(+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)) (*.f64 a (pow.f64 b_2 7)))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (fma.f64 -1/2 (/.f64 (fma.f64 1/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -1/8 -1/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b_2 7))) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(*.f64 -2 (/.f64 b_2 a))","(/.f64 (*.f64 -2 b_2) a)","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 1/2 c) b_2)))","(+.f64 (*.f64 -2 (/.f64 b_2 a)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 b_2 a) -2 (fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 1/2 c) b_2))))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 2) (pow.f64 b_2 3))) 2) (*.f64 1/16 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)))) (pow.f64 a 3)) b_2)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (fma.f64 -1/2 (/.f64 (*.f64 (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b_2 6)) 1/16 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 c c)) (pow.f64 b_2 3)) 2)) (pow.f64 a 3)) b_2) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(*.f64 -1/2 (/.f64 c b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6))) (pow.f64 (*.f64 -1/8 (/.f64 (pow.f64 a 2) (pow.f64 b_2 3))) 2))) (*.f64 a b_2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (*.f64 -1/2 (/.f64 c b_2)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 1/16 (/.f64 (pow.f64 a 4) (pow.f64 b_2 6)) (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 a a)) (pow.f64 b_2 3)) 2))) (*.f64 a b_2)) (fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2))))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))","(+.f64 (fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (/.f64 b_2 a)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(*.f64 -1 (/.f64 b_2 a))","(neg.f64 (/.f64 b_2 a))","(+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))","(fma.f64 1/2 (/.f64 c b_2) (neg.f64 (/.f64 b_2 a)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2))))","(fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/2 (/.f64 c b_2) (neg.f64 (/.f64 b_2 a))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))) (+.f64 (*.f64 -1 (/.f64 b_2 a)) (*.f64 1/2 (/.f64 c b_2)))))","(fma.f64 1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (fma.f64 1/2 (/.f64 c b_2) (neg.f64 (/.f64 b_2 a)))))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))","(+.f64 (fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (/.f64 b_2 a)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))","(/.f64 b_2 a)","(+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2)))","(fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (*.f64 -1/2 (/.f64 c b_2))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (fma.f64 -1/2 (/.f64 c b_2) (/.f64 b_2 a)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b_2 3))) (+.f64 (/.f64 b_2 a) (+.f64 (*.f64 -1/2 (/.f64 c b_2)) (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b_2 5))))))","(+.f64 (fma.f64 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) -1/8 (/.f64 b_2 a)) (fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b_2 5)) (/.f64 (*.f64 -1/2 c) b_2)))"]],"time":111.803955078125,"type":"simplify"},{"compiler":[[6697,1920]],"time":45.826904296875,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))","fresh",34.53516959860899],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","done",32.52139745073018],["(/.f64 (*.f64 -2 b_2) a)","fresh",44.974238715312346],["(-.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (/.f64 b_2 a))","fresh",33.37386113768128],["(fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))","fresh",34.50359658264012],["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","fresh",45.13128548888089],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","done",31.96550443161032],["(/.f64 (*.f64 -1/2 c) b_2)","fresh",39.737038015717175],["(/.f64 (*.f64 (*.f64 -2 b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","fresh",45.182603227823584],["(/.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","fresh",47.47423066207847],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","done",32.06863088390776]],"compiler":[[28,12],[17,10],[8,6],[27,13],[19,12],[13,9],[21,13],[8,6],[17,13],[29,19],[24,16]],"count":[[326,11]],"kept":[{"done":[2,2],"fresh":[8,6],"new":[315,2],"picked":[1,1]}],"min-error":[4.248863126614234],"time":95.857177734375,"type":"prune"},{"accuracy":[8.191130087590587],"baseline":[31.753826749134422],"branch":[["a",29.785352419898874,3],["b_2",8.191130087590587,3],["c",26.66622407601325,7],["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)",11.80899469420712,5]],"compiler":[[4,3],[4,3],[4,3],[16,10],[262,97]],"count":[[17,3]],"inputs":[["(-.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a)) (/.f64 b_2 a))","(/.f64 (*.f64 -1/2 c) b_2)","(/.f64 (*.f64 (*.f64 -2 b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","(/.f64 (*.f64 (*.f64 -2 b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","(/.f64 (*.f64 (fma.f64 -1/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 (*.f64 c a)) b_2)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)) (cbrt.f64 a))","(fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) a) (neg.f64 (/.f64 b_2 a)))","(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","(fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c))))) (/.f64 (cbrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (neg.f64 (/.f64 b_2 a)))","(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))","(/.f64 (*.f64 -2 b_2) a)","(fma.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) (/.f64 1 a) (neg.f64 (/.f64 b_2 a)))","(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 c c) a) (pow.f64 b_2 3)) (/.f64 (*.f64 -1/2 c) b_2))","(/.f64 (*.f64 -1/2 c) b_2)","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a)","(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)"]],"link":["."],"name":["quad2p (problem 3.2.1, positive)"],"oracle":[63.47626630683094],"outputs":[["(fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2))","(-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a))","(/.f64 (*.f64 -1/2 c) b_2)"]],"time":97.998046875,"times":[["a",21.01416015625],["b_2",16.219970703125],["c",37.031005859375],["(/.f64 (+.f64 (neg.f64 b_2) (sqrt.f64 (-.f64 (*.f64 b_2 b_2) (*.f64 a c)))) a)",19.39697265625]],"type":"regimes"},{"bstep":[[1.5493056354549272e-129,2.2448001115925723e-126,28.052978515625],[-7.874177670516464e+119,-3.609614002388178e+118,26.35791015625]],"compiler":[[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[9,7],[18,11],[18,11],[14,10],[18,11],[14,10],[18,11],[14,10],[18,11],[14,10],[18,11],[14,10],[18,11],[14,10],[18,11],[14,10],[18,12],[4,3]],"method":["binary-search","binary-search"],"time":54.600830078125,"type":"bsearch"},{"compiler":[[40,24]],"inputs":[["(if (<=.f64 b_2 -36500000000000001635297042419649589479570437821017968610343308461613101988289639097229030341194682373255959638926426112) (fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2)) (if (<=.f64 b_2 1248699420126397/780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544) (-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a)) (/.f64 (*.f64 -1/2 c) b_2)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b_2 -36500000000000001635297042419649589479570437821017968610343308461613101988289639097229030341194682373255959638926426112) (fma.f64 -2 (/.f64 b_2 a) (/.f64 (*.f64 1/2 c) b_2)) (if (<=.f64 b_2 1248699420126397/780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544) (-.f64 (/.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) a) (/.f64 b_2 a)) (/.f64 (*.f64 -1/2 c) b_2)))","(if (<=.f64 b_2 -36500000000000001635297042419649589479570437821017968610343308461613101988289639097229030341194682373255959638926426112) (fma.f64 -2 (/.f64 b_2 a) (/.f64 c (*.f64 b_2 2))) (if (<=.f64 b_2 1248699420126397/780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544) (/.f64 (-.f64 (sqrt.f64 (fma.f64 b_2 b_2 (neg.f64 (*.f64 a c)))) b_2) a) (/.f64 c (*.f64 b_2 -2))))"]],"stop":[["fuel",1]],"time":26.60400390625,"type":"simplify"},{"time":0.030029296875,"type":"soundness"},{"compiler":[[40,24]],"remove-preprocessing":[[]],"time":14.56103515625,"type":"end"}]