[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[11,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[10,0.5616764276564936,0.43685944373282837,0.0014641286106780171],[9,0.37445095177099574,0.6240849196183262,0.0014641286106780171],[8,0.37445095177099574,0.6240849196183262,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":110.18896484375,"type":"analyze"},{"outcomes":[["body",1024,"valid",519.44580078125,1996],["body",512,"valid",162.3515625,1077],["body",2048,"valid",1.666015625,3],["body",256,"valid",375.754638671875,5180]],"time":1067.779052734375,"type":"sample"},{"compiler":[[12,8]],"inputs":[["0","1","2"],["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 y (sin.f64 x)) (*.f64 z (cos.f64 x)))","(+.f64 (*.f64 z (sin.f64 y)) (*.f64 x (cos.f64 y)))","(+.f64 (*.f64 x (sin.f64 z)) (*.f64 y (cos.f64 z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 y (sin.f64 x)) (*.f64 z (cos.f64 x)))","(fma.f64 y (sin.f64 x) (*.f64 z (cos.f64 x)))","(+.f64 (*.f64 z (sin.f64 y)) (*.f64 x (cos.f64 y)))","(fma.f64 z (sin.f64 y) (*.f64 x (cos.f64 y)))","(+.f64 (*.f64 x (sin.f64 z)) (*.f64 y (cos.f64 z)))","(fma.f64 x (sin.f64 z) (*.f64 y (cos.f64 z)))"]],"symmetry":[[]],"time":68.883056640625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))"]],"time":20.302001953125,"type":"simplify"},{"compiler":[[20,9]],"time":0.326904296875,"type":"eval"},{"alts":[["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","next",0.1328125]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.1328125],"time":0.8740234375,"type":"prune"},{"compiler":[[22,7]],"locations":[["(cos.f64 y)",0.015625,true],["(sin.f64 y)",0.015625,true],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))",0.08203125,true],["(*.f64 z (cos.f64 y))",0.109375,true]],"time":6.3330078125,"type":"localize"},{"count":[[4,60]],"series":[["(cos.f64 y)","y","-inf",0.162109375],["(cos.f64 y)","y","inf",0.135009765625],["(cos.f64 y)","y","0",0.18603515625],["(sin.f64 y)","y","-inf",0.161865234375],["(sin.f64 y)","y","inf",0.137939453125],["(sin.f64 y)","y","0",0.27490234375],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","z","-inf",0.16796875],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","z","inf",0.169921875],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","z","0",0.341064453125],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","y","-inf",0.3349609375],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","y","inf",0.341064453125],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","y","0",0.2529296875],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","x","-inf",0.60693359375],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","x","inf",0.324951171875],["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","x","0",0.55615234375],["(*.f64 z (cos.f64 y))","y","-inf",0.291015625],["(*.f64 z (cos.f64 y))","y","inf",0.330810546875],["(*.f64 z (cos.f64 y))","y","0",0.52197265625],["(*.f64 z (cos.f64 y))","z","-inf",0.296142578125],["(*.f64 z (cos.f64 y))","z","inf",0.425048828125],["(*.f64 z (cos.f64 y))","z","0",0.760009765625]],"time":7.013916015625,"type":"series"},{"count":[[4,114]],"inputs":[["(*.f64 z (cos.f64 y))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(sin.f64 y)","(cos.f64 y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cos.f64 y) 2/3) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 y) 2/3) z) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (*.f64 z (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (cos.f64 y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))) (neg.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (cos.f64 y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (cos.f64 y)) (*.f64 (neg.f64 x) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (sin.f64 y)) (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))) (neg.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) x (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 y) z (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (cos.f64 y) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cos.f64 y) 2/3) z) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sin.f64 y)) 1 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cos.f64 y)) 1 (*.f64 x (sin.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 y) (cos.f64 0)) (*.f64 (cos.f64 y) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 y)) (*.f64 (cos.f64 0) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (sin.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 y) 2/3) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 y))) (neg.f64 (pow.f64 (sin.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 y) (cos.f64 0)) (*.f64 (sin.f64 y) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 y)) (*.f64 (sin.f64 0) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 y))) (neg.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 y)))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (neg.f64 y))))))"]],"rules":[["egg-rr",22],["egg-rr",22],["egg-rr",42],["egg-rr",28]],"time":48.05712890625,"type":"rewrite"},{"count":[[174,144]],"inputs":[["(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 y 6) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z)))))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","z","(+.f64 (*.f64 y x) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) (+.f64 z (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(fma.f64 -1/2 (*.f64 (*.f64 y y) z) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(fma.f64 -1/2 (*.f64 (*.f64 y y) z) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 y 6) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","z","(+.f64 (*.f64 y x) z)","(fma.f64 y x z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) z))","(fma.f64 (*.f64 -1/2 (*.f64 y y)) z (fma.f64 y x z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) (+.f64 z (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(fma.f64 (*.f64 -1/2 (*.f64 y y)) z (fma.f64 y x (fma.f64 (*.f64 -1/6 (pow.f64 y 3)) x z)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(fma.f64 -1/6 (pow.f64 y 3) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 1/120 (pow.f64 y 5) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 (pow.f64 y 5) 1/120 (fma.f64 -1/5040 (pow.f64 y 7) y)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(fma.f64 -1/2 (*.f64 y y) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(+.f64 (fma.f64 -1/720 (pow.f64 y 6) 1) (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))"]],"time":175.64306640625,"type":"simplify"},{"compiler":[[1847,661]],"time":19.489990234375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","fresh",16.608417529305328],["(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","fresh",28.557766032252935],["(fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))","fresh",14.403415348579097],["(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","fresh",0.7997591798114494],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","next",0.24550634768442015],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","fresh",0.5587464844426087],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","fresh",0.3447838379159781]],"compiler":[[17,11],[29,20],[20,12],[14,10],[14,10],[14,10],[14,10],[17,11],[29,20],[20,12],[14,10],[14,10],[14,10],[14,10]],"count":[[145,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[144,7],"picked":[1,0]}],"min-error":[0.0625],"time":42.640869140625,"type":"prune"},{"compiler":[[37,16]],"locations":[["(cbrt.f64 (cos.f64 y))",0.0546875,true],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))",0.08203125,true],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))",0.109375,true],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)",0.34183505861065216,true]],"time":9.50390625,"type":"localize"},{"count":[[4,84]],"series":[["(cbrt.f64 (cos.f64 y))","y","-inf",0.1669921875],["(cbrt.f64 (cos.f64 y))","y","inf",0.162841796875],["(cbrt.f64 (cos.f64 y))","y","0",0.192138671875],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","-inf",0.1650390625],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","inf",0.1640625],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","z","0",0.18603515625],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","-inf",0.169921875],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","inf",0.199951171875],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","y","0",0.160888671875],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","-inf",0.166015625],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","inf",0.19384765625],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","x","0",0.2431640625],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","y","-inf",0.306884765625],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","y","inf",0.323974609375],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","y","0",0.208984375],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","z","-inf",0.241943359375],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","z","inf",0.35107421875],["(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","z","0",0.2900390625],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","-inf",2.02783203125],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","inf",1.5380859375],["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","y","0",0.43701171875]],"time":8.18505859375,"type":"series"},{"count":[[4,114]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 y)) 3)","(*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3))","(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","(cbrt.f64 (cos.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 y) (cos.f64 0)) (*.f64 (sin.f64 y) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 y)) (*.f64 (sin.f64 0) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (pow.f64 (pow.f64 (cos.f64 y) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 y) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 y)))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (neg.f64 y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (pow.f64 (cos.f64 y) 2/3)) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (*.f64 z (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (*.f64 z (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (cos.f64 y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (cos.f64 y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (sin.f64 y)) (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (cos.f64 y)) (neg.f64 (*.f64 x (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (pow.f64 (cos.f64 y) 2/3)) (cbrt.f64 (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (cos.f64 y) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cos.f64 y) 2/3) (*.f64 z (cbrt.f64 (cos.f64 y))) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 y) z (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 y)) (*.f64 z (pow.f64 (cos.f64 y) 2/3)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) x (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cos.f64 y)) 1 (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sin.f64 y)) 1 (*.f64 z (cos.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y)))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 y) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cos.f64 y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cos.f64 y))))))"]],"rules":[["egg-rr",19],["egg-rr",43],["egg-rr",27],["egg-rr",25]],"time":54.376953125,"type":"rewrite"},{"count":[[198,144]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 y 6) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z)))))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","z","(+.f64 (*.f64 y x) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) (+.f64 z (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2))))","(+.f64 (*.f64 -23/6480 (pow.f64 y 6)) (+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))))","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)","(pow.f64 (cos.f64 y) 1/3)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(fma.f64 (*.f64 y y) -1/2 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(+.f64 (fma.f64 (pow.f64 y 6) -1/720 1) (fma.f64 (pow.f64 y 4) 1/24 (*.f64 -1/2 (*.f64 y y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (pow.f64 1 1/3) (cos.f64 y))","(cos.f64 y)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(fma.f64 -1/2 (*.f64 (*.f64 y y) z) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(fma.f64 -1/2 (*.f64 (*.f64 y y) z) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 y 6) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z))","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 z (cos.f64 y))","(*.f64 (cos.f64 y) z)","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","z","(+.f64 (*.f64 y x) z)","(fma.f64 y x z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) z))","(fma.f64 (*.f64 (*.f64 y y) z) -1/2 (fma.f64 y x z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 y x) (+.f64 z (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(fma.f64 -1/2 (*.f64 (*.f64 y y) z) (fma.f64 x y (fma.f64 (*.f64 -1/6 (pow.f64 y 3)) x z)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (sin.f64 y) x))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(fma.f64 -1/6 (*.f64 y y) 1)","(+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2))))","(fma.f64 -1/72 (pow.f64 y 4) (fma.f64 -1/6 (*.f64 y y) 1))","(+.f64 (*.f64 -23/6480 (pow.f64 y 6)) (+.f64 (*.f64 -1/72 (pow.f64 y 4)) (+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))))","(fma.f64 (pow.f64 y 6) -23/6480 (fma.f64 -1/72 (pow.f64 y 4) (fma.f64 -1/6 (*.f64 y y) 1)))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))","(pow.f64 (cos.f64 y) 1/3)","(cbrt.f64 (cos.f64 y))"]],"time":232.343017578125,"type":"simplify"},{"compiler":[[1925,747]],"time":21.18115234375,"type":"eval"},{"alts":[["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.24550634768442015],["(fma.f64 x (sin.f64 y) (*.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3)))","fresh",16.608417529305328],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","fresh",0.5587464844426087],["(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","fresh",28.557766032252935],["(fma.f64 x (sin.f64 y) (*.f64 z (*.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))","fresh",16.608417529305328],["(fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))","fresh",14.403415348579097],["(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","fresh",0.7997591798114494],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","next",0.3447838379159781]],"compiler":[[14,10],[17,11],[14,10],[29,20],[20,14],[20,12],[14,10],[14,10],[17,11],[14,10],[29,20],[20,14],[20,12],[14,10],[14,10]],"count":[[151,8]],"kept":[{"done":[0,0],"fresh":[6,2],"new":[144,5],"picked":[1,1]}],"min-error":[0.05859375],"time":43.138916015625,"type":"prune"},{"compiler":[[34,13]],"locations":[["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))",0.08203125,true],["(*.f64 z (cos.f64 y))",0.109375,false],["(cbrt.f64 (sin.f64 y))",0.109375,true],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)",0.7270089356003985,true]],"time":8.927001953125,"type":"localize"},{"count":[[3,51]],"series":[["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","z","-inf",0.198974609375],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","z","inf",0.18212890625],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","z","0",0.635009765625],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","y","-inf",0.33984375],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","y","inf",0.387939453125],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","y","0",0.25],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","x","-inf",0.2470703125],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","x","inf",0.265869140625],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","x","0",0.93701171875],["(cbrt.f64 (sin.f64 y))","y","-inf",0.14208984375],["(cbrt.f64 (sin.f64 y))","y","inf",0.18701171875],["(cbrt.f64 (sin.f64 y))","y","0",0.258056640625],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","-inf",1.375],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","inf",1.420166015625],["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","y","0",0.868896484375]],"time":7.89599609375,"type":"series"},{"count":[[3,86]],"inputs":[["(pow.f64 (cbrt.f64 (sin.f64 y)) 3)","(cbrt.f64 (sin.f64 y))","(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 y)) (*.f64 (cos.f64 0) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 y) (cos.f64 0)) (*.f64 (cos.f64 y) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (pow.f64 (pow.f64 (sin.f64 y) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sin.f64 y) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (sin.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 y) 2/3) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 7/3) (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)) (pow.f64 (cbrt.f64 (sin.f64 y)) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sin.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) (cbrt.f64 (pow.f64 (sin.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (sin.f64 y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y)))) (cbrt.f64 (pow.f64 (pow.f64 (sin.f64 y) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (sin.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sin.f64 y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (sin.f64 y)) (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (cos.f64 y)) (neg.f64 (*.f64 x (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (sin.f64 y) 2/3)) (cbrt.f64 (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) x (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (cos.f64 y) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 y) z (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cos.f64 y) 2/3) z) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sin.f64 y)) 1 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cos.f64 y)) 1 (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))))"]],"rules":[["egg-rr",42],["egg-rr",19],["egg-rr",25]],"time":50.501953125,"type":"rewrite"},{"count":[[137,98]],"inputs":[["(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(pow.f64 (sin.f64 y) 1/3)","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(*.f64 (pow.f64 1 1/3) (sin.f64 y))","(sin.f64 y)","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(pow.f64 (sin.f64 y) 1/3)","(cbrt.f64 (sin.f64 y))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","z","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) z)","(fma.f64 -1/2 (*.f64 (*.f64 z y) y) z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 z (*.f64 1/24 (*.f64 (pow.f64 y 4) z))))","(*.f64 z (+.f64 (+.f64 1 (*.f64 -1/2 (*.f64 y y))) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (cos.f64 y) z) (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(*.f64 (cos.f64 y) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 y) x)) (*.f64 (cos.f64 y) z))","(fma.f64 (cos.f64 y) z (*.f64 (sin.f64 y) x))"]],"time":177.044189453125,"type":"simplify"},{"compiler":[[1805,642]],"time":18.77587890625,"type":"eval"},{"alts":[["(fma.f64 x (pow.f64 (pow.f64 (sin.f64 y) 1/3) 3) (*.f64 z (cos.f64 y)))","fresh",33.5350410300056],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","next",0.5587464844426087],["(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","fresh",28.557766032252935],["(fma.f64 x (sin.f64 y) (*.f64 z (*.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))","fresh",16.608417529305328],["(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","fresh",0.7997591798114494],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.24550634768442015],["(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","fresh",16.608417529305328],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","done",0.3447838379159781]],"compiler":[[15,11],[14,10],[29,20],[20,14],[14,10],[14,10],[17,11],[14,10],[15,11],[14,10],[29,20],[20,14],[14,10],[17,11]],"count":[[141,8]],"kept":[{"done":[1,1],"fresh":[6,3],"new":[133,3],"picked":[1,1]}],"min-error":[0.0546875],"time":37.888916015625,"type":"prune"},{"compiler":[[38,13]],"locations":[["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))",0.08203125,true],["(*.f64 z (cos.f64 y))",0.109375,false],["(cbrt.f64 (*.f64 z (cos.f64 y)))",0.109375,true],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)",0.7374765137479348,true]],"time":9.606201171875,"type":"localize"},{"count":[[3,51]],"series":[["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","z","-inf",0.291015625],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","z","inf",0.276123046875],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","z","0",0.282958984375],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","y","-inf",0.19189453125],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","y","inf",0.225830078125],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","y","0",0.238037109375],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","x","-inf",0.199951171875],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","x","inf",0.182861328125],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","x","0",0.89697265625],["(cbrt.f64 (*.f64 z (cos.f64 y)))","y","-inf",0.14892578125],["(cbrt.f64 (*.f64 z (cos.f64 y)))","y","inf",0.204833984375],["(cbrt.f64 (*.f64 z (cos.f64 y)))","y","0",0.367919921875],["(cbrt.f64 (*.f64 z (cos.f64 y)))","z","-inf",0.29296875],["(cbrt.f64 (*.f64 z (cos.f64 y)))","z","inf",0.287109375],["(cbrt.f64 (*.f64 z (cos.f64 y)))","z","0",0.217041015625],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","y","-inf",1.364990234375],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","y","inf",1.404052734375],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","y","0",1.85791015625],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","z","-inf",3.553955078125],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","z","inf",0.559814453125],["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","z","0",0.607177734375]],"time":13.94384765625,"type":"series"},{"count":[[3,107]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))) (pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (*.f64 z (cos.f64 y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 z)) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cos.f64 y) 2/3) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 y) 2/3) z) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2/3) (*.f64 z (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (*.f64 z (cos.f64 y)) 2/3)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 7/3) (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (cos.f64 y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (cos.f64 y)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (cos.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cbrt.f64 (cos.f64 y)))) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 y) (cbrt.f64 z))) (cbrt.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) (cbrt.f64 (*.f64 (pow.f64 (cos.f64 y) 2/3) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (*.f64 z (cos.f64 y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (*.f64 (pow.f64 z 2/3) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y))))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 z))) (cbrt.f64 (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (cos.f64 y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (*.f64 (neg.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 z (cos.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (sin.f64 y)) (*.f64 (neg.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z (cos.f64 y)) (neg.f64 (*.f64 x (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2/3) (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (cbrt.f64 (*.f64 x (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))) (+.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 (*.f64 z (cos.f64 y))) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 y) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (cos.f64 y) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cos.f64 y) 2/3) z) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (cbrt.f64 z)) (cbrt.f64 (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 7/3) (cbrt.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (*.f64 z (cos.f64 y)))) (pow.f64 (pow.f64 (*.f64 z (cos.f64 y)) 2/3) 4/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (*.f64 z (cos.f64 y)) 2/3)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 y) z (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) (pow.f64 (*.f64 z (cos.f64 y)) 2/3) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 y) x (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (sin.f64 y))) (pow.f64 (sin.f64 y) 2/3) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (neg.f64 z) (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cos.f64 y)) 1 (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (cos.f64 y)) (*.f64 x (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sin.f64 y)) 1 (*.f64 z (cos.f64 y)))))))"]],"rules":[["egg-rr",45],["egg-rr",27],["egg-rr",35]],"time":51.787109375,"type":"rewrite"},{"count":[[158,134]],"inputs":[["(*.f64 (pow.f64 1 1/3) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) z))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3)))) (*.f64 1/18 (*.f64 (pow.f64 1 1/3) z)))) (pow.f64 y 4)) (*.f64 (pow.f64 1 1/3) z)))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3))))) (*.f64 -1/9 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (pow.f64 y 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3)))) (*.f64 1/18 (*.f64 (pow.f64 1 1/3) z)))) (pow.f64 y 4)) (*.f64 (pow.f64 1 1/3) z))))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(pow.f64 z 1/3)","(+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 4) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))) (+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 6) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 4) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))) (+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2))))))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(*.f64 (pow.f64 1 1/3) z)","(+.f64 (*.f64 y x) (*.f64 (pow.f64 1 1/3) z))","(+.f64 (*.f64 y x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) z)))","(+.f64 (*.f64 y x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 1 1/3) z) (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(*.f64 (sin.f64 y) x)","(*.f64 (sin.f64 y) x)","(*.f64 (sin.f64 y) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) z)","z","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) z))","(fma.f64 (*.f64 z -1/2) (*.f64 y y) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3)))) (*.f64 1/18 (*.f64 (pow.f64 1 1/3) z)))) (pow.f64 y 4)) (*.f64 (pow.f64 1 1/3) z)))","(fma.f64 (*.f64 y y) (*.f64 z -1/2) (fma.f64 (pow.f64 y 4) (fma.f64 (*.f64 z -1/24) 1/3 (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 z -1/24)) (cbrt.f64 (*.f64 (*.f64 z z) 1/46656))) (cbrt.f64 z) (*.f64 1/18 z))) z))","(+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3))))) (*.f64 -1/9 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))))) (pow.f64 y 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 z) 1/3) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))) (*.f64 1/36 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3)))) (*.f64 1/18 (*.f64 (pow.f64 1 1/3) z)))) (pow.f64 y 4)) (*.f64 (pow.f64 1 1/3) z))))","(fma.f64 (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 z)) (-.f64 (*.f64 z (-.f64 -1/720 -1/216)) (*.f64 -1/3 (*.f64 z -1/24)))) (*.f64 (*.f64 -1/9 (cbrt.f64 (/.f64 1 z))) (*.f64 z -1/24))) (cbrt.f64 z) (fma.f64 1/3 (-.f64 (*.f64 z (-.f64 -1/720 -1/216)) (*.f64 -1/3 (*.f64 z -1/24))) (fma.f64 (*.f64 z -1/24) -1/9 (+.f64 (*.f64 (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 z -1/24))) (cbrt.f64 (*.f64 -1/216 z))) (*.f64 -1/216 z))))) (pow.f64 y 6) (fma.f64 (*.f64 y y) (*.f64 z -1/2) (fma.f64 (pow.f64 y 4) (fma.f64 (*.f64 z -1/24) 1/3 (fma.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 z -1/24)) (cbrt.f64 (*.f64 (*.f64 z z) 1/46656))) (cbrt.f64 z) (*.f64 1/18 z))) z)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(pow.f64 z 1/3)","(cbrt.f64 z)","(+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2))))","(fma.f64 (cbrt.f64 (*.f64 -1/216 z)) (*.f64 y y) (cbrt.f64 z))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 4) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))) (+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 (pow.f64 y 4) (*.f64 z -1/24))) (fma.f64 (cbrt.f64 (*.f64 -1/216 z)) (*.f64 y y) (cbrt.f64 z)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 6) (-.f64 (*.f64 -1/720 z) (+.f64 (*.f64 -1/216 z) (*.f64 -1/3 (-.f64 (*.f64 1/24 z) (*.f64 1/12 z)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 4) (-.f64 (*.f64 1/24 z) (*.f64 1/12 z))))) (+.f64 (pow.f64 z 1/3) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 z) 1/3) (pow.f64 y 2))))))","(+.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 z -2))) (+.f64 (*.f64 (pow.f64 y 6) (-.f64 (*.f64 z (-.f64 -1/720 -1/216)) (*.f64 -1/3 (*.f64 z -1/24)))) (*.f64 (pow.f64 y 4) (*.f64 z -1/24)))) (fma.f64 (cbrt.f64 (*.f64 -1/216 z)) (*.f64 y y) (cbrt.f64 z)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(pow.f64 (*.f64 (cos.f64 y) z) 1/3)","(cbrt.f64 (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y)))","(*.f64 z (cos.f64 y))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(*.f64 (sin.f64 y) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z (cos.f64 y))) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(*.f64 (pow.f64 1 1/3) z)","z","(+.f64 (*.f64 y x) (*.f64 (pow.f64 1 1/3) z))","(fma.f64 y x z)","(+.f64 (*.f64 y x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) z)))","(fma.f64 x y (fma.f64 (*.f64 z -1/2) (*.f64 y y) z))","(+.f64 (*.f64 y x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) z)) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) z))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 1 1/3) z) (*.f64 -1/6 (*.f64 (pow.f64 y 3) x)))))","(fma.f64 y x (fma.f64 (*.f64 y y) (*.f64 z -1/2) (fma.f64 -1/6 (*.f64 (pow.f64 y 3) x) z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 y) z)) (*.f64 (sin.f64 y) x))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(*.f64 (sin.f64 y) x)","(*.f64 (sin.f64 y) x)","(*.f64 (sin.f64 y) x)"]],"time":166.266845703125,"type":"simplify"},{"compiler":[[2969,1377]],"time":31.753173828125,"type":"eval"},{"alts":[["(fma.f64 x (pow.f64 (pow.f64 (sin.f64 y) 1/3) 3) (*.f64 z (cos.f64 y)))","fresh",33.5350410300056],["(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","done",0.5587464844426087],["(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","fresh",28.557766032252935],["(fma.f64 x (sin.f64 y) (*.f64 z (*.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))","fresh",16.608417529305328],["(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","fresh",0.7997591798114494],["(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","done",0.24550634768442015],["(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","fresh",16.608417529305328],["(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","done",0.3447838379159781]],"compiler":[[15,11],[14,10],[29,20],[20,14],[14,10],[14,10],[17,11],[14,10]],"count":[[177,8]],"kept":[{"done":[2,2],"fresh":[5,3],"new":[169,2],"picked":[1,1]}],"min-error":[0.0546875],"time":48.306884765625,"type":"prune"},{"accuracy":[0.1328125],"baseline":[0.1328125],"branch":[["x",0.1328125,1],["y",0.1328125,1],["z",0.1328125,1],["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))",0.1328125,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[268,98]],"count":[[19,1]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","(fma.f64 x (pow.f64 (pow.f64 (sin.f64 y) 1/3) 3) (*.f64 z (cos.f64 y)))","(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","(fma.f64 x (sin.f64 y) (*.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3)))","(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","(fma.f64 x (sin.f64 y) (*.f64 z (*.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 7/3) (cbrt.f64 (pow.f64 (cos.f64 y) 2/3)))))","(fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))","(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","(fma.f64 (*.f64 z (cbrt.f64 (cos.f64 y))) (pow.f64 (cos.f64 y) 2/3) (*.f64 x (sin.f64 y)))","(fma.f64 x (sin.f64 y) (+.f64 (*.f64 z (+.f64 (*.f64 -1/2 (*.f64 y y)) (*.f64 -1/720 (pow.f64 y 6)))) (fma.f64 (*.f64 1/24 (pow.f64 y 4)) z z)))","(fma.f64 (cbrt.f64 (*.f64 x (sin.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (sin.f64 y)) 2)) (*.f64 z (cos.f64 y)))","(pow.f64 (cbrt.f64 (fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))) 3)","(fma.f64 x (sin.f64 y) (*.f64 z (pow.f64 (cbrt.f64 (cos.f64 y)) 3)))","(fma.f64 x (sin.f64 y) (pow.f64 (cbrt.f64 (*.f64 z (cos.f64 y))) 3))","(fma.f64 x (pow.f64 (cbrt.f64 (sin.f64 y)) 3) (*.f64 z (cos.f64 y)))","(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))","(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))"]],"link":["."],"name":["Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, B"],"oracle":[48.31061601115052],"outputs":[["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))"]],"time":30.166015625,"times":[["x",6.3779296875],["y",6.43505859375],["z",6.39501953125],["(+.f64 (*.f64 x (sin.f64 y)) (*.f64 z (cos.f64 y)))",6.64306640625]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 x (sin.f64 y) (*.f64 z (cos.f64 y)))"]],"stop":[["fuel",1]],"time":34.5791015625,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.39794921875,"type":"end"}]