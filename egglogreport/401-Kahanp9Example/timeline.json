[{"compiler":[[28,17]],"method":["search"],"sampling":[[12,0.18097948632203043,0.006215457106009126,0.8128050565719604],[11,0.18097948632203043,0.006215457106009126,0.8128050565719604],[10,0.17403279896825552,0.013162144459784031,0.8128050565719604],[9,0.17403279896825552,0.013162144459784031,0.8128050565719604],[8,0.15794573351740837,0.02924920991063118,0.8128050565719604],[7,0.15794573351740837,0.02924920991063118,0.8128050565719604],[6,0.052648577839136124,0.13454636558890343,0.8128050565719604],[5,0.04679873585700989,0.14039620757102966,0.8128050565719604],[4,0.0,0.18719494342803955,0.8128050565719604],[3,0.0,0.18719494342803955,0.8128050565719604],[2,0.0,0.18719494342803955,0.8128050565719604],[1,0.0,0.18719494342803955,0.8128050565719604],[0,0.0,0.18719494342803955,0.8128050565719604]],"time":15.671875,"type":"analyze"},{"outcomes":[["body",256,"valid",429.39501953125,8256]],"time":437.3740234375,"type":"sample"},{"compiler":[[17,9]],"inputs":[["0","1"],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (*.f64 (-.f64 y x) (+.f64 y x)) (+.f64 (*.f64 y y) (*.f64 x x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 y y (*.f64 x x)))","(/.f64 (*.f64 (-.f64 y x) (+.f64 y x)) (+.f64 (*.f64 y y) (*.f64 x x)))","(/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 y y (*.f64 x x)))"]],"symmetry":[[]],"time":59.741943359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))"]],"time":19.358154296875,"type":"simplify"},{"compiler":[[31,11]],"time":0.343994140625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","next",22.2578125]],"compiler":[[16,8],[16,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[22.2578125],"time":0.885009765625,"type":"prune"},{"compiler":[[40,8]],"locations":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))",21.964819759772574,true]],"time":7.760009765625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","y","-inf",0.318115234375],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","y","inf",0.43994140625],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","y","0",0.530029296875],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","x","-inf",0.43994140625],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","x","inf",0.4609375],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","x","0",0.7138671875]],"time":3.015869140625,"type":"series"},{"count":[[1,67]],"inputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (+.f64 x y) x)) (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (neg.f64 (*.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 x y) x)) (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 x y) y)) (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 0) (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) (*.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 x y) x) (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (neg.f64 (*.f64 y (+.f64 x y))) (/.f64 1 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) x) (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (*.f64 (-.f64 x y) y) (/.f64 1 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) y) (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (*.f64 (-.f64 x y) x) (/.f64 1 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) (*.f64 0 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (fma.f64 x x (*.f64 y y)))) (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 (-.f64 x y) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2)) (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 x y) (+.f64 x y)) 2)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (/.f64 1 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (/.f64 -1 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) (neg.f64 1/3)) (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))) (/.f64 (+.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))) (pow.f64 (fma.f64 x x (*.f64 y y)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (fma.f64 x x (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))) (/.f64 (-.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 y x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 x y) (+.f64 x y)) 2)) (fma.f64 x x (*.f64 y y))) (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (pow.f64 (cbrt.f64 (fma.f64 x x (*.f64 y y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (*.f64 y y)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 x x (*.f64 y y)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (neg.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 x y) (+.f64 x y)) 2))) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2)) (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 x y)))) (cbrt.f64 (neg.f64 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2)) (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y)))) (cbrt.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) (neg.f64 1/3)) (*.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (+.f64 x y)) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (-.f64 x y)) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))) (cbrt.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))) (cbrt.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2))) (cbrt.f64 (neg.f64 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 2))) (cbrt.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))) (cbrt.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) -1) (neg.f64 (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (fma.f64 x x (*.f64 y y))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) (+.f64 x y)) (/.f64 1 (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))) (*.f64 (-.f64 y x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) 3))))))"]],"rules":[["egg-rr",67]],"time":24.27197265625,"type":"rewrite"},{"count":[[91,98]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 2 (pow.f64 (/.f64 x y) 2) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","(+.f64 (*.f64 2 (+.f64 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (pow.f64 (/.f64 x y) 2))) (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (-.f64 (-.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x)) (-.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (+.f64 (/.f64 y x) (-.f64 (-.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))) (*.f64 (pow.f64 (/.f64 y x) 2) (/.f64 0 x))) (pow.f64 (/.f64 y x) 2))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) 1) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (-.f64 (-.f64 1 (/.f64 y x)) (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","(+.f64 (+.f64 (/.f64 y x) (-.f64 (-.f64 1 (/.f64 y x)) (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)))) (*.f64 (pow.f64 (/.f64 y x) 2) (/.f64 0 x)))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (fma.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2) (/.f64 (*.f64 -2 (pow.f64 y 6)) (pow.f64 x 6))))","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 2)) -1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 2)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 2)) -1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 2)) -1)"]],"time":86.93505859375,"type":"simplify"},{"compiler":[[2246,757]],"time":16.06103515625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","next",22.25],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","fresh",40.55251784528359],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","fresh",23.637199752824372]],"compiler":[[19,11],[20,15],[19,14],[19,11],[20,15],[19,14]],"count":[[99,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[98,3],"picked":[1,0]}],"min-error":[0.25922934701912753],"time":17.75,"type":"prune"},{"compiler":[[73,12]],"locations":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))",21.964819759772574,false]],"time":9.77685546875,"type":"localize"},{"compiler":[[2540,1050]],"time":19.9560546875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","done",22.25],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","fresh",40.55251784528359],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","next",23.637199752824372]],"compiler":[[19,11],[20,15],[19,14],[20,15],[19,14]],"count":[[101,3]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[98,0],"picked":[1,1]}],"min-error":[0.25922934701912753],"time":19.152099609375,"type":"prune"},{"compiler":[[49,30]],"locations":[["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)",0.1328125,true],["(pow.f64 (/.f64 x y) 2)",0.281913769536884,true],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))",6.253854645755145,true]],"time":11.58984375,"type":"localize"},{"count":[[3,72]],"series":[["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","y","-inf",0.30517578125],["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","y","inf",0.2451171875],["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","y","0",0.25],["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","x","-inf",0.236083984375],["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","x","inf",0.221923828125],["(pow.f64 (pow.f64 (/.f64 x y) 2) 2)","x","0",0.2890625],["(pow.f64 (/.f64 x y) 2)","y","-inf",0.376953125],["(pow.f64 (/.f64 x y) 2)","y","inf",0.31689453125],["(pow.f64 (/.f64 x y) 2)","y","0",0.3759765625],["(pow.f64 (/.f64 x y) 2)","x","-inf",0.38916015625],["(pow.f64 (/.f64 x y) 2)","x","inf",0.406982421875],["(pow.f64 (/.f64 x y) 2)","x","0",0.382080078125],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","y","-inf",0.361083984375],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","y","inf",0.31298828125],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","y","0",0.47705078125],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","x","-inf",0.467041015625],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","x","inf",0.680908203125],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","x","0",0.579833984375]],"time":6.92822265625,"type":"series"},{"count":[[3,209]],"inputs":[["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","(pow.f64 (/.f64 x y) 2)","(pow.f64 (pow.f64 (/.f64 x y) 2) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (*.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 0) (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (*.f64 0 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x y) 2) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1) (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (pow.f64 (/.f64 x y) 2) 2) -1) (*.f64 -2 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (pow.f64 (/.f64 x y) 4)) (+.f64 -1 (*.f64 (pow.f64 (/.f64 x y) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -2 (pow.f64 (/.f64 x y) 4)) (-.f64 1 (*.f64 (pow.f64 (/.f64 x y) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) (cbrt.f64 (pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 2)) (cbrt.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) 3) -1) (+.f64 (*.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4)))) (-.f64 1 (*.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 -2 (pow.f64 (/.f64 x y) 4))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x y) (/.f64 (*.f64 x 2) y) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x y) (sqrt.f64 2)) (*.f64 (/.f64 x y) (sqrt.f64 2)) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (pow.f64 (/.f64 x y) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x y) 2) 2)) (cbrt.f64 (*.f64 4 (pow.f64 (/.f64 x y) 4))) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1) 2)) (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1) 2)) (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (/.f64 x y) 2) 2) (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1) (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1) 1 (*.f64 (pow.f64 (/.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 x y) 2) 2) 1 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x y) 2) (*.f64 (pow.f64 (/.f64 x y) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x y) 2) 0) (pow.f64 (/.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x y) 2) (*.f64 0 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x y) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (cbrt.f64 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x y)) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) (cbrt.f64 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x x) y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (/.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (*.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x y)) (+.f64 2 3)) (cbrt.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 (*.f64 x (cbrt.f64 (pow.f64 y -2))) (*.f64 x (cbrt.f64 (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 x x)) y) (/.f64 (cbrt.f64 (*.f64 x x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (/.f64 -1 y) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 x y)) 1) (*.f64 (neg.f64 (/.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x x)) (/.f64 1 (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 (/.f64 x y) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (/.f64 (/.f64 x y) (neg.f64 (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 (/.f64 x y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 (neg.f64 y))) (/.f64 (neg.f64 x) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (*.f64 x (cbrt.f64 (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) -1) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 (*.f64 y y))) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 y -2))) (/.f64 (/.f64 x y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x -1) (/.f64 (/.f64 x y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x x) y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x x)) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x x) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (cbrt.f64 (/.f64 1 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x y) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 x y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (cbrt.f64 (/.f64 x y)) (+.f64 2 3))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 x y)) (+.f64 2 3))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) 1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (cbrt.f64 y)) (neg.f64 (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) y)) 1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) y)) -1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) y) (cbrt.f64 (*.f64 y y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) y) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) y) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) y) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 x (cbrt.f64 y))) (*.f64 (neg.f64 y) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 x (cbrt.f64 y))) (*.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (neg.f64 x)) (*.f64 (cbrt.f64 (*.f64 y y)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) x) (*.f64 (cbrt.f64 (*.f64 y y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 x (cbrt.f64 y))) (*.f64 y (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (*.f64 (neg.f64 (*.f64 y y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 x x) y))) y)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x y)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x y)) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x y) (neg.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x y) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x y) 4) (*.f64 (pow.f64 (/.f64 x y) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x y) 4) 0) (pow.f64 (/.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x y) 4) (*.f64 0 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x y) 4)) (pow.f64 (/.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x y) 3) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) (cbrt.f64 (pow.f64 (/.f64 x y) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 8)) (cbrt.f64 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (neg.f64 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x y) 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 2 3)) (cbrt.f64 (pow.f64 (/.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (/.f64 (/.f64 x y) y) (/.f64 (/.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 x x) y)) (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (*.f64 (pow.f64 y -2) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 x y)) (/.f64 x y)) (*.f64 (neg.f64 (/.f64 x y)) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x y) (neg.f64 (/.f64 x y))) (*.f64 (/.f64 x y) (neg.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) 1) (*.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x y) (pow.f64 x 3)) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x y) (neg.f64 (pow.f64 x 3))) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 3) (neg.f64 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 3) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 3) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 x x) y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (neg.f64 (/.f64 (*.f64 x x) y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (neg.f64 (*.f64 x x))) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x y) 2) (*.f64 x x)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) (/.f64 x y)) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x 3)) (/.f64 x y)) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 (/.f64 x y) 3)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (/.f64 x y) 3)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (/.f64 x y) 3)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (pow.f64 (/.f64 x y) 2)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (pow.f64 (/.f64 x y) 2)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) (pow.f64 (/.f64 x y) 2)) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) (pow.f64 (/.f64 x y) 2)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 (pow.f64 x 3))) (*.f64 (neg.f64 y) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 x 3)) (*.f64 (neg.f64 y) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (neg.f64 (pow.f64 x 3))) (*.f64 (cbrt.f64 (*.f64 y y)) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 x 3)) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 (pow.f64 x 3))) (*.f64 y (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 x 3)) (*.f64 y (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) (/.f64 x (cbrt.f64 y))) (*.f64 (pow.f64 y 3) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) (neg.f64 x)) (*.f64 (pow.f64 y 3) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) x) (*.f64 (pow.f64 y 3) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x 3)) (/.f64 x (cbrt.f64 y))) (*.f64 (neg.f64 (pow.f64 y 3)) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x 3)) (neg.f64 x)) (*.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x 3)) x) (*.f64 (neg.f64 (pow.f64 y 3)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (neg.f64 (*.f64 x x))) (*.f64 y (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (*.f64 x x)) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (neg.f64 (/.f64 (*.f64 x x) y))) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 (*.f64 x x) y)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (neg.f64 (*.f64 x x))) (*.f64 (neg.f64 y) (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (*.f64 x x)) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (neg.f64 (/.f64 (*.f64 x x) y))) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) y)) (/.f64 (*.f64 x x) y)) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (*.f64 x x))) (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)) (*.f64 (neg.f64 (*.f64 y y)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (/.f64 (*.f64 x x) y))) (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) (/.f64 (*.f64 x x) y)) (*.f64 (neg.f64 (*.f64 y y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) (neg.f64 (*.f64 x x))) (*.f64 (*.f64 y y) (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (*.f64 (*.f64 y y) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) (neg.f64 (/.f64 (*.f64 x x) y))) (neg.f64 (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) (/.f64 (*.f64 x x) y)) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 3) (+.f64 1/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 3) (+.f64 1 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 6) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 x y) 6) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x y) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) 2)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 6) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 x y) 3) (neg.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 x y) 6) 2))))))"]],"rules":[["egg-rr",86],["egg-rr",78],["egg-rr",45]],"time":36.2578125,"type":"rewrite"},{"count":[[281,221]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 2 (pow.f64 (/.f64 x y) 2) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2)))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2)))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2))","(+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(fma.f64 2 (pow.f64 (/.f64 x y) 2) (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 y -4) -2)))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 2 (pow.f64 (/.f64 x y) 2) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 2 (pow.f64 (/.f64 x y) 2) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 (*.f64 (pow.f64 x 4) (pow.f64 y -4)) -2 -1))","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 2) (pow.f64 y 2))","(pow.f64 (/.f64 x y) 2)","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))","(/.f64 (pow.f64 x 4) (pow.f64 y 4))","(*.f64 (pow.f64 x 4) (pow.f64 y -4))"]],"time":251.3701171875,"type":"simplify"},{"compiler":[[6663,3749]],"time":80.26806640625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","done",22.25],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","next",40.55251784528359],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","done",23.637199752824372]],"compiler":[[19,11],[20,15],[19,14],[20,15]],"count":[[303,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[300,0],"picked":[1,1]}],"min-error":[0.25922934701912753],"time":124.540771484375,"type":"prune"},{"compiler":[[57,35]],"locations":[["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))",0.0078125,true],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)",0.16863251953688402,true],["(pow.f64 (/.f64 y x) 2)",0.2890625,true],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))",18.929687500000004,true]],"time":14.148193359375,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","x","-inf",0.175048828125],["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","x","inf",0.2890625],["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","x","0",0.571044921875],["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","y","-inf",0.15087890625],["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","y","inf",0.447021484375],["(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","y","0",0.685791015625],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","x","-inf",0.243896484375],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","x","inf",0.259033203125],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","x","0",0.276123046875],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","y","-inf",0.244140625],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","y","inf",0.26318359375],["(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","y","0",0.302001953125],["(pow.f64 (/.f64 y x) 2)","x","-inf",0.387939453125],["(pow.f64 (/.f64 y x) 2)","x","inf",0.2421875],["(pow.f64 (/.f64 y x) 2)","x","0",0.379150390625],["(pow.f64 (/.f64 y x) 2)","y","-inf",0.398193359375],["(pow.f64 (/.f64 y x) 2)","y","inf",0.3291015625],["(pow.f64 (/.f64 y x) 2)","y","0",0.391845703125],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","x","-inf",0.3369140625],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","x","inf",0.302001953125],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","x","0",0.571044921875],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","y","-inf",0.37890625],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","y","inf",0.55908203125],["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","y","0",1.153076171875]],"time":9.6650390625,"type":"series"},{"count":[[4,275]],"inputs":[["(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","(pow.f64 (/.f64 y x) 2)","(pow.f64 (pow.f64 (/.f64 y x) 2) 2)","(*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (*.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 0) (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (*.f64 0 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (pow.f64 (/.f64 y x) 2)) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) 2)) (cbrt.f64 (*.f64 (*.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (pow.f64 (/.f64 y x) 4)) 2)))) (+.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) 2)) (-.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)) (cbrt.f64 (*.f64 (*.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (pow.f64 (/.f64 y x) 4)) 2)))) (+.f64 (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 2)) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 3) 1) (+.f64 (*.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2)))) (-.f64 1 (*.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) 2)) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y x) 4) 2 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (pow.f64 (/.f64 y x) 4) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 y x) 4) (cbrt.f64 2)) (cbrt.f64 4) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (cbrt.f64 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (pow.f64 (/.f64 y x) 8)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 2) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 -2 (pow.f64 (/.f64 y x) 4)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y x) 2) (*.f64 2 (pow.f64 (/.f64 y x) 2)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 y x) 4)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (*.f64 (pow.f64 (/.f64 y x) 4) (sqrt.f64 2)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 8)) 2) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)) (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (/.f64 y x) 4) (sqrt.f64 2)) (sqrt.f64 2) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) 2)) (cbrt.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -2 y) x) (/.f64 y x) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -2) (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 y x) 2)) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y x) 2) -2 (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 (pow.f64 (/.f64 y x) 2))) (cbrt.f64 (*.f64 4 (pow.f64 (/.f64 y x) 4))) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (cbrt.f64 (pow.f64 (/.f64 y x) 2))) (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4)) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 1 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) 1 (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -2 (pow.f64 (/.f64 y x) 2)) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 2) (*.f64 (pow.f64 (/.f64 y x) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y x) 2) 0) (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 2) (*.f64 0 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cbrt.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (cbrt.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y x)) (pow.f64 (cbrt.f64 (/.f64 y x)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (/.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) (+.f64 2 3)) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -2) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y y)) x) (/.f64 (cbrt.f64 (*.f64 y y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (*.f64 y (cbrt.f64 (pow.f64 x -2))) (*.f64 y (cbrt.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (*.f64 (/.f64 -1 x) (/.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 y x)) 1) (*.f64 (neg.f64 (/.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y y)) (/.f64 1 (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 x)) (*.f64 y (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 x x))) (/.f64 y (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) -1) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 x)) (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 x -2))) (/.f64 (/.f64 y x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y -1) (/.f64 (/.f64 y x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (cbrt.f64 x)) (/.f64 (/.f64 y x) (neg.f64 (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 (/.f64 y x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 (neg.f64 x))) (/.f64 (neg.f64 y) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y y)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 y (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) 1) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (pow.f64 (cbrt.f64 (/.f64 y x)) (+.f64 2 3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (/.f64 y x)) (+.f64 2 3))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 y x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) x) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) x) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) x) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) x) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 y y) x)) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 y y) x)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) 1) (*.f64 (neg.f64 (*.f64 x x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 y (cbrt.f64 x))) (*.f64 x (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 y (cbrt.f64 x))) (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) y) (*.f64 (cbrt.f64 (*.f64 x x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 y (cbrt.f64 x))) (*.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (neg.f64 y)) (*.f64 (cbrt.f64 (*.f64 x x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 y y) x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 y x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y x) (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y x) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 4) (*.f64 (pow.f64 (/.f64 y x) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y x) 4) 0) (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 4) (*.f64 0 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y x) 4)) (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) (neg.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (cbrt.f64 (pow.f64 (/.f64 y x) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 8)) (cbrt.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y x) 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (+.f64 2 3)) (cbrt.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (*.f64 (/.f64 (/.f64 y x) x) (/.f64 (/.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (*.f64 (pow.f64 x -2) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 y y) x) (/.f64 (*.f64 y y) x)) (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (neg.f64 (/.f64 y x))) (*.f64 (/.f64 y x) (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 y x)) (/.f64 y x)) (*.f64 (neg.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) 1) (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 y y) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 (*.f64 y y) x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (neg.f64 (*.f64 y y))) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 3) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 3) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 (pow.f64 y 3))) (neg.f64 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (pow.f64 y 3)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y x) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (pow.f64 (/.f64 y x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (pow.f64 (/.f64 y x) 2)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (pow.f64 (/.f64 y x) 2)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (pow.f64 (/.f64 y x) 2)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (pow.f64 (/.f64 y x) 3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (pow.f64 (/.f64 y x) 3)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 y 3)) (/.f64 y x)) (neg.f64 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 3) (/.f64 y x)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 y 3)) y) (*.f64 (neg.f64 (pow.f64 x 3)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 y 3)) (/.f64 y (cbrt.f64 x))) (*.f64 (neg.f64 (pow.f64 x 3)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 y)) (*.f64 (neg.f64 (pow.f64 x 3)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 3) y) (*.f64 (pow.f64 x 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 3) (/.f64 y (cbrt.f64 x))) (*.f64 (pow.f64 x 3) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 3) (neg.f64 y)) (*.f64 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (neg.f64 (*.f64 y y))) (*.f64 x (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (*.f64 y y)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (/.f64 (*.f64 y y) x)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (neg.f64 (/.f64 (*.f64 y y) x))) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (neg.f64 (*.f64 y y))) (*.f64 (neg.f64 x) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (*.f64 y y)) (neg.f64 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (/.f64 (*.f64 y y) x)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (neg.f64 (/.f64 (*.f64 y y) x))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (neg.f64 (*.f64 y y))) (*.f64 (*.f64 x x) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (*.f64 (*.f64 x x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (/.f64 (*.f64 y y) x)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (neg.f64 (/.f64 (*.f64 y y) x))) (neg.f64 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 (*.f64 y y))) (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (*.f64 y y)) (*.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (/.f64 (*.f64 y y) x)) (*.f64 (neg.f64 (*.f64 x x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (neg.f64 (/.f64 (*.f64 y y) x))) (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 (pow.f64 y 3))) (*.f64 x (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (pow.f64 y 3)) (*.f64 x (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 (pow.f64 y 3))) (*.f64 (neg.f64 x) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (pow.f64 y 3)) (*.f64 (neg.f64 x) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (neg.f64 (pow.f64 y 3))) (*.f64 (cbrt.f64 (*.f64 x x)) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (pow.f64 y 3)) (*.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 3) (+.f64 1/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 6) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 3) (+.f64 1 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y x) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 6) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 0) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 4) (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) (*.f64 0 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2))) (*.f64 -1 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 2)) (pow.f64 (/.f64 y x) 2)) (*.f64 (neg.f64 (sqrt.f64 2)) (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 (pow.f64 (/.f64 y x) 2))) (*.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 2) (neg.f64 (pow.f64 (/.f64 y x) 2))) (*.f64 (sqrt.f64 2) (neg.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (neg.f64 (sqrt.f64 2))) (*.f64 (pow.f64 (/.f64 y x) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) (neg.f64 (sqrt.f64 2))) (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) (sqrt.f64 2)) (*.f64 (neg.f64 (pow.f64 (/.f64 y x) 2)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) -1) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) 1) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 8) 4)) (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (cbrt.f64 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (pow.f64 (/.f64 y x) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 4) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) (*.f64 2 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 8)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (*.f64 (pow.f64 (/.f64 y x) 4) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 4) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (*.f64 (pow.f64 (/.f64 y x) 4) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 8)) (*.f64 2 (cbrt.f64 (pow.f64 (/.f64 y x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (pow.f64 (/.f64 y x) 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) (pow.f64 (/.f64 y x) 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 8)) 2) (cbrt.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (/.f64 (*.f64 y y) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (neg.f64 (/.f64 (*.f64 y y) x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (*.f64 y y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 (/.f64 y x) 2)) (neg.f64 (*.f64 y y))) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) x) (*.f64 2 (pow.f64 (/.f64 y x) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (*.f64 2 (pow.f64 (/.f64 y x) 2))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (*.f64 2 (pow.f64 (/.f64 y x) 2))) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) (*.f64 2 (pow.f64 (/.f64 y x) 2))) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 6) 8) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (pow.f64 (/.f64 y x) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2) (pow.f64 (/.f64 y x) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 6) 8))))))"]],"rules":[["egg-rr",52],["egg-rr",84],["egg-rr",78],["egg-rr",61]],"time":42.962890625,"type":"rewrite"},{"count":[[371,287]],"inputs":[["1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(pow.f64 (/.f64 y x) 2)","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(/.f64 (pow.f64 y 4) (pow.f64 x 4))","(*.f64 (pow.f64 y 4) (pow.f64 x -4))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))","(*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x -4) 2))"]],"time":316.52587890625,"type":"simplify"},{"compiler":[[8467,4998]],"time":92.2822265625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","done",22.25],["(fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))","fresh",40.55251784528358],["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","done",23.637199752824372]],"compiler":[[19,11],[18,13],[19,14]],"count":[[369,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[366,1],"picked":[1,0]}],"min-error":[0.2592293470191207],"time":118.81884765625,"type":"prune"},{"accuracy":[4.3627751268886525],"baseline":[22.25],"branch":[["x",12.057241850690435,2],["y",4.3627751268886525,4],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))",6.057241850690437,2]],"compiler":[[3,2],[3,2],[17,9],[99,49]],"count":[[6,4]],"inputs":[["(fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","(+.f64 (fma.f64 -2 (pow.f64 (/.f64 y x) 2) 1) (*.f64 2 (pow.f64 (pow.f64 (/.f64 y x) 2) 2)))","(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))"]],"link":["."],"name":["Kahan p9 Example"],"oracle":[63.88943448100524],"outputs":[["(fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)","(fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4))))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3)"]],"time":23.998046875,"times":[["x",6.416015625],["y",12.668212890625],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))",3.130126953125]],"type":"regimes"},{"bstep":[[4.05711182701215e-163,2.02489982953356e-157,9.94482421875],[-1.247350253355688e-145,-3.3081183251144762e-152,10.030029296875],[-7.87095430644601e+161,-1.0607548526115164e+154,10.2138671875]],"compiler":[[19,11],[3,2]],"method":["binary-search","binary-search","binary-search"],"time":30.31298828125,"type":"bsearch"},{"compiler":[[81,45]],"inputs":[["(if (<=.f64 y -787095430644601041913632997189785729975090467611015412399749596436211528464205480072025163730781526858587662049039391556765723487914220028770644264361644341067776) (fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1)) (if (<=.f64 y -3507325788405535/28118211215894977392565865673037386617935606989386978956879722328823984879196799189494004288149317857187005691459505594520051662846839373056303219880407274094592) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3) (if (<=.f64 y 1644047723718567/4052261297735344686047273304385899561535592023674254785152009111026028136145418111718463914987406049109568248643848426935932764722081811824108276205189417663145685354884286644224) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y -787095430644601041913632997189785729975090467611015412399749596436211528464205480072025163730781526858587662049039391556765723487914220028770644264361644341067776) (fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (pow.f64 (/.f64 x y) 2) 2) -1)) (if (<=.f64 y -3507325788405535/28118211215894977392565865673037386617935606989386978956879722328823984879196799189494004288149317857187005691459505594520051662846839373056303219880407274094592) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3) (if (<=.f64 y 1644047723718567/4052261297735344686047273304385899561535592023674254785152009111026028136145418111718463914987406049109568248643848426935932764722081811824108276205189417663145685354884286644224) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (+.f64 1 (*.f64 2 (pow.f64 (/.f64 y x) 4)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))) 3))))","(if (<=.f64 y -787095430644601041913632997189785729975090467611015412399749596436211528464205480072025163730781526858587662049039391556765723487914220028770644264361644341067776) (fma.f64 (pow.f64 (/.f64 x y) 2) 2 (fma.f64 -2 (pow.f64 (/.f64 x y) 4) -1)) (if (<=.f64 y -3507325788405535/28118211215894977392565865673037386617935606989386978956879722328823984879196799189494004288149317857187005691459505594520051662846839373056303219880407274094592) (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))) (if (<=.f64 y 1644047723718567/4052261297735344686047273304385899561535592023674254785152009111026028136145418111718463914987406049109568248643848426935932764722081811824108276205189417663145685354884286644224) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (fma.f64 (pow.f64 (/.f64 y x) 4) 2 1)) (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y))))))"]],"stop":[["fuel",1]],"time":26.60009765625,"type":"simplify"},{"time":0.02880859375,"type":"soundness"},{"compiler":[[81,45]],"remove-preprocessing":[[]],"time":24.155029296875,"type":"end"}]