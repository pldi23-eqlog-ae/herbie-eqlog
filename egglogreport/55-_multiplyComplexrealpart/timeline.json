[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.18713405719610066,0.7680293597423298,0.04483658306156957],[11,0.1403505428970755,0.8576977621487947,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":129.6689453125,"type":"analyze"},{"outcomes":[["body",256,"invalid",86.666015625,2092],["body",256,"valid",345.27197265625,8256]],"time":441.4990234375,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1","2","3"],["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))","(-.f64 (*.f64 x.im y.re) (*.f64 x.re y.im))","(-.f64 (*.f64 y.re x.re) (*.f64 x.im y.im))","(-.f64 (*.f64 y.im y.re) (*.f64 x.im x.re))","(-.f64 (*.f64 x.re x.im) (*.f64 y.re y.im))","(-.f64 (*.f64 x.re y.re) (*.f64 y.im x.im))","(-.f64 (*.f64 x.re y.im) (*.f64 x.im y.re))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))","(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","(-.f64 (*.f64 x.im y.re) (*.f64 x.re y.im))","(fma.f64 x.im y.re (neg.f64 (*.f64 x.re y.im)))","(-.f64 (*.f64 y.re x.re) (*.f64 x.im y.im))","(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","(-.f64 (*.f64 y.im y.re) (*.f64 x.im x.re))","(fma.f64 y.im y.re (neg.f64 (*.f64 x.im x.re)))","(-.f64 (*.f64 x.re x.im) (*.f64 y.re y.im))","(fma.f64 x.re x.im (neg.f64 (*.f64 y.im y.re)))","(-.f64 (*.f64 x.re y.re) (*.f64 y.im x.im))","(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","(-.f64 (*.f64 x.re y.im) (*.f64 x.im y.re))","(fma.f64 x.re y.im (neg.f64 (*.f64 x.im y.re)))"]],"symmetry":[[]],"time":80.751953125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))","(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))"]],"time":20.77001953125,"type":"simplify"},{"compiler":[[18,9]],"time":0.301025390625,"type":"eval"},{"alts":[["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","next",0.0078125]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0078125],"time":0.85107421875,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))",0.0078125,true]],"time":4.77587890625,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.im","-inf",0.26806640625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.im","inf",0.267822265625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.im","0",0.282958984375],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.im","-inf",0.2958984375],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.im","inf",0.262939453125],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.im","0",0.299072265625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.re","-inf",0.43603515625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.re","inf",0.2900390625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","y.re","0",0.284912109375],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.re","-inf",0.39697265625],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.re","inf",0.333984375],["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","x.re","0",0.471923828125]],"time":4.0390625,"type":"series"},{"count":[[1,52]],"inputs":[["(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x.re y.re) (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x.im y.im)) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (-.f64 9 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (+.f64 9 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 x.im y.im)) (neg.f64 (*.f64 x.re y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (-.f64 3 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (+.f64 3 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))) (pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 2/3) (cbrt.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 2/3) (*.f64 0 (cbrt.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))))))) (+.f64 0 (cbrt.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x.re y.re) 2)) (-.f64 (pow.f64 (*.f64 x.im y.im) 2/3) (*.f64 (cbrt.f64 (*.f64 x.re y.re)) (cbrt.f64 (neg.f64 (*.f64 x.im y.im)))))) (+.f64 (cbrt.f64 (*.f64 x.re y.re)) (cbrt.f64 (neg.f64 (*.f64 x.im y.im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x.im y.im) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x.re y.re) 2)) (*.f64 (cbrt.f64 (neg.f64 (*.f64 x.im y.im))) (cbrt.f64 (*.f64 x.re y.re))))) (+.f64 (cbrt.f64 (neg.f64 (*.f64 x.im y.im))) (cbrt.f64 (*.f64 x.re y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x.re y.re) 2)) (+.f64 (pow.f64 (*.f64 x.im y.im) 2/3) (*.f64 (cbrt.f64 (*.f64 x.re y.re)) (cbrt.f64 (*.f64 x.im y.im))))) (-.f64 (cbrt.f64 (*.f64 x.re y.re)) (cbrt.f64 (*.f64 x.im y.im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 x.im y.im) (*.f64 x.re y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x.re (cbrt.f64 y.re)) (pow.f64 y.re 2/3) (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x.re y.re)) (cbrt.f64 (pow.f64 (*.f64 x.re y.re) 2)) (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x.re) (*.f64 (pow.f64 x.re 2/3) y.re) (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y.re x.re (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y.im (neg.f64 x.im) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 x.im) (cbrt.f64 y.im)) (pow.f64 y.im 2/3) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x.im) y.im (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y.im) x.im (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x.im) (*.f64 (pow.f64 x.im 2/3) (neg.f64 y.im)) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x.im y.im)) (neg.f64 (pow.f64 (*.f64 x.im y.im) 2/3)) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x.im y.im) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x.im y.im) -1 (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 x.im y.im))) (pow.f64 (*.f64 x.im y.im) 2/3) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 x.im y.im) 2/3) (cbrt.f64 (neg.f64 (*.f64 x.im y.im))) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x.re y.re) (neg.f64 (*.f64 x.im y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 x.im y.im)) (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 x.im y.im)) 1 (*.f64 x.re y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x.re y.re) 1 (neg.f64 (*.f64 x.im y.im)))))))"]],"rules":[["egg-rr",52]],"time":39.220947265625,"type":"rewrite"},{"count":[[100,57]],"inputs":[["(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(*.f64 -1 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 x.re y.re)","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(*.f64 -1 (*.f64 y.im x.im))","(neg.f64 (*.f64 y.im x.im))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))","(+.f64 (*.f64 -1 (*.f64 y.im x.im)) (*.f64 x.re y.re))","(fma.f64 y.re x.re (neg.f64 (*.f64 y.im x.im)))"]],"time":137.82421875,"type":"simplify"},{"compiler":[[647,185]],"time":6.304931640625,"type":"eval"},{"alts":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))","next",0]],"compiler":[[11,7],[11,7]],"count":[[58,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[57,1],"picked":[1,0]}],"min-error":[0],"time":11.1240234375,"type":"prune"},{"compiler":[[20,7]],"time":4.65087890625,"type":"localize"},{"compiler":[[4,4]],"time":0.089111328125,"type":"eval"},{"alts":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))","done",0]],"compiler":[[11,7]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.48388671875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x.re",0,1],["x.im",0,1],["y.re",0,1],["y.im",0,1],["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))",0,1],["(*.f64 x.re y.re)",0,1],["(*.f64 x.im y.im)",0,1],["(*.f64 x.im y.im)",0,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[7,5],[7,5],[7,5],[25,11]],"count":[[3,1]],"inputs":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))","(fma.f64 x.re y.re (neg.f64 (*.f64 x.im y.im)))","(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))"]],"link":["."],"name":["_multiplyComplex, real part"],"oracle":[0.01171875],"outputs":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))"]],"time":21.443115234375,"times":[["x.re",2.5380859375],["x.im",2.669921875],["y.re",2.56689453125],["y.im",2.5390625],["(-.f64 (*.f64 x.re y.re) (*.f64 x.im y.im))",2.580078125],["(*.f64 x.re y.re)",2.52587890625],["(*.f64 x.im y.im)",2.656005859375],["(*.f64 x.im y.im)",2.546142578125]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 x.im (neg.f64 y.im) (*.f64 x.re y.re))"]],"stop":[["done",1]],"time":35.383056640625,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.653076171875,"type":"end"}]