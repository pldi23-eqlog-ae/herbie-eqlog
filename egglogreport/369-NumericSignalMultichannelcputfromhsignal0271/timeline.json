[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.22222169292036953,0.7758266121255006,0.0019516949541298345],[11,0.18713405719610066,0.8109142478497695,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":134.01513671875,"type":"analyze"},{"outcomes":[["body",256,"invalid",36.529296875,773],["body",256,"valid",380.5068359375,8256]],"time":426.41796875,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1","2","3"],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(*.f64 (/.f64 (-.f64 y x) (-.f64 z x)) t)","(*.f64 (/.f64 (-.f64 z y) (-.f64 x y)) t)","(*.f64 (/.f64 (-.f64 t y) (-.f64 z y)) x)","(*.f64 (/.f64 (-.f64 x z) (-.f64 y z)) t)","(*.f64 (/.f64 (-.f64 x t) (-.f64 z t)) y)","(*.f64 (/.f64 (-.f64 x y) (-.f64 t y)) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(/.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))","(*.f64 (/.f64 (-.f64 y x) (-.f64 z x)) t)","(/.f64 (*.f64 (-.f64 y x) t) (-.f64 z x))","(*.f64 (/.f64 (-.f64 z y) (-.f64 x y)) t)","(/.f64 (*.f64 (-.f64 z y) t) (-.f64 x y))","(*.f64 (/.f64 (-.f64 t y) (-.f64 z y)) x)","(/.f64 (*.f64 (-.f64 t y) x) (-.f64 z y))","(*.f64 (/.f64 (-.f64 x z) (-.f64 y z)) t)","(/.f64 (*.f64 (-.f64 x z) t) (-.f64 y z))","(*.f64 (/.f64 (-.f64 x t) (-.f64 z t)) y)","(/.f64 (*.f64 y (-.f64 t x)) (-.f64 t z))","(*.f64 (/.f64 (-.f64 x y) (-.f64 t y)) z)","(/.f64 (*.f64 z (-.f64 y x)) (-.f64 y t))"]],"symmetry":[[]],"time":87.611083984375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))"]],"time":18.875,"type":"simplify"},{"compiler":[[22,12]],"time":0.3359375,"type":"eval"},{"alts":[["(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","fresh",12.066908643459826],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","next",1.836332818938797]],"compiler":[[13,8],[13,8],[13,8],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.08203125],"time":1.2509765625,"type":"prune"},{"compiler":[[30,8]],"locations":[["(/.f64 (-.f64 x y) (-.f64 z y))",0.02734375,true],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",1.7723398250667735,true]],"time":5.484130859375,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 (-.f64 x y) (-.f64 z y))","z","-inf",0.316162109375],["(/.f64 (-.f64 x y) (-.f64 z y))","z","inf",0.494140625],["(/.f64 (-.f64 x y) (-.f64 z y))","z","0",1.01123046875],["(/.f64 (-.f64 x y) (-.f64 z y))","y","-inf",0.2890625],["(/.f64 (-.f64 x y) (-.f64 z y))","y","inf",0.364990234375],["(/.f64 (-.f64 x y) (-.f64 z y))","y","0",0.43212890625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","-inf",0.393798828125],["(/.f64 (-.f64 x y) (-.f64 z y))","x","inf",0.280029296875],["(/.f64 (-.f64 x y) (-.f64 z y))","x","0",0.341064453125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","-inf",0.330078125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","inf",0.48291015625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","0",0.56201171875],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","-inf",0.40380859375],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","inf",0.8251953125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","0",0.97509765625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","-inf",0.4140625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","inf",0.510009765625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","0",0.5849609375],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","-inf",0.71484375],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","inf",0.580078125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","0",0.64990234375]],"time":11.27783203125,"type":"series"},{"count":[[2,138]],"inputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (/.f64 x (-.f64 z y))) (*.f64 t (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) (*.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 0) (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) (*.f64 0 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))) (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 y z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) t) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) t) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (*.f64 t (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (-.f64 y x) (-.f64 y z))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (*.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 y x)) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y)))) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 x y) t) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) t) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 2)) (cbrt.f64 (*.f64 (-.f64 x y) t))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) t) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (-.f64 y x)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 x y) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 z y) 2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) t)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) t)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 x y) t) (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) (/.f64 t (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 t (-.f64 y x)) (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 0) (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 y (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (*.f64 0 (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) (-.f64 y z))) (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y z)) (/.f64 (-.f64 x y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z y)) (/.f64 (-.f64 x y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x (-.f64 z y)) (pow.f64 (-.f64 z y) 2)) (/.f64 (*.f64 (-.f64 z y) y) (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 z y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (/.f64 1 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (-.f64 z y) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 z y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (-.f64 y z)) (*.f64 (-.f64 z y) (neg.f64 y))) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 z y)) (*.f64 (-.f64 y z) y)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (-.f64 y z) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y)))) (neg.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (-.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) 1) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (-.f64 z y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 (-.f64 y z) (neg.f64 y))) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))))"]],"rules":[["egg-rr",73],["egg-rr",65]],"time":29.574951171875,"type":"rewrite"},{"count":[[222,211]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(*.f64 -1 (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z))) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z))) y (/.f64 (*.f64 (*.f64 y y) (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z)))) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","(+.f64 (+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z))) y (/.f64 (*.f64 (*.f64 y y) (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z)))) z))) (/.f64 (*.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (*.f64 t x) (*.f64 z z))) (pow.f64 y 3)) (*.f64 z z)))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 (/.f64 (*.f64 (*.f64 t (-.f64 z x)) z) (*.f64 y y)) (+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 t (-.f64 z x)) z) (*.f64 y y)) (/.f64 (*.f64 (*.f64 t (-.f64 z x)) (*.f64 z z)) (pow.f64 y 3))) (+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y)))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (/.f64 (*.f64 (*.f64 t (-.f64 z x)) z) (*.f64 y y)) (+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 t (-.f64 z x)) z) (*.f64 y y)) (/.f64 (*.f64 (*.f64 t (-.f64 z x)) (*.f64 z z)) (pow.f64 y 3))) (+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y)))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(/.f64 (*.f64 (-.f64 y x) t) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (/.f64 (*.f64 (*.f64 t z) (-.f64 y x)) (*.f64 y y)) (/.f64 (*.f64 (-.f64 y x) t) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (/.f64 (*.f64 (*.f64 t z) (-.f64 y x)) (*.f64 y y)) (+.f64 (*.f64 (*.f64 (*.f64 t (*.f64 z z)) (-.f64 y x)) (pow.f64 y -3)) (/.f64 (*.f64 (-.f64 y x) t) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(+.f64 (/.f64 (*.f64 (*.f64 t z) (-.f64 y x)) (*.f64 y y)) (+.f64 (*.f64 (*.f64 (*.f64 t (*.f64 z z)) (-.f64 y x)) (pow.f64 y -3)) (+.f64 (/.f64 (*.f64 (*.f64 t (pow.f64 z 3)) (-.f64 y x)) (pow.f64 y 4)) (/.f64 (*.f64 (-.f64 y x) t) y))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 y y) t) (-.f64 x y)) (pow.f64 z -3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 y y) t) (-.f64 x y)) (pow.f64 z -3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) t) (-.f64 x y)) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 y y) t) (-.f64 x y)) (pow.f64 z -3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 y y) t) (-.f64 x y)) (pow.f64 z -3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) t) (-.f64 x y)) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(*.f64 -1 (/.f64 y (-.f64 z y)))","(/.f64 y (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(-.f64 (/.f64 x z) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(-.f64 (-.f64 (/.f64 x z) (*.f64 (*.f64 y y) (-.f64 (pow.f64 z -2) (*.f64 x (pow.f64 z -3))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","(-.f64 (-.f64 (-.f64 (/.f64 x z) (*.f64 (*.f64 y y) (-.f64 (pow.f64 z -2) (*.f64 x (pow.f64 z -3))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z))))) (*.f64 (pow.f64 y 3) (-.f64 (pow.f64 z -3) (/.f64 x (pow.f64 z 4)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","(+.f64 (+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1)) (*.f64 (*.f64 (-.f64 z x) (*.f64 z z)) (pow.f64 y -3)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1)) (*.f64 (*.f64 (-.f64 z x) (*.f64 z z)) (pow.f64 y -3)))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(/.f64 (-.f64 y x) y)","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (-.f64 y x) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (+.f64 (-.f64 y x) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))) y))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (*.f64 y y)) (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (+.f64 (-.f64 y x) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))) y)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3))) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (+.f64 (+.f64 (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3)) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4))) (/.f64 (-.f64 x y) z)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3))) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (+.f64 (+.f64 (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3)) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4))) (/.f64 (-.f64 x y) z)))"]],"time":318.981201171875,"type":"simplify"},{"compiler":[[4212,1431]],"time":40.575927734375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) 3) t)","fresh",2.0581079654654273],["(*.f64 (*.f64 (-.f64 x y) t) (/.f64 -1 (-.f64 y z)))","fresh",12.169134912996709],["(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))","fresh",11.78621634880871],["(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","fresh",12.059096143459826],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","fresh",1.828520318938797],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","next",1.808989068938797]],"compiler":[[16,11],[15,10],[13,8],[21,12],[18,10],[19,11],[16,11],[15,10],[13,8],[21,12],[18,10],[19,11]],"count":[[213,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[211,6],"picked":[1,0]}],"min-error":[0.00390625],"time":64.8798828125,"type":"prune"},{"compiler":[[53,11]],"locations":[["(/.f64 y (-.f64 y z))",0.00390625,true],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))",0.01171875,true],["(*.f64 (/.f64 y (-.f64 y z)) t)",2.8912489697302566,true],["(*.f64 (/.f64 x (-.f64 z y)) t)",4.55303815799509,true]],"time":8.72607421875,"type":"localize"},{"count":[[4,156]],"series":[["(/.f64 y (-.f64 y z))","z","-inf",0.25],["(/.f64 y (-.f64 y z))","z","inf",0.236083984375],["(/.f64 y (-.f64 y z))","z","0",0.239990234375],["(/.f64 y (-.f64 y z))","y","-inf",0.192138671875],["(/.f64 y (-.f64 y z))","y","inf",0.264892578125],["(/.f64 y (-.f64 y z))","y","0",0.298828125],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","t","-inf",0.237060546875],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","t","inf",0.413818359375],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","t","0",0.193115234375],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","y","-inf",1.56494140625],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","y","inf",0.655029296875],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","y","0",0.335205078125],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","z","-inf",0.427001953125],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","z","inf",0.441162109375],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","z","0",0.403076171875],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","x","-inf",0.18505859375],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","x","inf",0.215087890625],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","x","0",0.387939453125],["(*.f64 (/.f64 y (-.f64 y z)) t)","t","-inf",0.288818359375],["(*.f64 (/.f64 y (-.f64 y z)) t)","t","inf",0.47705078125],["(*.f64 (/.f64 y (-.f64 y z)) t)","t","0",0.48583984375],["(*.f64 (/.f64 y (-.f64 y z)) t)","z","-inf",0.318115234375],["(*.f64 (/.f64 y (-.f64 y z)) t)","z","inf",0.306884765625],["(*.f64 (/.f64 y (-.f64 y z)) t)","z","0",0.267822265625],["(*.f64 (/.f64 y (-.f64 y z)) t)","y","-inf",0.27294921875],["(*.f64 (/.f64 y (-.f64 y z)) t)","y","inf",0.321044921875],["(*.f64 (/.f64 y (-.f64 y z)) t)","y","0",0.405029296875],["(*.f64 (/.f64 x (-.f64 z y)) t)","t","-inf",0.31396484375],["(*.f64 (/.f64 x (-.f64 z y)) t)","t","inf",0.30810546875],["(*.f64 (/.f64 x (-.f64 z y)) t)","t","0",0.525146484375],["(*.f64 (/.f64 x (-.f64 z y)) t)","y","-inf",0.283935546875],["(*.f64 (/.f64 x (-.f64 z y)) t)","y","inf",0.337890625],["(*.f64 (/.f64 x (-.f64 z y)) t)","y","0",0.302978515625],["(*.f64 (/.f64 x (-.f64 z y)) t)","z","-inf",0.301025390625],["(*.f64 (/.f64 x (-.f64 z y)) t)","z","inf",0.371826171875],["(*.f64 (/.f64 x (-.f64 z y)) t)","z","0",0.426025390625],["(*.f64 (/.f64 x (-.f64 z y)) t)","x","-inf",0.31884765625],["(*.f64 (/.f64 x (-.f64 z y)) t)","x","inf",0.43603515625],["(*.f64 (/.f64 x (-.f64 z y)) t)","x","0",0.56298828125]],"time":15.136962890625,"type":"series"},{"count":[[4,243]],"inputs":[["(*.f64 (/.f64 x (-.f64 z y)) t)","(*.f64 (/.f64 y (-.f64 y z)) t)","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","(/.f64 y (-.f64 y z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 0) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (-.f64 z y)) (*.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x t) (-.f64 z y))) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (-.f64 z y)) (*.f64 0 (/.f64 (*.f64 x t) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 t (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x t) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 x t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x t)) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x t)) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x t) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x t)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (cbrt.f64 (*.f64 x t))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 x (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) t) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x t) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) t)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) t)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x t)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x t) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x t)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x t)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 0) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (*.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y t) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (*.f64 0 (/.f64 (*.f64 y t) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (-.f64 y z)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y t) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y t)) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y t) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y t)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) -1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 y (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) t) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (cbrt.f64 (*.f64 y t))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y t)) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) t)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) t)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y t)) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y t) -1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 0) (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) (*.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))) (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) (*.f64 0 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x t) (-.f64 y z) (*.f64 (-.f64 z y) (*.f64 y t))) (/.f64 1 (neg.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 x t) (*.f64 y t)) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 x t) (*.f64 y t)) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (+.f64 (*.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 t)) (*.f64 (/.f64 y (-.f64 y z)) (cbrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (+.f64 (*.f64 (/.f64 y (-.f64 y z)) (cbrt.f64 t)) (*.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 y t) (-.f64 z y) (*.f64 (-.f64 y z) (*.f64 x t))) (/.f64 1 (neg.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (fma.f64 x (-.f64 z y) (*.f64 (-.f64 y z) y))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 z y) (*.f64 (-.f64 y z) y)) t) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (neg.f64 (*.f64 y t)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))) (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (*.f64 y t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (-.f64 y z)) (*.f64 (-.f64 y z) (*.f64 y t))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (-.f64 z y)) (*.f64 (-.f64 z y) (neg.f64 (*.f64 y t)))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 y t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 y z) (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 z y) (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 z y) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y t)) (-.f64 z y)) (*.f64 (-.f64 z y) (*.f64 x t))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 y t) (-.f64 y z)) (*.f64 (-.f64 y z) (neg.f64 (*.f64 x t)))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 x t) (-.f64 y z) (*.f64 (-.f64 z y) (*.f64 y t)))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 y t) (-.f64 z y) (*.f64 (-.f64 y z) (*.f64 x t)))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x t) (-.f64 y z) (*.f64 (-.f64 z y) (*.f64 y t))) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y t) (-.f64 z y) (*.f64 (-.f64 y z) (*.f64 x t))) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (fma.f64 x (-.f64 y z) (*.f64 (-.f64 z y) y))) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (+.f64 (neg.f64 x) y)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 y z) (*.f64 (-.f64 z y) y)) t) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 x) y) t) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 y t) (-.f64 z y) (*.f64 (-.f64 y z) (*.f64 x t))) 1) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 x t) (-.f64 y z) (*.f64 (-.f64 z y) (*.f64 y t))) 1) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 x t) (-.f64 y z) (*.f64 (-.f64 z y) (*.f64 y t))) (-.f64 z y)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 y t) (-.f64 z y) (*.f64 (-.f64 y z) (*.f64 x t))) (-.f64 y z)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 y t)) (*.f64 x t)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y t) (neg.f64 (*.f64 x t))) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x t) (neg.f64 (*.f64 y t))) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 x t)) (*.f64 y t)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 y z) (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (-.f64 z y)) (*.f64 (-.f64 y z) (neg.f64 (*.f64 y t)))) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 z y) (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 z y) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 y t)) (-.f64 y z)) (*.f64 (-.f64 z y) (neg.f64 (*.f64 x t)))) (neg.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (*.f64 x t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (/.f64 (*.f64 x t) (cbrt.f64 (-.f64 z y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 y t) (cbrt.f64 (-.f64 y z))) (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (neg.f64 (*.f64 x t)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 z y)) t (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 x (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 y (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 y z)) t (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x t) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y t) (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 t (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 y (-.f64 y z))) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) t) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) (/.f64 1 (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (*.f64 y t) (-.f64 y z))) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y t) (-.f64 y z)) 1 (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 y (-.f64 y z)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (/.f64 (*.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (/.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 t (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 x t) (-.f64 z y))) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x t) (-.f64 z y)) 1 (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 x t) (-.f64 y z)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) t) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x t) (/.f64 1 (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 x (-.f64 z y))) (/.f64 (*.f64 y t) (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 y z)) 0) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 (/.f64 y (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 y z))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 0 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) y) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 y z) 2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 y z) 2)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3))))))"]],"rules":[["egg-rr",47],["egg-rr",94],["egg-rr",51],["egg-rr",51]],"time":44.55712890625,"type":"rewrite"},{"count":[[399,330]],"inputs":[["(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 2))) (/.f64 (*.f64 t x) (pow.f64 y 3))) (pow.f64 z 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 2))) (/.f64 (*.f64 t x) (pow.f64 y 3))) (pow.f64 z 2))) (+.f64 t (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 3))) (/.f64 (*.f64 t x) (pow.f64 y 4))))) (*.f64 -1 (/.f64 (*.f64 t x) y))))))","(/.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (*.f64 t x)) z)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) t) (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x)))) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) t) (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x)))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (*.f64 t x))) (*.f64 (pow.f64 y 4) t)) (pow.f64 z 4)))))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z))) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x))) (*.f64 -1 (*.f64 (pow.f64 y 3) t))) (pow.f64 z 3))))) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x))) (*.f64 -1 (*.f64 (pow.f64 y 3) t))) (pow.f64 z 3)))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 3))))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 4))) (/.f64 t (pow.f64 z 3))))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 3)))))))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 z x)) (*.f64 -1 (*.f64 t (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (*.f64 t (pow.f64 z 3)))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 z x)) (*.f64 -1 (*.f64 t (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (*.f64 t (*.f64 z x))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (*.f64 t (*.f64 z x))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(neg.f64 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3))) (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3)))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3)))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (/.f64 (+.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (+.f64 (*.f64 (*.f64 t x) (*.f64 z z)) (*.f64 z (*.f64 y (*.f64 t x))))) (pow.f64 z 3)))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(neg.f64 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3))) (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(*.f64 -1 (/.f64 (*.f64 t x) y))","(neg.f64 (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t x) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) y)) (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 t x) y)) (/.f64 (*.f64 t (*.f64 (*.f64 z z) x)) (pow.f64 y 3))) (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4))) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(neg.f64 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z)) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))) (/.f64 (*.f64 y t) z))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y)))) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y)))) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))","t","(+.f64 (/.f64 (*.f64 t z) y) t)","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (+.f64 (/.f64 (*.f64 t (pow.f64 z 2)) (pow.f64 y 2)) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 t z) y) (+.f64 t (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y)))) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3)))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(neg.f64 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z)) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))) (/.f64 (*.f64 y t) z))","(*.f64 -1 (/.f64 (*.f64 y t) z))","(neg.f64 (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 y t) z)) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))) (/.f64 (*.f64 (pow.f64 y 3) t) (pow.f64 z 3))) (/.f64 (*.f64 y t) z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) (-.f64 z y))","(+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))","(-.f64 t (/.f64 (*.f64 t x) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))","(-.f64 (-.f64 t (/.f64 (*.f64 t x) y)) (*.f64 (-.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 t y)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 2))) (/.f64 (*.f64 t x) (pow.f64 y 3))) (pow.f64 z 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))))","(-.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t x) y)) (*.f64 (-.f64 (/.f64 (*.f64 t x) (pow.f64 y 3)) (/.f64 t (*.f64 y y))) (*.f64 z z))) (*.f64 (-.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 t y)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t y)) (/.f64 (*.f64 t x) (pow.f64 y 2))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 2))) (/.f64 (*.f64 t x) (pow.f64 y 3))) (pow.f64 z 2))) (+.f64 t (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 3))) (/.f64 (*.f64 t x) (pow.f64 y 4))))) (*.f64 -1 (/.f64 (*.f64 t x) y))))))","(-.f64 (-.f64 (-.f64 (-.f64 t (*.f64 (pow.f64 z 3) (-.f64 (/.f64 (*.f64 t x) (pow.f64 y 4)) (/.f64 t (pow.f64 y 3))))) (/.f64 (*.f64 t x) y)) (*.f64 (-.f64 (/.f64 (*.f64 t x) (pow.f64 y 3)) (/.f64 t (*.f64 y y))) (*.f64 z z))) (*.f64 (-.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 t y)) z))","(/.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (*.f64 t x)) z)","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z))))","(-.f64 (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z) (/.f64 (fma.f64 (*.f64 y y) t (neg.f64 (*.f64 y (*.f64 t x)))) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) t) (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x)))) (pow.f64 z 3))))))","(-.f64 (+.f64 (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z) (/.f64 (fma.f64 (neg.f64 (pow.f64 y 3)) t (*.f64 (*.f64 y y) (*.f64 t x))) (pow.f64 z 3))) (/.f64 (fma.f64 (*.f64 y y) t (neg.f64 (*.f64 y (*.f64 t x)))) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (*.f64 -1 (*.f64 y (*.f64 t x)))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) t) (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x)))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (*.f64 t x))) (*.f64 (pow.f64 y 4) t)) (pow.f64 z 4)))))))","(+.f64 (-.f64 (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z) (/.f64 (fma.f64 (*.f64 y y) t (neg.f64 (*.f64 y (*.f64 t x)))) (*.f64 z z))) (-.f64 (/.f64 (fma.f64 (neg.f64 (pow.f64 y 3)) t (*.f64 (*.f64 y y) (*.f64 t x))) (pow.f64 z 3)) (/.f64 (-.f64 (*.f64 (pow.f64 y 4) t) (*.f64 (pow.f64 y 3) (*.f64 t x))) (pow.f64 z 4))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z))","(/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z))) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z) (-.f64 (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z) (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))))","(-.f64 (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x))) (*.f64 -1 (*.f64 (pow.f64 y 3) t))) (pow.f64 z 3))))) (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)))","(+.f64 (+.f64 (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z) (/.f64 (fma.f64 (neg.f64 (pow.f64 y 3)) t (*.f64 (*.f64 y y) (*.f64 t x))) (pow.f64 z 3))) (-.f64 (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z) (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 y t)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (*.f64 t x))) (*.f64 -1 (*.f64 (pow.f64 y 3) t))) (pow.f64 z 3)))))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))))","(-.f64 (+.f64 (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (/.f64 (/.f64 (*.f64 y (*.f64 t x)) z) z)) (/.f64 (*.f64 t (+.f64 x (neg.f64 y))) z)) (/.f64 (fma.f64 (neg.f64 (pow.f64 y 3)) t (*.f64 (*.f64 y y) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (*.f64 y y) t) (*.f64 z z)) (/.f64 (*.f64 (pow.f64 y 4) t) (pow.f64 z 4))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (/.f64 (*.f64 t x) z) z)) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 3))))))))","(+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (/.f64 (*.f64 t x) z) z)) y (*.f64 (neg.f64 (*.f64 y y)) (-.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t x) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 4))) (/.f64 t (pow.f64 z 3))))) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 3)))))))))","(-.f64 (+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (+.f64 (neg.f64 (/.f64 t z)) (/.f64 (/.f64 (*.f64 t x) z) z)) y (*.f64 (neg.f64 (*.f64 y y)) (-.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t x) (pow.f64 z 3)))))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 t (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 z x)) (*.f64 -1 (*.f64 t (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 t (-.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (/.f64 (fma.f64 t (*.f64 z x) (neg.f64 (*.f64 t (*.f64 z z)))) (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (*.f64 t (pow.f64 z 3)))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 t (*.f64 z x)) (*.f64 -1 (*.f64 t (pow.f64 z 2)))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 t (+.f64 (-.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (/.f64 (fma.f64 t (*.f64 z x) (neg.f64 (*.f64 t (*.f64 z z)))) (*.f64 y y))) (/.f64 (+.f64 (*.f64 (neg.f64 (*.f64 t (*.f64 z z))) x) (*.f64 t (pow.f64 z 3))) (pow.f64 y 3))))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 t (/.f64 (*.f64 t (-.f64 z x)) y))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (*.f64 t (*.f64 z x))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 t (-.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (/.f64 (fma.f64 t (*.f64 z x) (neg.f64 (*.f64 t (*.f64 z z)))) (*.f64 y y))))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (*.f64 t (*.f64 z x))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3))) (/.f64 (*.f64 t (pow.f64 z 3)) (pow.f64 y 3))))))","(+.f64 t (+.f64 (-.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (/.f64 (fma.f64 t (*.f64 z x) (neg.f64 (*.f64 t (*.f64 z z)))) (*.f64 y y))) (/.f64 (+.f64 (*.f64 (neg.f64 (*.f64 t (*.f64 z z))) x) (*.f64 t (pow.f64 z 3))) (pow.f64 y 3))))","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 (+.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y))) t)","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 z y)))) t))","(*.f64 (/.f64 (+.f64 x (neg.f64 y)) (-.f64 z y)) t)","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 3)) (pow.f64 (/.f64 y z) 2)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 3)) (pow.f64 (/.f64 y z) 2)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 3)) (pow.f64 (/.f64 y z) 2)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))"]],"time":638.2080078125,"type":"simplify"},{"compiler":[[7927,2291]],"time":51.9580078125,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z)))) t))","fresh",4.209100485502502],["(fma.f64 t (/.f64 y (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))","fresh",5.729248167906448],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","next",1.828520318938797],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 y t) (/.f64 1 (-.f64 y z))))","fresh",11.35917659976848],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) 3) t)","fresh",2.0581079654654273],["(+.f64 (*.f64 (*.f64 x t) (/.f64 1 (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",5.761161937443331],["(+.f64 (*.f64 x (/.f64 t (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",4.8724294366739835],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (/.f64 (*.f64 y t) (-.f64 y z)))","fresh",11.28495784976848]],"compiler":[[29,16],[18,10],[18,10],[21,13],[16,11],[21,13],[19,11],[19,11],[29,16],[18,10],[18,10],[21,13],[16,11],[21,13],[19,11],[19,11]],"count":[[336,8]],"kept":[{"done":[0,0],"fresh":[5,2],"new":[330,6],"picked":[1,0]}],"min-error":[0.00390625],"time":145.927001953125,"type":"prune"},{"compiler":[[48,16]],"locations":[["(/.f64 -1 (-.f64 y z))",0.00390625,true],["(/.f64 y (-.f64 y z))",0.00390625,false],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))",0.1171875,true],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)",1.7723398250667735,true]],"time":10.23291015625,"type":"localize"},{"count":[[3,108]],"series":[["(/.f64 -1 (-.f64 y z))","z","-inf",0.2080078125],["(/.f64 -1 (-.f64 y z))","z","inf",0.18115234375],["(/.f64 -1 (-.f64 y z))","z","0",0.213134765625],["(/.f64 -1 (-.f64 y z))","y","-inf",0.18798828125],["(/.f64 -1 (-.f64 y z))","y","inf",0.26806640625],["(/.f64 -1 (-.f64 y z))","y","0",0.216064453125],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","z","-inf",0.3310546875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","z","inf",0.345947265625],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","z","0",0.27294921875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","y","-inf",0.265869140625],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","y","inf",0.27099609375],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","y","0",0.286865234375],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","x","-inf",0.166015625],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","x","inf",0.19091796875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","x","0",0.1728515625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","t","-inf",0.31396484375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","t","inf",0.369140625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","t","0",0.873046875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","z","-inf",0.407958984375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","z","inf",0.47998046875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","z","0",0.5380859375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","y","-inf",0.35791015625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","y","inf",0.421142578125],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","y","0",0.47607421875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","x","-inf",0.445068359375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","x","inf",0.35498046875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","x","0",0.656982421875]],"time":9.676025390625,"type":"series"},{"count":[[3,149]],"inputs":[["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","(fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))","(/.f64 -1 (-.f64 y z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 0) (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) (*.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t x) (-.f64 z y)) 1) (*.f64 (/.f64 (*.f64 t y) (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 t y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) (*.f64 0 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t y) (-.f64 y z)) (/.f64 (*.f64 t x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)) t) (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 2)) (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)) (*.f64 t (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 t) (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 t (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 x (-.f64 z y)) (/.f64 (*.f64 t y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 z y)) t (/.f64 (*.f64 t y) (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 0) (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) (*.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) (*.f64 0 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (+.f64 (neg.f64 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (+.f64 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (+.f64 y (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (+.f64 (neg.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 y (neg.f64 x)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (neg.f64 y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 z y) (/.f64 y (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 z y) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 y z)) (*.f64 (-.f64 z y) y)) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 y z) (/.f64 y (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 z y)) (*.f64 (-.f64 y z) (neg.f64 y))) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 z y)) (*.f64 (-.f64 y z) x)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 y z)) (*.f64 (-.f64 z y) (neg.f64 x))) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 z y)) (*.f64 (-.f64 z y) (neg.f64 y))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 (-.f64 y z) y)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 y z)) (*.f64 (-.f64 y z) (neg.f64 x))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 z y)) (*.f64 (-.f64 z y) x)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 x (-.f64 y z)) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 y) x) (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y z)) x (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 y z)) y (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 z y)) 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 y z)) 1 (/.f64 x (-.f64 z y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 y z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 y z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z)))) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z)))) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2)) (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2)) (/.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 y z) (cbrt.f64 (/.f64 1 (-.f64 y z))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 z y)) (-.f64 z y)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) -1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 y z)) (-.f64 y z)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 z y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 y z)))))))"]],"rules":[["egg-rr",44],["egg-rr",65],["egg-rr",40]],"time":32.81787109375,"type":"rewrite"},{"count":[[257,252]],"inputs":[["(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z)))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2))))) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2))))) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z)))))))","t","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) t)","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) t))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) (+.f64 t (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (pow.f64 z 3)))) (pow.f64 y 3)))))","t","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) t)","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) t))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) t) (pow.f64 y 3))))))","(*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (*.f64 t (pow.f64 z 3))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))))","(/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z)","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 y x) (pow.f64 y 2)) t) (pow.f64 z 2)) (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z) (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 y 4))) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z) (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)))))","(*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z))","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 y x) (pow.f64 y 2)) t) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 y 4))) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 z 3))))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 y (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 x z)","(+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x z) y)))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(/.f64 (+.f64 (*.f64 -1 y) x) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 x z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3)))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z)))))","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (*.f64 y t) (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2))))) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))))))","(+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (*.f64 y y) (*.f64 t (-.f64 (*.f64 x (pow.f64 z -3)) (pow.f64 z -2))) (*.f64 (*.f64 y t) (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z)))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2))))) (*.f64 y (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z)))))))","(+.f64 (/.f64 (*.f64 t x) z) (fma.f64 (pow.f64 y 3) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 4)) (pow.f64 z -3))) (fma.f64 (*.f64 y y) (*.f64 t (-.f64 (*.f64 x (pow.f64 z -3)) (pow.f64 z -2))) (*.f64 (*.f64 y t) (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z))))))","t","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) t)","(+.f64 (/.f64 (*.f64 (-.f64 z x) t) y) t)","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) t))","(+.f64 (+.f64 (/.f64 (*.f64 t (neg.f64 (*.f64 z (-.f64 x z)))) (*.f64 y y)) t) (/.f64 (*.f64 (-.f64 z x) t) y))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) t) y) (+.f64 t (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (pow.f64 z 3)))) (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z x) t) y) t) (+.f64 (*.f64 (*.f64 t (*.f64 (*.f64 z z) (-.f64 z x))) (pow.f64 y -3)) (/.f64 (*.f64 t (neg.f64 (*.f64 z (-.f64 x z)))) (*.f64 y y))))","t","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) t)","(+.f64 (/.f64 (*.f64 (-.f64 z x) t) y) t)","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) t))","(+.f64 (+.f64 (/.f64 (*.f64 t (neg.f64 (*.f64 z (-.f64 x z)))) (*.f64 y y)) t) (/.f64 (*.f64 (-.f64 z x) t) y))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x z)) y)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) t) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z x) t) y) t) (+.f64 (*.f64 (*.f64 t (*.f64 (*.f64 z z) (-.f64 z x))) (pow.f64 y -3)) (/.f64 (*.f64 t (neg.f64 (*.f64 z (-.f64 x z)))) (*.f64 y y))))","(*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))","(*.f64 t (-.f64 1 (/.f64 x y)))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))","(*.f64 t (-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 t (-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1)) (*.f64 (-.f64 (pow.f64 y -2) (*.f64 x (pow.f64 y -3))) (*.f64 t (*.f64 z z))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (*.f64 t (pow.f64 z 3))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))))","(+.f64 (+.f64 (*.f64 t (-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1)) (*.f64 (-.f64 (pow.f64 y -2) (*.f64 x (pow.f64 y -3))) (*.f64 t (*.f64 z z)))) (*.f64 (-.f64 (pow.f64 y -3) (/.f64 x (pow.f64 y 4))) (*.f64 t (pow.f64 z 3))))","(/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z)","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 y x) (pow.f64 y 2)) t) (pow.f64 z 2)) (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z))","(+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z)))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z) (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2))))","(+.f64 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z))) (*.f64 (*.f64 t (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z -3)))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 y 4))) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -1 y) x)) z) (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)))))","(+.f64 (+.f64 (*.f64 (*.f64 t (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z -3)) (/.f64 (*.f64 t (fma.f64 (pow.f64 y 3) x (neg.f64 (pow.f64 y 4)))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z))))","(*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 y x) (pow.f64 y 2)) t) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)))","(+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z)))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 z 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z))) (*.f64 (*.f64 t (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z -3)))","(+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 y 4))) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (pow.f64 y 2))) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 y (*.f64 -1 x))) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 z 3))))))","(+.f64 (+.f64 (*.f64 (*.f64 t (*.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 z -3)) (/.f64 (*.f64 t (fma.f64 (pow.f64 y 3) x (neg.f64 (pow.f64 y 4)))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (*.f64 y (-.f64 x y)) t) (*.f64 z z))))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 t (+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z)))))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(/.f64 y (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(/.f64 x (-.f64 z y))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(/.f64 x (-.f64 z y))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(+.f64 (/.f64 y (-.f64 y z)) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 (-.f64 y x) (-.f64 y z))","(/.f64 x z)","(+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))","(fma.f64 y (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z)) (/.f64 x z))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z)))","(fma.f64 (*.f64 y y) (-.f64 (*.f64 x (pow.f64 z -3)) (pow.f64 z -2)) (fma.f64 y (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z)) (/.f64 x z)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 y (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 1 z))) (/.f64 x z))))","(fma.f64 (pow.f64 y 3) (-.f64 (/.f64 x (pow.f64 z 4)) (pow.f64 z -3)) (fma.f64 (*.f64 y y) (-.f64 (*.f64 x (pow.f64 z -3)) (pow.f64 z -2)) (fma.f64 y (+.f64 (/.f64 (/.f64 x z) z) (/.f64 -1 z)) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (*.f64 z x) (*.f64 y y))) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(+.f64 (+.f64 (-.f64 (-.f64 1 (/.f64 (*.f64 z x) (*.f64 y y))) (/.f64 x y)) (*.f64 (*.f64 z z) (*.f64 (neg.f64 x) (pow.f64 y -3)))) (+.f64 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)) (pow.f64 (/.f64 z y) 3)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x z) y)))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) (+.f64 1 (pow.f64 (/.f64 z y) 2)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 z 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (pow.f64 (/.f64 z y) 2) (+.f64 1 (+.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) (*.f64 (*.f64 (*.f64 z z) (-.f64 z x)) (pow.f64 y -3)))))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(-.f64 1 (/.f64 x y))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1)","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1) (*.f64 (*.f64 z z) (-.f64 (pow.f64 y -2) (*.f64 x (pow.f64 y -3)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (+.f64 (-.f64 (-.f64 (/.f64 (-.f64 z x) y) (/.f64 (*.f64 z x) (*.f64 y y))) -1) (*.f64 (*.f64 z z) (-.f64 (pow.f64 y -2) (*.f64 x (pow.f64 y -3))))) (*.f64 (-.f64 (pow.f64 y -3) (/.f64 x (pow.f64 y 4))) (pow.f64 z 3)))","(/.f64 (+.f64 (*.f64 -1 y) x) z)","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 x z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 (-.f64 x y) z)) (pow.f64 (/.f64 y z) 2))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 (-.f64 x y) z)) (*.f64 (*.f64 (*.f64 y y) x) (pow.f64 z -3))) (+.f64 (pow.f64 (/.f64 y z) 3) (pow.f64 (/.f64 y z) 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (-.f64 (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 y y) x) (pow.f64 z -3))) (/.f64 (-.f64 x y) z)) (+.f64 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 3) (pow.f64 (/.f64 y z) 2)))))","(*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 (-.f64 x y) z)) (pow.f64 (/.f64 y z) 2))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3))))) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 (-.f64 x y) z)) (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3))) (pow.f64 (/.f64 y z) 2))","(-.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 y (*.f64 -1 x)) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 z 3)))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (+.f64 (+.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 (-.f64 x y) z)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4))) (*.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3))) (+.f64 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (pow.f64 (/.f64 y z) 2)))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (/.f64 y z) z) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 (neg.f64 (*.f64 z z)) (pow.f64 y -3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (+.f64 (*.f64 (*.f64 z z) (pow.f64 y -3)) (/.f64 z (*.f64 y y)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 (neg.f64 (*.f64 z z)) (pow.f64 y -3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (+.f64 (*.f64 (*.f64 z z) (pow.f64 y -3)) (/.f64 z (*.f64 y y)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 (neg.f64 (*.f64 z z)) (pow.f64 y -3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (+.f64 (*.f64 (*.f64 z z) (pow.f64 y -3)) (/.f64 z (*.f64 y y)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (/.f64 y z) z) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (/.f64 y z) z) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 y z) z) (*.f64 (*.f64 y y) (pow.f64 z -3))))"]],"time":434.203125,"type":"simplify"},{"compiler":[[6793,2784]],"time":58.39794921875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z)))) t))","fresh",4.209100485502502],["(fma.f64 t (/.f64 y (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))","fresh",5.729248167906448],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","next",1.911215338475681],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 y t) (/.f64 1 (-.f64 y z))))","fresh",11.35917659976848],["(+.f64 (*.f64 (*.f64 x t) (/.f64 1 (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",5.761161937443331],["(+.f64 (*.f64 x (/.f64 t (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",4.8724294366739835],["(*.f64 (fma.f64 x (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) 3) (/.f64 y (-.f64 y z))) t)","fresh",2.023251776391406],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (/.f64 (*.f64 y t) (-.f64 y z)))","fresh",11.28495784976848]],"compiler":[[29,16],[18,10],[21,13],[21,13],[21,13],[19,11],[21,13],[19,11],[29,16],[18,10],[21,13],[21,13],[21,13],[19,11],[21,13],[19,11]],"count":[[321,8]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[313,2],"picked":[1,0]}],"min-error":[0.00390625],"time":142.903076171875,"type":"prune"},{"compiler":[[69,24]],"locations":[["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))",0.1171875,true],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)",0.27675634768442015,true],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)",1.7723398250667735,true],["(cbrt.f64 (/.f64 y (-.f64 y z)))",9.657117959673133,true]],"time":11.81884765625,"type":"localize"},{"count":[[4,108]],"series":[["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","z","-inf",0.203857421875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","z","inf",0.2080078125],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","z","0",0.2099609375],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","y","-inf",0.60498046875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","y","inf",0.677001953125],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","y","0",0.244873046875],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","x","-inf",0.170166015625],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","x","inf",0.171142578125],["(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))","x","0",0.198974609375],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","z","-inf",1.381103515625],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","z","inf",1.81201171875],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","z","0",0.18115234375],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","y","-inf",0.560791015625],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","y","inf",3.420166015625],["(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","y","0",1.298828125],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","t","-inf",0.35693359375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","t","inf",0.407958984375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","t","0",2.1640625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","z","-inf",0.276123046875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","z","inf",0.27490234375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","z","0",0.466064453125],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","y","-inf",1.159912109375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","y","inf",2.041015625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","y","0",0.2880859375],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","x","-inf",0.2978515625],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","x","inf",0.319091796875],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","x","0",1.130859375],["(cbrt.f64 (/.f64 y (-.f64 y z)))","z","-inf",0.468017578125],["(cbrt.f64 (/.f64 y (-.f64 y z)))","z","inf",0.6689453125],["(cbrt.f64 (/.f64 y (-.f64 y z)))","z","0",0.322998046875],["(cbrt.f64 (/.f64 y (-.f64 y z)))","y","-inf",0.474853515625],["(cbrt.f64 (/.f64 y (-.f64 y z)))","y","inf",0.572021484375],["(cbrt.f64 (/.f64 y (-.f64 y z)))","y","0",0.861083984375]],"time":24.49609375,"type":"series"},{"count":[[4,216]],"inputs":[["(cbrt.f64 (/.f64 y (-.f64 y z)))","(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","(pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)","(fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 0) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (*.f64 0 (cbrt.f64 (/.f64 y (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (pow.f64 (-.f64 y z) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y z) -1/3) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 y)) (neg.f64 (pow.f64 (-.f64 y z) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -1/3)) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (/.f64 (pow.f64 y 2/3) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) 1) (*.f64 (cbrt.f64 (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) 1) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 y (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 0) (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) (*.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) (*.f64 0 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (/.f64 (*.f64 t y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t x) (-.f64 z y)) 1) (*.f64 (/.f64 (*.f64 t y) (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t y) (-.f64 y z)) (/.f64 (*.f64 t x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (*.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3) t) (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 2/3) (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))) (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3) (*.f64 t (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 t) (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 t (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 x (-.f64 z y)) (/.f64 (*.f64 t y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 z y)) t (/.f64 (*.f64 t y) (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 y z)) 0) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 (/.f64 y (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 y z))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 0 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y z) -1/3) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 2/3) (-.f64 y z)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (pow.f64 (-.f64 y z) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 y 2/3)) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 y z) -1/3) y) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 (pow.f64 (-.f64 y z) -1/3))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 2/3) (cbrt.f64 (/.f64 y (-.f64 y z)))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 y z))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z))) (cbrt.f64 y)) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z)))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z)))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 y z)) y))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 y) (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 y (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 0) (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) (*.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) (*.f64 0 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (+.f64 y (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (+.f64 (neg.f64 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (+.f64 (neg.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (+.f64 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 y (neg.f64 x)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (-.f64 y z)) (*.f64 (cbrt.f64 (-.f64 y z)) (neg.f64 x))) (*.f64 (cbrt.f64 (-.f64 y z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (-.f64 z y)) (*.f64 (cbrt.f64 (-.f64 y z)) x)) (*.f64 (cbrt.f64 (-.f64 y z)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (-.f64 y z)) (*.f64 (pow.f64 (-.f64 y z) 2/3) (neg.f64 x))) (*.f64 (pow.f64 (-.f64 y z) 2/3) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (-.f64 z y)) (*.f64 (pow.f64 (-.f64 y z) 2/3) x)) (*.f64 (pow.f64 (-.f64 y z) 2/3) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 z y)) (*.f64 (-.f64 y z) x)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 y z)) (*.f64 (-.f64 z y) (neg.f64 x))) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (pow.f64 (-.f64 y z) 2/3)) (*.f64 (-.f64 z y) (/.f64 y (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 y z)) (*.f64 (-.f64 z y) y)) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (-.f64 y z))) (*.f64 (-.f64 z y) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (*.f64 (-.f64 z y) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 y z) 2/3)) (*.f64 (-.f64 y z) (/.f64 y (cbrt.f64 (-.f64 y z))))) (*.f64 (-.f64 y z) (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (-.f64 y z))) (*.f64 (-.f64 y z) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (*.f64 (-.f64 y z) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 z y)) (*.f64 (-.f64 y z) (neg.f64 y))) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (neg.f64 y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 y) x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 y z)) (*.f64 (-.f64 y z) (neg.f64 x))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 z y)) (*.f64 (-.f64 z y) x)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 z y)) (*.f64 (-.f64 z y) (neg.f64 y))) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 (-.f64 y z) y)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 x (-.f64 y z)) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 x) y) (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y z)) x (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 y z) -1/3) (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 y (-.f64 y z))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 y z)) y (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 z y)) 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 y z)) 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))))"]],"rules":[["egg-rr",71],["egg-rr",68],["egg-rr",40],["egg-rr",37]],"time":39.27197265625,"type":"rewrite"},{"count":[[324,316]],"inputs":[["1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 14/81 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","t","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) t)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) t))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 t (/.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z)))))))) t) (pow.f64 y 3)))))","t","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) t)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) t))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 (pow.f64 z 2) x) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z))))))))) (pow.f64 y 3))) t)))","(*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (*.f64 t (pow.f64 z 3))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","1","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/3 (/.f64 z y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3)))))))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z))))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","1","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1 (/.f64 x y)))))","(+.f64 1 (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/3 (/.f64 z y))))))))))","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))))))))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 (pow.f64 z 2) x) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z)))))))) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))))))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 1/3 z) y))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (*.f64 -1/3 (+.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (pow.f64 y -3)) (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 1/3 z) y))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))","(fma.f64 1/3 (*.f64 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (pow.f64 y -3)) (+.f64 1 (fma.f64 1/3 (/.f64 z y) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y)))))","1","(+.f64 1 (*.f64 1/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 1/3 z) y))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (/.f64 (*.f64 2/9 (*.f64 z z)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 14/81 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 (*.f64 14/81 (pow.f64 z 3)) (pow.f64 y 3)))))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z)))","(/.f64 (*.f64 y t) (-.f64 y z))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(neg.f64 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z)))","(neg.f64 (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) (-.f64 y z))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 y z)) (neg.f64 (/.f64 (*.f64 t x) (-.f64 y z))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))))","t","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) t)","(+.f64 (/.f64 (*.f64 (fma.f64 2/3 z (fma.f64 1/3 z (neg.f64 x))) t) y) t)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) t))","(+.f64 (/.f64 (*.f64 (fma.f64 2/3 z (fma.f64 1/3 z (neg.f64 x))) t) y) (+.f64 (*.f64 (*.f64 (fma.f64 -1/3 (*.f64 (*.f64 z z) -2/3) (fma.f64 1/9 (*.f64 z z) (fma.f64 2/9 (*.f64 z z) (+.f64 (neg.f64 (*.f64 z x)) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3)))))) t) (pow.f64 y -2)) t))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 z) (+.f64 (*.f64 1/3 z) (*.f64 -1 x))) t) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 t (/.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z)))))))) t) (pow.f64 y 3)))))","(+.f64 (/.f64 (*.f64 (fma.f64 2/3 z (fma.f64 1/3 z (neg.f64 x))) t) y) (+.f64 (*.f64 (*.f64 (fma.f64 -1/3 (*.f64 (*.f64 z z) -2/3) (fma.f64 1/9 (*.f64 z z) (fma.f64 2/9 (*.f64 z z) (+.f64 (neg.f64 (*.f64 z x)) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3)))))) t) (pow.f64 y -2)) (+.f64 t (*.f64 (*.f64 (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (+.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (fma.f64 -1/3 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -2/3 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (*.f64 1/3 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z)))))))) t) (pow.f64 y -3)))))","t","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) t)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 z -1) x) t) y)) t)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) t))","(+.f64 (*.f64 (*.f64 (fma.f64 -1/3 (*.f64 (*.f64 z z) -2/3) (fma.f64 1/9 (*.f64 z z) (fma.f64 2/9 (*.f64 z z) (+.f64 (neg.f64 (*.f64 z x)) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3)))))) t) (pow.f64 y -2)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 z -1) x) t) y)) t))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 1/9 (pow.f64 z 2)) (+.f64 (*.f64 2/9 (pow.f64 z 2)) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) t) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) t) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 (pow.f64 z 2) x) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z))))))))) (pow.f64 y 3))) t)))","(+.f64 (*.f64 (*.f64 (fma.f64 -1/3 (*.f64 (*.f64 z z) -2/3) (fma.f64 1/9 (*.f64 z z) (fma.f64 2/9 (*.f64 z z) (+.f64 (neg.f64 (*.f64 z x)) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3)))))) t) (pow.f64 y -2)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 z -1) x) t) y)) (+.f64 (neg.f64 (*.f64 (*.f64 t (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 (*.f64 z z) x (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 -2/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z))))))))) (pow.f64 y -3))) t)))","(*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))","(*.f64 t (+.f64 1 (neg.f64 (/.f64 x y))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))","(*.f64 t (fma.f64 (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y)))) z (+.f64 1 (neg.f64 (/.f64 x y)))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y))))))","(fma.f64 t (*.f64 z (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y))))) (fma.f64 (+.f64 (pow.f64 y -2) (/.f64 (neg.f64 x) (pow.f64 y 3))) (*.f64 t (*.f64 z z)) (*.f64 t (+.f64 1 (neg.f64 (/.f64 x y))))))","(+.f64 (*.f64 t (*.f64 z (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (*.f64 t (pow.f64 z 3))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 x (pow.f64 y 3)))) (*.f64 t (pow.f64 z 2))) (*.f64 t (+.f64 1 (*.f64 -1 (/.f64 x y)))))))","(fma.f64 t (*.f64 z (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y))))) (fma.f64 (+.f64 (/.f64 (neg.f64 x) (pow.f64 y 4)) (pow.f64 y -3)) (*.f64 t (pow.f64 z 3)) (fma.f64 (+.f64 (pow.f64 y -2) (/.f64 (neg.f64 x) (pow.f64 y 3))) (*.f64 t (*.f64 z z)) (*.f64 t (+.f64 1 (neg.f64 (/.f64 x y)))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) (*.f64 t x)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 y (*.f64 t x)) (*.f64 z z)))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z)))) t)","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","(*.f64 t (+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))))","(*.f64 t (+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z))))","1","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/3 (/.f64 z y))))","(+.f64 1 (*.f64 (/.f64 z y) 1))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","(+.f64 1 (fma.f64 1/3 (/.f64 z y) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 2/3 (/.f64 z y) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))))))","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3)))))))))))))))","(+.f64 1 (fma.f64 -2/3 (*.f64 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (pow.f64 y -3)) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (pow.f64 y -3)) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/3 (*.f64 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z) (pow.f64 y -3)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (pow.f64 y -3)) (+.f64 (*.f64 (/.f64 z y) 1) (fma.f64 -1/3 (*.f64 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (pow.f64 y -3)) (/.f64 (*.f64 -1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z)) (pow.f64 y 3)))))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 z -1) y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))))","(+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 z -1) y)) 1) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (*.f64 -1/3 z)) y)) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z))))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","(+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 z -1) y)) 1) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (+.f64 (neg.f64 (*.f64 (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 -2/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z))))))) (pow.f64 y -3))) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y)))))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 (+.f64 1 (/.f64 z y)) (+.f64 (*.f64 (pow.f64 z 3) (pow.f64 y -3)) (/.f64 (*.f64 z z) (*.f64 y y))))","(*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z)))","(/.f64 y (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 x (-.f64 y z))) (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(neg.f64 (/.f64 x (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(*.f64 -1 (/.f64 x (-.f64 y z)))","(neg.f64 (/.f64 x (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 y z))) (*.f64 -1 (/.f64 x (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 x (-.f64 y z))) (/.f64 y (-.f64 y z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z))))","1","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1 (/.f64 x y)))))","(+.f64 1 (+.f64 (*.f64 (/.f64 z y) 1) (neg.f64 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 z y)) (*.f64 2/3 (/.f64 z y))))))))))","(+.f64 1 (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 x y)) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (*.f64 (/.f64 z y) 1))))))))","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 z 3)) (+.f64 (*.f64 1/27 (pow.f64 z 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (*.f64 -1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2)))))))) (pow.f64 y 3))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 3))))))))))))))))))","(+.f64 1 (fma.f64 -2/3 (*.f64 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (pow.f64 y -3)) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (pow.f64 y -3)) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/3 (*.f64 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z) (pow.f64 y -3)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (+.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (+.f64 (neg.f64 (/.f64 x y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 1/3 (/.f64 z y) (+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (pow.f64 y -3)) (fma.f64 2/3 (/.f64 z y) (fma.f64 -1/3 (*.f64 (+.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/27 (pow.f64 z 3) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 (*.f64 (*.f64 z z) -2/3) z))))) (pow.f64 y -3)) (/.f64 (*.f64 -1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z)) (pow.f64 y 3)))))))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)))","(+.f64 1 (neg.f64 (/.f64 (+.f64 (*.f64 z -1) x) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 (+.f64 (*.f64 z -1) x) y)) (+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 z) (+.f64 (*.f64 -1/3 z) x)) y)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 2/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 (pow.f64 z 2) x) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) z)) (+.f64 (*.f64 -1/27 (pow.f64 z 3)) (+.f64 (pow.f64 z 3) (*.f64 1/3 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))))))) (+.f64 (*.f64 1/9 (*.f64 z (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 z 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))))) z)))))))) (pow.f64 y 3))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 y 2))))))))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 (+.f64 (*.f64 z -1) x) y))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 z z) -2/3) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (+.f64 (neg.f64 (*.f64 (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 (*.f64 z z) x (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 -2/3 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (fma.f64 -1/27 (pow.f64 z 3) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 1/3 z) (*.f64 (*.f64 z z) -2/3))))) (fma.f64 1/9 (*.f64 (*.f64 (*.f64 z z) -2/3) z) (*.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 z z) (*.f64 -2/3 (*.f64 (*.f64 z z) -2/3))) z)))))))) (pow.f64 y -3))) (fma.f64 2/9 (/.f64 (*.f64 z z) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 z z) (*.f64 y y)) (/.f64 (*.f64 -1/3 (*.f64 (*.f64 z z) -2/3)) (*.f64 y y))))))))","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (neg.f64 (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(fma.f64 (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y)))) z (+.f64 1 (neg.f64 (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y)))) z (+.f64 1 (fma.f64 (*.f64 z z) (+.f64 (pow.f64 y -2) (/.f64 (neg.f64 x) (pow.f64 y 3))) (neg.f64 (/.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) z) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3)) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y))))))","(fma.f64 (+.f64 (/.f64 1 y) (neg.f64 (/.f64 x (*.f64 y y)))) z (+.f64 1 (fma.f64 (+.f64 (/.f64 (neg.f64 x) (pow.f64 y 4)) (pow.f64 y -3)) (pow.f64 z 3) (fma.f64 (*.f64 z z) (+.f64 (pow.f64 y -2) (/.f64 (neg.f64 x) (pow.f64 y 3))) (neg.f64 (/.f64 x y))))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (*.f64 z z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 z 3)) (/.f64 x z))))"]],"time":339.553955078125,"type":"simplify"},{"compiler":[[9455,4686]],"time":84.2919921875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z)))) t))","fresh",4.209100485502502],["(fma.f64 t (/.f64 y (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))","fresh",5.729248167906448],["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","done",1.911215338475681],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 y t) (/.f64 1 (-.f64 y z))))","fresh",11.35917659976848],["(+.f64 (*.f64 (*.f64 x t) (/.f64 1 (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",5.761161937443331],["(+.f64 (*.f64 x (/.f64 t (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","fresh",4.8724294366739835],["(*.f64 (fma.f64 x (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) 3) (/.f64 y (-.f64 y z))) t)","fresh",2.023251776391406],["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (/.f64 (*.f64 y t) (-.f64 y z)))","fresh",11.28495784976848]],"compiler":[[29,16],[18,10],[21,13],[21,13],[21,13],[19,11],[21,13],[19,11]],"count":[[324,8]],"kept":[{"done":[0,0],"fresh":[7,7],"new":[316,0],"picked":[1,1]}],"min-error":[0.00390625],"time":129.774169921875,"type":"prune"},{"accuracy":[0.5834990882366679],"baseline":[1.808989068938797],"branch":[["x",1.808989068938797,1],["y",0.5834990882366679,3],["z",1.808989068938797,1],["t",1.8089890689387969,1],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",0.62109375,3],["(/.f64 (-.f64 x y) (-.f64 z y))",0.62109375,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[11,7],[237,74]],"count":[[16,3]],"inputs":[["(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)) t)","(*.f64 (fma.f64 x (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) 3) (/.f64 y (-.f64 y z))) t)","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z)))) t))","(fma.f64 t (/.f64 y (-.f64 y z)) (/.f64 (*.f64 x t) (-.f64 z y)))","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (*.f64 y t) (/.f64 1 (-.f64 y z))))","(+.f64 (*.f64 (*.f64 x t) (/.f64 1 (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","(+.f64 (*.f64 x (/.f64 t (-.f64 z y))) (*.f64 (/.f64 y (-.f64 y z)) t))","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (/.f64 (*.f64 y t) (-.f64 y z)))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) 3) t)","(*.f64 (*.f64 (-.f64 x y) t) (/.f64 -1 (-.f64 y z)))","(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","(/.f64 (*.f64 t (-.f64 y x)) (-.f64 y z))","(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)"]],"link":["."],"name":["Numeric.Signal.Multichannel:$cput from hsignal-0.2.7.1"],"oracle":[27.992076346150178],"outputs":[["(+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t))","(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))","(*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)"]],"time":65.75,"times":[["x",5.7509765625],["y",17.215087890625],["z",5.756103515625],["t",5.780029296875],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",14.532958984375],["(/.f64 (-.f64 x y) (-.f64 z y))",13.112060546875]],"type":"regimes"},{"bstep":[[3.994923810701523e-47,1.3834344300876922e-40,9.33984375],[2.3001794047246752e-239,3.117328841662568e-231,5.432861328125]],"compiler":[[14,9],[20,12],[15,10],[5,4]],"method":["binary-search","binary-search"],"time":14.93994140625,"type":"bsearch"},{"compiler":[[50,24]],"inputs":[["(if (<=.f64 y 357986298980937/3579862989809370150552347991709354811340217396521331566180181212788883000669113019918160533228078546928669938652374965009299607594634172087555628255195572452564109288497401512783350157684872347030630001028968155934491319200842197951919848388309286912) (+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t)) (if (<=.f64 y 2054270417706361/51422017416287688817342786954917203280710495801049370729644032) (*.f64 (-.f64 x y) (/.f64 t (-.f64 z y))) (*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y 357986298980937/3579862989809370150552347991709354811340217396521331566180181212788883000669113019918160533228078546928669938652374965009299607594634172087555628255195572452564109288497401512783350157684872347030630001028968155934491319200842197951919848388309286912) (+.f64 (*.f64 (/.f64 x (-.f64 z y)) t) (*.f64 (/.f64 y (-.f64 y z)) t)) (if (<=.f64 y 2054270417706361/51422017416287688817342786954917203280710495801049370729644032) (*.f64 (-.f64 x y) (/.f64 t (-.f64 z y))) (*.f64 (fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z))) t)))","(if (<=.f64 y 357986298980937/3579862989809370150552347991709354811340217396521331566180181212788883000669113019918160533228078546928669938652374965009299607594634172087555628255195572452564109288497401512783350157684872347030630001028968155934491319200842197951919848388309286912) (/.f64 (*.f64 (-.f64 x y) t) (-.f64 z y)) (if (<=.f64 y 2054270417706361/51422017416287688817342786954917203280710495801049370729644032) (/.f64 (*.f64 (-.f64 x y) t) (-.f64 z y)) (/.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))))"]],"stop":[["fuel",1]],"time":25.052978515625,"type":"simplify"},{"time":0.007080078125,"type":"soundness"},{"compiler":[[50,24]],"remove-preprocessing":[[]],"time":13.052001953125,"type":"end"}]