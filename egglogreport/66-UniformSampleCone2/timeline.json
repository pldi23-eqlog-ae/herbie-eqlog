[{"compiler":[[118,85]],"method":["search"],"sampling":[[1,1.97452521695127e-6,0.0,0.999998025474783],[0,0.0,1.97452521695127e-6,0.999998025474783]],"time":0.510986328125,"type":"analyze"},{"outcomes":[["body",256,"valid",1628.76806640625,8256]],"time":1636.507080078125,"type":"sample"},{"compiler":[[71,50]],"inputs":[["0","1","2","3","4","5"],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) zi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) xi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi))))) ux) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) uy) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) (*.f64 (*.f64 (-.f64 1 ux) xi) ux))))) maxCos) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) (*.f64 (*.f64 (-.f64 1 ux) xi) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) zi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) yi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi))))) ux)) (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) uy)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) (*.f64 (*.f64 (-.f64 1 ux) yi) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) (*.f64 (*.f64 (-.f64 1 ux) yi) ux))))) maxCos)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) ux))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) uy))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) (*.f64 (*.f64 (-.f64 1 ux) zi) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) (*.f64 (*.f64 (-.f64 1 ux) zi) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) maxCos))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) (*.f64 (*.f64 (-.f64 1 ux) uy) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) (*.f64 (*.f64 (-.f64 1 ux) uy) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) zi))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5"],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) xi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) zi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) xi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) zi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) xi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi))))) ux) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) 2)))) ux (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 xi) maxCos) xi) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) uy) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) uy (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 xi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) (*.f64 (*.f64 (-.f64 1 ux) xi) ux))))) maxCos) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) (*.f64 (*.f64 (-.f64 1 ux) xi) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) 2)))) maxCos (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) xi) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) zi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) yi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) zi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) yi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi))))) ux)) (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) 2)))) ux)) (*.f64 (*.f64 (*.f64 (-.f64 1 yi) maxCos) yi) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) uy)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 yi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) uy)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) (*.f64 (*.f64 (-.f64 1 ux) yi) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) (*.f64 (*.f64 (-.f64 1 ux) yi) ux))))) maxCos)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) 2)))) maxCos)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) yi) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) ux))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 zi) maxCos) zi) ux))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) uy))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 zi 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) uy))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) (*.f64 (*.f64 (-.f64 1 ux) zi) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) (*.f64 (*.f64 (-.f64 1 ux) zi) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) maxCos))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) zi) ux) maxCos))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 uy) maxCos) uy) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 maxCos) ux) maxCos) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) (*.f64 (*.f64 (-.f64 1 ux) uy) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) (*.f64 (*.f64 (-.f64 1 ux) uy) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) zi))","(+.f64 (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) 2)))) xi (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) 2)))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) uy) ux) zi))"]],"symmetry":[[]],"time":123.951904296875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(fma.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (+.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi) (*.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) xi))))"]],"time":26.885986328125,"type":"simplify"},{"compiler":[[110,72]],"time":1.04296875,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","next",0.3317375488422101]],"compiler":[[71,50],[71,50]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.3317375488422101],"time":1.783203125,"type":"prune"},{"compiler":[[333,218]],"locations":[["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))",0.25619125976844204,true],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)",0.28515625,true],["(*.f64 (*.f64 uy 2) (PI.f64))",0.29296875,true],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",0.3111788206944218,true]],"time":74.678955078125,"type":"localize"},{"count":[[4,80]],"series":[["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","maxCos","-inf",0.18310546875],["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","maxCos","inf",0.403076171875],["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","maxCos","0",0.60205078125],["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","ux","-inf",0.302978515625],["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","ux","inf",0.35302734375],["(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))","ux","0",0.329833984375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","-inf",0.416015625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","inf",0.47802734375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","0",2.171875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","-inf",0.509033203125],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","inf",1.197021484375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","0",0.81494140625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","-inf",1.40380859375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","inf",0.910888671875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","0",0.705078125],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","-inf",0.4921875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","inf",1.40087890625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","0",1.097900390625],["(*.f64 (*.f64 uy 2) (PI.f64))","uy","-inf",0.3818359375],["(*.f64 (*.f64 uy 2) (PI.f64))","uy","inf",0.416015625],["(*.f64 (*.f64 uy 2) (PI.f64))","uy","0",0.43896484375],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))","uy","-inf",0.212890625],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))","uy","inf",0.194091796875],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))","uy","0",0.616943359375]],"time":16.516845703125,"type":"series"},{"count":[[4,154]],"inputs":[["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))","(*.f64 (*.f64 uy 2) (PI.f64))","(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","(*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 0) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1/2) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 1/2 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 0 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 0) (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1/2) (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) uy) 1) (*.f64 (*.f64 (PI.f64) uy) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 1/2 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) (*.f64 0 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (PI.f64) uy)) (*.f64 1 (*.f64 (PI.f64) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 uy uy)) (*.f64 (cbrt.f64 (*.f64 (*.f64 uy uy) 4)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 uy uy) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 uy uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) uy) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 0) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 1/2) (*.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) (*.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) (*.f64 1/2 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) (*.f64 0 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 yi (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 2)) (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 yi (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) (cbrt.f64 yi)) (cbrt.f64 (*.f64 yi yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 yi) (*.f64 (cbrt.f64 (*.f64 yi yi)) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 0) (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 1/2) (*.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) (*.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) maxCos) (*.f64 (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (neg.f64 (*.f64 maxCos ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) (*.f64 0 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 maxCos (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))) (*.f64 (neg.f64 (*.f64 maxCos ux)) (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2) (*.f64 ux ux))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 ux ux) (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 ux (cbrt.f64 (*.f64 (-.f64 1 ux) maxCos))) (*.f64 ux (cbrt.f64 (*.f64 (-.f64 1 ux) maxCos)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 ux) maxCos)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 ux (-.f64 1 ux)) (*.f64 ux (-.f64 1 ux))) (*.f64 maxCos maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 maxCos maxCos) (*.f64 (*.f64 (-.f64 1 ux) ux) (*.f64 (-.f64 1 ux) ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) (cbrt.f64 ux)) (*.f64 (*.f64 (-.f64 1 ux) maxCos) (cbrt.f64 ux))) (*.f64 ux (cbrt.f64 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) 2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) 2)) (*.f64 maxCos ux)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 ux) 2)) (*.f64 maxCos ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 maxCos ux) 2) (pow.f64 (-.f64 1 ux) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 ux ux)) (*.f64 (*.f64 (cbrt.f64 (*.f64 ux ux)) (*.f64 (-.f64 1 ux) maxCos)) (*.f64 (cbrt.f64 (*.f64 ux ux)) (*.f64 (-.f64 1 ux) maxCos))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) ux) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (neg.f64 (*.f64 maxCos ux)) (neg.f64 (*.f64 maxCos ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux))) 2) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux))) 2) (pow.f64 (cbrt.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux)) -1) (*.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (*.f64 (-.f64 1 ux) maxCos))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2) ux) ux)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (-.f64 1 ux)) (*.f64 maxCos ux))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 ux (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) (cbrt.f64 ux)) (cbrt.f64 (*.f64 ux ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 ux (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) ux)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 1 ux) maxCos)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)) (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 maxCos (*.f64 (-.f64 1 ux) (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 ux) (*.f64 (*.f64 maxCos ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux)) (*.f64 (+.f64 ux -1) (*.f64 maxCos ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 ux (*.f64 ux (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 ux) 2) (pow.f64 (*.f64 maxCos ux) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (*.f64 maxCos (-.f64 1 (pow.f64 ux 3)))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 maxCos ux))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 maxCos (-.f64 1 (pow.f64 ux 3))) (*.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux ux))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 maxCos (-.f64 1 (pow.f64 ux 3))) (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 (*.f64 maxCos ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 maxCos (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)))) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 maxCos ux)) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) (fma.f64 (+.f64 1 ux) ux 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 maxCos ux)) (*.f64 (-.f64 1 (pow.f64 ux 3)) (*.f64 maxCos ux))) (*.f64 (fma.f64 (+.f64 1 ux) ux 1) (fma.f64 (+.f64 1 ux) ux 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 ux 3)) (*.f64 (*.f64 maxCos ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))) (neg.f64 (fma.f64 (+.f64 1 ux) ux 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 ux 3)) (*.f64 maxCos (*.f64 ux (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)))) (neg.f64 (fma.f64 (+.f64 1 ux) ux 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 ux -1) (*.f64 maxCos ux)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 6))))))"]],"rules":[["egg-rr",65],["egg-rr",32],["egg-rr",34],["egg-rr",23]],"time":41.856201171875,"type":"rewrite"},{"count":[[234,196]],"inputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 ux 4) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 (*.f64 -1/2 (pow.f64 maxCos 2)) 2) (pow.f64 maxCos 2)))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(+.f64 (*.f64 -1/16 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 6) (*.f64 (pow.f64 maxCos 6) (*.f64 (pow.f64 ux 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 (*.f64 uy (PI.f64)) 2 (fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 (*.f64 uy (PI.f64)) 2 (fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (fma.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5) (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))","(*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))) (+.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3)))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))))","(fma.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))) (+.f64 (*.f64 4/15 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 5))) (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))) (+.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (*.f64 -8/315 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 7))))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))) (+.f64 (*.f64 4/15 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 5))) (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)))) (*.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 ux 4) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 (*.f64 -1/2 (pow.f64 maxCos 2)) 2) (pow.f64 maxCos 2)))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(fma.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (fma.f64 (*.f64 -1/8 yi) (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 (*.f64 maxCos ux) 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 -1/16 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 6) (*.f64 (pow.f64 maxCos 6) (*.f64 (pow.f64 ux 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))))","(fma.f64 (*.f64 (*.f64 yi (pow.f64 (-.f64 1 ux) 6)) (*.f64 (pow.f64 (*.f64 maxCos ux) 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) -1/16 (fma.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (fma.f64 (*.f64 -1/8 yi) (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 (*.f64 maxCos ux) 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(pow.f64 (*.f64 maxCos ux) 2)","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (pow.f64 (*.f64 maxCos ux) 2))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4))","(*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 4))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 4)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4))","(*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 4))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 4)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 3))) (+.f64 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 4)) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 -2 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)) (*.f64 (*.f64 maxCos maxCos) (+.f64 (pow.f64 ux 4) (*.f64 ux ux))))","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)","(*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)"]],"time":257.75390625,"type":"simplify"},{"compiler":[[21326,13733]],"time":180.405029296875,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38348262930507404],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.3923226074528623],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.39615884999974804],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.4347437884761112],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.34869008791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",3.3634626240134398],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","next",0.3239250488422101],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.34087758791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.5082589356003984],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",12.83649920400473],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.3278312988422101]],"compiler":[[76,51],[76,52],[88,60],[79,55],[77,53],[155,119],[77,53],[77,53],[68,49],[64,46],[99,68],[76,51],[76,52],[88,60],[79,55],[77,53],[155,119],[77,53],[77,53],[68,49],[64,46],[99,68]],"count":[[307,11]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[306,11],"picked":[1,0]}],"min-error":[0.13347626953688402],"time":200.552978515625,"type":"prune"},{"compiler":[[392,205]],"locations":[["(*.f64 (*.f64 uy 2) (PI.f64))",0.29296875,false],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",0.3111788206944218,false],["(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))",0.453125,true],["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))",0.45703125,true]],"time":75.974853515625,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))","uy","-inf",0.263916015625],["(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))","uy","inf",2.02197265625],["(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))","uy","0",1.412841796875],["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","uy","-inf",0.2490234375],["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","uy","inf",0.364013671875],["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","uy","0",1.598876953125]],"time":6.004150390625,"type":"series"},{"count":[[2,73]],"inputs":[["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 uy (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 uy (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (PI.f64)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 0) (*.f64 (+.f64 uy uy) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 uy uy) (PI.f64)) (*.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)) (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 uy uy) (PI.f64))) (*.f64 (+.f64 uy uy) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 uy uy) (PI.f64)) (*.f64 0 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 uy uy) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 uy uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 uy uy)) (*.f64 (pow.f64 (+.f64 uy uy) 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) 4/3)) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (pow.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 2/3) (cbrt.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (+.f64 uy uy)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))) (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (pow.f64 (PI.f64) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (+.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 uy uy) 2/3) (PI.f64)) (cbrt.f64 (+.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 4/3)) (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) 4/3)) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3) (pow.f64 (PI.f64) 2/3)) (cbrt.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 uy uy) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 uy uy) (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 uy uy) (PI.f64)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (*.f64 uy (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 0) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) 1) (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (*.f64 0 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (+.f64 uy uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 uy uy)) (*.f64 (pow.f64 (+.f64 uy uy) 2/3) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (PI.f64))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (+.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 uy uy) 2/3) (cbrt.f64 (PI.f64))) (cbrt.f64 (+.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (+.f64 uy uy)) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (pow.f64 (+.f64 uy uy) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 8)) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 uy uy) 2/3) (cbrt.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (cbrt.f64 (*.f64 (PI.f64) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (+.f64 uy uy) (cbrt.f64 (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 uy (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (PI.f64))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 uy uy) 3) (PI.f64)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 uy uy) 3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 uy (cbrt.f64 (PI.f64)) (*.f64 uy (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) uy (*.f64 uy (cbrt.f64 (PI.f64))))))))"]],"rules":[["egg-rr",34],["egg-rr",39]],"time":27.614990234375,"type":"rewrite"},{"count":[[97,76]],"inputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (+.f64 (PI.f64) (PI.f64)) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)","(*.f64 2 (*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) uy))","(*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) uy)"]],"time":109.123046875,"type":"simplify"},{"compiler":[[10485,5873]],"time":74.31298828125,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",12.828686704004733],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.33306508791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.39615884999974804],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",3.3634626240134398],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.4269312884761112],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38348262930507404],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38451010745286224],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.34087758791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.5082589356003984],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","next",0.3278312988422101]],"compiler":[[76,52],[83,50],[88,60],[155,119],[85,57],[76,51],[82,55],[83,52],[68,49],[99,68],[76,52],[83,50],[88,60],[155,119],[85,57],[76,51],[82,55],[83,52],[68,49],[99,68]],"count":[[151,10]],"kept":[{"done":[0,0],"fresh":[10,5],"new":[140,5],"picked":[1,0]}],"min-error":[0.13347626953688402],"time":62.282958984375,"type":"prune"},{"compiler":[[599,365]],"locations":[["(*.f64 uy (PI.f64))",0.29296875,true],["(*.f64 (*.f64 uy 2) (PI.f64))",0.29296875,false],["(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))",0.3111788206944218,true],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))",0.33041000976844204,true]],"time":132.548095703125,"type":"localize"},{"count":[[3,8]],"series":[["(*.f64 uy (PI.f64))","uy","-inf",0.256103515625],["(*.f64 uy (PI.f64))","uy","inf",0.13916015625],["(*.f64 uy (PI.f64))","uy","0",0.1611328125],["(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","uy","-inf",0.14599609375],["(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","uy","inf",0.151123046875],["(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","uy","0",0.201904296875],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","uy","-inf",0.306884765625],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","uy","inf",0.445068359375],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","uy","0",0.43896484375],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","ux","-inf",0.2119140625],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","ux","inf",0.323974609375],["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","ux","0",0.821044921875]],"time":3.743896484375,"type":"series"},{"count":[[3,133]],"inputs":[["(*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(*.f64 uy (PI.f64))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 ux 4)) (*.f64 (cbrt.f64 (pow.f64 ux 8)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (*.f64 ux ux)) (*.f64 ux ux))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 (pow.f64 ux 4))) (cbrt.f64 (pow.f64 ux 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 ux ux) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (*.f64 ux ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 ux 8)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 (pow.f64 ux 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 ux 8)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (cbrt.f64 (pow.f64 ux 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (pow.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 2/3) (cbrt.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (*.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3) (pow.f64 ux 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3) (pow.f64 ux 4)) (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (pow.f64 ux 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 ux 4) 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 ux 4) 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 ux 4) 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 ux 4) 2) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) (*.f64 (pow.f64 ux 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 ux 4) (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3) (*.f64 (pow.f64 ux 4) (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 ux 4) 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 ux 4) 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 ux 4)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (*.f64 (cos.f64 0) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cos.f64 0)) (*.f64 (cos.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) (-.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) (neg.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (sin.f64 (*.f64 uy (PI.f64)))) (cos.f64 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (*.f64 (*.f64 (cbrt.f64 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 uy (PI.f64))) (*.f64 2 (sin.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 4) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (*.f64 (*.f64 (sqrt.f64 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 2) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 2 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 2 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) 2)) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) 2)))) (+.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 2/3) (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 1/4)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 1/4))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (neg.f64 (sqrt.f64 1/2))) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (neg.f64 (sqrt.f64 1/2)))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 1/2)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (cbrt.f64 1/2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (sqrt.f64 1/2)) (*.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) (sqrt.f64 1/2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 2 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (*.f64 (*.f64 uy (PI.f64)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) uy) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) 9) 9)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 9 (-.f64 9 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) 3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) 4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 uy (PI.f64)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 uy (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 3 (-.f64 3 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 4 (-.f64 4 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (-.f64 -1 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2 (-.f64 2 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 uy)) (pow.f64 uy 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 uy) (*.f64 (pow.f64 uy 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 uy 2/3) (*.f64 (PI.f64) (cbrt.f64 uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 uy 2/3) (PI.f64)) (cbrt.f64 uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy (PI.f64))) (pow.f64 (*.f64 uy (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 uy (PI.f64)) 2/3) (cbrt.f64 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 uy (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 uy (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 uy (PI.f64)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 uy (PI.f64)))) (neg.f64 (pow.f64 (*.f64 uy (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (*.f64 uy (PI.f64)) 2/3) (*.f64 0 (cbrt.f64 (*.f64 uy (PI.f64)))))) (+.f64 0 (cbrt.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 uy (PI.f64)) 2/3) 0) (+.f64 (cbrt.f64 (*.f64 uy (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 uy (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 uy (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 uy (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (PI.f64)) 3))))))"]],"rules":[["egg-rr",44],["egg-rr",48],["egg-rr",41]],"time":52.177978515625,"type":"rewrite"},{"count":[[141,148]],"inputs":[["(*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64)))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 5)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64))))))","(+.f64 (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 5)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64)))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64))))","(*.f64 (*.f64 2 uy) (*.f64 (pow.f64 ux 4) (PI.f64)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64)))))","(fma.f64 -4/3 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) (pow.f64 ux 4)) (*.f64 (*.f64 2 uy) (*.f64 (pow.f64 ux 4) (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 5)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64))))))","(fma.f64 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) (pow.f64 ux 4)) -4/3 (fma.f64 4/15 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 5) (pow.f64 ux 4)) (*.f64 (*.f64 2 uy) (*.f64 (pow.f64 ux 4) (PI.f64)))))","(+.f64 (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (*.f64 (pow.f64 ux 4) (pow.f64 (PI.f64) 5)))) (*.f64 2 (*.f64 uy (*.f64 (pow.f64 ux 4) (PI.f64)))))))","(fma.f64 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 7) (pow.f64 ux 4)) -8/315 (fma.f64 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) (pow.f64 ux 4)) -4/3 (fma.f64 4/15 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 5) (pow.f64 ux 4)) (*.f64 (*.f64 2 uy) (*.f64 (pow.f64 ux 4) (PI.f64))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 (*.f64 2 uy) (PI.f64) (fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (fma.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5) (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)))))"]],"time":38.23193359375,"type":"simplify"},{"compiler":[[37780,23026]],"time":323.757080078125,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",12.828686704004733],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","next",0.33306508791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.39615884999974804],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",3.3634626240134398],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (-.f64 (+.f64 (*.f64 uy (PI.f64)) 4) 4))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",6.891737759896371],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.5082589356003984],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.4269312884761112],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38348262930507404],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38451010745286224],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.34087758791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","done",0.3278312988422101]],"compiler":[[76,52],[83,50],[88,60],[155,119],[103,72],[68,49],[85,57],[76,51],[82,55],[83,52],[99,68],[76,52],[83,50],[88,60],[155,119],[103,72],[68,49],[85,57],[76,51],[82,55],[83,52]],"count":[[389,11]],"kept":[{"done":[0,0],"fresh":[9,9],"new":[379,1],"picked":[1,1]}],"min-error":[0.12957001953688402],"time":322.64697265625,"type":"prune"},{"compiler":[[413,180]],"locations":[["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)",0.28515625,true],["(sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))",0.3111788206944218,true],["(*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64)))",0.453125,false],["(*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))",0.45703125,false]],"time":68.60595703125,"type":"localize"},{"count":[[2,44]],"series":[["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","-inf",0.3369140625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","inf",0.4150390625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","yi","0",1.945068359375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","-inf",0.325927734375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","inf",0.35400390625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","maxCos","0",0.4140625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","-inf",0.321044921875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","inf",0.3369140625],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","ux","0",0.36279296875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","-inf",0.531005859375],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","inf",0.56201171875],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)","uy","0",0.47998046875],["(sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","uy","-inf",0.218017578125],["(sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","uy","inf",0.256103515625],["(sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","uy","0",0.294921875]],"time":7.508056640625,"type":"series"},{"count":[[2,55]],"inputs":[["(sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 0) (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 1/2) (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (*.f64 1/2 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (*.f64 0 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 2/3) (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 0) (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 1/2) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (*.f64 1/2 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) (*.f64 0 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 yi) (*.f64 (pow.f64 yi 2/3) (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))) (*.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) 2/3) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 yi (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (pow.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 2/3) (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi) (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) (cbrt.f64 yi)) (pow.f64 yi 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (pow.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 yi (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64)))) (*.f64 (pow.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) 2/3) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",23]],"time":32.153076171875,"type":"rewrite"},{"count":[[99,88]],"inputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 ux 4) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 (*.f64 -1/2 (pow.f64 maxCos 2)) 2) (pow.f64 maxCos 2)))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(+.f64 (*.f64 -1/16 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 6) (*.f64 (pow.f64 maxCos 6) (*.f64 (pow.f64 ux 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (fma.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5) (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))","(*.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))) (+.f64 (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3))) (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))))))))","(fma.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2)))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))) (+.f64 (*.f64 4/15 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 5))) (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))) (+.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (*.f64 -8/315 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 7))))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))) (+.f64 (*.f64 4/15 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 5))) (*.f64 -4/3 (*.f64 yi (pow.f64 (*.f64 uy (PI.f64)) 3))))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) yi) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(fma.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3)))) (*.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 ux 4) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 (*.f64 -1/2 (pow.f64 maxCos 2)) 2) (pow.f64 maxCos 2)))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 yi (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (pow.f64 ux 4) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 maxCos maxCos (*.f64 1/4 (pow.f64 maxCos 4))))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))","(*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))))","(fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 -1/8 yi) (*.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))))","(+.f64 (*.f64 -1/16 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 6) (*.f64 (pow.f64 maxCos 6) (*.f64 (pow.f64 ux 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1/8 (*.f64 yi (*.f64 (pow.f64 (-.f64 1 ux) 4) (*.f64 (pow.f64 maxCos 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))))","(fma.f64 (*.f64 -1/16 yi) (*.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 6) (*.f64 (pow.f64 ux 6) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 (*.f64 -1/2 yi) (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 -1/8 yi) (*.f64 (pow.f64 (*.f64 (-.f64 1 ux) maxCos) 4) (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))","(*.f64 (*.f64 yi (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))"]],"time":149.613037109375,"type":"simplify"},{"compiler":[[19069,9780]],"time":128.326904296875,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.34087758791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","done",0.33306508791597816],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38348262930507404],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",12.828686704004733],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.4269312884761112],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.38451010745286224],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.39615884999974804],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (-.f64 (+.f64 (*.f64 uy (PI.f64)) 4) 4))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",6.891737759896371],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",0.5004464356003984],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","done",0.3278312988422101],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","fresh",3.35565012401344]],"compiler":[[82,54],[83,50],[76,51],[70,49],[85,57],[82,55],[88,60],[103,72],[74,51],[99,68],[161,122]],"count":[[251,11]],"kept":[{"done":[1,1],"fresh":[9,5],"new":[240,4],"picked":[1,1]}],"min-error":[0.12957001953688402],"time":117.736083984375,"type":"prune"},{"accuracy":[0.3239250488422101],"baseline":[0.3239250488422101],"branch":[["xi",0.3239250488422101,1],["yi",0.3239250488422101,1],["zi",0.3239250488422101,1],["ux",0.3239250488422101,1],["uy",0.3239250488422102,1],["maxCos",0.3239250488422101,1],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))",0.3239250488422101,1],["(*.f64 (*.f64 uy 2) (PI.f64))",0.3239250488422102,1],["(*.f64 uy 2)",0.3239250488422102,1],["(*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)",0.3239250488422101,1]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[71,50],[11,10],[9,8],[13,10],[1780,1071]],"count":[[22,1]],"inputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 2 (*.f64 yi (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)) 2))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (+.f64 uy uy) (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))) yi)) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (-.f64 (+.f64 (*.f64 uy (PI.f64)) 4) 4))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) yi)))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 yi (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (+.f64 uy uy))) (cbrt.f64 (*.f64 (*.f64 uy uy) 4)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 uy uy)))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 -8/315 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))) (*.f64 -4/3 (*.f64 (*.f64 yi (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (sqrt.f64 (-.f64 1 (*.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))) 3)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 2 (*.f64 (*.f64 yi (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 maxCos ux) (-.f64 1 ux)) 2)))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (+.f64 (*.f64 (*.f64 -1/2 yi) (+.f64 (*.f64 (pow.f64 (*.f64 maxCos ux) 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (pow.f64 ux 4) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 maxCos maxCos (*.f64 (pow.f64 maxCos 4) 1/4))))) (*.f64 yi (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 1 (*.f64 (*.f64 maxCos maxCos) (pow.f64 ux 3))))))) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))"]],"link":["."],"name":["UniformSampleCone 2"],"oracle":[16.143519726101633],"outputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))"]],"time":106.7568359375,"times":[["xi",6.948974609375],["yi",6.892822265625],["zi",6.847900390625],["ux",6.962890625],["uy",6.991943359375],["maxCos",6.98779296875],["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))",7.841064453125],["(*.f64 (*.f64 uy 2) (PI.f64))",7.032958984375],["(*.f64 uy 2)",6.9150390625],["(*.f64 (*.f64 (-.f64 1 ux) maxCos) ux)",7.01416015625]],"type":"regimes"},{"compiler":[[77,53]],"inputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (+.f64 uy uy) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) xi) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux))))) yi)) (*.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) zi))","(fma.f64 zi (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) ux) 2))) (+.f64 (*.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) xi) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) yi))))"]],"stop":[["fuel",1]],"time":29.34912109375,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[77,53]],"remove-preprocessing":[[]],"time":21.573974609375,"type":"end"}]