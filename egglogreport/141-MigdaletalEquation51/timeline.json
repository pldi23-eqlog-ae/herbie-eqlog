[{"compiler":[[19,16]],"method":["search"],"sampling":[[12,0.17951206676661968,0.10780480096582323,0.7126831322675571],[11,0.17951206676661968,0.12195113231427968,0.6985368009191006],[10,0.17170719429850578,0.15024379501119256,0.6780490106903017],[9,0.17170719429850578,0.17560963053256273,0.6526831751689315],[8,0.15609744936227798,0.22634130157530308,0.6175612490624189],[7,0.15609744936227798,0.2653656639158726,0.5785368867218494],[6,0.12487795948982239,0.34341438859701157,0.531707651913166],[5,0.12487795948982239,0.37463387846946716,0.5004881620407104],[4,0.0,0.49951183795928955,0.5004881620407104],[3,0.0,0.49951183795928955,0.5004881620407104],[2,0.0,0.49951183795928955,0.5004881620407104],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":54.511962890625,"type":"analyze"},{"outcomes":[["body",512,"invalid",107.886474609375,697],["body",256,"invalid",159.82763671875,2367],["body",1024,"invalid",375.795654296875,1417],["body",256,"valid",638.9521484375,8256]],"time":1294.573974609375,"type":"sample"},{"compiler":[[18,15]],"inputs":[["0","1"],["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))","(*.f64 (/.f64 1 (sqrt.f64 n)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) k) (/.f64 (-.f64 1 n) 2)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))","(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(*.f64 (/.f64 1 (sqrt.f64 n)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) k) (/.f64 (-.f64 1 n) 2)))","(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) k) (*.f64 (+.f64 -1 n) -1/2)) (sqrt.f64 n))"]],"symmetry":[[]],"time":63.60400390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))","(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))"]],"time":20.73095703125,"type":"simplify"},{"compiler":[[32,23]],"time":0.5390625,"type":"eval"},{"alts":[["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))","fresh",0.39972133966101653],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","next",0.3571635937289185]],"compiler":[[18,15],[16,12],[18,15],[16,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.2855935621082647],"time":2.85791015625,"type":"prune"},{"compiler":[[50,25]],"locations":[["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))",0.17805980134525137,true],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)",0.22265625,true],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))",0.25390625,true]],"time":14.716064453125,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","k","-inf",0.180908203125],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","k","inf",0.205078125],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","k","0",0.41796875],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","n","-inf",0.2099609375],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","n","inf",0.18994140625],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))","n","0",0.2099609375],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)","n","-inf",0.158203125],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)","n","inf",0.1640625],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)","n","0",0.155029296875],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","-inf",0.93798828125],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","inf",0.708984375],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","0",1.764892578125],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","-inf",11.43310546875],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","inf",4.9541015625],["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","0",17.428955078125]],"time":39.407958984375,"type":"series"},{"count":[[3,127]],"inputs":[["(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(*.f64 (+.f64 (PI.f64) (PI.f64)) n)","(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 0) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1/2) (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) (*.f64 0 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (*.f64 1/2 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 k))) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k -1/2) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k (neg.f64 1/4)) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1/2)) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k -1/2)) (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 (sqrt.f64 k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k 1/8)) (pow.f64 k 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k -1/2)) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k)) (cbrt.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k (neg.f64 1/4)) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))) k))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 (sqrt.f64 k)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 k)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) -1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 (sqrt.f64 k)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k)))) (cbrt.f64 (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) n) (*.f64 (PI.f64) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 0) (*.f64 (+.f64 (PI.f64) (PI.f64)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 1/2) (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) n) 1) (*.f64 (*.f64 (PI.f64) n) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 0 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) (*.f64 (+.f64 (PI.f64) (PI.f64)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) (*.f64 1/2 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 2)) (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 n) (*.f64 (cbrt.f64 (*.f64 n n)) (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) n) (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 n n)) (+.f64 (PI.f64) (PI.f64))) (cbrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 n n) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 n)) (cbrt.f64 (*.f64 n n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (PI.f64) (PI.f64)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (PI.f64) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 n n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n n)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) n) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) n (*.f64 (PI.f64) n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 n (PI.f64) (*.f64 (PI.f64) n))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 0) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1/2) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (*.f64 0 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (*.f64 1/2 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 3))))))"]],"rules":[["egg-rr",26],["egg-rr",38],["egg-rr",63]],"time":37.719970703125,"type":"rewrite"},{"count":[[175,150]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64)))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(*.f64 2 (*.f64 n (PI.f64)))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 (*.f64 2 (PI.f64)) n))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64))))","(sqrt.f64 (*.f64 2 (*.f64 n (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) k) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 2)))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64)))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (sqrt.f64 2) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) k) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 2))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/48 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 3))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 1/2) (*.f64 (-.f64 1 k) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 1/2) (*.f64 (-.f64 1 k) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 1/2) (*.f64 (-.f64 1 k) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))","(exp.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 k)) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))","(pow.f64 (exp.f64 1/2) (*.f64 (-.f64 1 k) (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))"]],"time":151.81103515625,"type":"simplify"},{"compiler":[[3168,1603]],"time":32.52392578125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))","fresh",0.4366161328026866],["(/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64)))))))) (sqrt.f64 k))","fresh",21.811751522789685],["(/.f64 (+.f64 (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) k) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 2))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/48 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 3))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2)))))) (sqrt.f64 k))","fresh",21.8117515266863],["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (pow.f64 k -1/2)))","fresh",0.42870914582456304],["(pow.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3) 1/3)","fresh",19.140744635418255],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","fresh",0.3872581468389251],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","fresh",0.3947992012910992],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","next",0.3558138618120567]],"compiler":[[21,16],[77,51],[63,45],[20,15],[19,15],[30,20],[24,18],[16,12],[21,16],[77,51],[63,45],[20,15],[19,15],[30,20],[24,18],[16,12]],"count":[[152,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[150,8],"picked":[1,0]}],"min-error":[0.01953125],"time":45.56396484375,"type":"prune"},{"compiler":[[46,23]],"locations":[["(pow.f64 k -1/2)",0.00390625,true],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))",0.17805980134525137,true],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)",0.22265625,false],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))",0.2265625,true]],"time":20.34814453125,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 k -1/2)","k","-inf",16.134033203125],["(pow.f64 k -1/2)","k","inf",4.451171875],["(pow.f64 k -1/2)","k","0",6.73193359375],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","k","-inf",0.160888671875],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","k","inf",0.192138671875],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","k","0",0.255126953125],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","n","-inf",0.219970703125],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","n","inf",0.18701171875],["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","n","0",0.18798828125],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","k","-inf",0.593017578125],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","k","inf",0.598876953125],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","k","0",0.524169921875],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","n","-inf",0.635009765625],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","n","inf",0.634033203125],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","n","0",1.39208984375]],"time":33.1669921875,"type":"series"},{"count":[[3,60]],"inputs":[["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))","(pow.f64 k -1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 0) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) (*.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) (*.f64 0 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k -1/2) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1/2)) (*.f64 (cbrt.f64 (pow.f64 k -1)) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (*.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 k -1)) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (pow.f64 k -1/2)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))) (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (pow.f64 k -1/2))) (cbrt.f64 (pow.f64 k -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k -1/2) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1)) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (pow.f64 k -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (*.f64 (pow.f64 k -1/2) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 0) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (*.f64 0 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 k -1/2) 0) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 k -1/2) (*.f64 (pow.f64 k -1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 k -1/2)) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 k -1/2) (*.f64 0 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1/2)) (cbrt.f64 (pow.f64 k -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1)) (cbrt.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 k -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 k -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 k -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 k -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 k -1/2) 3))))))"]],"rules":[["egg-rr",17],["egg-rr",17],["egg-rr",26]],"time":28.739990234375,"type":"rewrite"},{"count":[[108,82]],"inputs":[["(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64)))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64))))))))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))","(pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))","(exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))","(pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (-.f64 (log.f64 (*.f64 -2 (PI.f64))) (neg.f64 (log.f64 (neg.f64 n)))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64))))","(sqrt.f64 (*.f64 2 (*.f64 n (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (sqrt.f64 2) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64)))))))","(fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (sqrt.f64 2) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (sqrt.f64 2) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))))))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2))) (*.f64 -1/48 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 3))))))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(pow.f64 (*.f64 2 (*.f64 n (PI.f64))) (fma.f64 k -1/2 1/2))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(sqrt.f64 (/.f64 1 k))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k))))))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))"]],"time":153.756103515625,"type":"simplify"},{"compiler":[[2520,1468]],"time":34.427001953125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))","fresh",0.4366161328026866],["(/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64)))))))) (sqrt.f64 k))","fresh",21.811751522789685],["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (pow.f64 k -1/2)))","fresh",0.42870914582456304],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","next",0.3872581468389251],["(*.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))","fresh",3.392655837317778],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","fresh",0.3947992012910992],["(*.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 3) (pow.f64 k -1/2))","fresh",0.6204658883651014],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 (pow.f64 (pow.f64 k -1/2) 3) 1/3))","fresh",16.36308308609956]],"compiler":[[21,16],[77,51],[20,15],[30,20],[34,23],[24,18],[19,15],[20,16],[21,16],[77,51],[20,15],[30,20],[34,23],[24,18],[19,15],[20,16]],"count":[[129,8]],"kept":[{"done":[0,0],"fresh":[7,5],"new":[121,3],"picked":[1,0]}],"min-error":[0.015625],"time":33.511962890625,"type":"prune"},{"compiler":[[118,61]],"locations":[["(pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))",0.17805980134525137,false],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))",0.19759750976844204,true],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))",0.2109375,true],["(*.f64 (+.f64 (PI.f64) (PI.f64)) n)",0.22265625,false]],"time":32.619873046875,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","k","-inf",0.89990234375],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","k","inf",0.789794921875],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","k","0",4.118896484375],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","n","-inf",1.510009765625],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","n","inf",1.565185546875],["(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))","n","0",1.507080078125],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","k","-inf",1.341796875],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","k","inf",1.197021484375],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","k","0",9.52392578125],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","n","-inf",2.416015625],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","n","inf",2.443115234375],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","n","0",2.8681640625]],"time":30.47998046875,"type":"series"},{"count":[[2,124]],"inputs":[["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","(/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 0) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1/2) (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (*.f64 1/2 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) (*.f64 0 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (pow.f64 k -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (cbrt.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 2 (*.f64 k -1/2) 1)) 2/3) k) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 (sqrt.f64 k) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k 1/8)) (pow.f64 k 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) -1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k)))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (sqrt.f64 (sqrt.f64 k)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) k))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (cbrt.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 2 (*.f64 k -1/2) 1)) 2/3) k) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3))) (cbrt.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 2 (*.f64 k -1/2) 1)) 2/3) k) (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (cbrt.f64 (sqrt.f64 k))) (neg.f64 (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 (sqrt.f64 k)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) -1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k)))) (neg.f64 (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 0) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 1/2) (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (*.f64 1/2 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) (*.f64 0 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 k))) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) (pow.f64 k -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (sqrt.f64 (sqrt.f64 k))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k -1/2) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 k) -1/2) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (pow.f64 (sqrt.f64 k) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1/2)) (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (sqrt.f64 (sqrt.f64 k))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k 1/8)) (pow.f64 k 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4)) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k -1/2)) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4)) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (cbrt.f64 k)) (cbrt.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sqrt.f64 k) -1/2) (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (sqrt.f64 (sqrt.f64 k)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)))) 4) (cbrt.f64 k))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3)) (cbrt.f64 (sqrt.f64 k))) (neg.f64 (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 (sqrt.f64 k)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) -1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 (sqrt.f64 k)))) (neg.f64 (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 2 (*.f64 k -1/2) 1)) (pow.f64 k 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (neg.f64 (sqrt.f64 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 k)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 2 (*.f64 k -1/2) 1)) (pow.f64 k 3/2)))))))"]],"rules":[["egg-rr",57],["egg-rr",67]],"time":37.947021484375,"type":"rewrite"},{"count":[[148,134]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64)))))) (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 n) (log.f64 (*.f64 2 (PI.f64))))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64))))))) (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) (*.f64 1 (exp.f64 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64)))))))) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (log.f64 (*.f64 2 (PI.f64))) (log.f64 n))))) 1) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 n))) (log.f64 (*.f64 2 (PI.f64)))))))) 1/3))","(*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) 2/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 1/2 (*.f64 -1/2 k)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -2 (PI.f64))))))) 1) 1/3) (sqrt.f64 (/.f64 1 k)))","(*.f64 (pow.f64 (pow.f64 (exp.f64 (fma.f64 k -1/2 1/2)) (log.f64 (*.f64 (*.f64 -2 (PI.f64)) (neg.f64 n)))) 2/3) (sqrt.f64 (/.f64 1 k)))"]],"time":106.333984375,"type":"simplify"},{"compiler":[[7733,4014]],"time":78.28515625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))","fresh",0.4366161328026866],["(/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64)))))))) (sqrt.f64 k))","fresh",21.811751522789685],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","done",0.3872581468389251],["(/.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))","fresh",3.1208589088087177],["(*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))","fresh",3.2134625285919554],["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (pow.f64 k -1/2)))","fresh",0.42870914582456304],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","next",0.3947992012910992],["(*.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 3) (pow.f64 k -1/2))","fresh",0.6204658883651014],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 (pow.f64 (pow.f64 k -1/2) 3) 1/3))","fresh",16.36308308609956]],"compiler":[[21,16],[77,51],[30,20],[25,19],[32,21],[20,15],[24,18],[19,15],[20,16],[21,16],[77,51],[25,19],[32,21],[20,15],[24,18],[19,15],[20,16]],"count":[[251,9]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[243,2],"picked":[1,1]}],"min-error":[0.0078125],"time":87.768798828125,"type":"prune"},{"compiler":[[99,45]],"locations":[["(*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))",0.08203125,true],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))",0.17805980134525137,true],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))",0.25390625,true],["(*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))",0.3951950195368841,true]],"time":29.76513671875,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))","n","-inf",0.33984375],["(*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))","n","inf",0.450927734375],["(*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))","n","0",2.903076171875],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","k","-inf",0.205078125],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","k","inf",0.2470703125],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","k","0",0.512939453125],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","n","-inf",0.2099609375],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","n","inf",0.235107421875],["(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","n","0",0.2041015625],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","-inf",2.5888671875],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","inf",0.87890625],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","k","0",1.97705078125],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","-inf",9.370849609375],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","inf",4.7548828125],["(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","n","0",10.531982421875],["(*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))","n","-inf",0.340087890625],["(*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))","n","inf",0.48095703125],["(*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))","n","0",3.64111328125]],"time":40.245849609375,"type":"series"},{"count":[[4,147]],"inputs":[["(*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))","(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2))","(*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (PI.f64)) (*.f64 n (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 1/2) (*.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 0) (*.f64 n (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (*.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) n) (*.f64 (PI.f64) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (*.f64 1/2 (*.f64 n (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (*.f64 n (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (*.f64 0 (*.f64 n (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 n) (*.f64 (pow.f64 n 2/3) (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 2/3) (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))) (pow.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 4)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (*.f64 (pow.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 2/3) (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) 4)) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) n) (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 n (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 n (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 1/2) (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 0) (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (*.f64 1/2 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) (*.f64 0 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (sqrt.f64 k))) (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (neg.f64 (pow.f64 k -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (sqrt.f64 (sqrt.f64 k))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k -1/2) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k (neg.f64 1/4)) (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k -1/2)) (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) (pow.f64 k -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k (neg.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (sqrt.f64 (sqrt.f64 k))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) (pow.f64 k 1/8)) (pow.f64 k 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k)))) (neg.f64 (sqrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k -1/2)) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k (neg.f64 1/4)) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (sqrt.f64 (sqrt.f64 k))) (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3)) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3)) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k))) (neg.f64 (cbrt.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 k))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (/.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (sqrt.f64 (sqrt.f64 k)))) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) 1) (cbrt.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) (cbrt.f64 (sqrt.f64 (sqrt.f64 k)))) (cbrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 (sqrt.f64 k))) 1) (sqrt.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) -1) (neg.f64 (sqrt.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k)))) (cbrt.f64 (neg.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (neg.f64 (sqrt.f64 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (sqrt.f64 k)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 1/2) (*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 0) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (*.f64 1/2 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (*.f64 0 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3) (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)))) (neg.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 1/2) (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 0) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (*.f64 1/2 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 0 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 n) (*.f64 (pow.f64 n 2/3) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (pow.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 2/3) (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (cbrt.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64)))) (pow.f64 n 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (pow.f64 n 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (pow.f64 n 3)))))))"]],"rules":[["egg-rr",27],["egg-rr",25],["egg-rr",59],["egg-rr",36]],"time":41.1611328125,"type":"rewrite"},{"count":[[207,172]],"inputs":[["(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 2)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 2)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/48 (*.f64 (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 3)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))","(*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1)))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n)))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(*.f64 (sqrt.f64 (/.f64 1 k)) (pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n)))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (log.f64 n)))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (*.f64 -1 (log.f64 (/.f64 1 n)))) (-.f64 k 1))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 n))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (-.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 2 4)) (neg.f64 (PI.f64)))) (neg.f64 (log.f64 (neg.f64 n))))))","(sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))","(sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))","(*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) -1/2) 1))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 2)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) -1/2) (*.f64 1/8 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 2)))))","(+.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 2)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))))) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))) (*.f64 -1/48 (*.f64 (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))) 3)) (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64))))))))))","(+.f64 (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 1 (*.f64 1/8 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 2)))) (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) -1/2) (*.f64 -1/48 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 3)))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 -1/2 (*.f64 (-.f64 k 1) (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))))))","(pow.f64 (exp.f64 -1/2) (*.f64 (+.f64 k -1) (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(pow.f64 (exp.f64 1/2) (*.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (-.f64 1 k)))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(pow.f64 (exp.f64 1/2) (*.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (-.f64 1 k)))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(pow.f64 (exp.f64 1/2) (*.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (-.f64 1 k)))","(exp.f64 (*.f64 1/2 (*.f64 (log.f64 (*.f64 (*.f64 n (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)))) (pow.f64 1 1/3))) (+.f64 1 (*.f64 -1 k)))))","(pow.f64 (exp.f64 1/2) (*.f64 (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (-.f64 1 k)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))","(*.f64 (pow.f64 (*.f64 1 (PI.f64)) 1/3) (*.f64 n (cbrt.f64 2)))","(*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2)))"]],"time":185.759033203125,"type":"simplify"},{"compiler":[[4002,2122]],"time":42.846923828125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64)))))))) (sqrt.f64 k))","fresh",21.811751522789685],["(/.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) 4)) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","fresh",0.38079544152265715],["(*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))","fresh",0.3558138618120567],["(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))","fresh",0.4366161328026866],["(/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))","fresh",0.41537863503595257],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","done",0.3872581468389251],["(*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))","fresh",3.2134625285919554],["(/.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))","fresh",3.1208589088087177],["(/.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","fresh",0.40536613280268663],["(/.f64 (+.f64 (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 1 (*.f64 1/8 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 2)))) (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) -1/2) (*.f64 -1/48 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 3))))) (sqrt.f64 k))","fresh",21.699721452435373],["(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 (pow.f64 (pow.f64 k -1/2) 3) 1/3))","fresh",16.36308308609956]],"compiler":[[77,51],[32,21],[16,12],[21,16],[19,14],[30,20],[32,21],[25,19],[25,20],[72,59],[20,16]],"count":[[181,11]],"kept":[{"done":[1,1],"fresh":[7,4],"new":[172,6],"picked":[1,0]}],"min-error":[0.00390625],"time":50.23291015625,"type":"prune"},{"accuracy":[0.3558138618120567],"baseline":[0.3558138618120567],"branch":[["k",0.3558138618120568,1],["n",0.3558138618120567,1],["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))",0.3558138618120567,1],["(*.f64 (*.f64 2 (PI.f64)) n)",0.3558138618120567,1]],"compiler":[[3,2],[3,2],[18,15],[7,6],[583,344]],"count":[[21,1]],"inputs":[["(/.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) 4)) (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))","(/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 k)) (cbrt.f64 (sqrt.f64 k)))","(/.f64 (/.f64 (/.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))","(/.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 n (cbrt.f64 2))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(/.f64 (+.f64 (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 1 (*.f64 1/8 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 2)))) (*.f64 (sqrt.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64)))) (+.f64 (*.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) -1/2) (*.f64 -1/48 (pow.f64 (*.f64 k (log.f64 (*.f64 n (*.f64 (cbrt.f64 (*.f64 2 4)) (PI.f64))))) 3))))) (sqrt.f64 k))","(/.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (cbrt.f64 k))) (cbrt.f64 (pow.f64 k 2/3)))","(*.f64 (/.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) 2/3) (cbrt.f64 k)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))))","(*.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))) 3) (pow.f64 k -1/2))","(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 (pow.f64 (pow.f64 k -1/2) 3) 1/3))","(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 (sqrt.f64 k))) (cbrt.f64 (/.f64 1 k)))","(/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 (*.f64 n (PI.f64))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 n (PI.f64)))) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 2) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 2))) (sqrt.f64 (*.f64 n (PI.f64))))) (*.f64 -1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 k 3) (pow.f64 (log.f64 (*.f64 2 (*.f64 n (PI.f64)))) 3))) (sqrt.f64 (*.f64 n (PI.f64)))))))) (sqrt.f64 k))","(/.f64 (+.f64 (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) k) (log.f64 (*.f64 2 (*.f64 n (PI.f64)))))) (sqrt.f64 2))) (*.f64 (sqrt.f64 (*.f64 n (PI.f64))) (+.f64 (*.f64 -1/48 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 3))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 (*.f64 k (log.f64 (*.f64 2 (*.f64 n (PI.f64))))) 2)))))) (sqrt.f64 k))","(*.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (cbrt.f64 k)) (cbrt.f64 (pow.f64 k -1/2)))","(pow.f64 (pow.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (sqrt.f64 k)) 3) 1/3)","(*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 2 (fma.f64 k -1/2 1/2)))) (sqrt.f64 k)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2))))","(/.f64 (pow.f64 (*.f64 (*.f64 n (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64))))) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(*.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (fma.f64 k -1/2 1/2)) (pow.f64 k -1/2))","(/.f64 (pow.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) n) (*.f64 (+.f64 -1 k) -1/2)) (sqrt.f64 k))","(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))"]],"link":["."],"name":["Migdal et al, Equation (51)"],"oracle":[46.17490706304855],"outputs":[["(*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))"]],"time":36.483154296875,"times":[["k",7.155029296875],["n",7.10302734375],["(*.f64 (/.f64 1 (sqrt.f64 k)) (pow.f64 (*.f64 (*.f64 2 (PI.f64)) n) (/.f64 (-.f64 1 k) 2)))",4.7099609375],["(*.f64 (*.f64 2 (PI.f64)) n)",7.462158203125]],"type":"regimes"},{"compiler":[[16,12]],"inputs":[["(*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 n (+.f64 (PI.f64) (PI.f64))) (fma.f64 -1/2 k 1/2)) (pow.f64 k -1/2))"]],"stop":[["fuel",1]],"time":18.77392578125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[16,12]],"remove-preprocessing":[[]],"time":10.864990234375,"type":"end"}]