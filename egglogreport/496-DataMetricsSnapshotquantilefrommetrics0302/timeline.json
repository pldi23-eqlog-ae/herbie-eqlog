[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.17153955242975893,0.7943450865355315,0.03411536103470958],[11,0.12475603813073377,0.855748449053002,0.01949551281626427],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":148.60107421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",173.712646484375,3902],["body",256,"valid",380.332275390625,8256]],"time":565.889892578125,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(+.f64 y (*.f64 (-.f64 x z) (-.f64 t y)))","(+.f64 z (*.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 t (*.f64 (-.f64 y z) (-.f64 x t)))","(+.f64 x (*.f64 (-.f64 z y) (-.f64 t x)))","(+.f64 x (*.f64 (-.f64 t z) (-.f64 y x)))","(+.f64 x (*.f64 (-.f64 y t) (-.f64 z x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 y z) (-.f64 t x) x)","(+.f64 y (*.f64 (-.f64 x z) (-.f64 t y)))","(fma.f64 (-.f64 x z) (-.f64 t y) y)","(+.f64 z (*.f64 (-.f64 y x) (-.f64 t z)))","(fma.f64 (-.f64 y x) (-.f64 t z) z)","(+.f64 t (*.f64 (-.f64 y z) (-.f64 x t)))","(fma.f64 (-.f64 x t) (-.f64 y z) t)","(+.f64 x (*.f64 (-.f64 z y) (-.f64 t x)))","(fma.f64 (-.f64 z y) (-.f64 t x) x)","(+.f64 x (*.f64 (-.f64 t z) (-.f64 y x)))","(fma.f64 (-.f64 y x) (-.f64 t z) x)","(+.f64 x (*.f64 (-.f64 y t) (-.f64 z x)))","(fma.f64 (-.f64 y t) (-.f64 z x) x)"]],"symmetry":[[]],"time":84.448974609375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)"]],"time":18.47998046875,"type":"simplify"},{"compiler":[[21,9]],"time":0.318115234375,"type":"eval"},{"alts":[["(fma.f64 (-.f64 t x) (-.f64 y z) x)","next",0.01953125]],"compiler":[[12,7],[12,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.01953125],"time":0.83203125,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 (-.f64 t x) (-.f64 y z) x)",0.01953125,true]],"time":4.726806640625,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (-.f64 t x) (-.f64 y z) x)","z","-inf",0.280029296875],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","z","inf",0.31298828125],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","z","0",0.2880859375],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","y","-inf",0.302978515625],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","y","inf",0.31103515625],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","y","0",0.320068359375],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","x","-inf",0.47607421875],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","x","inf",0.34521484375],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","x","0",1.09912109375],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","t","-inf",0.3359375],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","t","inf",0.385009765625],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","t","0",0.51904296875]],"time":5.13720703125,"type":"series"},{"count":[[1,35]],"inputs":[["(fma.f64 (-.f64 t x) (-.f64 y z) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 t x) y) (+.f64 (neg.f64 (*.f64 z (-.f64 t x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 0) (fma.f64 (-.f64 t x) (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) (*.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 t x) (-.f64 y z) x)) (fma.f64 (-.f64 t x) (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) (*.f64 0 (fma.f64 (-.f64 t x) (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (-.f64 t x) y)) (neg.f64 (*.f64 z (-.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x t) (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (-.f64 x t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 t x) (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 t x) (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 x t) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x t) (-.f64 z y)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 t x) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 t x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t x) 2)) (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 x t) (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 x t) (-.f64 z y))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 x t) (-.f64 z y)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (-.f64 t x) x)))))"]],"rules":[["egg-rr",35]],"time":19.23388671875,"type":"rewrite"},{"count":[[83,55]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 y (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 -1 (*.f64 z (-.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 -1 (*.f64 z (-.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) x)","(fma.f64 (neg.f64 z) (-.f64 t x) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 y (-.f64 t x)) x)","(fma.f64 y (-.f64 t x) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(*.f64 -1 (*.f64 z (-.f64 t x)))","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(*.f64 -1 (*.f64 z (-.f64 t x)))","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 (-.f64 t x) (-.f64 y z)) x)"]],"time":181.7900390625,"type":"simplify"},{"compiler":[[648,167]],"time":6.14892578125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) 3)","fresh",0.6811677735163767],["(fma.f64 (-.f64 t x) (-.f64 y z) x)","done",0.01953125],["(+.f64 (*.f64 (-.f64 t x) y) (+.f64 (neg.f64 (*.f64 z (-.f64 t x))) x))","fresh",0.0234375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","next",0.0234375]],"compiler":[[15,10],[12,7],[18,10],[19,11],[15,10],[18,10],[19,11]],"count":[[56,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[55,3],"picked":[1,1]}],"min-error":[0],"time":12.51806640625,"type":"prune"},{"compiler":[[53,17]],"locations":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)",0.00390625,true],["(*.f64 (-.f64 y z) x)",0.0078125,true],["(*.f64 t (-.f64 y z))",0.01171875,true],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))",0.01953125,true]],"time":9.25390625,"type":"localize"},{"count":[[4,129]],"series":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","-inf",0.39794921875],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","inf",0.22705078125],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","0",0.261962890625],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","-inf",0.17578125],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","inf",0.23095703125],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","0",0.2041015625],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","-inf",0.22412109375],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","inf",0.177978515625],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","0",0.201904296875],["(*.f64 (-.f64 y z) x)","x","-inf",0.22607421875],["(*.f64 (-.f64 y z) x)","x","inf",0.210205078125],["(*.f64 (-.f64 y z) x)","x","0",0.256103515625],["(*.f64 (-.f64 y z) x)","z","-inf",0.169921875],["(*.f64 (-.f64 y z) x)","z","inf",0.18798828125],["(*.f64 (-.f64 y z) x)","z","0",0.170166015625],["(*.f64 (-.f64 y z) x)","y","-inf",0.273193359375],["(*.f64 (-.f64 y z) x)","y","inf",0.1669921875],["(*.f64 (-.f64 y z) x)","y","0",0.177001953125],["(*.f64 t (-.f64 y z))","z","-inf",0.18701171875],["(*.f64 t (-.f64 y z))","z","inf",0.16796875],["(*.f64 t (-.f64 y z))","z","0",0.176025390625],["(*.f64 t (-.f64 y z))","y","-inf",0.193115234375],["(*.f64 t (-.f64 y z))","y","inf",0.177001953125],["(*.f64 t (-.f64 y z))","y","0",0.2080078125],["(*.f64 t (-.f64 y z))","t","-inf",0.212890625],["(*.f64 t (-.f64 y z))","t","inf",0.2451171875],["(*.f64 t (-.f64 y z))","t","0",0.2509765625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","-inf",0.4140625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","inf",0.383056640625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","0",0.376953125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","-inf",0.468994140625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","inf",1.072998046875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","0",0.43701171875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","-inf",0.444091796875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","inf",0.421875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","0",0.468017578125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","-inf",0.347900390625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","inf",0.423095703125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","0",0.7099609375]],"time":12.384033203125,"type":"series"},{"count":[[4,207]],"inputs":[["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(*.f64 t (-.f64 y z))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (-.f64 z y) x x) (*.f64 y t)) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (-.f64 z y) x x) (*.f64 t y)) (neg.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t y) (+.f64 (neg.f64 (*.f64 t z)) (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y t) (+.f64 (neg.f64 (*.f64 z t)) (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 0) (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) (*.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)) (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) (*.f64 0 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z y) x) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y z) t x) 1) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z y) x) (*.f64 (fma.f64 (-.f64 y z) t x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (-.f64 y z) t x) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (-.f64 y z) t x) 0) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 t (-.f64 y z)) (-.f64 (*.f64 x (-.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 x (-.f64 y z)) (fma.f64 (-.f64 y z) t x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (-.f64 (*.f64 x (-.f64 y z)) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (-.f64 z y) x x) (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)) (cbrt.f64 (pow.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (cbrt.f64 (*.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 z y) x x))))) (+.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (cbrt.f64 (fma.f64 (-.f64 z y) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)) (cbrt.f64 (*.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 z y) x x))))) (+.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 2)) (cbrt.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (-.f64 y z) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (-.f64 z y) x x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y z) (-.f64 t x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y z) (-.f64 t x))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) (-.f64 t x))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (-.f64 t x)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2))) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) x (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 z y) x) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 z y) x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 y z)) -1 (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (neg.f64 x) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) x) 1 (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (-.f64 y z)) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (cbrt.f64 (*.f64 (-.f64 z y) x)) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (-.f64 y z) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 z y) (fma.f64 (-.f64 y z) t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 (+.f64 1 z) y) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (+.f64 1 z) y) x (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (-.f64 z y) x x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (-.f64 z y) x x) 1 (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (-.f64 y z)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (-.f64 y z)) 1 (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)) (cbrt.f64 (*.f64 t (-.f64 y z))) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) t) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 z y) t) (fma.f64 (-.f64 z y) x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t y) (neg.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y t) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 t z)) (*.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z t)) (*.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 t y)) (*.f64 1 (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 y t)) (*.f64 1 (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (-.f64 y z)) 0) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (-.f64 y z)) (*.f64 (*.f64 t (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t y) 1) (*.f64 (neg.f64 (*.f64 t z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y t) 1) (*.f64 (neg.f64 (*.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (-.f64 y z)) (*.f64 0 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (*.f64 t t)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2)) (cbrt.f64 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y t (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t y (neg.f64 (*.f64 t z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y x) (neg.f64 (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z x)) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 x y)) (*.f64 1 (neg.f64 (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 y x)) (*.f64 1 (neg.f64 (*.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 z y) x) 0) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 y z)) 0) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 y z)) (*.f64 (*.f64 x (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) 1) (*.f64 (neg.f64 (*.f64 x z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y x) 1) (*.f64 (neg.f64 (*.f64 z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 z y) x)) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (-.f64 y z))) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 y z)) (*.f64 0 (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 z y) x)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (cbrt.f64 (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y z) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2))) (cbrt.f64 (*.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (neg.f64 (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (neg.f64 (*.f64 x z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 z y) x x) 0) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 (fma.f64 (-.f64 z y) x x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 z y) x x)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 0 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 x (*.f64 x y)) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 x (*.f64 y x)) (neg.f64 (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 x (-.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 (*.f64 x x)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (*.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (*.f64 (-.f64 z y) x) x)))) (+.f64 (cbrt.f64 (*.f64 (-.f64 z y) x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 z y) x) x)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (-.f64 z y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (*.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x (-.f64 y z)))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 (+.f64 1 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 1 z) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 x) (*.f64 (-.f64 z y) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (*.f64 (-.f64 y z) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 x (-.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 y z)) -1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 z y) x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 z y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (neg.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) x) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) (cbrt.f64 (*.f64 (-.f64 z y) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 z y) x)))))"]],"rules":[["egg-rr",52],["egg-rr",42],["egg-rr",36],["egg-rr",77]],"time":41.406005859375,"type":"rewrite"},{"count":[[336,250]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 z x) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 (-.f64 x t) z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(neg.f64 (*.f64 (-.f64 x t) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 t x) y x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(neg.f64 (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 t (-.f64 y z))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 z x) x)","(fma.f64 z x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(fma.f64 (neg.f64 y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 (-.f64 z y) x x)"]],"time":366.409912109375,"type":"simplify"},{"compiler":[[4143,1133]],"time":30.709228515625,"type":"eval"},{"alts":[["(fma.f64 x (-.f64 z y) (fma.f64 (-.f64 y z) t x))","fresh",0.01171875],["(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","fresh",0.01953125],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","next",0.01171875]],"compiler":[[15,8],[15,8],[15,8],[15,8],[15,8],[15,8]],"count":[[254,3]],"kept":[{"done":[1,0],"fresh":[2,0],"new":[250,3],"picked":[1,0]}],"min-error":[0],"time":117.540771484375,"type":"prune"},{"compiler":[[31,8]],"locations":[["(fma.f64 (-.f64 z y) x x)",0.00390625,true],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))",0.0078125,true]],"time":6.442138671875,"type":"localize"},{"count":[[2,84]],"series":[["(fma.f64 (-.f64 z y) x x)","x","-inf",0.298095703125],["(fma.f64 (-.f64 z y) x x)","x","inf",0.2119140625],["(fma.f64 (-.f64 z y) x x)","x","0",0.237060546875],["(fma.f64 (-.f64 z y) x x)","y","-inf",0.1669921875],["(fma.f64 (-.f64 z y) x x)","y","inf",0.22607421875],["(fma.f64 (-.f64 z y) x x)","y","0",0.195068359375],["(fma.f64 (-.f64 z y) x x)","z","-inf",0.158935546875],["(fma.f64 (-.f64 z y) x x)","z","inf",0.18505859375],["(fma.f64 (-.f64 z y) x x)","z","0",0.159912109375],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","x","-inf",0.34619140625],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","x","inf",0.274169921875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","x","0",0.366943359375],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","t","-inf",0.369873046875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","t","inf",0.276123046875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","t","0",0.35498046875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","z","-inf",0.446044921875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","z","inf",0.309814453125],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","z","0",0.397216796875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","y","-inf",0.326904296875],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","y","inf",0.448974609375],["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","y","0",0.787109375]],"time":6.89697265625,"type":"series"},{"count":[[2,77]],"inputs":[["(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(fma.f64 (-.f64 z y) x x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 z y) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) (*.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 0) (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) (*.f64 0 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y z) t) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 z y) x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (fma.f64 t (-.f64 y z) (*.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) t) x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z y) x) (+.f64 x (*.f64 (-.f64 y z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (-.f64 z y) x x) (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 2)) (cbrt.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) t) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (-.f64 y z) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y z) t)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y z) t) 2)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 z (-.f64 y 1)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z (-.f64 y 1)) x (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (-.f64 z y) x x)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) t) 1 (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y z) t) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (-.f64 z y) x x) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (-.f64 z y) x x) 1 (*.f64 (-.f64 y z) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 (fma.f64 (-.f64 z y) x x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 z y) x x) 0) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z y) x x) (*.f64 0 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 z y) x x)) (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 z (-.f64 y 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z (-.f64 y 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 z y) x x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 z y) x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 x) (*.f64 (-.f64 z y) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z y) x x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 z y) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 z y) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 z y) x x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 z y) x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 z y) x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 z y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z y) x) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 z y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 z y) x))))))"]],"rules":[["egg-rr",37],["egg-rr",40]],"time":25.759033203125,"type":"rewrite"},{"count":[[161,109]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (-.f64 z y) x) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(*.f64 (-.f64 (+.f64 1 z) y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 x (*.f64 (-.f64 x t) z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 t x) y x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (-.f64 z y) x) x)","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 (-.f64 z y) x (fma.f64 t (-.f64 y z) x))","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(fma.f64 (neg.f64 y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) x)","(fma.f64 z x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(fma.f64 (-.f64 z y) x x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(fma.f64 (-.f64 z y) x x)"]],"time":247.76904296875,"type":"simplify"},{"compiler":[[1562,394]],"time":13.988037109375,"type":"eval"},{"alts":[["(fma.f64 x (-.f64 z y) (fma.f64 (-.f64 y z) t x))","fresh",0.01171875],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","next",0.01171875]],"compiler":[[15,8],[20,12],[15,8],[20,12]],"count":[[112,2]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[109,1],"picked":[1,0]}],"min-error":[0],"time":31.036865234375,"type":"prune"},{"compiler":[[57,22]],"locations":[["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))",0.00390625,true],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))",0.0078125,true],["(+.f64 x (*.f64 -1 (*.f64 y x)))",0.015625,true]],"time":12.092041015625,"type":"localize"},{"count":[[3,96]],"series":[["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","y","-inf",0.153076171875],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","y","inf",0.155029296875],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","y","0",0.18212890625],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","x","-inf",0.226806640625],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","x","inf",0.180908203125],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","x","0",0.2109375],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","z","-inf",0.180908203125],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","z","inf",0.156005859375],["(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","z","0",0.1669921875],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","x","-inf",0.333984375],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","x","inf",0.23486328125],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","x","0",0.251953125],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","t","-inf",0.217041015625],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","t","inf",0.202880859375],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","t","0",0.321044921875],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","z","-inf",0.245849609375],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","z","inf",0.291015625],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","z","0",0.369140625],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","y","-inf",0.203125],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","y","inf",0.23291015625],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","y","0",0.241943359375],["(+.f64 x (*.f64 -1 (*.f64 y x)))","y","-inf",0.197998046875],["(+.f64 x (*.f64 -1 (*.f64 y x)))","y","inf",0.302001953125],["(+.f64 x (*.f64 -1 (*.f64 y x)))","y","0",0.322021484375],["(+.f64 x (*.f64 -1 (*.f64 y x)))","x","-inf",0.218994140625],["(+.f64 x (*.f64 -1 (*.f64 y x)))","x","inf",0.30712890625],["(+.f64 x (*.f64 -1 (*.f64 y x)))","x","0",0.56103515625]],"time":7.325927734375,"type":"series"},{"count":[[3,182]],"inputs":[["(+.f64 x (*.f64 -1 (*.f64 y x)))","(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 1 y)) 0) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 y)) (*.f64 (*.f64 x (-.f64 1 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (-.f64 1 y))) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 y)) (*.f64 0 (*.f64 x (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 (*.f64 x x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (neg.f64 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (cbrt.f64 (neg.f64 (*.f64 x (*.f64 y x)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (neg.f64 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (neg.f64 (*.f64 x (*.f64 y x)))))) (+.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (*.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 y x))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)) (cbrt.f64 (*.f64 x (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 x) (*.f64 (neg.f64 y) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (neg.f64 y) (cbrt.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) -1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (cbrt.f64 (pow.f64 (*.f64 y x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 y x)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (cbrt.f64 (neg.f64 (*.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (neg.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y x)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (neg.f64 (*.f64 y x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y z) t) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (-.f64 y z) (*.f64 x (-.f64 1 y))) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z x) (fma.f64 t (-.f64 y z) (*.f64 x (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) t) x) (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) t) (neg.f64 (*.f64 y x))) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z x x) (+.f64 (neg.f64 (*.f64 y x)) (*.f64 (-.f64 y z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 z y)) (+.f64 x (*.f64 (-.f64 y z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 0) (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) (*.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))) (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) (*.f64 0 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t (-.f64 y z) (*.f64 x (-.f64 1 y))) 1) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (-.f64 y z) (*.f64 z x)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (-.f64 y z) (fma.f64 z x x)) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y x)) (fma.f64 t (-.f64 y z) (fma.f64 z x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 y)) (fma.f64 t (-.f64 y z) (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 t (-.f64 y z) (*.f64 z x)) (neg.f64 (*.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (-.f64 y z) t) (*.f64 x (-.f64 z y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (*.f64 x (-.f64 z y)) (*.f64 (-.f64 y z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t (-.f64 y z) (fma.f64 z x x)) 1) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t (-.f64 y z) (*.f64 z x)) 1) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z x x) (-.f64 (*.f64 y x) (*.f64 (-.f64 y z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) (*.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 t (-.f64 y z) (fma.f64 z x x)) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 t (-.f64 y z) (fma.f64 z x x)) 0) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 2)) (cbrt.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) t) 1 (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y z) t) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (-.f64 y z) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) t) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y z) t)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) t)) 2) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 2)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (-.f64 (+.f64 z 1) y)) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 1 (*.f64 (-.f64 y z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 2)) (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (*.f64 (-.f64 y z) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 0) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) (*.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (-.f64 (+.f64 z 1) y))) (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) (*.f64 0 (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z x) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 1 y)) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z x x) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y x)) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 x (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 z y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z x x) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 z x x) 0) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (-.f64 (*.f64 y x) (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 y x) (fma.f64 z x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (-.f64 (+.f64 z 1) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 z x) 2)) (cbrt.f64 (*.f64 (*.f64 z x) (*.f64 x (-.f64 1 y)))))) (+.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) (cbrt.f64 (*.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 z x) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)) (cbrt.f64 (*.f64 (*.f64 z x) (*.f64 x (-.f64 1 y)))))) (+.f64 (cbrt.f64 (*.f64 z x)) (cbrt.f64 (*.f64 x (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 2)) (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 z (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (neg.f64 y) (+.f64 z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (+.f64 z 1) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (-.f64 1 y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 (+.f64 z 1) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 (+.f64 z 1) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (-.f64 (+.f64 z 1) y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 x (-.f64 (+.f64 z 1) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 y x) (fma.f64 z x x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 (+.f64 z 1) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (-.f64 1 y))) (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z x)) (cbrt.f64 (pow.f64 (*.f64 z x) 2)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (-.f64 1 y)) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z x) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x (-.f64 1 y))) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 y)) 2)) (cbrt.f64 (*.f64 x (-.f64 1 y))) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 y) x (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 1 y) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (-.f64 1 y)) 1 (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 z 1) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z 1) x (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z x x)) (pow.f64 (cbrt.f64 (fma.f64 z x x)) 2) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z x x) (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) y (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 y x)) 1 (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) -1 (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 y x) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (cbrt.f64 (neg.f64 (*.f64 y x))) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) x (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (neg.f64 x) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 y) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 y x)) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y x)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2))) (fma.f64 z x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z x x) 1 (neg.f64 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 z x) 2)) (cbrt.f64 (*.f64 z x)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) z) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z x) 1 (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 z x)) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) x) (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z x (*.f64 x (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x z (*.f64 x (-.f64 1 y)))))))"]],"rules":[["egg-rr",79],["egg-rr",53],["egg-rr",50]],"time":37.60693359375,"type":"rewrite"},{"count":[[278,222]],"inputs":[["(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 -1 (*.f64 (-.f64 y 1) x))","x","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(*.f64 -1 (*.f64 y x))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(+.f64 x (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(+.f64 (*.f64 z x) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 -1 (*.f64 y x))","(*.f64 -1 (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 (+.f64 1 (*.f64 -1 y)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 (-.f64 1 y) x)","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 (-.f64 1 y) x)","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 (-.f64 1 y) x)","(*.f64 -1 (*.f64 (-.f64 y 1) x))","(*.f64 (-.f64 1 y) x)","x","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(*.f64 (-.f64 1 y) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(*.f64 (-.f64 1 y) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(*.f64 (-.f64 1 y) x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 (-.f64 x t) z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(neg.f64 (*.f64 (-.f64 x t) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 (-.f64 x t) z) (fma.f64 (neg.f64 (-.f64 x t)) y x))","(+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 (-.f64 t x) y x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 (-.f64 x t) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 x t) z (fma.f64 (-.f64 t x) y x))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(neg.f64 (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(-.f64 (fma.f64 (-.f64 t x) y x) (*.f64 (-.f64 t x) z))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 (-.f64 1 (-.f64 y z)) x (*.f64 t (-.f64 y z)))","(+.f64 x (*.f64 -1 (*.f64 y x)))","(*.f64 (-.f64 1 y) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 (+.f64 1 (+.f64 z (*.f64 -1 y))) x)","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 -1 (*.f64 (-.f64 (+.f64 (*.f64 -1 z) y) 1) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) x)","(fma.f64 z x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 (-.f64 1 (-.f64 y z)) x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))"]],"time":285.564208984375,"type":"simplify"},{"compiler":[[3611,1350]],"time":36.556884765625,"type":"eval"},{"alts":[["(fma.f64 x (-.f64 z y) (fma.f64 (-.f64 y z) t x))","fresh",0.01171875],["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","done",0.01171875]],"compiler":[[15,8],[20,12]],"count":[[224,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[222,0],"picked":[1,1]}],"min-error":[0],"time":101.2900390625,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["y",0.01171875,1],["z",0.01171875,1],["t",0.01171875,1],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))",0.01171875,1],["(-.f64 y z)",0.01171875,1],["(-.f64 y z)",0.01171875,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[7,5],[7,5],[110,38]],"count":[[9,1]],"inputs":[["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 x (-.f64 z y) (fma.f64 (-.f64 y z) t x))","(fma.f64 z (-.f64 x t) (fma.f64 (-.f64 t x) y x))","(fma.f64 (-.f64 y z) t (fma.f64 (-.f64 z y) x x))","(pow.f64 (cbrt.f64 (fma.f64 (-.f64 t x) (-.f64 y z) x)) 3)","(+.f64 (*.f64 (-.f64 t x) y) (+.f64 (neg.f64 (*.f64 z (-.f64 t x))) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))"]],"link":["."],"name":["Data.Metrics.Snapshot:quantile from metrics-0.3.0.2"],"oracle":[0.6889802735163767],"outputs":[["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))"]],"time":33.68896484375,"times":[["x",4.31298828125],["y",5.93505859375],["z",3.969970703125],["t",4.10302734375],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))",4.547119140625],["(-.f64 y z)",4.30419921875],["(-.f64 y z)",4.299072265625]],"type":"regimes"},{"compiler":[[20,12]],"inputs":[["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (-.f64 y z) t (+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x)))))","(fma.f64 (-.f64 y z) t (*.f64 x (-.f64 (+.f64 z 1) y)))"]],"stop":[["fuel",1]],"time":21.119140625,"type":"simplify"},{"time":0.02490234375,"type":"soundness"},{"compiler":[[20,12]],"remove-preprocessing":[[]],"time":11.19091796875,"type":"end"}]