[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.9224383648252115,0.07658531109336764,0.0009763240814208984],[11,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[10,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[9,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[8,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[7,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[6,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":21.85693359375,"type":"analyze"},{"outcomes":[["body",256,"valid",286.304931640625,8256]],"time":293.97705078125,"type":"sample"},{"compiler":[[9,6]],"inputs":[["0","1"],["(/.f64 (*.f64 x 100) (+.f64 x y))","(/.f64 (*.f64 y 100) (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 x 100) (+.f64 x y))","(/.f64 (*.f64 y 100) (+.f64 y x))","(/.f64 (*.f64 y 100) (+.f64 x y))"]],"symmetry":[[]],"time":58.48193359375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))"]],"time":17.743896484375,"type":"simplify"},{"compiler":[[9,6]],"time":0.2041015625,"type":"eval"},{"alts":[["(/.f64 (*.f64 x 100) (+.f64 x y))","next",0.41796875]],"compiler":[[9,6],[9,6]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.41796875],"time":0.708984375,"type":"prune"},{"compiler":[[18,9]],"locations":[["(/.f64 (*.f64 x 100) (+.f64 x y))",0.41012001741718873,true]],"time":4.10791015625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 x 100) (+.f64 x y))","y","-inf",0.3349609375],["(/.f64 (*.f64 x 100) (+.f64 x y))","y","inf",0.40283203125],["(/.f64 (*.f64 x 100) (+.f64 x y))","y","0",0.297119140625],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","-inf",0.30810546875],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","inf",0.410888671875],["(/.f64 (*.f64 x 100) (+.f64 x y))","x","0",0.565185546875]],"time":2.416015625,"type":"series"},{"count":[[1,75]],"inputs":[["(/.f64 (*.f64 x 100) (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (/.f64 (+.f64 x y) -100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x 100)) (/.f64 (cbrt.f64 (*.f64 10000 (*.f64 x x))) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 100) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (*.f64 x 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (/.f64 x (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -100 x) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 10000 (*.f64 x x))) (+.f64 x y)) (cbrt.f64 (*.f64 x 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (*.f64 -100 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1000000 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) 1/100)) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (+.f64 x y) (sqrt.f64 1/100))) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 (+.f64 x y))) -100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (+.f64 x y) -100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 x)) (cbrt.f64 (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2))) (cbrt.f64 (*.f64 (+.f64 x y) 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 1/100)) (/.f64 (+.f64 x y) (cbrt.f64 10000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1/100)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (*.f64 (+.f64 x y) 1/100))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 2) 10000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 1/100))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (sqrt.f64 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 1/100)) (*.f64 (+.f64 x y) (sqrt.f64 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (sqrt.f64 100)) (*.f64 (+.f64 x y) (sqrt.f64 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 10000 (*.f64 x x)))) (*.f64 (cbrt.f64 (*.f64 (+.f64 x y) 1/100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (/.f64 (+.f64 x y) -100) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -100 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x 100) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (+.f64 x y) 1/100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (*.f64 x 100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (cbrt.f64 (*.f64 10000 (*.f64 x x)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 x 100))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 -100 x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) 1/100)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x 100)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -100 x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (*.f64 (+.f64 x y) 1/100))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 x y) 1/100)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -100 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -100 x) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",75]],"time":21.778076171875,"type":"rewrite"},{"count":[[99,90]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (*.f64 -100 (*.f64 (pow.f64 x 4) (pow.f64 y -4))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (*.f64 -100 (*.f64 (pow.f64 x 4) (pow.f64 y -4))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (*.f64 -100 (*.f64 (pow.f64 x 4) (pow.f64 y -4))))"]],"time":76.68701171875,"type":"simplify"},{"compiler":[[1250,695]],"time":14.990966796875,"type":"eval"},{"alts":[["(/.f64 x (*.f64 (+.f64 x y) 1/100))","fresh",0.19140625],["(/.f64 (*.f64 x 100) (+.f64 x y))","done",0.41796875],["(*.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1000000 (+.f64 x y))))","fresh",25.2343740488282],["(*.f64 (/.f64 (cbrt.f64 (*.f64 10000 (*.f64 x x))) (+.f64 x y)) (cbrt.f64 (*.f64 x 100)))","fresh",25.590337527264005],["(*.f64 (/.f64 100 (+.f64 x y)) x)","next",0.16015625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 x 100))) (cbrt.f64 (+.f64 x y)))","fresh",9.44656581024595],["(/.f64 (neg.f64 x) (/.f64 (+.f64 x y) -100))","fresh",0.17578125]],"compiler":[[9,6],[9,6],[17,11],[17,12],[9,6],[22,15],[10,7],[9,6],[17,11],[17,12],[9,6],[22,15],[10,7]],"count":[[91,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[90,6],"picked":[1,1]}],"min-error":[0],"time":20.130126953125,"type":"prune"},{"compiler":[[20,9]],"locations":[["(/.f64 100 (+.f64 x y))",0.01953125,true],["(*.f64 (/.f64 100 (+.f64 x y)) x)",0.1484375,true]],"time":4.144775390625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 100 (+.f64 x y))","y","-inf",0.2490234375],["(/.f64 100 (+.f64 x y))","y","inf",0.22802734375],["(/.f64 100 (+.f64 x y))","y","0",0.27685546875],["(/.f64 100 (+.f64 x y))","x","-inf",0.239990234375],["(/.f64 100 (+.f64 x y))","x","inf",0.294921875],["(/.f64 100 (+.f64 x y))","x","0",0.362060546875],["(*.f64 (/.f64 100 (+.f64 x y)) x)","y","-inf",0.18701171875],["(*.f64 (/.f64 100 (+.f64 x y)) x)","y","inf",0.218017578125],["(*.f64 (/.f64 100 (+.f64 x y)) x)","y","0",0.1630859375],["(*.f64 (/.f64 100 (+.f64 x y)) x)","x","-inf",0.176025390625],["(*.f64 (/.f64 100 (+.f64 x y)) x)","x","inf",0.2099609375],["(*.f64 (/.f64 100 (+.f64 x y)) x)","x","0",0.22314453125]],"time":2.998046875,"type":"series"},{"count":[[2,130]],"inputs":[["(*.f64 (/.f64 100 (+.f64 x y)) x)","(/.f64 100 (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 0) (/.f64 (*.f64 100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) (*.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 100 x) (+.f64 x y))) (/.f64 (*.f64 100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) (*.f64 0 (/.f64 (*.f64 100 x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 100 x) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 100 x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 100 (+.f64 x y)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 x -100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 100 (+.f64 x y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 100 (+.f64 x y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1000000 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x -100) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) x) (cbrt.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 100 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 x) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (*.f64 100 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) (*.f64 x (cbrt.f64 (/.f64 100 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x -100) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 x) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x -100) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 100 x))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 x) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (+.f64 x y) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (/.f64 1000000 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) x) (/.f64 (+.f64 x y) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -100) (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) x)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 100 x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x -100) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x -100) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x -100) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 x) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 100 x) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 100 x) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 100 x) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 100 x) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x -100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -100 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -100 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (/.f64 -100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 100 x) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 100 x) (+.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 100 (+.f64 x y)) 0) (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 100 (+.f64 x y)) (*.f64 (/.f64 100 (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 100 (+.f64 x y))) (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 100 (+.f64 x y)) (*.f64 0 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (+.f64 x y) 100)) (/.f64 -100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 100 (+.f64 x y)) (/.f64 0 (/.f64 (+.f64 x y) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (/.f64 -100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 100 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (/.f64 (sqrt.f64 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -100 (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 100) (cbrt.f64 (+.f64 x y))) (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -100 (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (/.f64 (sqrt.f64 100) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 100) (+.f64 x y)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) -100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (/.f64 (cbrt.f64 10000) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 10000) (+.f64 x y)) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (+.f64 x y) -100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 100)) (/.f64 (neg.f64 (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 100)) (/.f64 (+.f64 x y) (neg.f64 (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (+.f64 x y)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (+.f64 x y) 100) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -100 (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (+.f64 x y) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 100)) (neg.f64 (/.f64 (+.f64 x y) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 100) (/.f64 (+.f64 x y) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 100 (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x y) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 100 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) (cbrt.f64 -100)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2)) (cbrt.f64 100)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (cbrt.f64 10000)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 100) (cbrt.f64 (+.f64 x y))) (sqrt.f64 100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -100) (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 100) (cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -100 (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 100 -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 100) (*.f64 (/.f64 (+.f64 x y) (sqrt.f64 100)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) 100) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 100 (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 100 (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -100 (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -100 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 x y)) -100))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 100 (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",67],["egg-rr",63]],"time":26.60107421875,"type":"rewrite"},{"count":[[178,159]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(fma.f64 -100 (/.f64 (/.f64 x y) y) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (/.f64 x y) y) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 100 y) (*.f64 -100 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (/.f64 (/.f64 x y) y)))) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(fma.f64 (/.f64 (/.f64 y x) x) -100 (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) -100 (/.f64 100 x)) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(fma.f64 (/.f64 (/.f64 y x) x) -100 (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) -100 (/.f64 100 x)) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(/.f64 100 x)","(+.f64 (*.f64 100 (/.f64 1 x)) (*.f64 -100 (/.f64 y (pow.f64 x 2))))","(fma.f64 (/.f64 (/.f64 y x) x) -100 (/.f64 100 x))","(+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 100 x) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (*.f64 100 (/.f64 1 x)) (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 -100 (/.f64 y (pow.f64 x 2))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) -100 (/.f64 100 x)) (fma.f64 100 (/.f64 (pow.f64 (/.f64 y x) 2) x) (/.f64 (/.f64 (*.f64 -100 y) x) x)))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(fma.f64 -100 (/.f64 (/.f64 x y) y) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (/.f64 x y) y) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 100 y) (*.f64 -100 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (/.f64 (/.f64 x y) y)))) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2)))","(/.f64 100 y)","(+.f64 (*.f64 100 (/.f64 1 y)) (*.f64 -100 (/.f64 x (pow.f64 y 2))))","(fma.f64 -100 (/.f64 (/.f64 x y) y) (/.f64 100 y))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3)))))","(+.f64 (/.f64 100 y) (fma.f64 -100 (/.f64 (/.f64 x y) y) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2))))","(+.f64 (*.f64 100 (/.f64 1 y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (+.f64 (*.f64 -100 (/.f64 x (pow.f64 y 2))) (*.f64 100 (/.f64 (pow.f64 x 2) (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 100 y) (*.f64 -100 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 4)) (/.f64 (/.f64 x y) y)))) (*.f64 (/.f64 100 y) (pow.f64 (/.f64 x y) 2)))"]],"time":148.552001953125,"type":"simplify"},{"compiler":[[2216,1267]],"time":27.845947265625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) x)","fresh",0.5974389160635145],["(*.f64 (/.f64 x (+.f64 x y)) 100)","next",0.17274676612247944],["(/.f64 (*.f64 x 100) (+.f64 x y))","done",0.41796875],["(/.f64 x (*.f64 (+.f64 x y) 1/100))","fresh",0.19140625],["(*.f64 (/.f64 (sqrt.f64 100) (/.f64 (+.f64 x y) (sqrt.f64 100))) x)","fresh",0.285820019536884],["(*.f64 (/.f64 100 (+.f64 x y)) x)","done",0.16015625]],"compiler":[[17,11],[9,6],[9,6],[9,6],[13,10],[9,6],[17,11],[9,6],[9,6],[13,10]],"count":[[166,6]],"kept":[{"done":[1,1],"fresh":[5,1],"new":[159,3],"picked":[1,1]}],"min-error":[0],"time":49.885009765625,"type":"prune"},{"compiler":[[20,7]],"locations":[["(/.f64 x (+.f64 x y))",0.015625,true],["(*.f64 (/.f64 x (+.f64 x y)) 100)",0.16884051612247944,true]],"time":4.126953125,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.20703125],["(/.f64 x (+.f64 x y))","y","inf",0.224853515625],["(/.f64 x (+.f64 x y))","y","0",0.18701171875],["(/.f64 x (+.f64 x y))","x","-inf",0.265869140625],["(/.f64 x (+.f64 x y))","x","inf",0.2900390625],["(/.f64 x (+.f64 x y))","x","0",0.30419921875],["(*.f64 (/.f64 x (+.f64 x y)) 100)","y","-inf",0.22802734375],["(*.f64 (/.f64 x (+.f64 x y)) 100)","y","inf",0.23388671875],["(*.f64 (/.f64 x (+.f64 x y)) 100)","y","0",0.18212890625],["(*.f64 (/.f64 x (+.f64 x y)) 100)","x","-inf",0.217041015625],["(*.f64 (/.f64 x (+.f64 x y)) 100)","x","inf",0.20703125],["(*.f64 (/.f64 x (+.f64 x y)) 100)","x","0",0.30810546875]],"time":3.1171875,"type":"series"},{"count":[[2,113]],"inputs":[["(*.f64 (/.f64 x (+.f64 x y)) 100)","(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 10000) (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 100) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (cbrt.f64 (/.f64 x (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -100 x) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (*.f64 x 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (*.f64 100 (cbrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 10000) (/.f64 x (+.f64 x y))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (sqrt.f64 100)) (/.f64 (+.f64 x y) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x 100) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -100 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (+.f64 x y) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 x 100))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x 100) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 x (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 100 (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x 100)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 x) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -100 x) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -100 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (+.f64 x y)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (/.f64 (+.f64 x y) 100) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (/.f64 (+.f64 x y) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -100 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) 100))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 100 (neg.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x 100) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 x (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 0 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 x y))) x) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (cbrt.f64 x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",46],["egg-rr",67]],"time":27.977783203125,"type":"rewrite"},{"count":[[161,142]],"inputs":[["(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (-.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (/.f64 y x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))"]],"time":152.80810546875,"type":"simplify"},{"compiler":[[1935,981]],"time":21.487060546875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) x)","fresh",0.5974389160635145],["(*.f64 (/.f64 x (+.f64 x y)) 100)","done",0.17274676612247944],["(/.f64 (*.f64 x 100) (+.f64 x y))","done",0.41796875],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3) 100)","fresh",0.37536073102820383],["(*.f64 (/.f64 100 (+.f64 x y)) x)","done",0.16015625],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","next",0.21962176612247944]],"compiler":[[17,11],[9,6],[9,6],[12,9],[9,6],[13,10],[17,11],[12,9],[13,10]],"count":[[148,6]],"kept":[{"done":[2,2],"fresh":[3,1],"new":[142,2],"picked":[1,1]}],"min-error":[0],"time":37.56201171875,"type":"prune"},{"compiler":[[34,16]],"locations":[["(/.f64 x (+.f64 x y))",0.015625,false],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))",0.12235128162065376,true],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))",0.17253876953688402,true]],"time":6.720947265625,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","y","-inf",0.18603515625],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","y","inf",0.201904296875],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","y","0",0.1650390625],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","x","-inf",0.364013671875],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","x","inf",0.1708984375],["(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","x","0",0.2041015625],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","y","-inf",0.31005859375],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","y","inf",0.25],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","y","0",0.216064453125],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","x","-inf",0.244873046875],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","x","inf",0.27197265625],["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","x","0",0.48486328125]],"time":3.2509765625,"type":"series"},{"count":[[2,137]],"inputs":[["(*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))","(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 0) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 1/2) (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (*.f64 1/2 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (*.f64 0 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100)) (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (sqrt.f64 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 100)) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 100) (cbrt.f64 (/.f64 x (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 (sqrt.f64 100))) (sqrt.f64 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 (sqrt.f64 100))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 100)) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 100)) (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (/.f64 (+.f64 x y) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 100) (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (*.f64 (sqrt.f64 100) (cbrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)) (cbrt.f64 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (sqrt.f64 100)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (/.f64 (+.f64 x y) (sqrt.f64 100))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (*.f64 x (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (sqrt.f64 100)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (sqrt.f64 100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (sqrt.f64 100)) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) (/.f64 x (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100)) (cbrt.f64 (*.f64 x (sqrt.f64 100)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (sqrt.f64 100))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (sqrt.f64 100))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 100))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (sqrt.f64 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (sqrt.f64 100)) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) 1) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (/.f64 (+.f64 x y) (sqrt.f64 100)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (/.f64 (+.f64 x y) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1000000) (pow.f64 (/.f64 x (+.f64 x y)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (/.f64 (+.f64 x y) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 100) (neg.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sqrt.f64 1000000) (pow.f64 (/.f64 x (+.f64 x y)) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1/2) (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))) (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (*.f64 x 100) (+.f64 x y))) (*.f64 1/2 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) (*.f64 0 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100) (sqrt.f64 1000000))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 100)) (*.f64 (cbrt.f64 100) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 100) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))) (cbrt.f64 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100) (sqrt.f64 1000000))) (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 (sqrt.f64 100))) (sqrt.f64 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (cbrt.f64 (sqrt.f64 100))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 100) (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 100 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 100)) (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x 100) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (/.f64 x (+.f64 x y)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (cbrt.f64 (sqrt.f64 100))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100)) (*.f64 (sqrt.f64 100) (cbrt.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 100) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x 100)) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x 100) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x 100)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (sqrt.f64 100)) (/.f64 (+.f64 x y) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 100) (*.f64 (sqrt.f64 100) (neg.f64 x))) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 x (cbrt.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) 100)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x 100)) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x 100) 1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x (sqrt.f64 100)) (cbrt.f64 (+.f64 x y))) (sqrt.f64 100)) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 100) (neg.f64 x)) (sqrt.f64 100)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x (sqrt.f64 100))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 100) (sqrt.f64 1000000)))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x 100)) 1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x 100)) (cbrt.f64 (neg.f64 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x 100)) -1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x 100)) (cbrt.f64 (+.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) 1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 100) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (+.f64 x y)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (+.f64 x y) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (*.f64 x 100))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x 100) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x 100) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) 100))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 100 (neg.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",69],["egg-rr",68]],"time":30.490966796875,"type":"rewrite"},{"count":[[185,167]],"inputs":[["(*.f64 10 (/.f64 x y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(*.f64 10 (/.f64 x y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 10 (/.f64 x y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(*.f64 100 (/.f64 x y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 10 (/.f64 x y))","(/.f64 (*.f64 10 x) y)","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 10 x) y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -10 (pow.f64 x 4)) (pow.f64 y 4)))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(fma.f64 -10 (/.f64 y x) 10)","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (fma.f64 (pow.f64 (/.f64 y x) 2) 10 (/.f64 (*.f64 -10 y) x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 10 (+.f64 (*.f64 -10 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3))) (*.f64 10 (pow.f64 (/.f64 y x) 2))))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(fma.f64 -10 (/.f64 y x) 10)","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (fma.f64 (pow.f64 (/.f64 y x) 2) 10 (/.f64 (*.f64 -10 y) x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 10 (+.f64 (*.f64 -10 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3))) (*.f64 10 (pow.f64 (/.f64 y x) 2))))","10","(+.f64 10 (*.f64 -10 (/.f64 y x)))","(fma.f64 -10 (/.f64 y x) 10)","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 10 (fma.f64 (pow.f64 (/.f64 y x) 2) 10 (/.f64 (*.f64 -10 y) x)))","(+.f64 10 (+.f64 (*.f64 -10 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -10 (/.f64 y x)) (*.f64 10 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 10 (+.f64 (*.f64 -10 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3))) (*.f64 10 (pow.f64 (/.f64 y x) 2))))","(*.f64 10 (/.f64 x y))","(/.f64 (*.f64 10 x) y)","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 10 x) y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -10 (pow.f64 x 4)) (pow.f64 y 4)))","(*.f64 10 (/.f64 x y))","(/.f64 (*.f64 10 x) y)","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 10 (/.f64 x y)))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 10 x) y))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -10 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 10 (/.f64 x y)) (+.f64 (*.f64 -10 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 10 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -10 (pow.f64 (/.f64 x y) 2) (*.f64 10 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -10 (pow.f64 x 4)) (pow.f64 y 4)))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","100","(+.f64 100 (*.f64 -100 (/.f64 y x)))","(fma.f64 -100 (/.f64 y x) 100)","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -100 (/.f64 y x))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (/.f64 (*.f64 -100 y) x)))","(+.f64 100 (+.f64 (*.f64 100 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -100 (/.f64 y x)) (*.f64 -100 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 100 (fma.f64 100 (pow.f64 (/.f64 y x) 2) (*.f64 -100 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))","(*.f64 100 (/.f64 x y))","(/.f64 (*.f64 100 x) y)","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 100 (/.f64 x y)))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 100 x) y))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -100 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 100 (/.f64 x y)) (+.f64 (*.f64 -100 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 100 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 (fma.f64 -100 (pow.f64 (/.f64 x y) 2) (*.f64 100 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)))) (/.f64 (*.f64 -100 (pow.f64 x 4)) (pow.f64 y 4)))"]],"time":158.781005859375,"type":"simplify"},{"compiler":[[3694,2181]],"time":46.719970703125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) x)","fresh",0.5974389160635145],["(*.f64 (/.f64 x (+.f64 x y)) 100)","done",0.17274676612247944],["(*.f64 (/.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100))) (sqrt.f64 100))","fresh",0.1519800413890958],["(*.f64 (/.f64 100 (+.f64 x y)) x)","done",0.16015625]],"compiler":[[17,11],[9,6],[13,10],[9,6]],"count":[[233,4]],"kept":[{"done":[3,2],"fresh":[2,1],"new":[227,1],"picked":[1,0]}],"min-error":[0],"time":79.235107421875,"type":"prune"},{"accuracy":[0.15198004138909577],"baseline":[0.1519800413890958],"branch":[["x",0.15198004138909577,1],["y",0.15198004138909577,1],["(/.f64 (*.f64 x 100) (+.f64 x y))",0.15198004138909577,1]],"compiler":[[3,2],[3,2],[9,6],[146,80]],"count":[[13,1]],"inputs":[["(*.f64 (/.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100))) (sqrt.f64 100))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3) 100)","(*.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 100)) (sqrt.f64 100))","(*.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2)) x)","(*.f64 (/.f64 x (+.f64 x y)) 100)","(*.f64 (/.f64 (sqrt.f64 100) (/.f64 (+.f64 x y) (sqrt.f64 100))) x)","(/.f64 x (*.f64 (+.f64 x y) 1/100))","(*.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (/.f64 1000000 (+.f64 x y))))","(*.f64 (/.f64 (cbrt.f64 (*.f64 10000 (*.f64 x x))) (+.f64 x y)) (cbrt.f64 (*.f64 x 100)))","(*.f64 (/.f64 100 (+.f64 x y)) x)","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x 100) (+.f64 x y)) 2)) (cbrt.f64 (*.f64 x 100))) (cbrt.f64 (+.f64 x y)))","(/.f64 (neg.f64 x) (/.f64 (+.f64 x y) -100))","(/.f64 (*.f64 x 100) (+.f64 x y))"]],"link":["."],"name":["Development.Shake.Progress:message from shake-0.15.5"],"oracle":[32.98069520695684],"outputs":[["(*.f64 (/.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100))) (sqrt.f64 100))"]],"time":17.35986328125,"times":[["x",5.27099609375],["y",5.1220703125],["(/.f64 (*.f64 x 100) (+.f64 x y))",4.284912109375]],"type":"regimes"},{"compiler":[[13,10]],"inputs":[["(*.f64 (/.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100))) (sqrt.f64 100))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 x (/.f64 (+.f64 x y) (sqrt.f64 100))) (sqrt.f64 100))","(/.f64 (*.f64 x 100) (+.f64 x y))"]],"stop":[["fuel",1]],"time":20.794189453125,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[13,10]],"remove-preprocessing":[[]],"time":9.251953125,"type":"end"}]