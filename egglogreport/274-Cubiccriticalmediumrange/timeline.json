[{"compiler":[[43,31]],"method":["search"],"sampling":[[12,7.049410498893849e-6,2.6995941766472242e-6,0.9999902509953245],[11,6.516261805700196e-6,3.7743542407042696e-6,0.9999897093839536],[10,5.9915757901762845e-6,4.2990402562281815e-6,0.9999897093839536],[9,5.483815129991854e-6,5.348412287276005e-6,0.9999891677725827],[8,4.468293809622992e-6,7.447156349371653e-6,0.999988084549841],[7,3.520473910612054e-6,8.39497624838259e-6,0.999988084549841],[6,2.7080568543169647e-6,1.0290616046404466e-5,0.9999870013270993],[5,1.083222741726786e-6,1.4081895642448217e-5,0.9999848348816158],[4,0.0,1.5165118384175003e-5,0.9999848348816158],[3,0.0,1.7331563867628574e-5,0.9999826684361324],[2,0.0,1.7331563867628574e-5,0.9999826684361324],[1,0.0,1.7331563867628574e-5,0.9999826684361324],[0,0.0,1.7331563867628574e-5,0.9999826684361324]],"time":69.39404296875,"type":"analyze"},{"outcomes":[["body",256,"invalid",78.649658203125,1216],["body",512,"valid",0.125,1],["body",256,"valid",561.156494140625,8255]],"time":649.2099609375,"type":"sample"},{"compiler":[[20,14]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 c a)))) b) (/.f64 1/3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 -3 (*.f64 b c)))) a) (/.f64 1/3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 c a)))) b) (/.f64 1/3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 -3 (*.f64 a b)))) c) (/.f64 1/3 a))"]],"symmetry":[[]],"time":77.60400390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))"]],"time":21.197021484375,"type":"simplify"},{"compiler":[[35,22]],"time":0.531982421875,"type":"eval"},{"alts":[["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","fresh",45.245251511578864],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","next",45.24483962062715]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[45.23970932147648],"time":1.60205078125,"type":"prune"},{"compiler":[[69,35]],"locations":[["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))",0.09375,true],["(*.f64 (*.f64 3 a) c)",0.28125,true],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",0.30697250976844204,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))",40.83896303756895,true]],"time":15.197021484375,"type":"localize"},{"count":[[4,92]],"series":[["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","-inf",0.158935546875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","inf",0.741943359375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","0",0.2138671875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","-inf",0.160888671875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","inf",0.194091796875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","0",0.217041015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","-inf",0.195068359375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","inf",0.248046875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","0",0.31396484375],["(*.f64 (*.f64 3 a) c)","c","-inf",0.22607421875],["(*.f64 (*.f64 3 a) c)","c","inf",0.3779296875],["(*.f64 (*.f64 3 a) c)","c","0",0.407958984375],["(*.f64 (*.f64 3 a) c)","a","-inf",0.27294921875],["(*.f64 (*.f64 3 a) c)","a","inf",0.39990234375],["(*.f64 (*.f64 3 a) c)","a","0",0.39892578125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","c","-inf",0.376953125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","c","inf",0.977783203125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","c","0",0.455078125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","a","-inf",0.486083984375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","a","inf",0.743896484375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","a","0",0.404052734375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","b","-inf",0.35400390625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","b","inf",0.666015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","b","0",0.592041015625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","-inf",0.412109375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","inf",0.85205078125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","0",0.505859375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","-inf",0.446044921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","inf",0.711181640625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","0",0.56005859375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","-inf",0.43603515625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","inf",0.817138671875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","0",0.677978515625]],"time":15.5009765625,"type":"series"},{"count":[[4,264]],"inputs":[["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(*.f64 (*.f64 3 a) c)","(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (+.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/3 a) (neg.f64 b)) (*.f64 (/.f64 1/3 a) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/3 a) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 (/.f64 1/3 a) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 1/2) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 0) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)) (*.f64 (neg.f64 b) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 -3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 27)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) a) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/3 a) (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1/3) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (/.f64 1 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1/3) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) 1) (*.f64 (cbrt.f64 (*.f64 9 (*.f64 a a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2))) (*.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 9 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 1/3)) 1) (*.f64 (cbrt.f64 9) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (sqrt.f64 1/3)) 1) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 a (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 1/3)) (*.f64 a (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1/3) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (*.f64 3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2))) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 27)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) a) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/3 a)) (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) 1) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) 1) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 2)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 1 a)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 1/3)) (/.f64 1 a)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (sqrt.f64 1/3)) (/.f64 1 a)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 1/3)) (*.f64 (cbrt.f64 9) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (*.f64 a (cbrt.f64 3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) -1) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 a)) (cbrt.f64 (*.f64 (*.f64 a a) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (*.f64 a (sqrt.f64 3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) a) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (*.f64 3 a))) (neg.f64 (cbrt.f64 (*.f64 9 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) 1) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 a))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 a))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) a) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a)))) (neg.f64 (cbrt.f64 (*.f64 9 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (/.f64 -1/3 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 3 a)) (*.f64 (*.f64 c (*.f64 3 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (*.f64 3 a)) 1/2) (*.f64 (*.f64 c (*.f64 3 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (*.f64 3 a)) 0) (*.f64 c (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 3 a)) (*.f64 0 (*.f64 c (*.f64 3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 c (*.f64 3 a))) (*.f64 1/2 (*.f64 c (*.f64 3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 c (*.f64 3 a))) (*.f64 c (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 3 a))) (cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 a)) (*.f64 (cbrt.f64 (*.f64 9 (*.f64 a a))) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 3) (*.f64 (cbrt.f64 9) (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a c) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 2)) (cbrt.f64 (*.f64 c (*.f64 3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c 3) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 (*.f64 3 a))) (cbrt.f64 (*.f64 9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 3 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) (*.f64 (sqrt.f64 3) (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 c (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (*.f64 3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 a) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (*.f64 3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (*.f64 3 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (*.f64 3 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (*.f64 3 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1/2) (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -3 (*.f64 a c)) (*.f64 (neg.f64 (*.f64 b b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 1/2 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b b) (*.f64 c (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -3 (*.f64 a c)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))) (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 b 4)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 2)) (cbrt.f64 (*.f64 (*.f64 b b) (*.f64 c (*.f64 3 a)))))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 c (*.f64 3 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (*.f64 3 a))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 c (*.f64 3 a)) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -3 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 c (*.f64 3 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c)))))))"]],"rules":[["egg-rr",75],["egg-rr",31],["egg-rr",105],["egg-rr",53]],"time":47.98291015625,"type":"rewrite"},{"count":[[356,309]],"inputs":[["(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -2/3 (/.f64 b a))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2)))) (*.f64 -3/2 (*.f64 c a))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -2/3 (/.f64 b a))","(/.f64 (*.f64 -2/3 b) a)","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 1/2 (/.f64 c b) (/.f64 (*.f64 3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 (/.f64 b a) -2/3 (fma.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 1/2 (/.f64 c b) (/.f64 (*.f64 3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2))) (*.f64 a b)) (fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))"]],"time":314.088134765625,"type":"simplify"},{"compiler":[[7243,3956]],"time":78.512939453125,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))","fresh",45.54916941130644],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3) (*.f64 3 a))","fresh",45.2440692780529],["(/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))) (*.f64 3 a))","fresh",2.679695520857309],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",46.257112839765746],["(/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))","fresh",45.24169297419188],["(/.f64 (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.6976055577391294],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))","fresh",45.60217000972214],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","fresh",45.20209819545006],["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","next",2.3681548837120956],["(/.f64 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.7051781847373357],["(/.f64 (fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","fresh",44.019743001119],["(/.f64 (fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b)) (*.f64 3 a))","fresh",44.713836279359555],["(/.f64 (fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))) (*.f64 3 a))","fresh",2.7411850253307217]],"compiler":[[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[56,39],[70,55],[24,15],[29,17],[64,46],[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[56,39],[70,55],[24,15],[29,17],[64,46]],"count":[[311,13]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[309,13],"picked":[1,0]}],"min-error":[0.30623979282966624],"time":71.498046875,"type":"prune"},{"compiler":[[250,141]],"locations":[["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))",0.3600387695368841,true],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))",0.375,true],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))",0.39291000976844204,true],["(pow.f64 (*.f64 c a) 4)",0.8625656005056193,true]],"time":57.1650390625,"type":"localize"},{"count":[[4,132]],"series":[["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","b","-inf",0.298095703125],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","b","inf",0.3720703125],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","b","0",0.802001953125],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","a","-inf",0.277099609375],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","a","inf",0.4970703125],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","a","0",0.85009765625],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","c","-inf",0.207763671875],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","c","inf",0.507080078125],["(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))","c","0",0.819091796875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","-inf",0.2998046875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","inf",0.35302734375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","0",0.867919921875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","-inf",0.203125],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","inf",0.39501953125],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","0",0.93505859375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","-inf",0.322021484375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","inf",0.455810546875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","0",1.0341796875],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","b","-inf",0.402099609375],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","b","inf",0.498046875],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","b","0",1.757080078125],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","a","-inf",0.73583984375],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","a","inf",0.993896484375],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","a","0",2.737060546875],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","c","-inf",0.4189453125],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","c","inf",0.6640625],["(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","c","0",1.7919921875],["(pow.f64 (*.f64 c a) 4)","a","-inf",0.507080078125],["(pow.f64 (*.f64 c a) 4)","a","inf",0.345947265625],["(pow.f64 (*.f64 c a) 4)","a","0",0.425048828125],["(pow.f64 (*.f64 c a) 4)","c","-inf",0.51904296875],["(pow.f64 (*.f64 c a) 4)","c","inf",0.344970703125],["(pow.f64 (*.f64 c a) 4)","c","0",0.533935546875]],"time":23.087890625,"type":"series"},{"count":[[4,227]],"inputs":[["(pow.f64 (*.f64 c a) 4)","(/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 0) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 4)) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 0 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) -1) (*.f64 (pow.f64 (*.f64 c a) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1) (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 1) (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (cbrt.f64 (pow.f64 (*.f64 c a) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 8)) (cbrt.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 c a) 2) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 c a) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 c a) 2) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 b -7) a) (*.f64 81/64 (pow.f64 (*.f64 c a) 4))) (*.f64 (/.f64 (pow.f64 b -7) a) (*.f64 (pow.f64 (*.f64 c a) 4) 81/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 b -7) a) (*.f64 (pow.f64 (*.f64 c a) 4) 81/16)) (*.f64 (/.f64 (pow.f64 b -7) a) (*.f64 81/64 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 0) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 81/64 (pow.f64 (*.f64 c a) 4)) (/.f64 (pow.f64 b -7) a)) (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 81/16) (/.f64 (pow.f64 b -7) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 81/16) (/.f64 (pow.f64 b -7) a)) (*.f64 (*.f64 81/64 (pow.f64 (*.f64 c a) 4)) (/.f64 (pow.f64 b -7) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) (*.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 a) (pow.f64 b 7))) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (cbrt.f64 (pow.f64 b 7))) (/.f64 1 (cbrt.f64 (pow.f64 b (*.f64 2 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (/.f64 (pow.f64 b -7) a))) (pow.f64 (cbrt.f64 (*.f64 a (pow.f64 b 7))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64))) (/.f64 (pow.f64 b -7) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64) (neg.f64 (/.f64 (pow.f64 b -7) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) a) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64))) (pow.f64 b -7)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (pow.f64 b -7)) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (/.f64 (pow.f64 b -7) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 b -7) a) (*.f64 (pow.f64 (*.f64 c a) 4) 405/64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (pow.f64 b -7))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -7) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 b -7) a)) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (neg.f64 a)) (neg.f64 (pow.f64 b -7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (cbrt.f64 (pow.f64 b 7))) (cbrt.f64 (pow.f64 b (*.f64 2 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -7) (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (pow.f64 b 7))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) a) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64)))) (pow.f64 b 7))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a))) (cbrt.f64 (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64) (pow.f64 b -7)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (cbrt.f64 (pow.f64 b 7))) 1) (cbrt.f64 (pow.f64 b (*.f64 2 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (neg.f64 a)) 1) (neg.f64 (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2))) (cbrt.f64 (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 4) (/.f64 (*.f64 a (pow.f64 b 7)) 405/64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 4) (/.f64 (cbrt.f64 a) 405/64)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (cbrt.f64 (pow.f64 b 7))) 1) (*.f64 (cbrt.f64 (pow.f64 b (*.f64 2 7))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (/.f64 (pow.f64 b -7) a))) 1) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64)))) (*.f64 (cbrt.f64 (pow.f64 b 7)) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64)))) (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 b 7))) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 4) (/.f64 (cbrt.f64 a) 405/64)) (*.f64 (pow.f64 b 7) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (cbrt.f64 (pow.f64 b 7)))) (neg.f64 (cbrt.f64 (pow.f64 b (*.f64 2 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (/.f64 (pow.f64 b -7) a)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (neg.f64 a)) (neg.f64 (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (pow.f64 b 7))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (/.f64 (pow.f64 b -7) a))) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -7) (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -7) (/.f64 (pow.f64 (*.f64 c a) 4) (/.f64 (cbrt.f64 a) 405/64))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (pow.f64 b -7)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64)))) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64))) (cbrt.f64 (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2)) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64))) (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 b -7) a)) (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 4) (/.f64 (cbrt.f64 a) 405/64)) (pow.f64 b -7)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (/.f64 (pow.f64 b -7) a))) 1) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7)) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 8) (*.f64 405/64 405/64))) (pow.f64 b -7))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 b 7)) 2))) (cbrt.f64 (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2))) (cbrt.f64 (*.f64 a (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)) 405/64)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 2))) (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 (neg.f64 a) (pow.f64 b 7))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) a) (neg.f64 (pow.f64 b 7))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (*.f64 a (pow.f64 b 7))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 0) (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) (*.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5)))) (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) (*.f64 0 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 5))) (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 (pow.f64 c 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (cbrt.f64 (pow.f64 b 5)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2) (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (/.f64 (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c)) (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) a) (*.f64 a (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 c 3)) (neg.f64 (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (/.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 c 3) a) (cbrt.f64 (pow.f64 b 5))) (/.f64 a (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b -5))) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -5) (*.f64 (pow.f64 c 3) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 b -5)) (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 c 3))) (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c))) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 b 5))) (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) 1) (*.f64 (cbrt.f64 (pow.f64 b (*.f64 2 5))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5)))) (neg.f64 (cbrt.f64 (pow.f64 b (*.f64 2 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 c 3)) (neg.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c))) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2) (cbrt.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 c 3)))) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2) (*.f64 (cbrt.f64 (*.f64 a a)) c)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) a) (cbrt.f64 (pow.f64 b 5))) a) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (*.f64 a a)) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 b -5)) (*.f64 (pow.f64 c 3) (*.f64 a a))) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b -5))) (pow.f64 c 3)) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 c 3))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2)) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 2)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) 1) (cbrt.f64 (pow.f64 b (*.f64 2 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) a) (/.f64 a (cbrt.f64 (pow.f64 b (*.f64 2 5))))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b (*.f64 2 5)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (/.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b (*.f64 2 5))))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a a) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b (*.f64 2 5))))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (pow.f64 b 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 0) (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) (*.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8)) (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) (*.f64 0 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 3))) (/.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (*.f64 c a)) (*.f64 -3/8 (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3/8 (*.f64 c c)) (*.f64 a (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) b) (pow.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c (*.f64 c a)) (/.f64 (*.f64 b b) -3/8)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2) (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (neg.f64 (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c (*.f64 c a)) b) (/.f64 -3/8 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c (*.f64 c a)) (*.f64 b b)) (/.f64 -3/8 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2)) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (pow.f64 b -2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3/8 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -3/8 b) (/.f64 (*.f64 c (*.f64 c a)) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -3/8 (*.f64 b b)) (/.f64 (*.f64 c (*.f64 c a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -3/8 (*.f64 c c)) b) (/.f64 a (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -3/8 (*.f64 c c)) (*.f64 b b)) (/.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) (pow.f64 b -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -3) (*.f64 (*.f64 -3/8 (*.f64 c c)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (/.f64 (*.f64 c (*.f64 c a)) (/.f64 (*.f64 b b) -3/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (/.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) b) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (*.f64 c a)) (/.f64 (pow.f64 b 3) -3/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c (*.f64 c a)) b) -3/8) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -3/8 b) (*.f64 c (*.f64 c a))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -3/8 (*.f64 c c)) b) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) b) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -3/8 (/.f64 (*.f64 c (*.f64 c a)) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2)) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) (/.f64 a b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c a)) (/.f64 -3/8 b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 c (*.f64 c a))) (/.f64 (neg.f64 (pow.f64 b 3)) -3/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (*.f64 c a)) (/.f64 (/.f64 (pow.f64 b 3) -3/8) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 3/8 (*.f64 c (*.f64 c a)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2))) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 b 3))) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 c (*.f64 c a))) (neg.f64 (/.f64 (pow.f64 b 3) -3/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 c (*.f64 c a)) (/.f64 (*.f64 b b) -3/8))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 c (*.f64 c a)) (/.f64 (*.f64 b b) -3/8)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -2) (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c (*.f64 c a)) (*.f64 b b)) -3/8) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -3/8 (*.f64 c c)) (*.f64 b b)) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (pow.f64 b -2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) 2))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2) (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2) (cbrt.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))))) (cbrt.f64 (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -3/8 (*.f64 b b)) (*.f64 c (*.f64 c a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c (*.f64 c a)) (/.f64 (*.f64 b b) -3/8)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) (/.f64 a (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 3/8 (*.f64 c (*.f64 c a)))) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 2)) (cbrt.f64 (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c a)) (/.f64 -3/8 (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -3/8 (/.f64 (*.f64 c (*.f64 c a)) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a) b)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -3/8 (*.f64 c c)) a)) b) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 3/8 (*.f64 c (*.f64 c a))) (pow.f64 b 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (*.f64 c (*.f64 c a)) (pow.f64 b -3)) -3/8) 3))))))"]],"rules":[["egg-rr",72],["egg-rr",51],["egg-rr",77],["egg-rr",27]],"time":48.56201171875,"type":"rewrite"},{"count":[[359,236]],"inputs":[["(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/64 (pow.f64 a 4)) (*.f64 81/16 (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (*.f64 (+.f64 (*.f64 81/16 (pow.f64 c 4)) (*.f64 81/64 (pow.f64 c 4))) (pow.f64 a 3)) (pow.f64 b 7))","(/.f64 (*.f64 (pow.f64 c 4) (*.f64 405/64 (pow.f64 a 3))) (pow.f64 b 7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (+.f64 (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (*.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))","(*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) (/.f64 405/64 a)) (pow.f64 b -7))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))","(*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (*.f64 (*.f64 c c) a) (*.f64 (pow.f64 b -3) -3/8))"]],"time":440.1240234375,"type":"simplify"},{"compiler":[[14963,8907]],"time":152.27392578125,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))","fresh",45.54916941130644],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3) (*.f64 3 a))","fresh",45.2440692780529],["(/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))) (*.f64 3 a))","next",2.679695520857309],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",46.257112839765746],["(/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))","fresh",45.24169297419188],["(/.f64 (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.6976055577391294],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))","fresh",45.60217000972214],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","fresh",45.20209819545006],["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","done",2.3681548837120956],["(/.f64 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.7051781847373357],["(/.f64 (fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","fresh",44.019743001119],["(/.f64 (fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b)) (*.f64 3 a))","fresh",44.713836279359555],["(/.f64 (fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))) (*.f64 3 a))","fresh",2.7411850253307217]],"compiler":[[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[56,39],[70,55],[24,15],[29,17],[64,46],[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[70,55],[24,15],[29,17],[64,46]],"count":[[277,13]],"kept":[{"done":[0,0],"fresh":[12,12],"new":[264,0],"picked":[1,1]}],"min-error":[0.30623979282966624],"time":156.0771484375,"type":"prune"},{"compiler":[[279,167]],"locations":[["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))",0.39453125,true],["(pow.f64 (*.f64 c a) 2)",0.5397262695368841,true],["(pow.f64 (*.f64 c a) 3)",0.6625939942110508,true],["(pow.f64 (*.f64 c a) 4)",0.8625656005056193,false]],"time":63.48486328125,"type":"localize"},{"count":[[3,84]],"series":[["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","b","-inf",0.298095703125],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","b","inf",0.322998046875],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","b","0",0.441162109375],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","a","-inf",0.169189453125],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","a","inf",0.39111328125],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","a","0",0.419921875],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","c","-inf",0.1708984375],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","c","inf",0.31494140625],["(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))","c","0",0.837890625],["(pow.f64 (*.f64 c a) 2)","a","-inf",0.246826171875],["(pow.f64 (*.f64 c a) 2)","a","inf",0.262939453125],["(pow.f64 (*.f64 c a) 2)","a","0",0.22509765625],["(pow.f64 (*.f64 c a) 2)","c","-inf",0.26513671875],["(pow.f64 (*.f64 c a) 2)","c","inf",0.2451171875],["(pow.f64 (*.f64 c a) 2)","c","0",0.265869140625],["(pow.f64 (*.f64 c a) 3)","a","-inf",0.415771484375],["(pow.f64 (*.f64 c a) 3)","a","inf",0.339111328125],["(pow.f64 (*.f64 c a) 3)","a","0",0.3388671875],["(pow.f64 (*.f64 c a) 3)","c","-inf",0.416015625],["(pow.f64 (*.f64 c a) 3)","c","inf",0.348876953125],["(pow.f64 (*.f64 c a) 3)","c","0",0.505126953125]],"time":7.4931640625,"type":"series"},{"count":[[3,140]],"inputs":[["(pow.f64 (*.f64 c a) 3)","(pow.f64 (*.f64 c a) 2)","(/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 3) 0) (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 3) (*.f64 (pow.f64 (*.f64 c a) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 3)) (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 3) (*.f64 0 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 3) (pow.f64 a 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 3) (pow.f64 c 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2/3) (*.f64 (pow.f64 (*.f64 c a) 4/3) (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 7/3) (pow.f64 (*.f64 c a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) a) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) c) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 c a)) 5) (pow.f64 (*.f64 c a) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 (pow.f64 (*.f64 c a) 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (pow.f64 (*.f64 c a) 2) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c a)) (pow.f64 (pow.f64 (*.f64 c a) 2) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 4/3) (*.f64 c a)) (pow.f64 (*.f64 c a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 c a) 2) 4/3) (cbrt.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 (cbrt.f64 (*.f64 c a)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2/3) (pow.f64 (*.f64 c a) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (pow.f64 (*.f64 (pow.f64 a 2/3) c) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (cbrt.f64 a)) 3) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (pow.f64 (*.f64 (pow.f64 c 2/3) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (cbrt.f64 c)) 3) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 c a) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 c a) 3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 0) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 2) (*.f64 (pow.f64 (*.f64 c a) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 2)) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 2) (*.f64 0 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2/3) (pow.f64 (*.f64 c a) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c a)) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 (*.f64 c a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c a) a) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c a) c) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 (*.f64 c a) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (*.f64 c a) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c a)) (pow.f64 (cbrt.f64 (*.f64 c a)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 c a)) 5) (cbrt.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2/3)) (neg.f64 (pow.f64 (*.f64 c a) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 2/3) (*.f64 (*.f64 (pow.f64 c 2/3) a) (*.f64 (pow.f64 c 2/3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c (cbrt.f64 a)) (*.f64 c (cbrt.f64 a))) (*.f64 (pow.f64 a 2/3) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (cbrt.f64 c)) (*.f64 a (cbrt.f64 c))) (*.f64 (pow.f64 c 2/3) (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (*.f64 (*.f64 (pow.f64 a 2/3) c) (*.f64 (pow.f64 a 2/3) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c a)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 c a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c a) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 0) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 3))) (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 c a) 2/3) b) (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2)) (/.f64 (pow.f64 (*.f64 c a) 2/3) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2/3) (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (*.f64 (*.f64 c a) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 c a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c a) (*.f64 b b)) (/.f64 (*.f64 c a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2/3) (pow.f64 b -2)) (/.f64 (pow.f64 (*.f64 c a) 4/3) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -3) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (/.f64 (pow.f64 (*.f64 c a) 2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 c a) 4/3) b) (*.f64 (pow.f64 (*.f64 c a) 2/3) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 b -3)) (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -3)) (pow.f64 (*.f64 c a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (pow.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c a) (pow.f64 b -3)) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (pow.f64 (*.f64 c a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 2/3) b) (pow.f64 (*.f64 c a) 4/3)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c a) b) (*.f64 c a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2/3) (/.f64 (pow.f64 (*.f64 c a) 4/3) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c a) (/.f64 (*.f64 c a) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) (pow.f64 b 2/3)) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (cbrt.f64 b)) (pow.f64 (pow.f64 b 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (pow.f64 b 2/3)) (pow.f64 b 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (cbrt.f64 b)) (pow.f64 (cbrt.f64 b) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c a) (*.f64 b b)) (*.f64 c a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2)) (neg.f64 (pow.f64 (*.f64 c a) 2/3))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2)) (pow.f64 (*.f64 c a) 2/3)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2/3) (pow.f64 b -2)) (pow.f64 (*.f64 c a) 4/3)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -2) (pow.f64 (*.f64 c a) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c a) (/.f64 (*.f64 c a) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2/3)) (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2/3) (*.f64 (pow.f64 (*.f64 c a) 4/3) (pow.f64 b -2))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) (cbrt.f64 b)) (pow.f64 b 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) -1) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 7/3)) (pow.f64 b 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (pow.f64 b 4/3)) (pow.f64 b 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (*.f64 b b)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) b) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 c a) 6) (pow.f64 (pow.f64 b -3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 c a) 2/3) b) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 c a) 6) (pow.f64 (pow.f64 b -3) 3)))))))"]],"rules":[["egg-rr",68],["egg-rr",38],["egg-rr",34]],"time":32.994873046875,"type":"rewrite"},{"count":[[224,142]],"inputs":[["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 3) (pow.f64 a 3))","(pow.f64 (*.f64 c a) 3)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(pow.f64 (*.f64 c a) 2)","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))"]],"time":226.653076171875,"type":"simplify"},{"compiler":[[11856,7325]],"time":313.931884765625,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))","fresh",45.54916941130644],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3) (*.f64 3 a))","fresh",45.2440692780529],["(/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))) (*.f64 3 a))","done",2.679695520857309],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",46.257112839765746],["(/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))","fresh",45.24169297419188],["(/.f64 (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","next",2.6976055577391294],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))","fresh",45.60217000972214],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","fresh",45.20209819545006],["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","done",2.3681548837120956],["(/.f64 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.7051781847373357],["(/.f64 (fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","fresh",44.019743001119],["(/.f64 (fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b)) (*.f64 3 a))","fresh",44.713836279359555],["(/.f64 (fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))) (*.f64 3 a))","fresh",2.7411850253307217]],"compiler":[[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[56,39],[70,55],[24,15],[29,17],[64,46],[23,16],[21,15],[49,26],[24,16],[72,56],[22,15],[19,13],[70,55],[24,15],[29,17],[64,46]],"count":[[211,13]],"kept":[{"done":[1,1],"fresh":[11,11],"new":[198,0],"picked":[1,1]}],"min-error":[0.30623979282966624],"time":84.89013671875,"type":"prune"},{"compiler":[[496,367]],"locations":[["(/.f64 (pow.f64 c 4) (pow.f64 b 6))",0.3795700195368841,true],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))",0.39453125,true],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))",0.409198779305326,true],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)",0.5201950195368841,true]],"time":126.369873046875,"type":"localize"},{"count":[[4,24]],"series":[["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","b","-inf",0.156005859375],["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","b","inf",0.23583984375],["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","b","0",0.510986328125],["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","c","-inf",0.1708984375],["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","c","inf",0.466064453125],["(/.f64 (pow.f64 c 4) (pow.f64 b 6))","c","0",0.626220703125],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","b","-inf",0.177978515625],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","b","inf",0.161865234375],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","b","0",0.172119140625],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","a","-inf",0.1630859375],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","a","inf",0.164794921875],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","a","0",0.172119140625],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","c","-inf",0.1630859375],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","c","inf",0.18603515625],["(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","c","0",0.16015625],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","b","-inf",0.27294921875],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","b","inf",0.14892578125],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","b","0",0.14892578125],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","c","-inf",0.1689453125],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","c","inf",0.31982421875],["(/.f64 (pow.f64 c 2) (pow.f64 b 3))","c","0",0.1708984375],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","b","-inf",0.473876953125],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","b","inf",0.44091796875],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","b","0",0.658203125],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","c","-inf",0.189208984375],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","c","inf",0.52099609375],["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","c","0",0.77880859375]],"time":8.261962890625,"type":"series"},{"count":[[4,288]],"inputs":[["(pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))","(/.f64 (pow.f64 c 4) (pow.f64 b 6))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 0) (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) (*.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6))) (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) (*.f64 0 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 c c)) (pow.f64 b 6)) -9/8)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -9/8 (/.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (*.f64 c c) (cbrt.f64 -9/8)) (pow.f64 b 3)) (/.f64 (*.f64 (*.f64 c c) (cbrt.f64 -9/8)) (pow.f64 b 3))) (*.f64 (cbrt.f64 81/64) (cbrt.f64 81/64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -9/8 (*.f64 b b)) (/.f64 -9/8 (*.f64 b b))) (*.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 c c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -9/8 b) (/.f64 -9/8 b)) (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 c c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3))) (*.f64 1 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) 1) (*.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) -1) (*.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) -1) (*.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 4) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 81/64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 2) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 81/64)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) -729/512)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) -729/512))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 81/64) (*.f64 (/.f64 (*.f64 (cbrt.f64 81/64) (*.f64 c c)) (pow.f64 b 3)) (/.f64 (*.f64 (cbrt.f64 81/64) (*.f64 c c)) (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 81/64 (pow.f64 c 4)) (*.f64 (pow.f64 b -3) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 4) (*.f64 (*.f64 (pow.f64 b -3) -9/8) (*.f64 (pow.f64 b -3) -9/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 3)) (pow.f64 b -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 -729/512 (*.f64 c c))) b) (/.f64 (cbrt.f64 (*.f64 -729/512 (*.f64 c c))) b)) (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) b) (/.f64 (*.f64 (*.f64 -9/8 c) c) b)) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) b) (*.f64 (*.f64 -9/8 c) c)) (*.f64 (*.f64 b b) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) b) (*.f64 9/8 (*.f64 c c))) (*.f64 (*.f64 b b) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (/.f64 (*.f64 (*.f64 -9/8 c) c) b)) (*.f64 (pow.f64 b 3) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b))) (*.f64 (pow.f64 b 3) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 9/8 (*.f64 c c))) (*.f64 (pow.f64 b 3) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b)) (*.f64 (*.f64 -9/8 c) c)) (*.f64 b (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b)) (*.f64 9/8 (*.f64 c c))) (*.f64 b (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9/8 (*.f64 c c)) (/.f64 (*.f64 (*.f64 -9/8 c) c) b)) (*.f64 (neg.f64 (pow.f64 b 3)) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9/8 (*.f64 c c)) (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b))) (*.f64 (neg.f64 (pow.f64 b 3)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9/8 (*.f64 c c)) (*.f64 (*.f64 -9/8 c) c)) (*.f64 (neg.f64 (pow.f64 b 3)) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9/8 (*.f64 c c)) (*.f64 9/8 (*.f64 c c))) (*.f64 (neg.f64 (pow.f64 b 3)) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 3)) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 3))) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) (/.f64 (*.f64 (*.f64 -9/8 c) c) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) (*.f64 9/8 (*.f64 c c))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (/.f64 (*.f64 c c) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (/.f64 (*.f64 c c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (*.f64 c c)) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (neg.f64 (*.f64 c c))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) (+.f64 2 3))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) b) (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b)) (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9/8 (*.f64 c c)) (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3))) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) 1) (pow.f64 b 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 3)) 1) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) b) (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b))) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b)) (/.f64 (*.f64 (*.f64 -9/8 c) c) b)) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b)) (/.f64 (*.f64 (*.f64 -9/8 c) c) (*.f64 b b))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b 3))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 81/64 (pow.f64 c 4))) (neg.f64 (pow.f64 b 6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -729/512 (pow.f64 c 6)) (pow.f64 (pow.f64 b 3) -3)) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -729/512 (pow.f64 c 6)) (pow.f64 (pow.f64 b 3) -3)) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) (pow.f64 b -3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 2) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 -9/8 c) c)) b) 2) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 9/8 (*.f64 c c)) (pow.f64 b 3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))) (/.f64 (*.f64 -9/8 (*.f64 (*.f64 -9/8 c) c)) (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 (*.f64 -9/8 c) c) -9/8) (pow.f64 b 3)) (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 81/64 (pow.f64 c 4)) (pow.f64 b -6)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 0) (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 c (*.f64 c (pow.f64 b -3)))) (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (*.f64 0 (*.f64 c (*.f64 c (pow.f64 b -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 3))) (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) b) (pow.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (/.f64 (cbrt.f64 (*.f64 c c)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c c)) (neg.f64 (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (pow.f64 b -2)) (/.f64 (cbrt.f64 (pow.f64 c 4)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 c (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (/.f64 c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c (*.f64 b b)) (/.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (pow.f64 b -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -3) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (/.f64 (*.f64 c c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (/.f64 (*.f64 c c) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c c) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 c c)) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 c c) b) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 c c) (*.f64 b b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) (cbrt.f64 (pow.f64 c 4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -2) (*.f64 c c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 c b) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (cbrt.f64 (*.f64 c c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (cbrt.f64 (neg.f64 (*.f64 c c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 c (*.f64 b b)) c) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (pow.f64 b -2)) (cbrt.f64 (pow.f64 c 4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (/.f64 (cbrt.f64 (pow.f64 c 4)) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (/.f64 c b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 c c))) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (/.f64 c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 c c) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 0) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 3))) (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (pow.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a a) b) (/.f64 (*.f64 c c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a a) (*.f64 b b)) (/.f64 (*.f64 c c) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (pow.f64 b -2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 (*.f64 a a) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 a a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 a a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -3) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (/.f64 (pow.f64 (*.f64 c a) 2) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -2) (pow.f64 (*.f64 c a) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (pow.f64 b -2)) (cbrt.f64 (pow.f64 (*.f64 c a) 4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 a a) (*.f64 b b)) (*.f64 c c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b) (cbrt.f64 (pow.f64 (*.f64 c a) 4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (*.f64 a a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (*.f64 a a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2)) (cbrt.f64 (pow.f64 (*.f64 c a) 2))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2)) (cbrt.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 a a) b) (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (pow.f64 (*.f64 c a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 a a) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (pow.f64 b -2))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 a a) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (*.f64 c a) 2) b)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -2))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) b) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (neg.f64 (pow.f64 b -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 a a) (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -3)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 0) (*.f64 (pow.f64 c 4) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 c 4) (pow.f64 b -6))) (*.f64 (pow.f64 c 4) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) (*.f64 0 (*.f64 (pow.f64 c 4) (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 c 4) (neg.f64 (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 6))) (*.f64 (pow.f64 c 4) (neg.f64 (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 c 4) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 c 4)) (neg.f64 (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (*.f64 (*.f64 c c) (pow.f64 (*.f64 b b) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 (*.f64 c c) (pow.f64 b -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (*.f64 c (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 4) (pow.f64 b -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -6) (pow.f64 c 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (*.f64 (pow.f64 c 4) (pow.f64 (*.f64 b b) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 c 4) (neg.f64 (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 c b) (/.f64 c b)) (*.f64 (/.f64 c (*.f64 b b)) (/.f64 c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))) (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -3)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 4) (*.f64 (pow.f64 b -3) (pow.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 c (*.f64 b b)) (/.f64 c (*.f64 b b))) (*.f64 (/.f64 c b) (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 4) (*.f64 (neg.f64 (pow.f64 b -3)) (neg.f64 (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 (*.f64 c (pow.f64 b -3)) (*.f64 c (pow.f64 b -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 b) 2) (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 c c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 b -3) (pow.f64 b -3)) (pow.f64 c 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -2)) (pow.f64 (*.f64 b b) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 b -2) 2) (*.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 c c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (pow.f64 b -2)) (*.f64 (cbrt.f64 (*.f64 c c)) (pow.f64 b -2))) (*.f64 (/.f64 (cbrt.f64 (pow.f64 c 4)) b) (/.f64 (cbrt.f64 (pow.f64 c 4)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -2)) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 c 4) (pow.f64 b 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (cbrt.f64 (pow.f64 c 8))) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (*.f64 c c)) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 b -2) (pow.f64 c 4)) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2)) (cbrt.f64 (pow.f64 c 4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2)) (cbrt.f64 (neg.f64 (pow.f64 c 4)))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (/.f64 (*.f64 c c) b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (/.f64 (*.f64 c c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (*.f64 c c)) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (neg.f64 (*.f64 c c))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (*.f64 c (*.f64 c (pow.f64 b -3)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (*.f64 c (*.f64 c (pow.f64 b -3)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (*.f64 c (*.f64 c (pow.f64 b -3)))) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) (*.f64 c (*.f64 c (pow.f64 b -3)))) (neg.f64 (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 c c) (pow.f64 (*.f64 b b) -2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -2)) 1) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 c 4))) (*.f64 (cbrt.f64 (pow.f64 c 8)) (pow.f64 (pow.f64 b -2) 2))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 4) (pow.f64 (*.f64 b b) -2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -2)) 1) (*.f64 (pow.f64 (*.f64 b b) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 c c) b)) (pow.f64 (*.f64 b b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (/.f64 (*.f64 c c) (*.f64 b b))) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (*.f64 c c)) (*.f64 (*.f64 b b) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (neg.f64 (*.f64 c c))) (*.f64 (*.f64 b b) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 c c) b)) (pow.f64 b 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (/.f64 (*.f64 c c) (*.f64 b b))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (*.f64 c c)) (*.f64 b (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) (*.f64 b b)) (neg.f64 (*.f64 c c))) (*.f64 b (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 c c) b)) (*.f64 (pow.f64 b 3) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 (*.f64 c c) (*.f64 b b))) (*.f64 (pow.f64 b 3) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 c 4)) (*.f64 (pow.f64 b 3) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) (/.f64 (*.f64 c c) b)) (*.f64 (neg.f64 (pow.f64 b 3)) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) (/.f64 (*.f64 c c) (*.f64 b b))) (*.f64 (neg.f64 (pow.f64 b 3)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 c 4)) (*.f64 (neg.f64 (pow.f64 b 3)) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 c 4) (*.f64 (neg.f64 (pow.f64 b 3)) (neg.f64 (pow.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -2))) (neg.f64 (pow.f64 (*.f64 b b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 c 4)) (neg.f64 (pow.f64 b 6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3)) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3)) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (pow.f64 b -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 c 4) (neg.f64 (pow.f64 b -6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3))) (*.f64 c (*.f64 c (pow.f64 b -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 c 4) (neg.f64 (pow.f64 b -6))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 c (*.f64 c (pow.f64 b -3))) (*.f64 (*.f64 c c) (neg.f64 (pow.f64 b -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 c 4) (pow.f64 b -6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3)) (*.f64 (pow.f64 c 6) (pow.f64 (pow.f64 b 3) -3))))))))"]],"rules":[["egg-rr",86],["egg-rr",62],["egg-rr",54],["egg-rr",86]],"time":44.885009765625,"type":"rewrite"},{"count":[[312,290]],"inputs":[["(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))","(*.f64 81/64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))","(*.f64 (*.f64 (pow.f64 b -6) 81/64) (pow.f64 c 4))"]],"time":81.38916015625,"type":"simplify"},{"compiler":[[21695,15275]],"time":221.162841796875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))","fresh",45.54916941130644],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3) (*.f64 3 a))","fresh",45.2440692780529],["(/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))) (*.f64 3 a))","done",2.679695520857309],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",46.257112839765746],["(/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))","fresh",45.24169297419188],["(/.f64 (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","done",2.6976055577391294],["(-.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))","fresh",45.60217000972214],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","fresh",45.20209819545006],["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","done",2.3681548837120956],["(/.f64 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","fresh",2.7051781847373357],["(/.f64 (fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","fresh",44.019743001119],["(/.f64 (fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b)) (*.f64 3 a))","fresh",44.713836279359555],["(/.f64 (fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))) (*.f64 3 a))","fresh",2.7411850253307217]],"compiler":[[23,16],[21,15],[58,39],[49,26],[24,16],[72,56],[22,15],[19,13],[56,39],[70,55],[24,15],[29,17],[64,46]],"count":[[303,13]],"kept":[{"done":[2,2],"fresh":[10,10],"new":[290,0],"picked":[1,1]}],"min-error":[0.30623979282966624],"time":156.76806640625,"type":"prune"},{"accuracy":[2.3681548837120947],"baseline":[2.3681548837120956],"branch":[["a",2.3681548837120947,1],["b",2.368154883712095,1],["c",2.3681548837120947,1],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",2.3681548837120947,1],["(*.f64 3 a)",2.3681548837120947,1]],"compiler":[[4,3],[4,3],[4,3],[20,14],[6,5],[527,323]],"count":[[15,1]],"inputs":[["(+.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (/.f64 1/3 a)))","(/.f64 (pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) 3) (*.f64 3 a))","(/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))) (*.f64 3 a))","(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","(/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))","(/.f64 (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","(-.f64 (/.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(/.f64 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (*.f64 3 a))","(/.f64 (fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 3 a))","(/.f64 (fma.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b)) (*.f64 3 a))","(/.f64 (fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))) (*.f64 3 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"link":["."],"name":["Cubic critical, medium range"],"oracle":[48.84754197757144],"outputs":[["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))"]],"time":35.781005859375,"times":[["a",5.467041015625],["b",5.27587890625],["c",5.196044921875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",4.6689453125],["(*.f64 3 a)",5.52490234375]],"type":"regimes"},{"compiler":[[56,39]],"inputs":[["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/6 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(fma.f64 -9/16 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) (fma.f64 -1/6 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 405/64) (pow.f64 b -7)) a) (fma.f64 (*.f64 (*.f64 -3/8 a) (*.f64 c c)) (pow.f64 b -3) (/.f64 (*.f64 -1/2 c) b))))"]],"stop":[["fuel",1]],"time":27.0869140625,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[56,39]],"remove-preprocessing":[[]],"time":20.8759765625,"type":"end"}]