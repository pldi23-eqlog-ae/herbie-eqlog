[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.30390222172718495,0.4590240620309487,0.23707371624186635],[11,0.28292662696912885,0.4985362289007753,0.21853714413009584],[10,0.2653656639158726,0.5404874184168875,0.1941469176672399],[9,0.22634130157530308,0.6126824887469411,0.16097620967775583],[8,0.19512181170284748,0.6868287771940231,0.11804941110312939],[7,0.046829234808683395,0.8897554613649845,0.06341530382633209],[6,0.031219489872455597,0.9365846961736679,0.032195813953876495],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":100.304931640625,"type":"analyze"},{"outcomes":[["body",512,"invalid",31.826904296875,246],["body",256,"invalid",46.9130859375,901],["body",1024,"invalid",39.076416015625,175],["body",512,"valid",136.899169921875,1035],["body",1024,"valid",437.8671875,1849],["body",2048,"valid",79.27880859375,176],["body",256,"valid",305.741455078125,5196]],"time":1088.0419921875,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1"],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 y x))))) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 y x))))) y)","(/.f64 (pow.f64 (/.f64 y (+.f64 x y)) y) y)"]],"symmetry":[[]],"time":58.8740234375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)"]],"time":17.826904296875,"type":"simplify"},{"compiler":[[22,10]],"time":0.343994140625,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","next",13.973968462203125]],"compiler":[[11,6],[11,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[13.973968462203125],"time":0.7880859375,"type":"prune"},{"compiler":[[28,6]],"locations":[["(/.f64 x (+.f64 x y))",0.00390625,true],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)",0.01171875,true],["(pow.f64 (/.f64 x (+.f64 x y)) x)",8.102234504390337,true]],"time":5.090087890625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.219970703125],["(/.f64 x (+.f64 x y))","y","inf",0.203125],["(/.f64 x (+.f64 x y))","y","0",0.18505859375],["(/.f64 x (+.f64 x y))","x","-inf",0.176025390625],["(/.f64 x (+.f64 x y))","x","inf",0.212158203125],["(/.f64 x (+.f64 x y))","x","0",1.255126953125],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","-inf",0.677001953125],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","inf",0.6630859375],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","0",0.345947265625],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","-inf",1.177001953125],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","inf",1.6318359375],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","0",0.326904296875],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","-inf",0.9619140625],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","inf",1.18310546875],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","0",0.791015625],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","-inf",1.03515625],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","inf",1.432861328125],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","0",1.02099609375]],"time":13.864990234375,"type":"series"},{"count":[[3,108]],"inputs":[["(pow.f64 (/.f64 x (+.f64 x y)) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 0) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (neg.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (pow.f64 x 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 x (+.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x y)) 0) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 0 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 x y))) (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (/.f64 x (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/3) (/.f64 x (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (pow.f64 (+.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (+.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (+.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -1/3) x) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2/3) (cbrt.f64 x)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 x 2/3)) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (+.f64 x y) 2/3)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (+.f64 x y)) 2/3)) (cbrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (+.f64 x y)) 2/3)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 x y))) 1) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))))"]],"rules":[["egg-rr",43],["egg-rr",44],["egg-rr",21]],"time":29.244873046875,"type":"rewrite"},{"count":[[180,197]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2)))))","(exp.f64 (*.f64 -1 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(exp.f64 (*.f64 -1 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (*.f64 -1 y)))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -1 y))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 3)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y))))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 1 (*.f64 (log.f64 (/.f64 x y)) x))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2))))","(+.f64 1 (fma.f64 (log.f64 (/.f64 x y)) x (*.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 (log.f64 (/.f64 x y)) x (fma.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (log.f64 (/.f64 x y)) 3) (/.f64 (log.f64 (/.f64 x y)) (neg.f64 y)))) (pow.f64 x 3) (*.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) (*.f64 x x)))))","(exp.f64 (*.f64 -1 y))","(exp.f64 (neg.f64 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x -2)) (+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x -2)) (+.f64 (exp.f64 (neg.f64 y)) (+.f64 (/.f64 (*.f64 (fma.f64 1/12 (*.f64 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 y y)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30)))))) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x)))))","(exp.f64 (*.f64 -1 y))","(exp.f64 (neg.f64 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 8 -6))))) (pow.f64 x -2)) (+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 8 -6))))) (pow.f64 x -2)) (+.f64 (exp.f64 (neg.f64 y)) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30))) (fma.f64 -1/48 (pow.f64 (*.f64 y y) 3) (*.f64 (*.f64 1/12 (*.f64 (pow.f64 y 3) (+.f64 8 -6))) (*.f64 y y))))) (pow.f64 x 3)))))","1","(+.f64 1 (*.f64 -1 y))","(-.f64 1 y)","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (*.f64 -1 y)))","(fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) (-.f64 1 y))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -1 y))))","(fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) (-.f64 (-.f64 1 (*.f64 (pow.f64 y 3) (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x))))) y))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(pow.f64 (/.f64 x y) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(-.f64 (pow.f64 (/.f64 x y) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))","(+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 (/.f64 x y) x)) (pow.f64 y -2)) (-.f64 (pow.f64 (/.f64 x y) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 3)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))","(+.f64 (-.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 (/.f64 x y) x)) (pow.f64 y -2)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y)) (+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) 0) x)))) (pow.f64 (/.f64 x y) x)) (pow.f64 y 3)) (pow.f64 (/.f64 x y) x)))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(pow.f64 (/.f64 x y) x)","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))","(-.f64 (pow.f64 (/.f64 x y) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y))))","(+.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 (/.f64 x y) x)) (pow.f64 y -2)) (-.f64 (pow.f64 (/.f64 x y) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y)))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))))","(+.f64 (-.f64 (*.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 (/.f64 x y) x)) (pow.f64 y -2)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) 0) x))))) (pow.f64 y 3))) (-.f64 (pow.f64 (/.f64 x y) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (*.f64 x x)) y)))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (log.f64 (/.f64 x y)) (/.f64 1 x))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) x (+.f64 (log.f64 (/.f64 x y)) (/.f64 1 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) x (-.f64 (fma.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (log.f64 (/.f64 x y)) 3) (/.f64 (log.f64 (/.f64 x y)) (neg.f64 y)))) (*.f64 x x) (+.f64 (/.f64 1 x) (log.f64 x))) (log.f64 y)))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 1/12 (*.f64 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 y y)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30)))))) (exp.f64 (neg.f64 y))) (pow.f64 x 4)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x 3))) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x)))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 8 -6))))) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (*.f64 x x)) (/.f64 (exp.f64 (neg.f64 y)) x)) (-.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 8 -6))))) (pow.f64 x 3)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30))) (fma.f64 -1/48 (pow.f64 (*.f64 y y) 3) (*.f64 (*.f64 1/12 (*.f64 (pow.f64 y 3) (+.f64 8 -6))) (*.f64 y y))))) (pow.f64 x 4))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(/.f64 (-.f64 1 y) x)","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (/.f64 (-.f64 1 y) x))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (-.f64 (/.f64 (-.f64 1 (*.f64 (pow.f64 y 3) (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x))))) x) (/.f64 y x)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(/.f64 (pow.f64 (/.f64 x y) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) 0) x)))) (pow.f64 y 3)))) (-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(/.f64 (pow.f64 (/.f64 x y) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))","(-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) (fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) 0) x))))) (*.f64 (pow.f64 y 3) x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (-.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)) (-.f64 1 (/.f64 y x)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(-.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (pow.f64 (/.f64 x y) 2))"]],"time":335.110107421875,"type":"simplify"},{"compiler":[[5479,3059]],"time":52.7119140625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))","fresh",13.981780962203125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","fresh",13.97853848174001],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","done",13.973968462203125],["(/.f64 1 x)","next",9.946038350826402],["(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","fresh",33.89797728096905],["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077]],"compiler":[[13,8],[14,9],[11,6],[5,4],[29,23],[7,5],[13,8],[14,9],[5,4],[29,23],[7,5]],"count":[[198,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[197,5],"picked":[1,1]}],"min-error":[0.00390625],"time":51.89501953125,"type":"prune"},{"compiler":[[7,5]],"time":1.7919921875,"type":"localize"},{"compiler":[[2,2]],"time":0.088134765625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))","fresh",13.981780962203125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","next",13.97853848174001],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","done",13.973968462203125],["(/.f64 1 x)","done",9.946038350826402],["(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","fresh",33.89797728096905],["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077]],"compiler":[[13,8],[14,9],[11,6],[5,4],[29,23],[7,5],[13,8],[14,9],[29,23],[7,5]],"count":[[6,6]],"kept":[{"done":[1,1],"fresh":[4,4],"new":[0,0],"picked":[1,1]}],"min-error":[0.00390625],"time":2.971923828125,"type":"prune"},{"compiler":[[50,12]],"locations":[["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))",0.0078125,true],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)",0.01171875,true],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)",0.014003759768442016,true],["(pow.f64 (/.f64 x (+.f64 x y)) x)",8.102234504390337,false]],"time":7.742919921875,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","y","-inf",0.949951171875],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","y","inf",0.87890625],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","y","0",0.274169921875],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","x","-inf",0.7890625],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","x","inf",1.1240234375],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))","x","0",0.435791015625],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","y","-inf",0.6220703125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","y","inf",0.59521484375],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","y","0",0.294189453125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","x","-inf",0.367919921875],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","x","inf",0.5498046875],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","x","0",0.28515625],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","y","-inf",8.09521484375],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","y","inf",8.298828125],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","y","0",0.820068359375],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","x","-inf",3.656005859375],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","x","inf",4.652099609375],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","x","0",1.737060546875]],"time":35.26806640625,"type":"series"},{"count":[[3,104]],"inputs":[["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)","(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","(cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 0) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 4) 2) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (neg.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 x 2/3)) (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) x) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (cbrt.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 x 2/3))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 0) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (*.f64 0 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))"]],"rules":[["egg-rr",22],["egg-rr",52],["egg-rr",30]],"time":29.6669921875,"type":"rewrite"},{"count":[[176,228]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))))) (*.f64 1/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))))) (pow.f64 x 2)) (+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3))))) (+.f64 (*.f64 4/9 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))))) (*.f64 1/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))))) (pow.f64 x 2)) (+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 3)) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 3))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (pow.f64 x 2))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (pow.f64 x 2))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 1 (+.f64 (*.f64 -1 y) (*.f64 (pow.f64 y 2) (+.f64 1/3 (+.f64 (*.f64 1/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/9 (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))) (+.f64 (*.f64 -4/9 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (+.f64 (*.f64 1/3 (-.f64 (+.f64 1/27 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))) (*.f64 2/3 (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) 1/27) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))) (pow.f64 y 3)) (+.f64 (*.f64 -1 y) (*.f64 (pow.f64 y 2) (+.f64 1/3 (+.f64 (*.f64 1/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y)))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)) (pow.f64 1 1/3))))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 x 2)) (pow.f64 y 3)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))))) (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))))))))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))","(+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 x 2)))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2))))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3))))) (pow.f64 y 3))))))))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 3)) (/.f64 (exp.f64 (*.f64 -1 y)) x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2)))))) x)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 2) x)))))","1","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1)","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (pow.f64 x 2))) 1))","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (pow.f64 x 2))) (+.f64 1 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)))) (pow.f64 x 3))))))","(pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))))","(pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)))))))","1","(+.f64 (*.f64 -1/3 y) 1)","(+.f64 (*.f64 -1/3 y) (+.f64 1 (*.f64 1/3 (*.f64 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)))))","(+.f64 (*.f64 -1/3 y) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) 1/27) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3)","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 y 3)))) (+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3)","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2))))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))))) (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x))","(+.f64 1 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 1) x))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))))) (*.f64 1/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))))) (pow.f64 x 2)) (+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x)))","(fma.f64 (fma.f64 1/9 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (fma.f64 2/9 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) 1))) (*.f64 x x) (+.f64 1 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 1) x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3))))) (+.f64 (*.f64 4/9 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 2/3 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/9 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))))) (*.f64 1/3 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))))))) (pow.f64 x 2)) (+.f64 1 (*.f64 (+.f64 (*.f64 2/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (*.f64 1/3 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) x))))","(fma.f64 (fma.f64 1/3 (-.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 1/27 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3)))) (fma.f64 4/9 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (fma.f64 1/3 (*.f64 (fma.f64 1/9 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (*.f64 2/3 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 2/3 (-.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 1/27 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3)))))))) (pow.f64 x 3) (fma.f64 (fma.f64 1/9 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (fma.f64 2/9 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) 1))) (*.f64 x x) (+.f64 1 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 1) x))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))","(exp.f64 (neg.f64 y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (exp.f64 (neg.f64 y))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))","(fma.f64 1/3 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (pow.f64 x -2)) 1) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))) (pow.f64 x -2)) (+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/18 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (pow.f64 x -2)))))))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 3)) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 3))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))))))","(fma.f64 1/3 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (pow.f64 x -2)) 1) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))) (pow.f64 x -2)) (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))) (*.f64 (*.f64 y y) 1))) (pow.f64 x 3)) (+.f64 (*.f64 1/3 (/.f64 (fma.f64 (fma.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (*.f64 y y) 1)) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (exp.f64 (neg.f64 y)) (neg.f64 (fma.f64 1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 1/3 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)) (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9)))))) (pow.f64 x 3))) (fma.f64 1/9 (/.f64 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)) (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9)) (pow.f64 x 3)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (+.f64 (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (exp.f64 (neg.f64 y))) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (/.f64 (fma.f64 2/3 (*.f64 (fma.f64 (fma.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (*.f64 y y) 1)) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (exp.f64 (neg.f64 y)) (neg.f64 (fma.f64 1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 1/3 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)) (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9)))))) (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y))))) (*.f64 (*.f64 1/9 (pow.f64 (exp.f64 (neg.f64 y)) 1/9)) (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)))) (pow.f64 x 3)) (*.f64 1/18 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (pow.f64 x -2))))))))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y)))","(exp.f64 (neg.f64 y))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (*.f64 (*.f64 y y) 1)) -1/2) x)) (exp.f64 (neg.f64 y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (pow.f64 x 2))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2))))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (*.f64 (*.f64 y y) 1)) -1/2) x)) (+.f64 (+.f64 (*.f64 1/3 (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (pow.f64 x -2))) (exp.f64 (neg.f64 y))) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))))) (pow.f64 x -2)) (*.f64 1/18 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (pow.f64 x -2)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 13)) 1/9) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 14)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 -1 y))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (pow.f64 x 2))) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2) (pow.f64 x 2)))))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 13) 1/9) (*.f64 (*.f64 y y) 1)) -1/2) x)) (+.f64 (+.f64 (*.f64 1/3 (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (pow.f64 x -2))) (exp.f64 (neg.f64 y))) (+.f64 (neg.f64 (/.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 (*.f64 y y) 1)))))) (fma.f64 -1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9) (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1))))))) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (-.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 (*.f64 y y) 1)))))) (fma.f64 -1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9) (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1))))))) (*.f64 (*.f64 -1/9 (pow.f64 (exp.f64 (neg.f64 y)) 1/9)) (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)))) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9) (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1))) (*.f64 -1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))))) (*.f64 (*.f64 y y) 1))))))) (pow.f64 x 3))) (fma.f64 (cbrt.f64 (exp.f64 (neg.f64 y))) (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 14) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (neg.f64 y)))) (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))))) (pow.f64 x -2)) (*.f64 1/18 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (pow.f64 x -2))))))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 1 (neg.f64 y))","(+.f64 1 (+.f64 (*.f64 -1 y) (*.f64 (pow.f64 y 2) (+.f64 1/3 (+.f64 (*.f64 1/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))))))","(+.f64 (+.f64 1 (neg.f64 y)) (*.f64 (*.f64 y y) (+.f64 1/3 (*.f64 (+.f64 1/6 (/.f64 1/2 x)) 1))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/9 (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))) (+.f64 (*.f64 -4/9 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (+.f64 (*.f64 1/3 (-.f64 (+.f64 1/27 (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))))) (*.f64 2/3 (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) 1/27) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))) (pow.f64 y 3)) (+.f64 (*.f64 -1 y) (*.f64 (pow.f64 y 2) (+.f64 1/3 (+.f64 (*.f64 1/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x)))) (*.f64 2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))))","(+.f64 1 (fma.f64 (fma.f64 -1/3 (+.f64 1/9 (*.f64 2/3 (+.f64 1/6 (/.f64 1/2 x)))) (fma.f64 -4/9 (+.f64 1/6 (/.f64 1/2 x)) (fma.f64 1/3 (+.f64 (neg.f64 (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x)))) (-.f64 1/27 (*.f64 -2/3 (+.f64 1/6 (/.f64 1/2 x))))) (*.f64 2/3 (+.f64 (neg.f64 (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x)))) (-.f64 1/27 (*.f64 -2/3 (+.f64 1/6 (/.f64 1/2 x))))))))) (pow.f64 y 3) (+.f64 (neg.f64 y) (*.f64 (*.f64 y y) (+.f64 1/3 (*.f64 (+.f64 1/6 (/.f64 1/2 x)) 1))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -2/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)) (+.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (*.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)) (pow.f64 1 1/3))))))))","(fma.f64 -2/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)) (fma.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (*.f64 (pow.f64 x 4) (pow.f64 y -2))) (fma.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))))) (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y -2)) (+.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (fma.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)) (*.f64 1/3 (*.f64 (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2)) 1)))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 x 2)) (pow.f64 y 3)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))))) (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)) (pow.f64 1 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 13)) 1/9) (/.f64 (pow.f64 x 2) y))))))))))))","(fma.f64 -2/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7))) (pow.f64 x 6)) (*.f64 (*.f64 -2/3 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 4)) 1/9)) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))))) (pow.f64 y 3))) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7)) 1/9) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))))) (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))))) (*.f64 x x))) (pow.f64 y 3)) (fma.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (/.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)))) (-.f64 (*.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7))) (pow.f64 x 6)) (*.f64 (*.f64 -2/3 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 4)) 1/9)) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x)))))) (*.f64 -2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) 1/9) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))))) (pow.f64 y 3)) (+.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (fma.f64 -2/9 (/.f64 (*.f64 (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x)) (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 4)) 1/9)) (pow.f64 y 3)) (fma.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (*.f64 (pow.f64 x 4) (pow.f64 y -2))) (fma.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))))) (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y -2)) (fma.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 13)) 1/9) (/.f64 (*.f64 x x) y)) (*.f64 1/3 (*.f64 (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2)) 1)))))))))))","(*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))","(pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y)))","(+.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 13)) 1/9) (*.f64 x x)) 1) y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y))))))","(+.f64 (*.f64 1/3 (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2))) (+.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (fma.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (*.f64 (pow.f64 x 4) (pow.f64 y -2))) (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x))))) (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y -2)) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 13)) 1/9) (*.f64 x x)) 1) y))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (/.f64 (pow.f64 x 4) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 13)) 1/9) (pow.f64 x 2)))) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 14)) 1/9) (pow.f64 x 4))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 x 2)))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))))))) (*.f64 2/9 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2))))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3))))) (pow.f64 y 3))))))))","(+.f64 (+.f64 (*.f64 1/3 (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x))))) (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))))) (pow.f64 y -2)) (fma.f64 2/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (*.f64 (pow.f64 x 4) (pow.f64 y -2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 13)) 1/9) (*.f64 x x)) 1) y)) (neg.f64 (/.f64 (+.f64 (*.f64 1/3 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) 4) 1/9) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))) (*.f64 1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7))) (pow.f64 x 6)))))) (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) 4) 1/9) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))) (fma.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7)) 1/9) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 14)) 1/9) (pow.f64 x 4)) (*.f64 (*.f64 2/3 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x))))) (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))))) (*.f64 x x))) (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x)))) (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) 4) 1/9) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))) (*.f64 1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7))) (pow.f64 x 6)))))) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) 1/9)) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x)))) (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)))))) (pow.f64 y 3)))))))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (neg.f64 (log.f64 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) x (+.f64 (neg.f64 (log.f64 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) x (+.f64 (neg.f64 (log.f64 y)) (fma.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (*.f64 x x) (+.f64 (/.f64 1 x) (log.f64 x)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 3)) (/.f64 (exp.f64 (*.f64 -1 y)) x)))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (+.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2)))) (pow.f64 x 3)) (/.f64 (exp.f64 (neg.f64 y)) x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 3)) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)))))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (+.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2)))) (pow.f64 x 3)) (+.f64 (/.f64 (exp.f64 (neg.f64 y)) x) (/.f64 (*.f64 (fma.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (*.f64 y y) 1)) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (exp.f64 (neg.f64 y))) (pow.f64 x 4)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))))) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 (*.f64 y y) 1)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)) (+.f64 (neg.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 (*.f64 y y) 1)))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))))) (pow.f64 x 3))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2)))))) x)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x)))) x)) (fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) (neg.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 (*.f64 y y) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) (neg.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(+.f64 (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 (*.f64 y y) x)) (+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) (neg.f64 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) x) y)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(/.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (/.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) y)) (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 (*.f64 y y) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 2) x)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) x) y)) (/.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 (*.f64 y y) x)))))","1","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1)","(fma.f64 1/3 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 1)","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (pow.f64 x 2))) 1))","(fma.f64 1/3 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) (fma.f64 1/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (*.f64 x x)) 1))","(+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (pow.f64 x 2))) (+.f64 1 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (+.f64 (/.f64 1 y) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)))) (pow.f64 x 3))))))","(fma.f64 1/3 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) (+.f64 (fma.f64 1/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (*.f64 x x)) 1) (*.f64 1/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (/.f64 -1 y)) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 1/27 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3)))) (pow.f64 x 3)))))","(pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 y)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))","(fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2)) (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 x x)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (+.f64 (*.f64 1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2)) (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 x x)) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 (fma.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (*.f64 y y) 1)) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (exp.f64 (neg.f64 y)) (neg.f64 (fma.f64 1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 1/3 (*.f64 (*.f64 (fma.f64 (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (neg.f64 y)) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)) (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9)))))) (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2))) (pow.f64 x 3)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y))))))","(pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)","(cbrt.f64 (exp.f64 (neg.f64 y)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3))","(fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3)))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2)) (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 x x)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/9) (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) x))) (+.f64 (pow.f64 (exp.f64 (*.f64 -1 y)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 7)) 1/3) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 -1 y)) 17)) 1/9) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)))))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2)) (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))) (*.f64 x x)) (+.f64 (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7) 1/9) (/.f64 (*.f64 (*.f64 y y) 1) x)) (cbrt.f64 (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) -2))) (/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 (*.f64 y y) 1)))))) (fma.f64 -1/216 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (neg.f64 y)) 7)) (pow.f64 (*.f64 (*.f64 y y) 1) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 4) 1/9) (*.f64 (fma.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 (exp.f64 (neg.f64 y)) 17) 1/9) (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (*.f64 y y) 1)))))) (pow.f64 x 3)))))","1","(+.f64 (*.f64 -1/3 y) 1)","(fma.f64 -1/3 y 1)","(+.f64 (*.f64 -1/3 y) (+.f64 1 (*.f64 1/3 (*.f64 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)))))","(+.f64 (fma.f64 -1/3 y 1) (*.f64 1/3 (*.f64 (+.f64 1/6 (/.f64 1/2 x)) (*.f64 y y))))","(+.f64 (*.f64 -1/3 y) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) 1/27) (*.f64 -2/3 (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))))))))","(+.f64 (fma.f64 -1/3 y 1) (*.f64 1/3 (+.f64 (*.f64 (+.f64 1/6 (/.f64 1/2 x)) (*.f64 y y)) (*.f64 (pow.f64 y 3) (+.f64 (neg.f64 (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x)))) (-.f64 1/27 (*.f64 -2/3 (+.f64 1/6 (/.f64 1/2 x)))))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3)","(cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))","(+.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7)) 1/9) (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) -2)) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2))) (+.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7)) 1/9) (/.f64 (*.f64 x x) y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/3) (pow.f64 x 6))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 y 3)))) (+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) -2)) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) -2)) (-.f64 (*.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (*.f64 (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7))) (pow.f64 x 6)) (*.f64 (*.f64 -2/3 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 4)) 1/9)) (*.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x)) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x)))))) (pow.f64 y 3)) (+.f64 (cbrt.f64 (exp.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x))) (*.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x) 7)) 1/9) (/.f64 (*.f64 x x) y))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (*.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7)) 1/9) (/.f64 (*.f64 x x) y))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7)) 1/9) (/.f64 (*.f64 x x) y)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) -2))) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2)))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/9) (/.f64 (pow.f64 x 2) y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 4)) 1/9) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 x 2)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 7)) 1/3) (pow.f64 x 6))))) (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2)) 1/3) (/.f64 (-.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 17)) 1/9) (pow.f64 x 4)))) (pow.f64 y 2)))))))","(+.f64 (cbrt.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 -1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7)) 1/9) (/.f64 (*.f64 x x) y)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) -2)) (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (*.f64 (*.f64 x x) 1) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)) x)))) (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) 4) 1/9) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (*.f64 x x))) (*.f64 1/27 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 7))) (pow.f64 x 6)))))) (pow.f64 y 3)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) -2))) (*.f64 (fma.f64 (pow.f64 (exp.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)))) x) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (*.f64 x x) 1) x) (pow.f64 x 4))) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 -1 y) (neg.f64 x))) x) 17)) 1/9) (pow.f64 x 4))))) (pow.f64 y -2))))))"]],"time":275.906982421875,"type":"simplify"},{"compiler":[[20375,13736]],"time":207.056884765625,"type":"eval"},{"alts":[["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077],["(/.f64 1 x)","done",9.946038350826402],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","next",13.981780962203125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","done",13.97853848174001],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","done",13.973968462203125],["(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x))))","fresh",33.89797728096905]],"compiler":[[7,5],[5,4],[13,8],[14,9],[11,6],[22,15],[7,5],[13,8],[22,15]],"count":[[293,6]],"kept":[{"done":[2,2],"fresh":[3,0],"new":[287,3],"picked":[1,1]}],"min-error":[0.00390625],"time":99.6650390625,"type":"prune"},{"compiler":[[34,11]],"locations":[["(/.f64 x (+.f64 x y))",0.00390625,false],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))",0.01953125,true],["(pow.f64 (/.f64 x (+.f64 x y)) x)",8.102234504390337,false]],"time":6.4921875,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","y","-inf",0.3330078125],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","y","inf",0.31005859375],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","y","0",0.2109375],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","x","-inf",0.510009765625],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","x","inf",0.3369140625],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","x","0",0.2939453125]],"time":2.14990234375,"type":"series"},{"count":[[1,43]],"inputs":[["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (*.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) x) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x 2/3))) (cbrt.f64 (pow.f64 x 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 1) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 x) (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))))"]],"rules":[["egg-rr",43]],"time":22.419921875,"type":"rewrite"},{"count":[[67,81]],"inputs":[["(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (log.f64 (/.f64 x y)) (/.f64 1 x))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) x (+.f64 (log.f64 (/.f64 x y)) (/.f64 1 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(+.f64 (fma.f64 (fma.f64 1/2 (pow.f64 (log.f64 (/.f64 x y)) 2) (/.f64 -1 y)) x (+.f64 (log.f64 (/.f64 x y)) (/.f64 1 x))) (*.f64 (fma.f64 1/2 (pow.f64 y -2) (fma.f64 1/6 (pow.f64 (log.f64 (/.f64 x y)) 3) (/.f64 (log.f64 (/.f64 x y)) (neg.f64 y)))) (*.f64 x x)))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 1/12 (*.f64 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 y y)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30)))))) (exp.f64 (neg.f64 y))) (pow.f64 x 4)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 4 -6)) (*.f64 1/8 (pow.f64 y 4)))) (pow.f64 x 3))) (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 -6 8))))) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (exp.f64 (neg.f64 y)) (*.f64 y y)) (pow.f64 x -2)) (/.f64 (exp.f64 (neg.f64 y)) x)) (-.f64 (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 -6 8))))) (pow.f64 x 3)) (/.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 48 -30))) (fma.f64 -1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/12 (*.f64 (*.f64 (pow.f64 y 3) (+.f64 -6 8)) (*.f64 y y)))))) (pow.f64 x 4))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(/.f64 (+.f64 1 (neg.f64 y)) x)","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (/.f64 (+.f64 1 (neg.f64 y)) x))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) (fma.f64 1/3 (pow.f64 x -2) (+.f64 1/6 (/.f64 1/2 x)))) y) x))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(/.f64 (pow.f64 (/.f64 x y) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 (*.f64 1/6 (fma.f64 -2 (pow.f64 x 3) 0)) x))) (pow.f64 y 3)))) (-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(/.f64 (pow.f64 (/.f64 x y) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(-.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))","(-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 x y) x) x) (+.f64 (*.f64 (*.f64 1/2 (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (pow.f64 y -2)) 1)) (/.f64 (*.f64 (pow.f64 (/.f64 x y) x) x) y)) (/.f64 (*.f64 (fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 x 3)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 (fma.f64 2 (pow.f64 x 3) 0) x)))) (pow.f64 (/.f64 x y) x)) (*.f64 (pow.f64 y 3) x)))"]],"time":115.287109375,"type":"simplify"},{"compiler":[[5691,3310]],"time":55.075927734375,"type":"eval"},{"alts":[["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077],["(/.f64 1 x)","done",9.946038350826402],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","done",13.981780962203125],["(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","done",13.97853848174001],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","done",13.973968462203125],["(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x))))","fresh",33.89797728096905],["(*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))","fresh",17.67192780586077]],"compiler":[[7,5],[5,4],[13,8],[14,9],[11,6],[22,15],[9,7]],"count":[[202,7]],"kept":[{"done":[3,3],"fresh":[2,2],"new":[196,1],"picked":[1,1]}],"min-error":[0],"time":50.10595703125,"type":"prune"},{"accuracy":[0.7775713586814842],"baseline":[9.946038350826402],"branch":[["x",0.7775713586814842,3],["y",6.839551662481022,3],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)",3.293006892617715,3]],"compiler":[[3,2],[3,2],[13,8],[123,61]],"count":[[11,3]],"inputs":[["(*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))","(/.f64 (exp.f64 (neg.f64 y)) x)","(*.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))","(fma.f64 (fma.f64 1/2 (pow.f64 x -2) (/.f64 1/2 x)) (*.f64 y y) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x))))","(*.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))","(/.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) 3) x)","(/.f64 1 x)","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(/.f64 (exp.f64 (neg.f64 y)) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, F"],"oracle":[34.45911623050188],"outputs":[["(*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))","(/.f64 1 x)","(*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))"]],"time":41.838134765625,"times":[["x",12.837158203125],["y",15.760986328125],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)",10.930908203125]],"type":"regimes"},{"bstep":[[0.0018633500321703442,4.597887370896635,29.947021484375],[-7000044814060.983,-0.01645818641669821,36.421142578125]],"compiler":[[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[15,10],[3,2]],"method":["binary-search","binary-search"],"time":66.5009765625,"type":"bsearch"},{"compiler":[[27,18]],"inputs":[["(if (<=.f64 x -1224979098644775/72057594037927936) (*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y))) (if (<=.f64 x 9/2) (/.f64 1 x) (*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -1224979098644775/72057594037927936) (*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y))) (if (<=.f64 x 9/2) (/.f64 1 x) (*.f64 (/.f64 1 x) (exp.f64 (neg.f64 y)))))","(if (<=.f64 x -1224979098644775/72057594037927936) (/.f64 (exp.f64 (neg.f64 y)) x) (if (<=.f64 x 9/2) (/.f64 1 x) (/.f64 (exp.f64 (neg.f64 y)) x)))"]],"stop":[["fuel",1]],"time":18.794921875,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[27,18]],"remove-preprocessing":[[]],"time":11.567138671875,"type":"end"}]