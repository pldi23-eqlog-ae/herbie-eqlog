[{"compiler":[[42,30]],"method":["search"],"sampling":[[1,2.890645125621066e-6,0.0,0.9999971093548744],[0,0.0,2.890645125621066e-6,0.9999971093548744]],"time":0.260986328125,"type":"analyze"},{"outcomes":[["body",256,"valid",490.951904296875,8256]],"time":498.58203125,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1","2","3"],["(*.f64 a (+.f64 (+.f64 b c) d))","(*.f64 b (+.f64 (+.f64 a c) d))","(*.f64 c (+.f64 (+.f64 b a) d))","(*.f64 d (+.f64 (+.f64 b c) a))","(*.f64 a (+.f64 (+.f64 c b) d))","(*.f64 a (+.f64 (+.f64 d c) b))","(*.f64 a (+.f64 (+.f64 b d) c))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 a (+.f64 (+.f64 b c) d))","(*.f64 a (+.f64 (+.f64 d c) b))","(*.f64 b (+.f64 (+.f64 a c) d))","(*.f64 b (+.f64 (+.f64 a d) c))","(*.f64 c (+.f64 (+.f64 b a) d))","(*.f64 c (+.f64 b (+.f64 a d)))","(*.f64 d (+.f64 (+.f64 b c) a))","(*.f64 d (+.f64 b (+.f64 a c)))","(*.f64 a (+.f64 (+.f64 c b) d))","(*.f64 a (+.f64 (+.f64 d c) b))","(*.f64 a (+.f64 (+.f64 d c) b))","(*.f64 a (+.f64 (+.f64 b d) c))","(*.f64 a (+.f64 (+.f64 d c) b))"]],"symmetry":[[]],"time":82.37109375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(*.f64 a (+.f64 (+.f64 b c) d))"]],"method":["egg-herbie"],"outputs":[["(*.f64 a (+.f64 (+.f64 b c) d))"]],"time":17.846923828125,"type":"simplify"},{"compiler":[[11,7]],"time":0.198974609375,"type":"eval"},{"alts":[["(*.f64 a (+.f64 (+.f64 b c) d))","next",0.0234375]],"compiler":[[11,7],[11,7]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.0234375],"time":0.673095703125,"type":"prune"},{"compiler":[[23,7]],"locations":[["(*.f64 a (+.f64 (+.f64 b c) d))",0.0234375,true]],"time":4.322998046875,"type":"localize"},{"count":[[1,48]],"series":[["(*.f64 a (+.f64 (+.f64 b c) d))","d","-inf",0.27197265625],["(*.f64 a (+.f64 (+.f64 b c) d))","d","inf",0.318115234375],["(*.f64 a (+.f64 (+.f64 b c) d))","d","0",0.244873046875],["(*.f64 a (+.f64 (+.f64 b c) d))","c","-inf",0.285888671875],["(*.f64 a (+.f64 (+.f64 b c) d))","c","inf",0.3740234375],["(*.f64 a (+.f64 (+.f64 b c) d))","c","0",0.23583984375],["(*.f64 a (+.f64 (+.f64 b c) d))","b","-inf",0.43505859375],["(*.f64 a (+.f64 (+.f64 b c) d))","b","inf",0.351806640625],["(*.f64 a (+.f64 (+.f64 b c) d))","b","0",0.28515625],["(*.f64 a (+.f64 (+.f64 b c) d))","a","-inf",0.384033203125],["(*.f64 a (+.f64 (+.f64 b c) d))","a","inf",0.383056640625],["(*.f64 a (+.f64 (+.f64 b c) d))","a","0",0.468994140625]],"time":4.18505859375,"type":"series"},{"count":[[1,60]],"inputs":[["(*.f64 a (+.f64 (+.f64 b c) d))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a d) (*.f64 a b)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (+.f64 (*.f64 a b) (*.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (*.f64 a (+.f64 d b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 (+.f64 b c) d)) (*.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 0) (*.f64 a (+.f64 (+.f64 b c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) 1) (*.f64 (*.f64 a (+.f64 c d)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b c)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (*.f64 (+.f64 d b) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 (+.f64 b c) d)) (*.f64 0 (*.f64 a (+.f64 (+.f64 b c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 a (+.f64 (+.f64 b c) d))) (*.f64 a (+.f64 (+.f64 b c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a d) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 d b)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d b) a) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 (+.f64 b c) d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 b c) d) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 b c) d)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b c) d) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (+.f64 (+.f64 b c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 (+.f64 b c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (+.f64 (+.f64 b c) d)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 (+.f64 b c) d))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b c) d) 2)) a) (cbrt.f64 (+.f64 (+.f64 b c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 (+.f64 b c) d))) (cbrt.f64 (pow.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 2)) (cbrt.f64 (*.f64 a (+.f64 (+.f64 b c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 b c) d) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (+.f64 (+.f64 b c) d))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 b c) d) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 (+.f64 b c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (+.f64 (+.f64 b c) d) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 b c) d) 2)) (*.f64 a (cbrt.f64 (+.f64 (+.f64 b c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (+.f64 (*.f64 (+.f64 b c) (cbrt.f64 a)) (*.f64 d (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (+.f64 (*.f64 d (cbrt.f64 a)) (*.f64 (+.f64 b c) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 (+.f64 b c) d))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 (+.f64 b c) d))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 (+.f64 b c) d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 (+.f64 b c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 (+.f64 b c) d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 b c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b c) a (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 d)) (cbrt.f64 (*.f64 d d)) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (*.f64 (cbrt.f64 (*.f64 d d)) a) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) d) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a d)) (cbrt.f64 (pow.f64 (*.f64 a d) 2)) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b a (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a b (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 b c) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a (+.f64 b c))) (cbrt.f64 (pow.f64 (*.f64 a (+.f64 b c)) 2)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (+.f64 b c))) (cbrt.f64 (pow.f64 (+.f64 b c) 2)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 b c)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 b c) 2)) a) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (+.f64 b c)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a d) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (+.f64 b c)) 1 (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (+.f64 b c)) (*.f64 a d))))))"]],"rules":[["egg-rr",60]],"time":20.614013671875,"type":"rewrite"},{"count":[[108,71]],"inputs":[["(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c d))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 d b) a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c b))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a d)","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a d)","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a (+.f64 c d))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 (+.f64 d b) a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 c a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 c a)","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 (+.f64 d b) a) (*.f64 c a))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a (+.f64 c b))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a d)","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(*.f64 a d)","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))","(+.f64 (*.f64 a (+.f64 c b)) (*.f64 a d))","(*.f64 a (+.f64 c (+.f64 d b)))"]],"time":152.83984375,"type":"simplify"},{"compiler":[[796,177]],"time":6.919189453125,"type":"eval"},{"alts":[["(*.f64 a (+.f64 (+.f64 b c) d))","done",0.0234375],["(fma.f64 (cbrt.f64 (*.f64 a (+.f64 b c))) (cbrt.f64 (pow.f64 (*.f64 a (+.f64 b c)) 2)) (*.f64 a d))","fresh",4.634197816002234],["(fma.f64 a b (*.f64 a (+.f64 c d)))","next",0.01171875]],"compiler":[[11,7],[22,12],[12,7],[22,12],[12,7]],"count":[[72,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[71,2],"picked":[1,1]}],"min-error":[0],"time":15.69384765625,"type":"prune"},{"compiler":[[24,7]],"locations":[["(fma.f64 a b (*.f64 a (+.f64 c d)))",0.0078125,true],["(*.f64 a (+.f64 c d))",0.01171875,true]],"time":4.72607421875,"type":"localize"},{"count":[[2,84]],"series":[["(fma.f64 a b (*.f64 a (+.f64 c d)))","d","-inf",0.184814453125],["(fma.f64 a b (*.f64 a (+.f64 c d)))","d","inf",0.174072265625],["(fma.f64 a b (*.f64 a (+.f64 c d)))","d","0",0.23291015625],["(fma.f64 a b (*.f64 a (+.f64 c d)))","c","-inf",0.169921875],["(fma.f64 a b (*.f64 a (+.f64 c d)))","c","inf",0.177978515625],["(fma.f64 a b (*.f64 a (+.f64 c d)))","c","0",0.93994140625],["(fma.f64 a b (*.f64 a (+.f64 c d)))","b","-inf",0.2998046875],["(fma.f64 a b (*.f64 a (+.f64 c d)))","b","inf",0.22412109375],["(fma.f64 a b (*.f64 a (+.f64 c d)))","b","0",0.27294921875],["(fma.f64 a b (*.f64 a (+.f64 c d)))","a","-inf",0.43798828125],["(fma.f64 a b (*.f64 a (+.f64 c d)))","a","inf",0.346923828125],["(fma.f64 a b (*.f64 a (+.f64 c d)))","a","0",0.3330078125],["(*.f64 a (+.f64 c d))","d","-inf",0.240966796875],["(*.f64 a (+.f64 c d))","d","inf",0.22705078125],["(*.f64 a (+.f64 c d))","d","0",0.222900390625],["(*.f64 a (+.f64 c d))","c","-inf",0.223876953125],["(*.f64 a (+.f64 c d))","c","inf",0.258056640625],["(*.f64 a (+.f64 c d))","c","0",0.217041015625],["(*.f64 a (+.f64 c d))","a","-inf",0.2919921875],["(*.f64 a (+.f64 c d))","a","inf",0.596923828125],["(*.f64 a (+.f64 c d))","a","0",0.337890625]],"time":6.64306640625,"type":"series"},{"count":[[2,92]],"inputs":[["(*.f64 a (+.f64 c d))","(fma.f64 a b (*.f64 a (+.f64 c d)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) (*.f64 (*.f64 a (+.f64 c d)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (+.f64 c d)) 0) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) (*.f64 0 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 a (+.f64 c d))) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a d) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 c d) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 c d)) (*.f64 (pow.f64 (+.f64 c d) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 2/3) (+.f64 c d)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 c d) 2/3) a) (cbrt.f64 (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (pow.f64 (*.f64 a (+.f64 c d)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (cbrt.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 c d) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (+.f64 c d))) (pow.f64 (+.f64 c d) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 c d) 2/3) (*.f64 a (cbrt.f64 (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (*.f64 (+.f64 c d) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (+.f64 (*.f64 d (cbrt.f64 a)) (*.f64 c (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (+.f64 (*.f64 c (cbrt.f64 a)) (*.f64 d (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 c d))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 c d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 c d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c a (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a c (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 c)) (pow.f64 c 2/3) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (pow.f64 c 2/3) a) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (*.f64 (pow.f64 d 2/3) a) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a d)) (cbrt.f64 (pow.f64 (*.f64 a d) 2)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 d)) (pow.f64 d 2/3) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) d) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) 1 (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a d) (*.f64 a c))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b (+.f64 c d))) (*.f64 (*.f64 a (+.f64 b (+.f64 c d))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (+.f64 b (+.f64 c d))) 0) (*.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b (+.f64 c d))) (*.f64 0 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 a (+.f64 b (+.f64 c d)))) (*.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b c)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a d) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) (*.f64 a d)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (+.f64 (*.f64 a d) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (+.f64 b c)) 1) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))) (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2/3) (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (+.f64 c d)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (+.f64 (*.f64 (pow.f64 a 2/3) b) (*.f64 (pow.f64 a 2/3) (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (+.f64 (*.f64 (pow.f64 a 2/3) (+.f64 c d)) (*.f64 (pow.f64 a 2/3) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a b (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 c d) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c d) a (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c d)) (*.f64 (pow.f64 (+.f64 c d) 2/3) a) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (+.f64 c d))) (pow.f64 (+.f64 c d) 2/3) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 c d) (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (cbrt.f64 (*.f64 a (+.f64 c d))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b a (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a (+.f64 c d))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (+.f64 c d)) 1 (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a b) 1 (*.f64 a (+.f64 c d)))))))"]],"rules":[["egg-rr",45],["egg-rr",47]],"time":24.958984375,"type":"rewrite"},{"count":[[176,107]],"inputs":[["(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 a d))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (*.f64 c a))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 a d))","(*.f64 a (+.f64 d b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 c a))","(*.f64 a (+.f64 c b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)"]],"time":251.850830078125,"type":"simplify"},{"compiler":[[1250,343]],"time":12.826171875,"type":"eval"},{"alts":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","next",0.0078125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","fresh",0.01171875]],"compiler":[[13,7],[12,7],[13,7],[12,7]],"count":[[110,2]],"kept":[{"done":[1,0],"fresh":[1,0],"new":[107,2],"picked":[1,0]}],"min-error":[0],"time":26.892822265625,"type":"prune"},{"compiler":[[26,7]],"locations":[["(fma.f64 a c (*.f64 a d))",0.00390625,true],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))",0.0078125,true]],"time":5.326171875,"type":"localize"},{"count":[[2,84]],"series":[["(fma.f64 a c (*.f64 a d))","d","-inf",0.143798828125],["(fma.f64 a c (*.f64 a d))","d","inf",0.14208984375],["(fma.f64 a c (*.f64 a d))","d","0",0.174072265625],["(fma.f64 a c (*.f64 a d))","c","-inf",0.14501953125],["(fma.f64 a c (*.f64 a d))","c","inf",0.14404296875],["(fma.f64 a c (*.f64 a d))","c","0",0.172119140625],["(fma.f64 a c (*.f64 a d))","a","-inf",0.1650390625],["(fma.f64 a c (*.f64 a d))","a","inf",0.14501953125],["(fma.f64 a c (*.f64 a d))","a","0",0.1669921875],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","d","-inf",0.23095703125],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","d","inf",0.2900390625],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","d","0",0.2587890625],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","c","-inf",0.258056640625],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","c","inf",0.23486328125],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","c","0",0.23388671875],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","b","-inf",0.197021484375],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","b","inf",0.1748046875],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","b","0",0.301025390625],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","a","-inf",0.43798828125],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","a","inf",0.447021484375],["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","a","0",1.263916015625]],"time":5.98388671875,"type":"series"},{"count":[[2,91]],"inputs":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","(fma.f64 a c (*.f64 a d))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b c)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a d) (*.f64 a (+.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a b) (*.f64 a d)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (+.f64 (*.f64 a b) (*.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (neg.f64 (*.f64 a (+.f64 b c)))) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 a (+.f64 b c)) -1)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 b (+.f64 c d))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a b) (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a (+.f64 c d)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 a b) (*.f64 a d)) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a (+.f64 b c)) (neg.f64 (*.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 b (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))) (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2/3) (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d))))) (neg.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (cbrt.f64 (*.f64 a b))))) (+.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (cbrt.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (-.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (*.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (*.f64 a (+.f64 c d)))))) (+.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (*.f64 a (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 b (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (+.f64 b (+.f64 c d))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 b (+.f64 c d)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 b (+.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 b (+.f64 c d))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a b (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 c d) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (cbrt.f64 (*.f64 a (+.f64 c d))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b a (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) b) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a (+.f64 c d))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (+.f64 c d)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (+.f64 c d)) 1 (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a b) 1 (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a b) (*.f64 a (+.f64 c d)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a d) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c d)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a c) (neg.f64 (*.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a d) (neg.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 c d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 c d) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (+.f64 (*.f64 (pow.f64 a 2/3) d) (*.f64 (pow.f64 a 2/3) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) (pow.f64 (*.f64 a (+.f64 c d)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3) (cbrt.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 a (+.f64 c d)))) (neg.f64 (pow.f64 (*.f64 a (+.f64 c d)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (-.f64 (pow.f64 (*.f64 a d) 2/3) (*.f64 (cbrt.f64 (*.f64 a c)) (cbrt.f64 (*.f64 a d))))) (+.f64 (cbrt.f64 (*.f64 a c)) (cbrt.f64 (*.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 a d) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 (cbrt.f64 (*.f64 a d)) (cbrt.f64 (*.f64 a c))))) (+.f64 (cbrt.f64 (*.f64 a d)) (cbrt.f64 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 c d))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (+.f64 c d)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a (+.f64 c d))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 c d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 c d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 c d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 c d))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 c d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a c (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c a (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 c)) (pow.f64 c 2/3) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d) (*.f64 (pow.f64 d 2/3) a) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a d)) (pow.f64 (*.f64 a d) 2/3) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 d)) (pow.f64 d 2/3) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) d) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 a d) 2/3) (cbrt.f64 (*.f64 a d)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a d)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) 1 (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a c) (*.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a d) 1 (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a d) (*.f64 a c))))))"]],"rules":[["egg-rr",45],["egg-rr",46]],"time":41.8310546875,"type":"rewrite"},{"count":[[175,105]],"inputs":[["(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 a b)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 a b)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (*.f64 a d))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (*.f64 c a))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))","(+.f64 (*.f64 c a) (*.f64 a d))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (+.f64 (*.f64 -1 b) (*.f64 -1 d))) a))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (*.f64 a d))","(*.f64 a (+.f64 d b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (*.f64 c a))","(*.f64 a (+.f64 c b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 (+.f64 c d) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 (+.f64 c d) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 (+.f64 c d) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 (+.f64 c d) a)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 c) (*.f64 -1 d)) a))","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 c a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a d) (*.f64 c a))","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(*.f64 a d)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 c a) (*.f64 a d))","(*.f64 (+.f64 c d) a)"]],"time":253.843017578125,"type":"simplify"},{"compiler":[[1250,343]],"time":12.955078125,"type":"eval"},{"alts":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","done",0.0078125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","next",0.01171875]],"compiler":[[13,7],[12,7],[12,7]],"count":[[107,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[105,0],"picked":[1,1]}],"min-error":[0],"time":27.10888671875,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 (+.f64 c d) a (*.f64 a b))",0.01171875,true]],"time":4.826904296875,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (+.f64 c d) a (*.f64 a b))","b","-inf",0.22802734375],["(fma.f64 (+.f64 c d) a (*.f64 a b))","b","inf",0.22021484375],["(fma.f64 (+.f64 c d) a (*.f64 a b))","b","0",0.18896484375],["(fma.f64 (+.f64 c d) a (*.f64 a b))","a","-inf",0.37109375],["(fma.f64 (+.f64 c d) a (*.f64 a b))","a","inf",0.4638671875],["(fma.f64 (+.f64 c d) a (*.f64 a b))","a","0",0.18408203125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","d","-inf",0.2158203125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","d","inf",0.259033203125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","d","0",0.171142578125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","c","-inf",0.246826171875],["(fma.f64 (+.f64 c d) a (*.f64 a b))","c","inf",0.24609375],["(fma.f64 (+.f64 c d) a (*.f64 a b))","c","0",0.239013671875]],"time":3.17919921875,"type":"series"},{"count":[[1,45]],"inputs":[["(fma.f64 (+.f64 c d) a (*.f64 a b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 c d) a) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (+.f64 c (+.f64 d b))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (+.f64 c (+.f64 d b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (+.f64 c d) a) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a b) (neg.f64 (*.f64 (+.f64 c d) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 c (+.f64 d b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 c (+.f64 d b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 c (+.f64 d b)))) (pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 2/3) (cbrt.f64 (*.f64 a (+.f64 c (+.f64 d b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (+.f64 (*.f64 (+.f64 c d) (cbrt.f64 a)) (*.f64 b (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b))))) (neg.f64 (pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 c d) a) 2)) (-.f64 (pow.f64 (*.f64 a b) 2/3) (*.f64 (cbrt.f64 (*.f64 (+.f64 c d) a)) (cbrt.f64 (*.f64 a b))))) (+.f64 (cbrt.f64 (*.f64 (+.f64 c d) a)) (cbrt.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 a b) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 c d) a) 2)) (*.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 c d) a))))) (+.f64 (cbrt.f64 (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 c d) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 c (+.f64 d b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 c (+.f64 d b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (+.f64 c (+.f64 d b))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (+.f64 c (+.f64 d b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 c (+.f64 d b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 a (+.f64 c (+.f64 d b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 c (+.f64 d b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 c d) a (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 c d) a)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 c d) a) 2)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 c d) (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 c d)) (*.f64 (pow.f64 (+.f64 c d) 2/3) a) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (+.f64 c d) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b a (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a b)) (pow.f64 (*.f64 a b) 2/3) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 a b) 2/3) (cbrt.f64 (*.f64 a b)) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) b) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a b (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (pow.f64 b 2/3) a) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a b)) (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 c d) a) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 c d) a) 1 (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a b) 1 (*.f64 (+.f64 c d) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a b) (*.f64 (+.f64 c d) a))))))"]],"rules":[["egg-rr",45]],"time":39.08984375,"type":"rewrite"},{"count":[[93,57]],"inputs":[["(+.f64 (*.f64 a b) (*.f64 a d))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (*.f64 c a))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 a b) (*.f64 a d))","(*.f64 a (+.f64 d b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 c a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 c a))","(*.f64 a (+.f64 c b))","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 a d) (*.f64 c a)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a d)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (+.f64 (*.f64 c a) (*.f64 a d)))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c (+.f64 d b)) a)","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (+.f64 c d)) (*.f64 -1 b))))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 (+.f64 c d) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(*.f64 a b)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)","(+.f64 (*.f64 a b) (*.f64 (+.f64 c d) a))","(*.f64 (+.f64 (+.f64 d b) c) a)"]],"time":153.14697265625,"type":"simplify"},{"compiler":[[639,162]],"time":6.51806640625,"type":"eval"},{"alts":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","done",0.0078125],["(fma.f64 (+.f64 c d) a (*.f64 a b))","done",0.01171875]],"compiler":[[13,7],[12,7]],"count":[[59,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[57,0],"picked":[1,1]}],"min-error":[0],"time":10.906005859375,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["a",0.0078125,1],["b",0.0078125,1],["c",0.0078125,1],["d",0.0078125,1],["(*.f64 a (+.f64 (+.f64 b c) d))",0.0078125,1],["(+.f64 (+.f64 b c) d)",0.0078125,1],["(+.f64 b c)",0.0078125,1],["(+.f64 b c)",0.0078125,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[9,6],[7,5],[7,5],[54,21]],"count":[[5,1]],"inputs":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","(fma.f64 (+.f64 c d) a (*.f64 a b))","(fma.f64 (cbrt.f64 (*.f64 a (+.f64 b c))) (cbrt.f64 (pow.f64 (*.f64 a (+.f64 b c)) 2)) (*.f64 a d))","(fma.f64 a b (*.f64 a (+.f64 c d)))","(*.f64 a (+.f64 (+.f64 b c) d))"]],"link":["."],"name":["Expression, p14"],"oracle":[4.649822816002234],"outputs":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))"]],"time":28.6708984375,"times":[["a",3.177978515625],["b",3.22998046875],["c",3.135986328125],["d",3.315185546875],["(*.f64 a (+.f64 (+.f64 b c) d))",3.306884765625],["(+.f64 (+.f64 b c) d)",3.296875],["(+.f64 b c)",3.26904296875],["(+.f64 b c)",4.60595703125]],"type":"regimes"},{"compiler":[[13,7]],"inputs":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 a b (fma.f64 a c (*.f64 a d)))","(*.f64 a (+.f64 b (+.f64 c d)))"]],"stop":[["done",1]],"time":35.335205078125,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[13,7]],"remove-preprocessing":[[]],"time":8.486083984375,"type":"end"}]