[{"compiler":[[67,35]],"method":["search"],"sampling":[[12,0.10793732217280194,0.032504631963092834,0.8595580458641052],[11,0.10053120349766687,0.03991075063822791,0.8595580458641052],[10,0.09326223516836762,0.04717971896752715,0.8595580458641052],[9,0.06638076738454401,0.07406118675135076,0.8595580458641052],[8,0.055957341101020575,0.0844846130348742,0.8595580458641052],[7,0.04608251620084047,0.0943594379350543,0.8595580458641052],[6,0.0,0.14044195413589478,0.8595580458641052],[5,0.0,0.14044195413589478,0.8595580458641052],[4,0.0,0.14044195413589478,0.8595580458641052],[3,0.0,0.14044195413589478,0.8595580458641052],[2,0.0,0.14044195413589478,0.8595580458641052],[1,0.0,0.14044195413589478,0.8595580458641052],[0,0.0,0.14044195413589478,0.8595580458641052]],"time":123.138916015625,"type":"analyze"},{"outcomes":[["body",256,"valid",713.487060546875,8256]],"time":721.180908203125,"type":"sample"},{"compiler":[[56,27]],"inputs":[["0","1","2"],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 alpha beta) (*.f64 i (+.f64 (+.f64 beta alpha) i)))) (*.f64 (+.f64 (+.f64 beta alpha) (*.f64 2 i)) (+.f64 (+.f64 beta alpha) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 beta alpha) (*.f64 2 i)) (+.f64 (+.f64 beta alpha) (*.f64 2 i))) 1))","(/.f64 (/.f64 (*.f64 (*.f64 alpha (+.f64 (+.f64 i beta) alpha)) (+.f64 (*.f64 beta i) (*.f64 alpha (+.f64 (+.f64 i beta) alpha)))) (*.f64 (+.f64 (+.f64 i beta) (*.f64 2 alpha)) (+.f64 (+.f64 i beta) (*.f64 2 alpha)))) (-.f64 (*.f64 (+.f64 (+.f64 i beta) (*.f64 2 alpha)) (+.f64 (+.f64 i beta) (*.f64 2 alpha))) 1))","(/.f64 (/.f64 (*.f64 (*.f64 beta (+.f64 (+.f64 alpha i) beta)) (+.f64 (*.f64 i alpha) (*.f64 beta (+.f64 (+.f64 alpha i) beta)))) (*.f64 (+.f64 (+.f64 alpha i) (*.f64 2 beta)) (+.f64 (+.f64 alpha i) (*.f64 2 beta)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha i) (*.f64 2 beta)) (+.f64 (+.f64 alpha i) (*.f64 2 beta))) 1))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (pow.f64 (fma.f64 i 2 (+.f64 alpha beta)) 2) (+.f64 (pow.f64 (fma.f64 i 2 (+.f64 alpha beta)) 2) -1)))","(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 alpha beta) (*.f64 i (+.f64 (+.f64 beta alpha) i)))) (*.f64 (+.f64 (+.f64 beta alpha) (*.f64 2 i)) (+.f64 (+.f64 beta alpha) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 beta alpha) (*.f64 2 i)) (+.f64 (+.f64 beta alpha) (*.f64 2 i))) 1))","(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (pow.f64 (fma.f64 i 2 (+.f64 alpha beta)) 2) (+.f64 (pow.f64 (fma.f64 i 2 (+.f64 alpha beta)) 2) -1)))","(/.f64 (/.f64 (*.f64 (*.f64 alpha (+.f64 (+.f64 i beta) alpha)) (+.f64 (*.f64 beta i) (*.f64 alpha (+.f64 (+.f64 i beta) alpha)))) (*.f64 (+.f64 (+.f64 i beta) (*.f64 2 alpha)) (+.f64 (+.f64 i beta) (*.f64 2 alpha)))) (-.f64 (*.f64 (+.f64 (+.f64 i beta) (*.f64 2 alpha)) (+.f64 (+.f64 i beta) (*.f64 2 alpha))) 1))","(/.f64 (*.f64 (*.f64 alpha (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta i (*.f64 alpha (+.f64 (+.f64 alpha beta) i)))) (*.f64 (pow.f64 (fma.f64 alpha 2 (+.f64 i beta)) 2) (+.f64 (pow.f64 (fma.f64 alpha 2 (+.f64 i beta)) 2) -1)))","(/.f64 (/.f64 (*.f64 (*.f64 beta (+.f64 (+.f64 alpha i) beta)) (+.f64 (*.f64 i alpha) (*.f64 beta (+.f64 (+.f64 alpha i) beta)))) (*.f64 (+.f64 (+.f64 alpha i) (*.f64 2 beta)) (+.f64 (+.f64 alpha i) (*.f64 2 beta)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha i) (*.f64 2 beta)) (+.f64 (+.f64 alpha i) (*.f64 2 beta))) 1))","(/.f64 (*.f64 (*.f64 beta (+.f64 (+.f64 alpha beta) i)) (fma.f64 i alpha (*.f64 beta (+.f64 (+.f64 alpha beta) i)))) (*.f64 (pow.f64 (fma.f64 beta 2 (+.f64 alpha i)) 2) (+.f64 (pow.f64 (fma.f64 beta 2 (+.f64 alpha i)) 2) -1)))"]],"symmetry":[[]],"time":63.823974609375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))"]],"time":25.005126953125,"type":"simplify"},{"compiler":[[92,39]],"time":0.700927734375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","next",54.547538769536885],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))","fresh",56.2508814057635]],"compiler":[[56,27],[39,18],[56,27],[39,18]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[54.535820019536885],"time":2.010009765625,"type":"prune"},{"compiler":[[186,58]],"locations":[["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))",0.01171875,true],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))",0.0703125,true],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))",37.53125433068302,true],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))",46.49929680307227,true]],"time":25.946044921875,"type":"localize"},{"count":[[4,144]],"series":[["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","i","-inf",0.208984375],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","i","inf",0.281982421875],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","i","0",0.278076171875],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","beta","-inf",0.22900390625],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","beta","inf",0.244140625],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","beta","0",0.238037109375],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","alpha","-inf",0.257080078125],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","alpha","inf",0.221923828125],["(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))","alpha","0",0.27001953125],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","beta","-inf",0.40185546875],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","beta","inf",0.383056640625],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","beta","0",0.338134765625],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","alpha","-inf",0.436767578125],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","alpha","inf",0.411865234375],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","alpha","0",0.367919921875],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","i","-inf",0.385986328125],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","i","inf",0.30615234375],["(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","i","0",0.304931640625],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","beta","-inf",3.431884765625],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","beta","inf",1.47900390625],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","beta","0",2.81201171875],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","alpha","-inf",1.7109375],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","alpha","inf",2.123046875],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","alpha","0",2.838134765625],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","i","-inf",1.68701171875],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","i","inf",2.27099609375],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","i","0",2.885986328125],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","beta","-inf",2.032958984375],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","beta","inf",1.23388671875],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","beta","0",1.7109375],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","alpha","-inf",1.85302734375],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","alpha","inf",1.212890625],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","alpha","0",1.68994140625],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","i","-inf",1.15283203125],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","i","inf",1.137939453125],["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","i","0",1.392822265625]],"time":41.547119140625,"type":"series"},{"count":[[4,323]],"inputs":[["(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))))","(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","(*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i))))","(*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2)) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 i (*.f64 (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 i (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 i (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2)) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 -1 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 i (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) 1) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 1) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) 1) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 1 (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 i (/.f64 (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 3) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 3) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2) (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (/.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (/.f64 1 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) (neg.f64 1/3)) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (/.f64 1 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 1 (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 1 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 1 (neg.f64 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 1 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2)) (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2)) (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta)))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) (neg.f64 1/3)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2) (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2) (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2))) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) 1) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) 1) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) 1) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) 1) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) 1) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 1 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 1 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 1 (-.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1) 2)))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))) (-.f64 1 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2)) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (*.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha)) (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i (+.f64 alpha beta))) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (*.f64 i i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (*.f64 i (+.f64 alpha beta)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 i (+.f64 alpha beta)))) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha)) (*.f64 (*.f64 i (+.f64 alpha beta)) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (*.f64 i i) (*.f64 i (+.f64 (+.f64 alpha beta) i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2) (*.f64 (*.f64 i (+.f64 alpha beta)) (*.f64 beta alpha))) (*.f64 (*.f64 i i) (*.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2) (*.f64 (*.f64 beta alpha) (*.f64 i (+.f64 alpha beta)))) (*.f64 (*.f64 beta alpha) (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 i (+.f64 alpha beta))) (+.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 i i)) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) (*.f64 i (+.f64 (+.f64 alpha beta) i))) (+.f64 (*.f64 (*.f64 i i) (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 beta alpha) (*.f64 i (+.f64 alpha beta))) (+.f64 (*.f64 (*.f64 beta alpha) (*.f64 i i)) (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) (*.f64 beta alpha)) (+.f64 (*.f64 (*.f64 i i) (*.f64 beta alpha)) (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i (+.f64 (+.f64 alpha beta) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 i (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2)) (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) i)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) i) (+.f64 (+.f64 alpha beta) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (cbrt.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (cbrt.f64 (pow.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 alpha beta) i) (*.f64 i (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) 2)) (*.f64 i (+.f64 (+.f64 alpha beta) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 i) (*.f64 (cbrt.f64 (*.f64 i i)) (*.f64 (+.f64 (+.f64 alpha beta) i) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (+.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)) (*.f64 beta alpha)) (pow.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 alpha beta) i) (+.f64 (*.f64 i (*.f64 beta alpha)) (*.f64 i (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (+.f64 (pow.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (+.f64 2 3)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)) (*.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 alpha beta) i) (+.f64 (*.f64 i (*.f64 i (+.f64 (+.f64 alpha beta) i))) (*.f64 i (*.f64 beta alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)) (+.f64 (*.f64 (*.f64 beta alpha) (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 alpha beta) i) (+.f64 (*.f64 (*.f64 beta alpha) i) (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2)) (+.f64 (pow.f64 (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) 4) (*.f64 (*.f64 beta alpha) (cbrt.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 alpha beta) i) (+.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) i) (*.f64 (*.f64 beta alpha) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (neg.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 i) (*.f64 (neg.f64 (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)) (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 beta alpha) (pow.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 beta (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 2 i (+.f64 alpha beta))) (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 beta (*.f64 2 i))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (+.f64 alpha beta) 2) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))) (*.f64 (*.f64 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 beta (fma.f64 2 i (+.f64 alpha beta)))) (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 (+.f64 alpha beta) alpha)) (*.f64 (+.f64 alpha beta) (+.f64 beta (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 (*.f64 i (+.f64 alpha beta)) 2)) (pow.f64 (+.f64 alpha beta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 alpha (+.f64 alpha beta))) (*.f64 (+.f64 beta (*.f64 2 i)) (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) beta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta)))) (*.f64 beta (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) beta)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) (*.f64 (*.f64 2 i) alpha)) (*.f64 (*.f64 2 i) (+.f64 beta (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) (*.f64 alpha (*.f64 2 i))) (*.f64 (+.f64 beta (*.f64 2 i)) (*.f64 2 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) (*.f64 (*.f64 i (+.f64 alpha beta)) 2)) (*.f64 4 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) 2) (+.f64 (pow.f64 (+.f64 alpha beta) 2) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (+.f64 alpha beta)) (+.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (+.f64 alpha beta)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (*.f64 beta (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 alpha beta) 2) (+.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) 2) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) beta) (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 beta (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha) (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) beta) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 alpha beta) alpha) (+.f64 (*.f64 (+.f64 alpha beta) (+.f64 beta (*.f64 2 i))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (*.f64 2 i)) (+.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (*.f64 2 i)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) 2) (+.f64 (*.f64 4 (*.f64 i i)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (*.f64 i i)) (+.f64 (*.f64 (*.f64 i (+.f64 alpha beta)) 2) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2 i) alpha) (+.f64 (*.f64 (*.f64 2 i) (+.f64 beta (*.f64 2 i))) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 2 i (+.f64 alpha beta))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)) (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) alpha) (+.f64 (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 beta (*.f64 2 i))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 2 i (+.f64 alpha beta))) (neg.f64 (fma.f64 2 i (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2 i (+.f64 alpha beta)) (fma.f64 2 i (+.f64 alpha beta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)) (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))) (pow.f64 (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (*.f64 2 i)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 alpha beta))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 alpha beta)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (*.f64 2 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 (*.f64 (*.f64 2 i) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (*.f64 (+.f64 alpha beta) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 (*.f64 (+.f64 alpha beta) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta)))) (*.f64 (*.f64 2 i) (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 2 i (+.f64 alpha beta))) -1) (*.f64 (neg.f64 (fma.f64 2 i (+.f64 alpha beta))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4)) (-.f64 0 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) 0))) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 i (+.f64 alpha beta))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 2 i (+.f64 alpha beta))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 alpha beta) (fma.f64 2 i (+.f64 alpha beta)) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 2 i (+.f64 alpha beta)) (+.f64 alpha beta) (*.f64 (fma.f64 2 i (+.f64 alpha beta)) (*.f64 2 i)))))))"]],"rules":[["egg-rr",71],["egg-rr",56],["egg-rr",110],["egg-rr",86]],"time":77.287841796875,"type":"rewrite"},{"count":[[467,545]],"inputs":[["(/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha))","(+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))))))","(+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3)))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))))))","(+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3)))))) (+.f64 (*.f64 (pow.f64 i 4) (-.f64 (/.f64 1 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3))))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 (+.f64 beta alpha) 2)))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))))))))","(*.f64 1/4 (pow.f64 i 2))","(+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i))","(-.f64 (+.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha))))))","(-.f64 (+.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (+.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i) (*.f64 1/4 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) i))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))))) i)))))","(*.f64 1/4 (pow.f64 i 2))","(+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (*.f64 1/4 (pow.f64 i 2)))","(+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 -1 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))","(-.f64 (+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) i)) (*.f64 -1 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha))))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha)) i)) (*.f64 1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2)) i))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (+.f64 (*.f64 (pow.f64 alpha 3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))))","(*.f64 i (+.f64 beta i))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i))))) (+.f64 (/.f64 (*.f64 i (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 beta i))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i)))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))))) (pow.f64 alpha 3))) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (pow.f64 alpha 2)) (/.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i))) (pow.f64 alpha 2)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (pow.f64 alpha 2))) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (pow.f64 alpha 2))) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 2)))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 (-.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (pow.f64 beta 3)))))","(*.f64 i (+.f64 i alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) i) beta) (+.f64 (*.f64 i (+.f64 i alpha)) (/.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) beta))) (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta))","(-.f64 (+.f64 (*.f64 i (+.f64 i alpha)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) beta) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 2)) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta)))) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2)) (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 2)) (+.f64 (*.f64 i (+.f64 i alpha)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (*.f64 (pow.f64 i 2) (+.f64 i alpha))) (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 i (*.f64 (+.f64 i alpha) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 beta 3))) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta))))) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (pow.f64 beta 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 2)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2))) (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 2)))))","(/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3)) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 (pow.f64 i 4) (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 32 (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3)) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))","1/16","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(-.f64 (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i)))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 i 2))))))","(-.f64 (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i)) (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 2)))))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 i 3))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (pow.f64 i 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (+.f64 beta alpha)) (pow.f64 i 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 i 2)))))))))","1/16","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (pow.f64 i 2))) (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i)))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (pow.f64 i 2))) (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i)) (*.f64 1/16 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3)))))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3))) (+.f64 (*.f64 -1/256 (/.f64 (+.f64 (*.f64 -4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 -4 (pow.f64 (+.f64 beta alpha) 3))) (pow.f64 i 3))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))))))) (pow.f64 i 3)))))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1)))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 beta i) 2) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1)))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 beta i) 2) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))))))))","(/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2)))) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2))))) (+.f64 (/.f64 (*.f64 i (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (+.f64 beta i))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 i (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 beta i))) (+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (+.f64 beta i))) (*.f64 (+.f64 (*.f64 4 beta) (*.f64 8 i)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1)))) (pow.f64 alpha 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2)))))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 beta i) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3))))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 5)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 -2 (pow.f64 (+.f64 beta (*.f64 2 i)) 3))) i)) (pow.f64 alpha 5))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1)))) (*.f64 -4 (*.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (+.f64 beta (*.f64 2 i)))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 5))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3)))))))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1))) (pow.f64 alpha 4)))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))))) (*.f64 -1 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))))))))","(/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 beta 2))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) i) (pow.f64 beta 3)))) (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 (+.f64 i alpha) i)) (pow.f64 beta 3)))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 4)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) (pow.f64 beta 3))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (+.f64 (*.f64 8 i) (*.f64 4 alpha))) (pow.f64 beta 4)) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 4)))))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (-.f64 (+.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (*.f64 (pow.f64 i 2) (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 i (+.f64 i alpha)))))) (+.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)))) (pow.f64 beta 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 4)) (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) (pow.f64 beta 3)))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (+.f64 i alpha) i)) (pow.f64 beta 4)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (+.f64 (*.f64 8 i) (*.f64 4 alpha))) (pow.f64 beta 4)))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1))) (pow.f64 beta 4))) (*.f64 -4 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 4)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)))) (*.f64 -4 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 5))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)) (pow.f64 beta 5)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 3)) (*.f64 -2 (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 alpha (*.f64 2 i))))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)) (pow.f64 beta 5))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2)))))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1))) (pow.f64 beta 4))) (*.f64 -4 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 4)))))","(*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)))))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4))))","(pow.f64 i 4)","(+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (pow.f64 i 4))","(+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4))))","(pow.f64 i 4)","(+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2))) (pow.f64 i 2))) (+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2))) (pow.f64 i 2))) (+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4))))","(*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)))","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))))","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))))","(*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2)))","(+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha)))))","(*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))","(+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 i (+.f64 i alpha))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 i (+.f64 i alpha))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))))","(*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)))))","(*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha))))))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha))))))))","(pow.f64 (+.f64 beta (*.f64 2 i)) 2)","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(pow.f64 alpha 2)","(+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(pow.f64 alpha 2)","(+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(pow.f64 (+.f64 alpha (*.f64 2 i)) 2)","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(pow.f64 beta 2)","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(pow.f64 beta 2)","(+.f64 (pow.f64 beta 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i)))))","(+.f64 (pow.f64 beta 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(+.f64 (pow.f64 beta 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(pow.f64 (+.f64 beta alpha) 2)","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(*.f64 4 (pow.f64 i 2))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (*.f64 4 (pow.f64 i 2)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(*.f64 4 (pow.f64 i 2))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (*.f64 4 (pow.f64 i 2)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha))","(+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))))))","(+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (*.f64 i i) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)))))","(+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3)))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))))))","(fma.f64 (pow.f64 i 3) (-.f64 (*.f64 2 (+.f64 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2)) (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 4 (+.f64 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))) (+.f64 beta alpha)) (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (*.f64 i i) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))))))","(+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3)))))) (+.f64 (*.f64 (pow.f64 i 4) (-.f64 (/.f64 1 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2))) (*.f64 2 (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3))))) (+.f64 beta alpha))) (*.f64 4 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 (+.f64 beta alpha) 2)))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (pow.f64 i 2) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (*.f64 4 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))))))))","(fma.f64 (pow.f64 i 3) (-.f64 (*.f64 2 (+.f64 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2)) (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 4 (+.f64 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))) (+.f64 beta alpha)) (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3))))) (fma.f64 (pow.f64 i 4) (-.f64 (pow.f64 (+.f64 beta alpha) (neg.f64 2)) (*.f64 4 (+.f64 (/.f64 (-.f64 (*.f64 2 (+.f64 (/.f64 alpha (pow.f64 (+.f64 beta alpha) 2)) (/.f64 beta (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 4 (+.f64 (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))) (+.f64 beta alpha)) (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 3))))) (+.f64 beta alpha)) (/.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))) (pow.f64 (+.f64 beta alpha) 2))))) (+.f64 (/.f64 (*.f64 beta (*.f64 i alpha)) (+.f64 beta alpha)) (*.f64 (*.f64 i i) (-.f64 (+.f64 1 (/.f64 (*.f64 beta alpha) (pow.f64 (+.f64 beta alpha) 2))) (/.f64 (*.f64 4 (*.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)))))))","(*.f64 1/4 (pow.f64 i 2))","(*.f64 1/4 (*.f64 i i))","(+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i))","(fma.f64 i (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (*.f64 1/4 (*.f64 i i)))","(-.f64 (+.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha))))))","(-.f64 (fma.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (fma.f64 i (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (*.f64 1/4 (*.f64 i i)))) (fma.f64 1/16 (pow.f64 (+.f64 beta alpha) 2) (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (+.f64 beta alpha))))","(-.f64 (+.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (+.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) i) (*.f64 1/4 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) i))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))))) i)))))","(-.f64 (fma.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (fma.f64 1/4 (*.f64 i i) (fma.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) i (/.f64 (*.f64 1/4 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha))) i)))) (fma.f64 1/16 (pow.f64 (+.f64 beta alpha) 2) (fma.f64 1/4 (/.f64 (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2)) i) (fma.f64 (+.f64 beta alpha) (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (fma.f64 1/16 (pow.f64 (+.f64 beta alpha) 2) (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (+.f64 beta alpha))))) i)))))","(*.f64 1/4 (pow.f64 i 2))","(*.f64 1/4 (*.f64 i i))","(+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (*.f64 1/4 (pow.f64 i 2)))","(fma.f64 i (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (*.f64 1/4 (*.f64 i i)))","(+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (*.f64 -1 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))","(fma.f64 i (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (fma.f64 1/4 (*.f64 i i) (neg.f64 (-.f64 (*.f64 1/4 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (neg.f64 (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))","(-.f64 (+.f64 (*.f64 i (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha)))) (+.f64 (*.f64 1/4 (pow.f64 i 2)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) i)) (*.f64 -1 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/4 (+.f64 beta alpha))))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha)) i)) (*.f64 1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/4 (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2)) i))))","(-.f64 (fma.f64 i (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (fma.f64 1/4 (*.f64 i i) (fma.f64 1/4 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) i) (neg.f64 (-.f64 (*.f64 1/4 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (neg.f64 (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))))))) (+.f64 (neg.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (neg.f64 (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/16 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/4 (*.f64 (*.f64 1/4 (-.f64 (*.f64 2 (+.f64 beta alpha)) (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2))) i)))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))","(/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (*.f64 alpha alpha) (fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha) (+.f64 (*.f64 (pow.f64 alpha 3) (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (*.f64 alpha alpha) (fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4))) alpha (fma.f64 (pow.f64 alpha 3) (-.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2))))) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))) (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)))))","(*.f64 i (+.f64 beta i))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))) (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i))))) (+.f64 (/.f64 (*.f64 i (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 beta i))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 alpha alpha)) (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i))))) (+.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (/.f64 (fma.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i)))) (*.f64 alpha alpha))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i)))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))))) (pow.f64 alpha 3))) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (*.f64 i (+.f64 beta i))))) (pow.f64 alpha 2)) (/.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 alpha alpha)) (+.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (fma.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))))) (pow.f64 alpha 3))) (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) alpha) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) alpha) (*.f64 i (+.f64 beta i)))))) (+.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i))) alpha) (/.f64 (fma.f64 (fma.f64 4 i (*.f64 2 beta)) (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 (fma.f64 4 i (*.f64 2 beta)) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 i (+.f64 beta i)))) (*.f64 alpha alpha))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i))","(neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))","(+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i)) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) alpha)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (pow.f64 alpha 2))) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 alpha alpha)) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i)) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) alpha)))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (*.f64 alpha alpha))) (/.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))))) (*.f64 alpha alpha))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i)) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) alpha)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (pow.f64 alpha 2))) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 2)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 alpha alpha)) (fma.f64 -2 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (fma.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))))) (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))))) (pow.f64 alpha 3)) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i)) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) alpha)))))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) i)) (*.f64 alpha alpha))) (/.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))))) (*.f64 alpha alpha))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(fma.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))","(fma.f64 (*.f64 beta beta) (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (fma.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))","(+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 (-.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 i (+.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 i alpha) 2))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (+.f64 i alpha) i)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (pow.f64 beta 3)))))","(fma.f64 (*.f64 beta beta) (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (+.f64 (fma.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 (-.f64 (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 6)) (+.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (fma.f64 4 i (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (pow.f64 beta 3))))","(*.f64 i (+.f64 i alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) i) beta) (+.f64 (*.f64 i (+.f64 i alpha)) (/.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) beta))) (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta))","(-.f64 (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta) (fma.f64 i (+.f64 i alpha) (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)) beta))) (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha)))) beta))","(-.f64 (+.f64 (*.f64 i (+.f64 i alpha)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) beta) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 2)) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta)))) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2)) (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)))))","(-.f64 (-.f64 (fma.f64 i (+.f64 i alpha) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)) beta) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 beta beta)) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta)))) (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha)))) beta)) (/.f64 (fma.f64 (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha))))) (fma.f64 4 i (*.f64 2 alpha)) (*.f64 (+.f64 i alpha) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (*.f64 beta beta)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 2)) (+.f64 (*.f64 i (+.f64 i alpha)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) beta) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (*.f64 (pow.f64 i 2) (+.f64 i alpha))) (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 i (*.f64 (+.f64 i alpha) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (pow.f64 beta 3))) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta))))) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) beta) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 i (*.f64 (+.f64 i alpha) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2)))))","(+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 beta beta)) (-.f64 (+.f64 (fma.f64 i (+.f64 i alpha) (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)) beta)) (+.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha))))) (fma.f64 4 i (*.f64 2 alpha)) (*.f64 (+.f64 i alpha) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))) (fma.f64 4 i (*.f64 2 alpha)))) (pow.f64 beta 3))) (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) beta))) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha)))) beta) (/.f64 (fma.f64 (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 i (*.f64 (+.f64 i alpha) (fma.f64 4 i (*.f64 2 alpha))))) (fma.f64 4 i (*.f64 2 alpha)) (*.f64 (+.f64 i alpha) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))) (*.f64 beta beta)))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))","(neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))","(+.f64 (neg.f64 (/.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) beta)) (neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 beta beta)) (+.f64 (neg.f64 (/.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) beta)) (neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i)))) (fma.f64 -2 (/.f64 (*.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) (+.f64 alpha (*.f64 2 i))) (*.f64 beta beta)) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 beta beta)))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) beta)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (pow.f64 beta 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 2)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (pow.f64 beta 2))) (*.f64 -2 (/.f64 (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (+.f64 i alpha))) i) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 2)))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 -2 (*.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) (+.f64 alpha (*.f64 2 i))) (neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 3)) (+.f64 (neg.f64 (/.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) beta)) (+.f64 (/.f64 (*.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (pow.f64 beta 3)) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i)) (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 beta beta)))))) (fma.f64 -2 (/.f64 (*.f64 (fma.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 i alpha))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (+.f64 i alpha))) i (neg.f64 (*.f64 2 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i))))))) (+.f64 alpha (*.f64 2 i))) (*.f64 beta beta)) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 beta beta)))))","(/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))","(/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))","(fma.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3)) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))","(fma.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (fma.f64 (-.f64 (*.f64 2 (+.f64 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))) (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4))) alpha) beta) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2)) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (pow.f64 i 3) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))))","(+.f64 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 (pow.f64 i 4) (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 alpha (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))))) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 32 (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (*.f64 2 (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (+.f64 (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (/.f64 (*.f64 beta (*.f64 (+.f64 (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 4 (pow.f64 (+.f64 beta alpha) 3))) alpha)) (*.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1) 2)))) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3)) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))","(fma.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (fma.f64 (pow.f64 i 4) (-.f64 (/.f64 (pow.f64 (+.f64 beta alpha) (neg.f64 2)) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 (+.f64 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))) (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4))) alpha) beta) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2)) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))) (/.f64 (*.f64 32 (*.f64 beta alpha)) (pow.f64 (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) 2))))) (fma.f64 (-.f64 (*.f64 2 (+.f64 (/.f64 beta (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))) (/.f64 alpha (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4))) alpha) beta) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2)) (/.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (/.f64 (*.f64 beta alpha) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (/.f64 (/.f64 (*.f64 beta (*.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) alpha)) (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) 2))) (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))) (pow.f64 i 3) (/.f64 (*.f64 beta (*.f64 i alpha)) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1))))))","1/16","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","(-.f64 (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i)))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 i 2))))))","(-.f64 (+.f64 1/16 (*.f64 1/16 (+.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) i) (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (*.f64 i i))))) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) (fma.f64 2 (/.f64 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 i i)) (/.f64 (*.f64 1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))) (*.f64 i i)))))","(-.f64 (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) i)) (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 2)))))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 i 3))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 3)) (*.f64 4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)))) (pow.f64 i 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (+.f64 (*.f64 2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (+.f64 beta alpha)) (pow.f64 i 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha)) (pow.f64 i 2))) (*.f64 1/256 (/.f64 (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)))) (pow.f64 i 2)))))))))","(-.f64 (+.f64 1/16 (fma.f64 1/16 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3)) (*.f64 1/16 (+.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) i) (/.f64 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (*.f64 i i)))))) (fma.f64 1/16 (/.f64 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))) (pow.f64 i 3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) (fma.f64 1/256 (/.f64 (*.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 3) (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)))) (pow.f64 i 3)) (fma.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (fma.f64 2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (+.f64 beta alpha)) (pow.f64 i 3)) (fma.f64 2 (/.f64 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 i i)) (/.f64 (*.f64 1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))) (*.f64 i i))))))))","1/16","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (pow.f64 i 2))) (+.f64 1/16 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i)))) (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)))","(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))))) (pow.f64 i 2))) (+.f64 1/16 (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 alpha) (*.f64 2 beta)) i)) (*.f64 1/16 (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3)))))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 beta) (*.f64 2 alpha))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))))) (pow.f64 i 3))) (+.f64 (*.f64 -1/256 (/.f64 (+.f64 (*.f64 -4 (*.f64 (+.f64 beta alpha) (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1))) (*.f64 -4 (pow.f64 (+.f64 beta alpha) 3))) (pow.f64 i 3))) (+.f64 (*.f64 1/8 (/.f64 (+.f64 beta alpha) i)) (*.f64 -2 (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/16 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2)))) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 1/16 (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 1/8 (+.f64 beta alpha))) (+.f64 beta alpha))) (*.f64 -1/256 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta alpha) 2)) (+.f64 (*.f64 4 (-.f64 (pow.f64 (+.f64 beta alpha) 2) 1)) (*.f64 16 (pow.f64 (+.f64 beta alpha) 2)))))))) (pow.f64 i 3)))))))","(-.f64 (+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (+.f64 1/16 (*.f64 1/16 (+.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) i) (/.f64 (*.f64 beta (*.f64 (+.f64 beta alpha) alpha)) (pow.f64 i 3)))))) (fma.f64 1/16 (/.f64 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))) (pow.f64 i 3)) (fma.f64 -1/256 (/.f64 (*.f64 -4 (+.f64 (*.f64 (+.f64 beta alpha) (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1)) (pow.f64 (+.f64 beta alpha) 3))) (pow.f64 i 3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) (/.f64 (*.f64 -2 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))))) (pow.f64 i 3))))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1)))","(/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1)))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (*.f64 i i) (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2)))) alpha (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 beta i) 2) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1)))))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (*.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 alpha alpha) (fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (*.f64 i i) (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2)))) alpha (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1)))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 beta i) 2) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))) alpha) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 -1 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2)))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1) 2))))))))))","(fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (*.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 alpha alpha) (+.f64 (fma.f64 (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (*.f64 i i) (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2)))) alpha (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1)))) (neg.f64 (*.f64 (pow.f64 alpha 3) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (*.f64 i i) (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1)) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2)))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (+.f64 (/.f64 (*.f64 (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1) (-.f64 (/.f64 (*.f64 i (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i)))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (*.f64 (/.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (pow.f64 (+.f64 beta (*.f64 2 i)) 4)) (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2))))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (/.f64 (*.f64 (*.f64 i i) (*.f64 (fma.f64 8 i (*.f64 4 beta)) (pow.f64 (+.f64 beta i) 2))) (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 4) (pow.f64 (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1) 2)))))))))","(/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2))","(/.f64 (*.f64 i (+.f64 beta i)) (*.f64 alpha alpha))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2)))) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))","(-.f64 (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 alpha alpha)))) (/.f64 (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2))))) (+.f64 (/.f64 (*.f64 i (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (+.f64 beta i))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(-.f64 (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 alpha alpha))))) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1) (+.f64 beta i))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i)))) (fma.f64 8 i (*.f64 4 beta))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 i (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (+.f64 beta i))) (+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1) (+.f64 beta i))) (*.f64 (+.f64 (*.f64 4 beta) (*.f64 8 i)) (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1)))) (pow.f64 alpha 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (pow.f64 alpha 2)))))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (+.f64 beta i) (+.f64 (*.f64 4 beta) (*.f64 8 i))))) (+.f64 (*.f64 8 i) (*.f64 4 beta))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 beta i) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) 2)) 1))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(-.f64 (+.f64 (/.f64 (*.f64 (*.f64 i i) (+.f64 beta i)) (pow.f64 alpha 3)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 alpha 4)) (+.f64 (neg.f64 (/.f64 (fma.f64 i (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 beta)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1))) (+.f64 beta i)) (fma.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (fma.f64 i (*.f64 (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1) (+.f64 beta i)) (*.f64 (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i)))) (fma.f64 8 i (*.f64 4 beta))))) (fma.f64 8 i (*.f64 4 beta)) (*.f64 (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i)))) (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1)))) (pow.f64 alpha 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 3)) (/.f64 (*.f64 i (+.f64 beta i)) (*.f64 alpha alpha)))))) (+.f64 (/.f64 (*.f64 (-.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i)))) (fma.f64 8 i (*.f64 4 beta))) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 i (*.f64 (+.f64 (fma.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (pow.f64 (fma.f64 4 i (*.f64 2 beta)) 2)) -1) (+.f64 beta i))) (pow.f64 alpha 4)) (/.f64 (*.f64 i (*.f64 (fma.f64 8 i (*.f64 4 beta)) (+.f64 beta i))) (pow.f64 alpha 3)))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2)))","(neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i) (*.f64 alpha alpha)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i) (*.f64 alpha alpha))) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (pow.f64 alpha 3))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3))))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 alpha 4)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i) (*.f64 alpha alpha))) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (pow.f64 alpha 3))))) (fma.f64 -4 (/.f64 (*.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 4)) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 4 2)) -1))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 5)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) i) (pow.f64 alpha 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) 1))) (*.f64 -2 (pow.f64 (+.f64 beta (*.f64 2 i)) 3))) i)) (pow.f64 alpha 5))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1)))) (*.f64 -4 (*.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (+.f64 beta (*.f64 2 i)))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 5))) (*.f64 -1 (/.f64 (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))) (pow.f64 alpha 3)))))))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (-.f64 (*.f64 i (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 (+.f64 beta (*.f64 2 i)) i))))) (pow.f64 alpha 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 beta (*.f64 2 i)) 2)) (*.f64 2 (pow.f64 (+.f64 beta (*.f64 2 i)) 2))) 1))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (pow.f64 alpha 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 4 2)) -1) (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i)))))))) (pow.f64 alpha 5)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) i) (*.f64 alpha alpha))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 (*.f64 -2 (+.f64 (*.f64 (+.f64 beta (*.f64 2 i)) (+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) -1)) (pow.f64 (+.f64 beta (*.f64 2 i)) 3))) i)) (pow.f64 alpha 5))) (fma.f64 -4 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 4 2)) -1)))) (*.f64 -4 (*.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (+.f64 beta (*.f64 2 i)))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 5)) (neg.f64 (/.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (pow.f64 alpha 3)))))))) (fma.f64 -4 (/.f64 (*.f64 (fma.f64 i (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) (neg.f64 (*.f64 4 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 beta (*.f64 2 i))))))) (+.f64 beta (*.f64 2 i))) (pow.f64 alpha 4)) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 4 2)) -1))) (pow.f64 alpha 4)))))","(/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))","(+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (*.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))))","(+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (fma.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (*.f64 (*.f64 beta beta) (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (*.f64 beta (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (+.f64 (*.f64 (pow.f64 beta 2) (-.f64 (/.f64 (*.f64 (+.f64 i alpha) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))))) (*.f64 -1 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (-.f64 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 i 2) (*.f64 (pow.f64 (+.f64 i alpha) 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 (pow.f64 i 2) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2))) (*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha))))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))))))))","(+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (fma.f64 beta (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4)))) (fma.f64 (*.f64 beta beta) (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (neg.f64 (*.f64 (pow.f64 beta 3) (+.f64 (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))) (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (+.f64 (/.f64 (*.f64 (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1))) (-.f64 (/.f64 (*.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) i) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) (/.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)) (*.f64 (pow.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 4))))) (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))))))))))","(/.f64 (*.f64 (+.f64 i alpha) i) (pow.f64 beta 2))","(/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 beta beta))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (/.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) i) (pow.f64 beta 3)))) (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 (+.f64 i alpha) i)) (pow.f64 beta 3)))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 beta beta)) (/.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (pow.f64 beta 3))) (/.f64 (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 4)) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 3)) (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) (pow.f64 beta 3))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (+.f64 (*.f64 8 i) (*.f64 4 alpha))) (pow.f64 beta 4)) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 4)))))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 beta beta)) (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 beta 4))) (/.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (pow.f64 beta 3))) (+.f64 (/.f64 (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)) (/.f64 (fma.f64 (fma.f64 8 i (*.f64 4 alpha)) (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (*.f64 i (+.f64 i alpha)))) (pow.f64 beta 4))))","(-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (pow.f64 beta 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (-.f64 (+.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (*.f64 (pow.f64 i 2) (+.f64 i alpha))) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))))) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 i (+.f64 i alpha)))))) (+.f64 (*.f64 (+.f64 i alpha) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 (*.f64 4 i) (*.f64 2 alpha)))))) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)))) (pow.f64 beta 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 4)) (/.f64 (*.f64 (pow.f64 i 2) (+.f64 i alpha)) (pow.f64 beta 3)))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3)) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (*.f64 4 i) (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1) (*.f64 (+.f64 i alpha) i)) (pow.f64 beta 4)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)) (*.f64 (+.f64 (*.f64 8 i) (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (+.f64 (*.f64 8 i) (*.f64 4 alpha))) (pow.f64 beta 4)))))","(-.f64 (-.f64 (+.f64 (/.f64 (*.f64 i (+.f64 i alpha)) (*.f64 beta beta)) (+.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 8 i (*.f64 4 alpha)) (-.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 (fma.f64 8 i (*.f64 4 alpha)) (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (*.f64 i (+.f64 i alpha))))) (fma.f64 (+.f64 i alpha) (*.f64 i (*.f64 (fma.f64 4 i (*.f64 2 alpha)) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1)))) (*.f64 (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1)))) (pow.f64 beta 5))) (+.f64 (/.f64 (*.f64 i (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 3)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 beta 4)) (/.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)) (pow.f64 beta 3)))))) (/.f64 (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha))) (pow.f64 beta 3))) (/.f64 (fma.f64 (fma.f64 8 i (*.f64 4 alpha)) (-.f64 (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))) (*.f64 (fma.f64 8 i (*.f64 4 alpha)) (*.f64 i (+.f64 i alpha)))) (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 4 i (*.f64 2 alpha)) 2) (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) -1) (*.f64 i (+.f64 i alpha)))) (pow.f64 beta 4)))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2)))","(neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i) (*.f64 beta beta)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2))))","(+.f64 (neg.f64 (/.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i) (*.f64 beta beta))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)) (pow.f64 beta 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1))) (pow.f64 beta 4))) (*.f64 -4 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 4)))))","(-.f64 (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 beta 4)) (+.f64 (neg.f64 (/.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i) (*.f64 beta beta))))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 2 4)) -1))) (pow.f64 beta 4))) (/.f64 (*.f64 -4 (*.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))) (pow.f64 beta 4))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)))) (*.f64 -4 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 5))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1)) (pow.f64 beta 5)) (+.f64 (/.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (pow.f64 beta 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 3)) (*.f64 -2 (*.f64 (-.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) 1) (+.f64 alpha (*.f64 2 i))))) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)) (pow.f64 beta 5))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i) (pow.f64 beta 2)))))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (-.f64 (+.f64 (*.f64 2 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)) (*.f64 4 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))) 1))) (pow.f64 beta 4))) (*.f64 -4 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))) (*.f64 4 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 4)))))","(-.f64 (+.f64 (neg.f64 (/.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (pow.f64 beta 3))) (fma.f64 -4 (/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 2 4)) -1)))) (*.f64 -4 (*.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i))) (pow.f64 beta 5)) (+.f64 (/.f64 (*.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 2 4)) -1)) (pow.f64 beta 5)) (+.f64 (/.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (pow.f64 beta 4)) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 -2 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 3) (*.f64 (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) -1) (+.f64 alpha (*.f64 2 i))))) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i)) (pow.f64 beta 5))) (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i) (*.f64 beta beta)))))))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 (*.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (+.f64 2 4)) -1))) (pow.f64 beta 4))) (/.f64 (*.f64 -4 (*.f64 (-.f64 (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))) (*.f64 4 (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 alpha (*.f64 2 i)))))) (+.f64 alpha (*.f64 2 i)))) (pow.f64 beta 4))))","(*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))))","(fma.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)) (*.f64 (*.f64 i i) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)))))","(fma.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)) (fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (*.f64 (*.f64 i i) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)))))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4))))","(fma.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)) (fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (fma.f64 (*.f64 i i) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 4))))","(pow.f64 i 4)","(+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (pow.f64 i 4))","(fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (pow.f64 i 4))","(+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4)))","(fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (fma.f64 (*.f64 i i) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 4)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 (*.f64 2 alpha) (*.f64 2 beta))) (+.f64 (*.f64 (pow.f64 i 2) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha))) (pow.f64 i 4))))","(fma.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)) (fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (fma.f64 (*.f64 i i) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 beta alpha)) (pow.f64 i 4))))","(pow.f64 i 4)","(+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4))","(fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (pow.f64 i 4))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2))) (pow.f64 i 2))) (+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4)))","(+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 i i))) (fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (pow.f64 i 4)))","(+.f64 (*.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 beta alpha)) (*.f64 -1 (pow.f64 (+.f64 beta alpha) 2))) (pow.f64 i 2))) (+.f64 (*.f64 (+.f64 (*.f64 2 beta) (*.f64 2 alpha)) (pow.f64 i 3)) (pow.f64 i 4))))","(fma.f64 beta (*.f64 i (*.f64 (+.f64 beta alpha) alpha)) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2))) (*.f64 i i))) (fma.f64 (pow.f64 i 3) (*.f64 2 (+.f64 beta alpha)) (pow.f64 i 4))))","(*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))","(pow.f64 (*.f64 i (+.f64 beta i)) 2)","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)))","(fma.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha) (pow.f64 (*.f64 i (+.f64 beta i)) 2))","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))))","(fma.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha) (fma.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)))","(+.f64 (*.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2))))","(fma.f64 i (*.f64 (+.f64 (pow.f64 (+.f64 beta i) 2) (*.f64 i (+.f64 beta i))) alpha) (fma.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)) (pow.f64 (*.f64 i (+.f64 beta i)) 2)))","(*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2)))","(*.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)))","(+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha))","(fma.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)) (*.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(+.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (fma.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)) (*.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (+.f64 (*.f64 i (*.f64 (+.f64 beta i) (pow.f64 alpha 2))) (*.f64 (+.f64 (*.f64 (pow.f64 i 2) (+.f64 beta i)) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(+.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (fma.f64 i (*.f64 (+.f64 beta i) (*.f64 alpha alpha)) (*.f64 (fma.f64 (*.f64 i i) (+.f64 beta i) (*.f64 i (pow.f64 (+.f64 beta i) 2))) alpha)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2))))","(neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (*.f64 alpha alpha))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha))))","(+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (*.f64 alpha alpha)))) (*.f64 (neg.f64 i) (*.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) alpha)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha)))))","(+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (*.f64 alpha alpha)))) (+.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (neg.f64 i) (*.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) alpha))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (*.f64 i (pow.f64 alpha 2)))) (+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 beta i) 2)) (*.f64 -1 (*.f64 i (*.f64 (+.f64 (*.f64 -1 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (*.f64 -1 beta) (*.f64 -1 i)) (+.f64 beta i))) alpha)))))","(+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (*.f64 i (*.f64 alpha alpha)))) (+.f64 (pow.f64 (*.f64 i (+.f64 beta i)) 2) (*.f64 (neg.f64 i) (*.f64 (+.f64 (neg.f64 (*.f64 i (+.f64 beta i))) (*.f64 (+.f64 (neg.f64 beta) (neg.f64 i)) (+.f64 beta i))) alpha))))","(*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))","(pow.f64 (*.f64 i (+.f64 i alpha)) 2)","(+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2)))","(fma.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) (*.f64 beta i) (pow.f64 (*.f64 i (+.f64 i alpha)) 2))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 i (+.f64 i alpha))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))))","(fma.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)) (fma.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) (*.f64 beta i) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 i (+.f64 i alpha))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 i alpha) 2) (*.f64 i (+.f64 i alpha))) (*.f64 beta i)) (*.f64 (pow.f64 (+.f64 i alpha) 2) (pow.f64 i 2))))","(fma.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)) (fma.f64 (fma.f64 i (+.f64 i alpha) (pow.f64 (+.f64 i alpha) 2)) (*.f64 beta i) (pow.f64 (*.f64 i (+.f64 i alpha)) 2)))","(*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i))","(*.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)))","(+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i))))","(fma.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)) (*.f64 beta (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2)))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)))))","(+.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)) (*.f64 beta (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 i alpha) i)) (*.f64 beta (+.f64 (*.f64 (+.f64 i alpha) (pow.f64 i 2)) (*.f64 (pow.f64 (+.f64 i alpha) 2) i)))))","(+.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (fma.f64 (*.f64 beta beta) (*.f64 i (+.f64 i alpha)) (*.f64 beta (fma.f64 (+.f64 i alpha) (*.f64 i i) (*.f64 i (pow.f64 (+.f64 i alpha) 2))))))","(*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i)))","(neg.f64 (*.f64 (*.f64 beta beta) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha)))))))","(+.f64 (neg.f64 (*.f64 (*.f64 beta beta) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i))) (*.f64 (neg.f64 beta) (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i))))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha))))))))","(+.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (+.f64 (neg.f64 (*.f64 (*.f64 beta beta) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i))) (*.f64 (neg.f64 beta) (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))))))","(+.f64 (*.f64 (pow.f64 i 2) (pow.f64 (+.f64 i alpha) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 beta 2) (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) i))) (*.f64 -1 (*.f64 beta (+.f64 (*.f64 (+.f64 (*.f64 -1 alpha) (*.f64 -1 i)) (*.f64 (+.f64 i alpha) i)) (*.f64 -1 (*.f64 (pow.f64 i 2) (+.f64 i alpha))))))))","(+.f64 (pow.f64 (*.f64 i (+.f64 i alpha)) 2) (+.f64 (neg.f64 (*.f64 (*.f64 beta beta) (*.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) i))) (*.f64 (neg.f64 beta) (fma.f64 (+.f64 (neg.f64 alpha) (neg.f64 i)) (*.f64 i (+.f64 i alpha)) (neg.f64 (*.f64 (+.f64 i alpha) (*.f64 i i)))))))","(pow.f64 (+.f64 beta (*.f64 2 i)) 2)","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (*.f64 (fma.f64 4 i (*.f64 2 beta)) alpha))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (fma.f64 (fma.f64 4 i (*.f64 2 beta)) alpha (*.f64 alpha alpha)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (fma.f64 (fma.f64 4 i (*.f64 2 beta)) alpha (*.f64 alpha alpha)))","(pow.f64 alpha 2)","(*.f64 alpha alpha)","(+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2))","(fma.f64 (fma.f64 4 i (*.f64 2 beta)) alpha (*.f64 alpha alpha))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (fma.f64 (fma.f64 4 i (*.f64 2 beta)) alpha (*.f64 alpha alpha)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 (+.f64 (*.f64 4 i) (*.f64 2 beta)) alpha) (pow.f64 alpha 2)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (fma.f64 (fma.f64 4 i (*.f64 2 beta)) alpha (*.f64 alpha alpha)))","(pow.f64 alpha 2)","(*.f64 alpha alpha)","(+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha)))","(+.f64 (*.f64 alpha alpha) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha)))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 alpha alpha) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (pow.f64 alpha 2) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(+.f64 (pow.f64 (+.f64 beta (*.f64 2 i)) 2) (+.f64 (*.f64 alpha alpha) (*.f64 2 (*.f64 (+.f64 beta (*.f64 2 i)) alpha))))","(pow.f64 (+.f64 alpha (*.f64 2 i)) 2)","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (*.f64 beta beta)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (*.f64 beta beta)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(pow.f64 beta 2)","(*.f64 beta beta)","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (pow.f64 beta 2))","(fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (*.f64 beta beta))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (*.f64 beta beta)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(+.f64 (*.f64 beta (+.f64 (*.f64 4 i) (*.f64 2 alpha))) (+.f64 (pow.f64 beta 2) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2)))","(+.f64 (fma.f64 beta (fma.f64 4 i (*.f64 2 alpha)) (*.f64 beta beta)) (pow.f64 (+.f64 alpha (*.f64 2 i)) 2))","(pow.f64 beta 2)","(*.f64 beta beta)","(+.f64 (pow.f64 beta 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i)))))","(+.f64 (*.f64 beta beta) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i)))))","(+.f64 (pow.f64 beta 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(+.f64 (*.f64 beta beta) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(+.f64 (pow.f64 beta 2) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(+.f64 (*.f64 beta beta) (+.f64 (pow.f64 (+.f64 alpha (*.f64 2 i)) 2) (*.f64 2 (*.f64 beta (+.f64 alpha (*.f64 2 i))))))","(pow.f64 (+.f64 beta alpha) 2)","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (pow.f64 (+.f64 beta alpha) 2))","(fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))","(*.f64 4 (pow.f64 i 2))","(*.f64 4 (*.f64 i i))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (*.f64 4 (pow.f64 i 2)))","(*.f64 4 (+.f64 (*.f64 i (+.f64 beta alpha)) (*.f64 i i)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))","(*.f64 4 (pow.f64 i 2))","(*.f64 4 (*.f64 i i))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (*.f64 4 (pow.f64 i 2)))","(*.f64 4 (+.f64 (*.f64 i (+.f64 beta alpha)) (*.f64 i i)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))","(+.f64 (*.f64 4 (*.f64 i (+.f64 beta alpha))) (+.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 4 (pow.f64 i 2))))","(+.f64 (fma.f64 4 (*.f64 i (+.f64 beta alpha)) (pow.f64 (+.f64 beta alpha) 2)) (*.f64 4 (*.f64 i i)))"]],"time":531.053955078125,"type":"simplify"},{"compiler":[[49935,23345]],"time":347.8740234375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","fresh",39.131197619536636],["(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","fresh",25.981455918533644],["(/.f64 (*.f64 i (+.f64 i alpha)) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","fresh",55.11232466178585],["(*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))","fresh",40.820951389413366],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","next",16.242510245667496],["1/16","fresh",20.230777366943332],["(*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.703463828487386],["(*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.74864758080271]],"compiler":[[53,25],[81,52],[26,16],[56,31],[22,15],[4,4],[43,22],[46,21],[53,25],[81,52],[26,16],[56,31],[22,15],[4,4],[43,22],[46,21]],"count":[[653,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[651,8],"picked":[1,0]}],"min-error":[9.451696162673686],"time":222.14111328125,"type":"prune"},{"compiler":[[75,40]],"locations":[["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))",0.00390625,true],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)",0.01171875,true],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)",0.2530590563035683,true],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))",3.394145065259068,true]],"time":14.552001953125,"type":"localize"},{"count":[[4,144]],"series":[["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","i","-inf",0.14501953125],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","i","inf",0.14599609375],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","i","0",0.172119140625],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","alpha","-inf",0.153076171875],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","alpha","inf",0.178955078125],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","alpha","0",0.15283203125],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","beta","-inf",0.153076171875],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","beta","inf",0.18408203125],["(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))","beta","0",0.15380859375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","i","-inf",0.2880859375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","i","inf",0.251953125],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","i","0",0.27099609375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","alpha","-inf",0.2099609375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","alpha","inf",0.23095703125],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","alpha","0",0.2109375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","beta","-inf",0.2451171875],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","beta","inf",0.247802734375],["(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","beta","0",0.252197265625],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","i","-inf",0.283935546875],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","i","inf",0.428955078125],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","i","0",0.453857421875],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","alpha","-inf",0.31494140625],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","alpha","inf",0.375],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","alpha","0",0.37890625],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","beta","-inf",0.385986328125],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","beta","inf",0.39990234375],["(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","beta","0",0.385009765625],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","i","-inf",0.157958984375],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","i","inf",0.156982421875],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","i","0",0.162109375],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","alpha","-inf",0.1640625],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","alpha","inf",0.16796875],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","alpha","0",0.160888671875],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","beta","-inf",0.1689453125],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","beta","inf",0.2021484375],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","beta","0",0.20703125]],"time":9.077880859375,"type":"series"},{"count":[[4,318]],"inputs":[["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x . 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/16 0) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/16 (*.f64 1/16 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (*.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 1/16) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/16 (*.f64 0 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/16 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 0) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) i)) (/.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 1/8 (+.f64 beta alpha))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i)) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i))) (/.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/16 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 -1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/16) (sqrt.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/16) (cbrt.f64 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/256) (cbrt.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 -1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 -1/16)) (pow.f64 (cbrt.f64 -1/16) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/16) (neg.f64 (pow.f64 (cbrt.f64 -1/16) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 1/16))) (*.f64 1 (neg.f64 (sqrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 1/16))) (*.f64 -1 (neg.f64 (sqrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/16) (cbrt.f64 (sqrt.f64 1/16))) (*.f64 (cbrt.f64 1/16) (cbrt.f64 (sqrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 1/16)) 1) (*.f64 (neg.f64 (sqrt.f64 1/16)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 1/16)) -1) (*.f64 (neg.f64 (sqrt.f64 1/16)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/16) -1) (*.f64 (sqrt.f64 1/16) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i) (neg.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha))))) (/.f64 1 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1/4096 0) (/.f64 1 (+.f64 1/256 (*.f64 0 -1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (/.f64 1 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 2)) (*.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (-.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/4096)) (sqrt.f64 (sqrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/16)) (sqrt.f64 (sqrt.f64 1/4096)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 1/16)) (neg.f64 (sqrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 (+.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (+.f64 1 (/.f64 (*.f64 -2 (+.f64 beta alpha)) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 (-.f64 (+.f64 1 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/16 0) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 (pow.f64 1/16 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/16 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i) (neg.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha))))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i) (neg.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha))))) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/16 -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 1/16) (/.f64 1 (sqrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 1/16)) (/.f64 1 (neg.f64 (sqrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 1 -1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 i (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))))) (*.f64 (neg.f64 i) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 (neg.f64 i) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))))) (*.f64 i (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/4096 0) (+.f64 1/256 (*.f64 0 -1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/4096 0) (+.f64 0 (-.f64 1/256 (*.f64 0 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1/16 (neg.f64 (*.f64 i i))) (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (neg.f64 i) (neg.f64 (*.f64 i (*.f64 -1/8 (+.f64 beta alpha)))))) (*.f64 1 (neg.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1/16 (*.f64 i i)) (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) i (*.f64 i (*.f64 -1/8 (+.f64 beta alpha))))) (*.f64 i i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1/16 i) 0) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/8 (+.f64 beta alpha)) (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))))) (*.f64 (neg.f64 i) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 (neg.f64 i) (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 (neg.f64 i) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (neg.f64 i) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))))) (*.f64 i (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 i (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 i (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 i (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i)) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 1/8 (+.f64 beta alpha)))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (neg.f64 i)) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) i) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 -1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)) (*.f64 (cbrt.f64 (*.f64 i i)) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (cbrt.f64 (*.f64 i i)) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 beta alpha) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)) (*.f64 (/.f64 i 1/8) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (/.f64 i 1/8) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/8 (+.f64 beta alpha)) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)) (*.f64 i (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 i (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)) (*.f64 (neg.f64 i) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (neg.f64 i) (+.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) i (*.f64 i (*.f64 -1/8 (+.f64 beta alpha)))) 1) (*.f64 (*.f64 i i) 1/16)) (*.f64 i i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 0 (*.f64 i 1/16)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (neg.f64 i) (neg.f64 (*.f64 i (*.f64 -1/8 (+.f64 beta alpha))))) 1) (*.f64 (neg.f64 (*.f64 i i)) 1/16)) (*.f64 (neg.f64 (*.f64 i i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/16 (neg.f64 (*.f64 i i))) (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (neg.f64 i) (neg.f64 (*.f64 i (*.f64 -1/8 (+.f64 beta alpha)))))) (*.f64 1 (neg.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/16 (*.f64 i i)) (fma.f64 (*.f64 1/8 (+.f64 beta alpha)) i (*.f64 i (*.f64 -1/8 (+.f64 beta alpha))))) (*.f64 i i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/16 i) 0) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (/.f64 i 1/8)) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (+.f64 beta alpha))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (/.f64 i 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (cbrt.f64 (*.f64 i i))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (/.f64 i 1/8)) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (+.f64 beta alpha))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (/.f64 i 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (cbrt.f64 (*.f64 i i))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) i) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (neg.f64 i)) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (*.f64 -1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i) (neg.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))))) (neg.f64 (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1/4096 0)) (neg.f64 (+.f64 1/256 (*.f64 0 -1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha))))) (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/16 -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 1/16 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/16 (pow.f64 1/16 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 1/16 0) (pow.f64 1/16 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/4096 0) (+.f64 1/256 (*.f64 0 -1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 3) (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) (/.f64 i 1/8))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 1/16) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 1/16) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/4096 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (/.f64 2 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (*.f64 2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 1/16) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 1/16) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (+.f64 1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (*.f64 1/2 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/4096 (*.f64 1/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 1/16)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/256 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 -1/16)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1/16 0))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1/256 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 1/256)))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 1/4096)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 1/16) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 1/16)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 1/4096) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 1 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (/.f64 1 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/16 (+.f64 1 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/16) (sqrt.f64 1/16) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/16) (cbrt.f64 1/256) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/16 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/16)) (neg.f64 (sqrt.f64 1/16)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/16 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/16 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 1/16)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (+.f64 beta beta)) (*.f64 (/.f64 1 i) (+.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (+.f64 alpha alpha)) (*.f64 (/.f64 1 i) (+.f64 beta beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 0) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 beta beta) (/.f64 1 i)) (*.f64 (+.f64 alpha alpha) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 alpha alpha) (/.f64 1 i)) (*.f64 (+.f64 beta beta) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (*.f64 0 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -2 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)) (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 i)) (cbrt.f64 (/.f64 8 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 beta alpha) (/.f64 2 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 i)) (/.f64 (+.f64 beta alpha) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 2 (+.f64 beta alpha)) 2) (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (+.f64 beta alpha))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 2 (+.f64 beta alpha)) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (+.f64 beta alpha)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (+.f64 beta alpha)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 2 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (+.f64 beta alpha) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) i) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 beta alpha) (*.f64 i 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (cbrt.f64 (*.f64 i i)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 i i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (+.f64 beta alpha)) (cbrt.f64 (neg.f64 i))) (pow.f64 (cbrt.f64 (neg.f64 i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (+.f64 beta alpha)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (+.f64 beta alpha)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (+.f64 beta alpha)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (+.f64 beta alpha)) 1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (neg.f64 i) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (neg.f64 (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/8 alpha)) (*.f64 (/.f64 1 i) (*.f64 1/8 beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/8 beta)) (*.f64 (/.f64 1 i) (*.f64 1/8 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/16 (+.f64 beta beta))) (*.f64 (/.f64 1 i) (*.f64 1/16 (+.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 (+.f64 beta beta) 1/16)) (*.f64 (/.f64 1 i) (*.f64 (+.f64 alpha alpha) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 0) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/8 alpha) (/.f64 1 i)) (*.f64 (*.f64 1/8 beta) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/8 beta) (/.f64 1 i)) (*.f64 (*.f64 1/8 alpha) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/16 (+.f64 beta beta)) (/.f64 1 i)) (*.f64 (*.f64 1/16 (+.f64 alpha alpha)) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 beta beta) 1/16) (/.f64 1 i)) (*.f64 (*.f64 (+.f64 alpha alpha) 1/16) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 0 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/16) (*.f64 (sqrt.f64 1/16) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/16) (*.f64 (cbrt.f64 1/256) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 2)) (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (sqrt.f64 1/16)) (sqrt.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (cbrt.f64 1/16)) (cbrt.f64 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/16 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/8 (+.f64 beta alpha)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 i)) (cbrt.f64 (/.f64 1/512 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 beta alpha) (/.f64 1/8 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/512 i)) (/.f64 (+.f64 beta alpha) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/8 (+.f64 beta alpha))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 1/8 (+.f64 beta alpha)) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/4096 i)) (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/8 (+.f64 beta alpha)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 1/8 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (+.f64 beta alpha)) (*.f64 (/.f64 1 i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/8 (/.f64 (+.f64 beta alpha) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) i) 1/8)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/8 (+.f64 beta alpha)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 beta alpha) (/.f64 i 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (cbrt.f64 (*.f64 i i)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 i i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 (neg.f64 i))) (pow.f64 (cbrt.f64 (neg.f64 i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) 1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (+.f64 beta alpha)) (/.f64 i 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (+.f64 beta alpha)) (/.f64 (neg.f64 i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/16 (+.f64 beta alpha)) (*.f64 i 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (neg.f64 i) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (neg.f64 (/.f64 i 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/8 alpha)) (*.f64 (/.f64 1 i) (*.f64 1/8 beta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/8 beta)) (*.f64 (/.f64 1 i) (*.f64 1/8 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 1/16 (+.f64 beta beta))) (*.f64 (/.f64 1 i) (*.f64 1/16 (+.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 i) (*.f64 (+.f64 beta beta) 1/16)) (*.f64 (/.f64 1 i) (*.f64 (+.f64 alpha alpha) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 0) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/8 alpha) (/.f64 1 i)) (*.f64 (*.f64 1/8 beta) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/8 beta) (/.f64 1 i)) (*.f64 (*.f64 1/8 alpha) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/16 (+.f64 beta beta)) (/.f64 1 i)) (*.f64 (*.f64 1/16 (+.f64 alpha alpha)) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 beta beta) 1/16) (/.f64 1 i)) (*.f64 (*.f64 (+.f64 alpha alpha) 1/16) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 0 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/16) (*.f64 (sqrt.f64 1/16) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/16) (*.f64 (cbrt.f64 1/256) (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 2)) (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (sqrt.f64 1/16)) (sqrt.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) (cbrt.f64 1/16)) (cbrt.f64 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/16 (cbrt.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/8 (+.f64 beta alpha)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 i)) (cbrt.f64 (/.f64 1/512 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 beta alpha) (/.f64 1/8 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/512 i)) (/.f64 (+.f64 beta alpha) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/8 (+.f64 beta alpha))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 1/8 (+.f64 beta alpha)) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/4096 i)) (/.f64 (*.f64 2 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/8 (+.f64 beta alpha)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 1/8 (+.f64 beta alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (+.f64 beta alpha)) (*.f64 (/.f64 1 i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/16 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/8 (/.f64 (+.f64 beta alpha) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 beta alpha) i) 1/8)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/8 (+.f64 beta alpha)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 beta alpha) (/.f64 i 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (cbrt.f64 (cbrt.f64 (*.f64 i i)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 i i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 (neg.f64 i))) (pow.f64 (cbrt.f64 (neg.f64 i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) 1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (+.f64 beta alpha)) (/.f64 i 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (+.f64 beta alpha)) (/.f64 (neg.f64 i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/16 (+.f64 beta alpha)) (*.f64 i 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (/.f64 (neg.f64 i) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 beta alpha)) (neg.f64 (/.f64 i 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))))))"]],"rules":[["egg-rr",64],["egg-rr",64],["egg-rr",48],["egg-rr",142]],"time":53.98095703125,"type":"rewrite"},{"count":[[462,264]],"inputs":[["1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","(*.f64 2 (/.f64 alpha i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 beta i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 beta i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 beta i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 alpha i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 alpha i))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 beta i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 alpha i))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))"]],"method":["egg-herbie"],"outputs":[["1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","1/16","(*.f64 2 (/.f64 alpha i))","(/.f64 (+.f64 alpha alpha) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 beta i))","(/.f64 (+.f64 beta beta) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 beta i))","(/.f64 (+.f64 beta beta) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 beta i))","(/.f64 (+.f64 beta beta) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 alpha i))","(/.f64 (+.f64 alpha alpha) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 alpha i))","(/.f64 (+.f64 alpha alpha) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(+.f64 (*.f64 2 (/.f64 alpha i)) (*.f64 2 (/.f64 beta i)))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 2 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 2 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 beta i))","(/.f64 (*.f64 1/8 beta) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 alpha i))","(/.f64 (*.f64 1/8 alpha) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(+.f64 (*.f64 1/8 (/.f64 beta i)) (*.f64 1/8 (/.f64 alpha i)))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)","(*.f64 1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)"]],"time":436.237060546875,"type":"simplify"},{"compiler":[[5957,3633]],"time":63.655029296875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.703463828487386],["(-.f64 (+.f64 1/16 (*.f64 1/16 (pow.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 3) 1/3))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","fresh",22.6225429919791],["1/16","next",20.230777366943332],["(*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.74864758080271],["(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","fresh",39.131197619536636],["(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","fresh",25.981455918533644],["(/.f64 (*.f64 i (+.f64 i alpha)) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","fresh",55.11232466178585],["(*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))","fresh",40.820951389413366],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","fresh",20.62943805096743],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","done",16.242510245667496],["(/.f64 (/.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i)","fresh",20.96731332424063]],"compiler":[[43,22],[26,19],[4,4],[46,21],[53,25],[81,52],[26,16],[56,31],[33,22],[22,15],[61,37],[43,22],[26,19],[4,4],[46,21],[53,25],[81,52],[26,16],[56,31],[33,22],[61,37]],"count":[[272,11]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[264,4],"picked":[1,1]}],"min-error":[9.45163701653187],"time":107.9111328125,"type":"prune"},{"compiler":[[4,4]],"time":0.993896484375,"type":"localize"},{"compiler":[[3,3]],"time":0.10107421875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.703463828487386],["(-.f64 (+.f64 1/16 (*.f64 1/16 (pow.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 3) 1/3))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","fresh",22.6225429919791],["1/16","done",20.230777366943332],["(*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.74864758080271],["(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","fresh",39.131197619536636],["(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","fresh",25.981455918533644],["(/.f64 (*.f64 i (+.f64 i alpha)) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","fresh",55.11232466178585],["(*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))","fresh",40.820951389413366],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","next",20.62943805096743],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","done",16.242510245667496],["(/.f64 (/.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i)","fresh",20.96731332424063]],"compiler":[[43,22],[26,19],[4,4],[46,21],[53,25],[81,52],[26,16],[56,31],[33,22],[22,15],[61,37],[43,22],[26,19],[46,21],[53,25],[81,52],[26,16],[56,31],[33,22],[61,37]],"count":[[11,11]],"kept":[{"done":[1,1],"fresh":[9,9],"new":[0,0],"picked":[1,1]}],"min-error":[9.45163701653187],"time":9.596923828125,"type":"prune"},{"compiler":[[109,62]],"locations":[["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))",0.046875,true],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)",0.11328125,true],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))",4.807252098276434,true],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))",18.82868332513651,true]],"time":22.537109375,"type":"localize"},{"count":[[4,93]],"series":[["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","i","-inf",0.326904296875],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","i","inf",0.38818359375],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","i","0",0.18310546875],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","alpha","-inf",0.178955078125],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","alpha","inf",0.17919921875],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","alpha","0",0.475830078125],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","beta","-inf",0.196044921875],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","beta","inf",0.178955078125],["(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","beta","0",0.475830078125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","i","-inf",0.225830078125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","i","inf",0.218017578125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","i","0",0.264892578125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","alpha","-inf",0.2529296875],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","alpha","inf",0.259033203125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","alpha","0",0.296142578125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","beta","-inf",0.253173828125],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","beta","inf",0.261962890625],["(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","beta","0",0.2841796875],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","i","-inf",0.39208984375],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","i","inf",0.467041015625],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","i","0",0.23486328125],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","alpha","-inf",0.24609375],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","alpha","inf",0.264892578125],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","alpha","0",0.5830078125],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","beta","-inf",0.27294921875],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","beta","inf",0.944091796875],["(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","beta","0",0.583984375],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","i","-inf",1.89404296875],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","i","inf",2.693115234375],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","i","0",3.614990234375],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","alpha","-inf",0.34423828125],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","alpha","inf",0.376953125],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","alpha","0",2.709228515625],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","beta","-inf",0.35595703125],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","beta","inf",0.469970703125],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","beta","0",4.67919921875]],"time":26.77880859375,"type":"series"},{"count":[[4,190]],"inputs":[["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2))","(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)","(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 0) (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 0 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (+.f64 1/16 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 1/16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/16 (+.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (pow.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 2/3) (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (-.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 2/3) (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (+.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 2/3) (-.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/8 (+.f64 beta alpha)) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))) (*.f64 (neg.f64 i) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 (neg.f64 i) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/8 (+.f64 beta alpha)) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 (neg.f64 i) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (neg.f64 i) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))) (*.f64 (pow.f64 i 2/3) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 (pow.f64 i 2/3) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 (pow.f64 i 2/3) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (pow.f64 i 2/3) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 beta alpha) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))) (*.f64 (/.f64 i -1/8) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 (/.f64 i -1/8) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 beta alpha) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 (/.f64 i -1/8) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 (/.f64 i -1/8) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))) (*.f64 i (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)))) (*.f64 i (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -1/8 (+.f64 beta alpha)) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 i (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (*.f64 i (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (/.f64 i -1/8)) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (+.f64 beta alpha))) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (/.f64 i -1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (pow.f64 i 2/3)) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)))) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (pow.f64 i 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (neg.f64 i)) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (*.f64 1/8 (+.f64 beta alpha)))) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) (*.f64 -1/8 (+.f64 beta alpha)))) (*.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (/.f64 i -1/8)) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (+.f64 beta alpha))) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (/.f64 i -1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) i) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 -1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (pow.f64 i 2/3)) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (cbrt.f64 i)))) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (pow.f64 i 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (neg.f64 i)) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (*.f64 1/8 (+.f64 beta alpha)))) (*.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/8 (+.f64 beta alpha))) (/.f64 (pow.f64 (*.f64 1/8 (+.f64 beta alpha)) 2/3) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 2/3) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 beta alpha) (cbrt.f64 i)) (/.f64 -1/8 (pow.f64 i 2/3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 beta alpha) (/.f64 -1/8 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/8 (/.f64 (+.f64 beta alpha) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/8 (+.f64 beta alpha)) (/.f64 -1 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 2/3) (cbrt.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 1 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1/512 i)) (/.f64 (+.f64 beta alpha) (pow.f64 i 2/3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 i -1/3) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (pow.f64 i 2/3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 i) (*.f64 -1/8 (+.f64 beta alpha)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/8 (+.f64 beta alpha)) (/.f64 1 i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 3 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4))) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) 4) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) (/.f64 1 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 0) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (*.f64 0 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4))) (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (neg.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) -1) (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16) (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16)) (*.f64 1 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (*.f64 1 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 0) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16) 1) (*.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 1) (*.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1) (*.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1) (*.f64 (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2)) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) (*.f64 0 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 1 (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4)) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4))) (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 3 2))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2) (*.f64 (/.f64 1 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) (/.f64 1 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16)) (*.f64 1 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) 1) (*.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) -1) (*.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) -1) (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2) (/.f64 1 (pow.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 2 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (/.f64 1 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2) (pow.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2) 1) (pow.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) 2)) (neg.f64 (pow.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096))) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 2/3 1))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) 1) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) 1) (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) -1/16) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (*.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/16 (*.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/16 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 0) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) (*.f64 0 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (/.f64 1 (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)))) (neg.f64 (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i) 3) (neg.f64 1/4096))) (cbrt.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3))) 1) (cbrt.f64 (fma.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16) 1/256)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))))))"]],"rules":[["egg-rr",25],["egg-rr",67],["egg-rr",31],["egg-rr",67]],"time":49.864013671875,"type":"rewrite"},{"count":[[283,308]],"inputs":[["(+.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3)) (*.f64 -1/8 (/.f64 alpha i)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3))))","(+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 1 (pow.f64 i 2))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3)))))","(+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 1 (pow.f64 i 2))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 14)) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/3) (/.f64 1 (pow.f64 i 3))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/2304 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 3))))) (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3))))))) (*.f64 -1/6912 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9) (/.f64 1 (pow.f64 i 3)))))))) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3))))))","(*.f64 -1/8 (/.f64 beta i))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 beta i))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))))))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 2)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))))))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (+.f64 (*.f64 1/72 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 -1/2304 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3))))))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i)))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/6912 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 1 (pow.f64 i 3))))))) (pow.f64 alpha 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 2)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))))))))","(*.f64 -1/8 (/.f64 alpha i))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 alpha i))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 (+.f64 beta alpha) i))","(*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)))))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (*.f64 -1/110592 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 7))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 i 3)))) (+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))) (*.f64 -1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (cbrt.f64 1/256)) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (+.f64 (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))))))))))))))","(*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 1/256) (+.f64 (*.f64 1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 -1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (pow.f64 (cbrt.f64 1/16) 2))) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 -1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (cbrt.f64 1/16)) (pow.f64 (cbrt.f64 1/256) 2))) (*.f64 1/110592 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 7))) 1/3) (pow.f64 (+.f64 beta alpha) 3)))))) (pow.f64 i 3))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))))","(pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3)","(+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/3) (/.f64 1 (pow.f64 i 3))))) (pow.f64 beta 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3))))","(pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3)","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (pow.f64 alpha 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (pow.f64 alpha 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i)))) (pow.f64 alpha 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3))))","(cbrt.f64 1/256)","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/256))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2))))))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))","(cbrt.f64 1/256)","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/256))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2))))))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 -1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)","(+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 1/256 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 1/256 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))))","1/256","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","1/256","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3)","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3))","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 -1/576 (*.f64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 7)) 1/9)))))","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1/2304 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 3))))) (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 -1/576 (*.f64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 7)) 1/9))))))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 7)) 1/9) (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (*.f64 (pow.f64 alpha 3) (+.f64 (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 -1/2304 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3)))))))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 7)) 1/9) (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))))))","(cbrt.f64 1/16)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))) (*.f64 -1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16))))","(cbrt.f64 1/16)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16)))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 -1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3)) (*.f64 -1/8 (/.f64 alpha i)))","(fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3))))","(fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 4) 1/9) i))) (/.f64 1/8 i)) beta (fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))))","(+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 1 (pow.f64 i 2))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3)))))","(fma.f64 (*.f64 beta beta) (fma.f64 1/288 (*.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (pow.f64 i (neg.f64 2))) (fma.f64 1/3 (/.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i)))) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (*.f64 -1/576 (/.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) 1/9) (*.f64 i i))))) (fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 4) 1/9) i))) (/.f64 1/8 i)) beta (fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)))))","(+.f64 (*.f64 (pow.f64 beta 2) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 1 (pow.f64 i 2))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 8) 1) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4) 1) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) beta) (+.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 14)) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/3) (/.f64 1 (pow.f64 i 3))))) (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/2304 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 3))))) (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3))))))) (*.f64 -1/6912 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9) (/.f64 1 (pow.f64 i 3)))))))) (+.f64 (*.f64 -1/8 (/.f64 alpha i)) (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) (pow.f64 1 1/3))))))","(fma.f64 (*.f64 beta beta) (fma.f64 1/288 (*.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (pow.f64 i (neg.f64 2))) (fma.f64 1/3 (/.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i)))) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (*.f64 -1/576 (/.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) 1/9) (*.f64 i i))))) (fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 4) 1/9) i))) (/.f64 1/8 i)) beta (fma.f64 (pow.f64 beta 3) (fma.f64 1/72 (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 14)) 1/9) (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i))))) i) (fma.f64 -1/3 (/.f64 (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) 1/9) (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i))))) i) (*.f64 1/1728 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 5)) (pow.f64 i 3)))) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (fma.f64 -1/3 (fma.f64 -1/2304 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2))) (pow.f64 i 3)) (*.f64 1/13824 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2))) (pow.f64 i 3)))) (*.f64 -1/6912 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2)) 1/9) (pow.f64 i 3)))))) (fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))))))","(*.f64 -1/8 (/.f64 beta i))","(/.f64 (*.f64 -1/8 beta) i)","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (+.f64 (/.f64 beta i) (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 beta i))","(/.f64 (*.f64 -1/8 beta) i)","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (+.f64 (/.f64 beta i) (/.f64 alpha i)))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))))","(fma.f64 -1/8 (/.f64 beta i) (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))))))","(fma.f64 -1/8 (/.f64 beta i) (fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 4) 1/9) i))) (/.f64 1/8 i)) alpha (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 2)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))))))","(fma.f64 -1/8 (/.f64 beta i) (fma.f64 (fma.f64 1/288 (/.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) (*.f64 i i)) (fma.f64 1/3 (/.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i)))) (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) (*.f64 -1/576 (/.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) 1/9) (*.f64 i i))))) (*.f64 alpha alpha) (fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 4) 1/9) i))) (/.f64 1/8 i)) alpha (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)))))","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (+.f64 (*.f64 (+.f64 (*.f64 1/72 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 -1/2304 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3))))))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i)))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/6912 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 1 (pow.f64 i 3))))))) (pow.f64 alpha 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/288 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 2)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) (pow.f64 1 1/3))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 alpha 2)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 8)) 1/9) (/.f64 1 i))) (*.f64 1/24 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/9) (/.f64 1 i)))) (*.f64 1/8 (/.f64 1 i))) alpha) (*.f64 (pow.f64 1 1/3) (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))))))))","(fma.f64 -1/8 (/.f64 beta i) (fma.f64 (fma.f64 1/72 (/.f64 (*.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i)))) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 14)) 1/9)) i) (fma.f64 -1/3 (fma.f64 1/13824 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2))) (pow.f64 i 3)) (*.f64 -1/2304 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2))) (pow.f64 i 3)))) (fma.f64 -1/3 (/.f64 (fma.f64 1/1728 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 5)) (pow.f64 i 3)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) 1/9) (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i))))) i))) (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) (*.f64 -1/6912 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2)) 1/9) (pow.f64 i 3)))))) (pow.f64 alpha 3) (fma.f64 (fma.f64 1/288 (/.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) (*.f64 i i)) (fma.f64 1/3 (/.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i)))) (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) (*.f64 -1/576 (/.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) 1/9) (*.f64 i i))))) (*.f64 alpha alpha) (fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 4) 1/9) i))) (/.f64 1/8 i)) alpha (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))))))","(*.f64 -1/8 (/.f64 alpha i))","(/.f64 (*.f64 -1/8 alpha) i)","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (+.f64 (/.f64 beta i) (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 alpha i))","(/.f64 (*.f64 -1/8 alpha) i)","(+.f64 (*.f64 -1/8 (/.f64 beta i)) (*.f64 -1/8 (/.f64 alpha i)))","(*.f64 -1/8 (+.f64 (/.f64 beta i) (/.f64 alpha i)))","(*.f64 -1/8 (/.f64 (+.f64 beta alpha) i))","(/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i)","(*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16))","(cbrt.f64 (*.f64 1/256 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)))))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i)) (fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i)) (fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))))))))","(fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i)) (fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (*.f64 i i))) (fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) (fma.f64 -1/8 (/.f64 (+.f64 beta alpha) i) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)) (*.f64 1/4608 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 1/256 1/16)) 2))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))))))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (*.f64 -1/110592 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 7))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 i 3)))) (+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))) (*.f64 -1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (cbrt.f64 1/256)) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (+.f64 (*.f64 -1/8 (/.f64 (+.f64 beta alpha) i)) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))))))))))))))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256)) i)) (fma.f64 1/72 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))) (fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)) (fma.f64 -1/110592 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2)) (pow.f64 (cbrt.f64 1/16) 7))) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 i 3))) (fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (*.f64 i i))) (fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)) (*.f64 -1/2304 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (cbrt.f64 1/256)) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2))) (fma.f64 1/4608 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 1/256 1/16)) 2))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))) (fma.f64 -1/8 (/.f64 (+.f64 beta alpha) i) (/.f64 (*.f64 -1/3 (*.f64 (fma.f64 1/96 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 5))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (/.f64 (*.f64 1/7077888 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/256) 2))) (cbrt.f64 1/16))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2)))))))))))))","(*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16))","(cbrt.f64 (*.f64 1/256 1/16))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16))) (fma.f64 -1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (cbrt.f64 (*.f64 1/256 1/16)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16))) (fma.f64 -1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (*.f64 i i))) (fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)) (*.f64 1/4608 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 1/256 1/16)) 2))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16)))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (*.f64 (cbrt.f64 1/256) (+.f64 beta alpha)))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 1/256) (+.f64 (*.f64 1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 -1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (pow.f64 (cbrt.f64 1/16) 2))) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 -1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (cbrt.f64 1/16)) (pow.f64 (cbrt.f64 1/256) 2))) (*.f64 1/110592 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 7))) 1/3) (pow.f64 (+.f64 beta alpha) 3)))))) (pow.f64 i 3))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (pow.f64 i 2)))) (+.f64 (*.f64 (cbrt.f64 1/256) (cbrt.f64 1/16)) (+.f64 (*.f64 1/4608 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/256) 2) (pow.f64 (cbrt.f64 1/16) 2))) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/16))) (fma.f64 -1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (cbrt.f64 1/256))) (*.f64 1/8 (+.f64 beta alpha)))) i)) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 1/256) (fma.f64 1/2304 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)) (/.f64 (*.f64 -1/13824 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/16) 2)))) (pow.f64 (cbrt.f64 1/16) 2)) (fma.f64 -1/72 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (pow.f64 (cbrt.f64 1/256) 2)) (fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 -1/96 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 5))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (/.f64 (*.f64 -1/7077888 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/256) 2))) (cbrt.f64 1/16)) (pow.f64 (cbrt.f64 1/256) 2)) (*.f64 1/110592 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2)) (pow.f64 (cbrt.f64 1/16) 7))) (pow.f64 (+.f64 beta alpha) 3)))))) (pow.f64 i 3))) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (*.f64 (pow.f64 (+.f64 beta alpha) 2) (cbrt.f64 1/256)) (*.f64 i i))) (fma.f64 (cbrt.f64 1/256) (cbrt.f64 1/16) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))) (cbrt.f64 1/16)) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)) (*.f64 1/4608 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 1/256 1/16)) 2))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))))))))","(pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2))","(+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3))","(fma.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 5) 1/9)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 beta beta) (*.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i)))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 4))))) (fma.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 5) 1/9)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 beta 2) (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 16) 1) 1/9) (/.f64 1 (pow.f64 i 2))))) i))) (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 5) 1) 1/3) (/.f64 1 (pow.f64 i 3))))) (pow.f64 beta 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 4)) 1/3))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 beta beta) (*.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i)))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 4))))) (fma.f64 1/12 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 5) 1/9)) (fma.f64 -1/3 (*.f64 (*.f64 (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) 1/9) (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 16) 1/9) (*.f64 i i))))) i) (*.f64 1/1728 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 5)) (pow.f64 i 3)))) (pow.f64 beta 3)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 4)))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))))","(pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3))","(fma.f64 1/12 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 5) 1/9) (/.f64 alpha i)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (pow.f64 alpha 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3)))","(fma.f64 1/3 (*.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i)))) (*.f64 (*.f64 alpha alpha) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 4))))) (fma.f64 1/12 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 5) 1/9) (/.f64 alpha i)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) (pow.f64 alpha 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i)))) 1/9) (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))) (*.f64 1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 16)) 1/9) (/.f64 1 (pow.f64 i 2))))) i)))) (pow.f64 alpha 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 4)) 1/3))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 5)) 1/9) (/.f64 alpha i))) (pow.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) 1/3))))","(fma.f64 1/3 (*.f64 (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i)))) (*.f64 (*.f64 alpha alpha) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 4))))) (fma.f64 -1/3 (*.f64 (*.f64 (fma.f64 1/1728 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 5)) (pow.f64 i 3)) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))) 1/9) (-.f64 (/.f64 1/64 (*.f64 i i)) (*.f64 1/48 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 16) 1/9) (*.f64 i i))))) i))) (pow.f64 alpha 3)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 4)))) (fma.f64 1/12 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 5) 1/9) (/.f64 alpha i)) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2)))))","(cbrt.f64 1/256)","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/256))","(fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/256))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2))))))","(+.f64 (fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/256)) (/.f64 (*.f64 1/3 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))","(fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 -1/3 (/.f64 (fma.f64 1/96 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 5))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (/.f64 (*.f64 1/7077888 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/256) 2))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))) (+.f64 (cbrt.f64 1/256) (/.f64 (*.f64 1/3 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)))))","(cbrt.f64 1/256)","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/256))","(fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/256))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2))))))","(+.f64 (fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/256)) (/.f64 (*.f64 1/3 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)))","(+.f64 (*.f64 1/192 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/96 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/256) 5)) 1/3) (*.f64 (+.f64 beta alpha) (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2))))))) (*.f64 -1/7077888 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/256) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2)))) (+.f64 (cbrt.f64 1/256) (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 1/12288 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/256)) 1/3) (pow.f64 (+.f64 beta alpha) 2)))) (*.f64 (pow.f64 i 2) (pow.f64 (cbrt.f64 1/256) 2)))))))","(fma.f64 1/192 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 1/3 (/.f64 (fma.f64 -1/96 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/256) (neg.f64 5))) (*.f64 (+.f64 beta alpha) (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2)))))) (/.f64 (*.f64 -1/7077888 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/256) 2))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/256) 2))) (+.f64 (cbrt.f64 1/256) (/.f64 (*.f64 1/3 (fma.f64 1/64 (pow.f64 (+.f64 beta alpha) 2) (neg.f64 (*.f64 (*.f64 1/12288 (cbrt.f64 (/.f64 1 (cbrt.f64 1/256)))) (pow.f64 (+.f64 beta alpha) 2))))) (pow.f64 (*.f64 i (cbrt.f64 1/256)) 2)))))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)","(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)","(+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2))","(fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)))","(/.f64 (*.f64 1/64 (*.f64 beta beta)) (*.f64 i i))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)))","(/.f64 (*.f64 1/64 (*.f64 beta beta)) (*.f64 i i))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) beta) i)) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)))","(fma.f64 1/64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (fma.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) beta) i) (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 2)))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)","(pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2)","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))","(/.f64 (*.f64 1/64 (*.f64 alpha alpha)) (*.f64 i i))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))","(/.f64 (*.f64 1/64 (*.f64 alpha alpha)) (*.f64 i i))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i)))","(fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))) (*.f64 1/4 (/.f64 (*.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) alpha) i))))","(+.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) 2) (fma.f64 1/64 (/.f64 (*.f64 alpha alpha) (*.f64 i i)) (/.f64 (*.f64 1/4 (*.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) alpha)) i)))","(*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))","(/.f64 (*.f64 1/64 (pow.f64 (+.f64 beta alpha) 2)) (*.f64 i i))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))))","(*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))))","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 1/256 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 1/256 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","1/256","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) 1/256)","(fma.f64 1/64 (/.f64 (+.f64 beta alpha) i) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","1/256","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) 1/256)","(fma.f64 1/64 (/.f64 (+.f64 beta alpha) i) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","(+.f64 (*.f64 1/64 (/.f64 (+.f64 beta alpha) i)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2))) 1/256))","(+.f64 (*.f64 1/64 (+.f64 (/.f64 (+.f64 beta alpha) i) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i)))) 1/256)","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3)","(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)))","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3))","(fma.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2)) 1/9)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))))","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 -1/576 (*.f64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 7)) 1/9)))))","(+.f64 (fma.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2)) 1/9)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)))) (*.f64 -1/576 (*.f64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 7)) 1/9))))","(+.f64 (*.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 beta 3) (+.f64 (*.f64 -1/2304 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (/.f64 1 (pow.f64 i 3))))) (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 2)) 1/3))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 1/3) (*.f64 -1/576 (*.f64 (/.f64 (pow.f64 beta 2) (pow.f64 i 2)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 alpha i))) 7)) 1/9))))))","(fma.f64 1/24 (*.f64 (/.f64 beta i) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2)) 1/9)) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 beta 3) (fma.f64 -1/2304 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2))) (pow.f64 i 3)) (*.f64 1/13824 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2))) (pow.f64 i 3))))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 2)))) (+.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))) (*.f64 -1/576 (*.f64 (/.f64 (*.f64 beta beta) (*.f64 i i)) (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) (neg.f64 7)) 1/9))))))","(pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3)","(cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3))","(fma.f64 1/24 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2)) 1/9) (/.f64 alpha i)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 7)) 1/9) (/.f64 (pow.f64 alpha 2) (pow.f64 i 2))))))","(+.f64 (fma.f64 1/24 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2)) 1/9) (/.f64 alpha i)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)))) (*.f64 -1/576 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 7)) 1/9) (/.f64 (*.f64 alpha alpha) (*.f64 i i)))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/9) (/.f64 alpha i))) (+.f64 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (*.f64 (pow.f64 alpha 3) (+.f64 (*.f64 1/13824 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3) (/.f64 1 (pow.f64 i 3)))) (*.f64 -1/2304 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (/.f64 1 (pow.f64 i 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 2)) 1/3)))))))) (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1/16 (*.f64 1/8 (/.f64 beta i))) 7)) 1/9) (/.f64 (pow.f64 alpha 2) (pow.f64 i 2)))))))","(+.f64 (fma.f64 1/24 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2)) 1/9) (/.f64 alpha i)) (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2))) (*.f64 (pow.f64 alpha 3) (fma.f64 1/13824 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2))) (pow.f64 i 3)) (*.f64 -1/2304 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 2))) (pow.f64 i 3)))))) (*.f64 -1/576 (*.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 beta) i)) (neg.f64 7)) 1/9) (/.f64 (*.f64 alpha alpha) (*.f64 i i))))))","(cbrt.f64 1/16)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/16))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16)))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))) (cbrt.f64 1/16)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))) (*.f64 -1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2))))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)) (*.f64 -1/2304 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2))) (fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))) (cbrt.f64 1/16))))","(cbrt.f64 1/16)","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (cbrt.f64 1/16))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (cbrt.f64 1/16))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16)))","(fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))) (cbrt.f64 1/16)))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/2304 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 -1/13824 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 2)) 1/3) (/.f64 (+.f64 beta alpha) i))) (+.f64 (*.f64 -1/576 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/16) 7)) 1/3) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (pow.f64 i 2)))) (cbrt.f64 1/16))))","(fma.f64 1/3 (/.f64 (fma.f64 1/2304 (/.f64 (pow.f64 (+.f64 beta alpha) 3) (pow.f64 (cbrt.f64 1/16) 2)) (/.f64 (*.f64 -1/13824 (pow.f64 (+.f64 beta alpha) 3)) (pow.f64 (cbrt.f64 1/16) 2))) (*.f64 (pow.f64 i 3) (pow.f64 (cbrt.f64 1/16) 2))) (fma.f64 1/24 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 2))) (/.f64 (+.f64 beta alpha) i)) (fma.f64 -1/576 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/16) (neg.f64 7))) (/.f64 (pow.f64 (+.f64 beta alpha) 2) (*.f64 i i))) (cbrt.f64 1/16))))"]],"time":314.06201171875,"type":"simplify"},{"compiler":[[16274,10631]],"time":171.52001953125,"type":"eval"},{"alts":[["1/16","done",20.230777366943332],["(*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.74864758080271],["(/.f64 (*.f64 -1/8 alpha) i)","fresh",61.59399793798415],["(fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 4) 1/9) i))) (/.f64 1/8 i)) beta (fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))))","fresh",21.078837743664163],["(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","fresh",39.131197619536636],["(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","fresh",25.981455918533644],["(/.f64 (*.f64 i (+.f64 i alpha)) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","fresh",55.11232466178585],["(*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))","fresh",40.820951389413366],["(fma.f64 (pow.f64 i -1/3) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (pow.f64 i 2/3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))","fresh",20.76871113578131],["(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","done",20.62943805096743],["(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","done",16.242510245667496],["(*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","fresh",40.703463828487386],["(*.f64 -1/8 (/.f64 beta i))","fresh",62.14112666538253]],"compiler":[[4,4],[46,21],[8,6],[51,39],[53,25],[81,52],[26,16],[56,31],[24,16],[33,22],[22,15],[43,22],[8,6]],"count":[[319,13]],"kept":[{"done":[2,2],"fresh":[8,6],"new":[308,4],"picked":[1,1]}],"min-error":[9.441827972234716],"time":111.629150390625,"type":"prune"},{"accuracy":[11.230862746900126],"baseline":[16.242510245667496],"branch":[["alpha",15.230102245302973,3],["beta",16.242510245667496,1],["i",11.652561553729312,2],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))",11.230862746900126,2],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))",11.230862746900126,2]],"compiler":[[4,3],[4,3],[4,3],[56,27],[56,27],[590,303]],"count":[[18,2]],"inputs":[["(/.f64 (*.f64 -1/8 alpha) i)","(fma.f64 (-.f64 (fma.f64 1/12 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 8) 1/9) i) (*.f64 1/24 (/.f64 (pow.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i)) 4) 1/9) i))) (/.f64 1/8 i)) beta (fma.f64 -1/8 (/.f64 alpha i) (+.f64 1/16 (/.f64 (*.f64 1/8 alpha) i))))","(fma.f64 (pow.f64 i -1/3) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) (pow.f64 i 2/3)) (fma.f64 1/8 (/.f64 (+.f64 beta alpha) i) 1/16))","(*.f64 -1/8 (/.f64 beta i))","(-.f64 (+.f64 1/16 (*.f64 1/16 (pow.f64 (pow.f64 (/.f64 (+.f64 beta alpha) (*.f64 i 1/2)) 3) 1/3))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","1/16","(fma.f64 (cbrt.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))) (cbrt.f64 (pow.f64 (+.f64 1/16 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)) 2)) (/.f64 (*.f64 -1/8 (+.f64 beta alpha)) i))","(/.f64 (/.f64 (fma.f64 (+.f64 1/4096 (pow.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) 3)) i (*.f64 (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16))) (*.f64 -1/8 (+.f64 beta alpha)))) (+.f64 1/256 (*.f64 (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i) (fma.f64 (+.f64 beta alpha) (/.f64 1/8 i) -1/16)))) i)","(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","(+.f64 (neg.f64 (/.f64 (-.f64 (*.f64 1/16 (+.f64 (neg.f64 (*.f64 beta alpha)) (neg.f64 (pow.f64 (+.f64 beta alpha) 2)))) (fma.f64 -2 (*.f64 (fma.f64 1/16 (*.f64 2 (+.f64 beta alpha)) (neg.f64 (*.f64 1/8 (+.f64 beta alpha)))) (+.f64 beta alpha)) (*.f64 -1/256 (fma.f64 4 (+.f64 (pow.f64 (+.f64 beta alpha) 2) -1) (*.f64 (pow.f64 (+.f64 beta alpha) 2) (+.f64 16 4)))))) (*.f64 i i))) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","(/.f64 (*.f64 i (+.f64 i alpha)) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))","(*.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) -2))","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))","1/16","(*.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (*.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) -2))) (/.f64 1 (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","(*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)))","(/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (-.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 4) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)))","(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))"]],"link":["."],"name":["Octave 3.8, jcobi/4"],"oracle":[63.846890977646154],"outputs":[["(/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1))","(-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i))"]],"time":53.11181640625,"times":[["alpha",16.240966796875],["beta",6.037109375],["i",11.320068359375],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))",5.198974609375],["(/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1))",4.9130859375]],"type":"regimes"},{"bstep":[[{"type":"real","value":"+inf"},{"type":"real","value":"NaN"},0.032958984375]],"compiler":[[6,5],[56,27]],"method":["left-value"],"time":0.34912109375,"type":"bsearch"},{"compiler":[[128,61]],"inputs":[["(if (<=.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1)) +inf.0) (/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (+.f64 (*.f64 beta alpha) (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i)))) (-.f64 (*.f64 (+.f64 (+.f64 alpha beta) (*.f64 2 i)) (+.f64 (+.f64 alpha beta) (*.f64 2 i))) 1)) +inf.0) (/.f64 (*.f64 (/.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 2 i (+.f64 alpha beta))) (/.f64 (/.f64 (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i))) (fma.f64 2 i (+.f64 alpha beta))) (+.f64 alpha (+.f64 beta (fma.f64 i 2 -1))))) (+.f64 (fma.f64 2 i (+.f64 alpha beta)) 1)) (-.f64 (+.f64 1/16 (*.f64 1/16 (/.f64 (*.f64 2 (+.f64 beta alpha)) i))) (/.f64 (*.f64 1/8 (+.f64 beta alpha)) i)))","(if (<=.f64 (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) +inf.0) (/.f64 (/.f64 (*.f64 (*.f64 i (+.f64 (+.f64 alpha beta) i)) (fma.f64 beta alpha (*.f64 i (+.f64 (+.f64 alpha beta) i)))) (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2)) (+.f64 (pow.f64 (fma.f64 2 i (+.f64 alpha beta)) 2) -1)) (+.f64 1/16 (/.f64 (-.f64 (*.f64 1/16 (*.f64 2 (+.f64 alpha beta))) (*.f64 1/8 (+.f64 alpha beta))) i)))"]],"stop":[["fuel",1]],"time":16.41796875,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[128,61]],"remove-preprocessing":[[]],"time":26.782958984375,"type":"end"}]