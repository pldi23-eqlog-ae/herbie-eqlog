[{"compiler":[[38,22]],"method":["search"],"sampling":[[12,0.011690167696545961,0.985870809075376,0.0024390232280779856],[11,0.007793445131030641,0.9897675316408914,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":368.948974609375,"type":"analyze"},{"outcomes":[["body",512,"invalid",79.0048828125,375],["body",256,"invalid",279.5537109375,2730],["body",1024,"invalid",170.99609375,490],["body",512,"valid",152.07177734375,709],["body",1024,"valid",298.432861328125,846],["body",2048,"valid",5.655517578125,8],["body",256,"valid",692.4052734375,6693]],"time":1690.868896484375,"type":"sample"},{"compiler":[[37,21]],"inputs":[["0","1","2","3","4"],["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 lambda1 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 R lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 R lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 lambda2 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 R) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 R) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 phi1 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 R phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 R phi2) 2)))) (*.f64 (-.f64 R phi2) (-.f64 R phi2)))))","(*.f64 phi2 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 R) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 R) 2)))) (*.f64 (-.f64 phi1 R) (-.f64 phi1 R)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 phi1 lambda2) (cos.f64 (/.f64 (+.f64 lambda1 phi2) 2))) (*.f64 (-.f64 phi1 lambda2) (cos.f64 (/.f64 (+.f64 lambda1 phi2) 2)))) (*.f64 (-.f64 lambda1 phi2) (-.f64 lambda1 phi2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 phi2 lambda2) (cos.f64 (/.f64 (+.f64 phi1 lambda1) 2))) (*.f64 (-.f64 phi2 lambda2) (cos.f64 (/.f64 (+.f64 phi1 lambda1) 2)))) (*.f64 (-.f64 phi1 lambda1) (-.f64 phi1 lambda1)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 phi1) (cos.f64 (/.f64 (+.f64 lambda2 phi2) 2))) (*.f64 (-.f64 lambda1 phi1) (cos.f64 (/.f64 (+.f64 lambda2 phi2) 2)))) (*.f64 (-.f64 lambda2 phi2) (-.f64 lambda2 phi2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 phi2) (cos.f64 (/.f64 (+.f64 phi1 lambda2) 2))) (*.f64 (-.f64 lambda1 phi2) (cos.f64 (/.f64 (+.f64 phi1 lambda2) 2)))) (*.f64 (-.f64 phi1 lambda2) (-.f64 phi1 lambda2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi2 phi1) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi2 phi1) 2)))) (*.f64 (-.f64 phi2 phi1) (-.f64 phi2 phi1)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(*.f64 lambda1 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 R lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 R lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 lambda1 (hypot.f64 (*.f64 (-.f64 R lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(*.f64 lambda2 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 R) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 R) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 lambda2 (hypot.f64 (*.f64 (-.f64 lambda1 R) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(*.f64 phi1 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 R phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 R phi2) 2)))) (*.f64 (-.f64 R phi2) (-.f64 R phi2)))))","(*.f64 phi1 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 R phi2) 1/2))) (-.f64 R phi2)))","(*.f64 phi2 (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 R) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 R) 2)))) (*.f64 (-.f64 phi1 R) (-.f64 phi1 R)))))","(*.f64 phi2 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 R) 1/2))) (-.f64 phi1 R)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 phi1 lambda2) (cos.f64 (/.f64 (+.f64 lambda1 phi2) 2))) (*.f64 (-.f64 phi1 lambda2) (cos.f64 (/.f64 (+.f64 lambda1 phi2) 2)))) (*.f64 (-.f64 lambda1 phi2) (-.f64 lambda1 phi2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 phi1 lambda2) (cos.f64 (*.f64 (+.f64 lambda1 phi2) 1/2))) (-.f64 lambda1 phi2)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 phi2 lambda2) (cos.f64 (/.f64 (+.f64 phi1 lambda1) 2))) (*.f64 (-.f64 phi2 lambda2) (cos.f64 (/.f64 (+.f64 phi1 lambda1) 2)))) (*.f64 (-.f64 phi1 lambda1) (-.f64 phi1 lambda1)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 phi2 lambda2) (cos.f64 (*.f64 (+.f64 phi1 lambda1) 1/2))) (-.f64 phi1 lambda1)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 phi1) (cos.f64 (/.f64 (+.f64 lambda2 phi2) 2))) (*.f64 (-.f64 lambda1 phi1) (cos.f64 (/.f64 (+.f64 lambda2 phi2) 2)))) (*.f64 (-.f64 lambda2 phi2) (-.f64 lambda2 phi2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 phi1) (cos.f64 (*.f64 (+.f64 lambda2 phi2) 1/2))) (-.f64 lambda2 phi2)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 phi2) (cos.f64 (/.f64 (+.f64 phi1 lambda2) 2))) (*.f64 (-.f64 lambda1 phi2) (cos.f64 (/.f64 (+.f64 phi1 lambda2) 2)))) (*.f64 (-.f64 phi1 lambda2) (-.f64 phi1 lambda2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 phi2) (cos.f64 (*.f64 (+.f64 phi1 lambda2) 1/2))) (-.f64 phi1 lambda2)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi2 phi1) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi2 phi1) 2)))) (*.f64 (-.f64 phi2 phi1) (-.f64 phi2 phi1)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))"]],"symmetry":[[]],"time":90.373046875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))"]],"time":23.01416015625,"type":"simplify"},{"compiler":[[53,27]],"time":0.513916015625,"type":"eval"},{"alts":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","next",3.709165826020691]],"compiler":[[21,14],[21,14]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[3.709165826020691],"time":1.01904296875,"type":"prune"},{"compiler":[[71,29]],"locations":[["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))",0.00390625,true],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))",0.0703125,true],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))",0.109375,true],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))",2.241612873041646,true]],"time":17.0859375,"type":"localize"},{"count":[[4,180]],"series":[["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi2","-inf",0.304931640625],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi2","inf",0.342041015625],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi2","0",1.02392578125],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi1","-inf",0.285888671875],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi1","inf",0.333984375],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","phi1","0",0.948974609375],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda2","-inf",0.402099609375],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda2","inf",0.4189453125],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda2","0",0.68603515625],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda1","-inf",0.4150390625],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda1","inf",0.43798828125],["(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))","lambda1","0",0.69189453125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi2","-inf",2.0439453125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi2","inf",0.6591796875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi2","0",2.89794921875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi1","-inf",0.608154296875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi1","inf",0.708984375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","phi1","0",2.677001953125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda2","-inf",0.77001953125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda2","inf",0.81298828125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda2","0",1.52490234375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda1","-inf",0.769775390625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda1","inf",0.7890625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","lambda1","0",1.422119140625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","R","-inf",0.35107421875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","R","inf",1.034912109375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","R","0",1.5361328125],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi2","-inf",0.2919921875],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi2","inf",0.2900390625],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi2","0",0.35302734375],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi1","-inf",0.2939453125],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi1","inf",0.327880859375],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","phi1","0",0.3759765625],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda2","-inf",0.26708984375],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda2","inf",0.52392578125],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda2","0",0.416015625],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda1","-inf",0.39794921875],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda1","inf",0.369873046875],["(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","lambda1","0",0.614013671875],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi2","-inf",0.2138671875],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi2","inf",0.18603515625],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi2","0",0.416015625],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi1","-inf",0.22314453125],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi1","inf",0.2001953125],["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","phi1","0",0.50390625]],"time":32.23388671875,"type":"series"},{"count":[[4,121]],"inputs":[["(cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))","(*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 0) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (*.f64 0 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (cos.f64 (*.f64 1/2 phi1))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 2)) (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 lambda1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (*.f64 1 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) lambda1)) (*.f64 1 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) lambda1) (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (neg.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 0) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 lambda1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 1) (*.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) lambda1) 1) (*.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (neg.f64 lambda2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 lambda1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (*.f64 0 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (*.f64 lambda1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (neg.f64 lambda2)) (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 2)) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 lambda1 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda2 lambda1) (neg.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 2)) (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 lambda1 lambda2) (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (cbrt.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (-.f64 lambda2 lambda1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) lambda1 (*.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (neg.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 lambda1 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 0) (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) R)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2)) R))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 2)) (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 0) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (*.f64 0 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) (*.f64 -1 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) -1) (*.f64 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 0) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2)) (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi2 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (-.f64 phi2 phi1) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (-.f64 phi1 phi2) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))))))))"]],"rules":[["egg-rr",35],["egg-rr",25],["egg-rr",39],["egg-rr",22]],"time":37.2470703125,"type":"rewrite"},{"count":[[301,327]],"inputs":[["(cos.f64 (*.f64 1/2 phi2))","(+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 R (*.f64 (pow.f64 lambda1 2) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2))))))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 R (*.f64 (pow.f64 lambda1 2) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 (pow.f64 lambda1 3) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)))))))))))","(*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) R) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 lambda2 R)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) R) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2))) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) lambda1)) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2))) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) R) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) R) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) phi1)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) phi1)) (+.f64 (*.f64 phi1 R) (*.f64 1/2 (/.f64 (*.f64 R (*.f64 phi2 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)))) (pow.f64 phi1 2))))))","(*.f64 -1 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (*.f64 phi2 (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) phi2))))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)))) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) phi2)))))","(*.f64 -1 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)))))","(sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 3)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 2)))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) lambda2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))))","(sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (pow.f64 lambda2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 3) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (pow.f64 lambda2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) lambda1) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) lambda1) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (pow.f64 phi1 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (pow.f64 phi1 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","phi1","(+.f64 (*.f64 -1 phi2) phi1)","(+.f64 (*.f64 -1 phi2) (+.f64 phi1 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) phi1))))","(+.f64 (*.f64 -1 phi2) (+.f64 phi1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi2 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) (pow.f64 phi1 2))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) phi1)))))","(*.f64 -1 phi1)","(+.f64 (*.f64 -1 phi1) phi2)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi1)) (+.f64 (*.f64 -1 phi1) phi2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 phi2 (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 phi1) phi2)))","(sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (pow.f64 phi2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))) (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (pow.f64 phi2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))))))","phi2","(+.f64 (*.f64 -1 phi1) phi2)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)) phi2)) (+.f64 (*.f64 -1 phi1) phi2))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)) phi2)) (+.f64 (*.f64 -1 phi1) (+.f64 phi2 (*.f64 1/2 (/.f64 (*.f64 phi1 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) (pow.f64 phi2 2))))))","(*.f64 -1 phi2)","(+.f64 phi1 (*.f64 -1 phi2))","(+.f64 phi1 (+.f64 (*.f64 -1 phi2) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi2))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 phi2 2))) (+.f64 phi1 (+.f64 (*.f64 -1 phi2) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi2)))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (*.f64 1/2 phi2))","(+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 (*.f64 -1/2 phi1) (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) 1) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 -1/2 phi1) (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))))","(+.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) 1) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 -1/2 phi1) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 -1/2 phi2) (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (fma.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(fma.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (fma.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2)))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2))))","(cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (+.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) 1) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(+.f64 (fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (+.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) 1) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (*.f64 (*.f64 -1/2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(fma.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2)))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi2 phi1) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) R)","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(-.f64 (*.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) R) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 R (*.f64 (pow.f64 lambda1 2) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2))))))))","(-.f64 (fma.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) R (*.f64 (*.f64 1/2 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 R (*.f64 (*.f64 lambda1 lambda1) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2)))))) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 R (*.f64 (pow.f64 lambda1 2) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 (pow.f64 lambda1 3) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)))))))))))","(-.f64 (fma.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) R (*.f64 1/2 (+.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 R (*.f64 (*.f64 lambda1 lambda1) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2))))) (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -3)) (*.f64 (*.f64 lambda2 R) (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 3)) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2)))))))) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1))))","(*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(-.f64 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) R) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) lambda1) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 lambda2 R)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) R) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(+.f64 (*.f64 1/2 (+.f64 (/.f64 (*.f64 (/.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) R)) (*.f64 lambda1 lambda1)) (/.f64 (*.f64 (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) lambda1))) (-.f64 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(*.f64 (neg.f64 R) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(-.f64 (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) lambda1) (-.f64 (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) lambda1) (/.f64 (*.f64 (/.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) R)) (*.f64 lambda1 lambda1)))) (-.f64 (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(-.f64 (*.f64 R (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1)) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))))","(-.f64 (fma.f64 R (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2))))) (*.f64 (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1)) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(-.f64 (fma.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1)) (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -3)))) (fma.f64 R (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)))))) (*.f64 (*.f64 lambda2 (*.f64 (*.f64 R (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) lambda1)) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)))","(*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(-.f64 (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2))) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(-.f64 (fma.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (/.f64 (*.f64 (*.f64 R (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2))) 1/2) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 -1 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) lambda1)) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2))) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (/.f64 (*.f64 R lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 lambda2 lambda2)) (fma.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (/.f64 (*.f64 (*.f64 R (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2))) 1/2) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (neg.f64 (*.f64 lambda2 R)) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(-.f64 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) R) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) lambda2) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) R) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (/.f64 (*.f64 R lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 lambda2 lambda2)) (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (/.f64 R (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) lambda2))) (-.f64 (*.f64 R (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (*.f64 lambda2 R) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (+.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (*.f64 (*.f64 phi1 phi1) R))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))) 1/6) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2)) (fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (+.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (*.f64 (*.f64 phi1 phi1) R)))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(-.f64 (*.f64 phi1 R) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) phi1)) (*.f64 phi1 R)))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 R (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2)))) phi1) (*.f64 phi1 R)) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) phi1)) (+.f64 (*.f64 phi1 R) (*.f64 1/2 (/.f64 (*.f64 R (*.f64 phi2 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)))) (pow.f64 phi1 2))))))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 R (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2)))) phi1) (fma.f64 phi1 R (*.f64 1/2 (/.f64 (*.f64 (*.f64 R phi2) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2)))) (*.f64 phi1 phi1))))) (*.f64 R phi2))","(*.f64 -1 (*.f64 phi1 R))","(neg.f64 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(*.f64 R (-.f64 phi2 phi1))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (*.f64 R (-.f64 phi2 phi1)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (*.f64 phi2 (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(+.f64 (*.f64 R (-.f64 phi2 phi1)) (*.f64 -1/2 (+.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 (*.f64 R phi2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1) phi1) (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 R (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 R phi2)) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 R phi2)) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 R phi2)) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (*.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2) R) (*.f64 (pow.f64 phi2 3) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))) 1/6) (*.f64 -1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))))))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(*.f64 R (-.f64 phi2 phi1))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) phi2))))","(+.f64 (*.f64 R (-.f64 phi2 phi1)) (/.f64 (*.f64 1/2 (*.f64 R (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1))))) phi2))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)))) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) phi2)))))","(+.f64 (*.f64 R (-.f64 phi2 phi1)) (*.f64 1/2 (+.f64 (/.f64 (*.f64 phi1 (*.f64 R (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1))))) (*.f64 phi2 phi2)) (/.f64 (*.f64 R (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1)))) phi2))))","(*.f64 -1 (*.f64 R phi2))","(neg.f64 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(-.f64 (*.f64 phi1 R) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2))))","(-.f64 (fma.f64 phi1 R (*.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2))) (*.f64 R phi2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (*.f64 phi1 R) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2) phi2) (-.f64 (fma.f64 phi1 R (*.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2))) (*.f64 R phi2)))","(sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))","(hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(-.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 2))))))","(+.f64 (-.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (*.f64 (*.f64 1/2 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 (*.f64 lambda1 lambda1) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2)))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 3)))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))) 2)) (pow.f64 lambda1 2)))))))","(+.f64 (-.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))) (*.f64 1/2 (+.f64 (*.f64 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -3)) lambda2) (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 3)) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2)))) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2) (*.f64 (*.f64 lambda1 lambda1) (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) -1/2)) (*.f64 lambda2 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2))) 2)))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (/.f64 (*.f64 1/2 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)) lambda2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(+.f64 (*.f64 1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (/.f64 (*.f64 (/.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 lambda1 lambda1)))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)))","(*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(*.f64 (neg.f64 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 (neg.f64 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))))","(fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) -1/2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))))","(fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (fma.f64 -1/2 (/.f64 (*.f64 (/.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2))) (*.f64 lambda1 lambda1)) (-.f64 (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2) (pow.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) -1/2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))","(hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(-.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (pow.f64 lambda2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))))","(+.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 lambda2 lambda2))) (neg.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 (pow.f64 lambda2 3) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (pow.f64 lambda2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(+.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (fma.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -3)))) (*.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) -1/2)) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)) 2)) (*.f64 lambda2 lambda2))) (neg.f64 (*.f64 lambda2 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) lambda1)))))))","(*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)))","(fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 (neg.f64 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 (neg.f64 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2)) lambda1) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (fma.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) lambda1)) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))","(*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))","(*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) -1/2) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) lambda1) (*.f64 (pow.f64 lambda2 2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))))","(+.f64 (+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (/.f64 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) -1/2) (*.f64 lambda2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (pow.f64 (hypot.f64 (-.f64 phi1 phi2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) 2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 2)) lambda1)) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))","(sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))","(sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi1) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","(+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (pow.f64 phi1 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (+.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi1) (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (*.f64 phi1 phi1))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) phi1) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (pow.f64 phi1 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))) 1/6) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2)) (+.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (+.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi1) (*.f64 (-.f64 (+.f64 1 (*.f64 (pow.f64 (-.f64 lambda1 lambda2) 2) (+.f64 (*.f64 1/4 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (*.f64 -1/4 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2) (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))))) 2)) (*.f64 phi1 phi1)))))))","phi1","(+.f64 (*.f64 -1 phi2) phi1)","(-.f64 phi1 phi2)","(+.f64 (*.f64 -1 phi2) (+.f64 phi1 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) phi1))))","(+.f64 (-.f64 phi1 phi2) (/.f64 (*.f64 1/2 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2)))) phi1))","(+.f64 (*.f64 -1 phi2) (+.f64 phi1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi2 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2))) (pow.f64 phi1 2))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) phi1)))))","(+.f64 (-.f64 phi1 phi2) (*.f64 1/2 (+.f64 (/.f64 (*.f64 phi2 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2)))) (*.f64 phi1 phi1)) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi2 phi2) (*.f64 phi2 phi2))) phi1))))","(*.f64 -1 phi1)","(neg.f64 phi1)","(+.f64 (*.f64 -1 phi1) phi2)","(-.f64 phi2 phi1)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi1)) (+.f64 (*.f64 -1 phi1) phi2))","(fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) phi1) (-.f64 phi2 phi1))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 (*.f64 -1 phi1)))) 2) (*.f64 phi2 (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 phi1 2))) (+.f64 (*.f64 -1 phi1) phi2)))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) phi1) (/.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (*.f64 phi2 (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1) phi1))) (-.f64 phi2 phi1))","(sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))","(sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi2) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (pow.f64 phi2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))))))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi2) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))) (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (*.f64 phi2 phi2) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) phi2) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))) (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (pow.f64 phi2 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))))))","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) phi2) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) (*.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2) (pow.f64 phi2 3)) (+.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))) 1/6) (*.f64 -1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))))))))) (+.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 1/2 (-.f64 (*.f64 -2 phi1) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2)) 2)) (*.f64 (*.f64 phi2 phi2) (pow.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) -1/2))))))","phi2","(+.f64 (*.f64 -1 phi1) phi2)","(-.f64 phi2 phi1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)) phi2)) (+.f64 (*.f64 -1 phi1) phi2))","(fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1))) phi2) (-.f64 phi2 phi1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2)) phi2)) (+.f64 (*.f64 -1 phi1) (+.f64 phi2 (*.f64 1/2 (/.f64 (*.f64 phi1 (-.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (pow.f64 (*.f64 -1 phi1) 2))) (pow.f64 phi2 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1))) phi2) (-.f64 phi2 phi1)) (*.f64 1/2 (/.f64 (*.f64 phi1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2) (-.f64 (*.f64 phi1 phi1) (*.f64 phi1 phi1)))) (*.f64 phi2 phi2))))","(*.f64 -1 phi2)","(neg.f64 phi2)","(+.f64 phi1 (*.f64 -1 phi2))","(-.f64 phi1 phi2)","(+.f64 phi1 (+.f64 (*.f64 -1 phi2) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi2))))","(+.f64 (-.f64 phi1 phi2) (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 phi2 2))) (+.f64 phi1 (+.f64 (*.f64 -1 phi2) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 (*.f64 -1 phi2)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) phi2)))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 phi1 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2) phi2) (+.f64 (-.f64 phi1 phi2) (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) phi2)))"]],"time":753.032958984375,"type":"simplify"},{"compiler":[[15955,9571]],"time":149.338134765625,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))","fresh",27.51757261305107],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","next",0.1191088011575378],["(*.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","fresh",27.50512008291192],["(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","fresh",43.19867979214641],["(pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) 3)","fresh",4.345284790627587],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 3)) (-.f64 phi1 phi2)))","fresh",3.787660894399785],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (pow.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 3) 1/3)) (-.f64 phi1 phi2)))","fresh",21.580812922132417]],"compiler":[[27,18],[34,25],[27,18],[64,43],[24,17],[24,17],[25,18],[27,18],[34,25],[27,18],[64,43],[24,17],[24,17],[25,18]],"count":[[328,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[327,7],"picked":[1,0]}],"min-error":[0.05660880115753779],"time":136.06494140625,"type":"prune"},{"compiler":[[155,104]],"locations":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))",0.078125,true],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))",0.0859375,true],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))",0.1171875,true],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))",0.1875,true]],"time":45.283935546875,"type":"localize"},{"count":[[4,140]],"series":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi2","-inf",0.612060546875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi2","inf",0.712890625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi2","0",0.65380859375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi1","-inf",4.096923828125],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi1","inf",2.43115234375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","phi1","0",0.616943359375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda2","-inf",1.156005859375],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda2","inf",1.201904296875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda2","0",2.31201171875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda1","-inf",1.19091796875],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda1","inf",1.972900390625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","lambda1","0",1.968994140625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","R","-inf",0.416015625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","R","inf",0.47900390625],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","R","0",2.282958984375],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi2","-inf",0.155029296875],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi2","inf",0.156982421875],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi2","0",0.31298828125],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi1","-inf",0.156982421875],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi1","inf",0.178955078125],["(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","phi1","0",0.318115234375],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi2","-inf",0.53515625],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi2","inf",0.696044921875],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi2","0",0.26904296875],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi1","-inf",0.531005859375],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi1","inf",0.716064453125],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","phi1","0",0.26806640625],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda2","-inf",0.333984375],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda2","inf",0.337158203125],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda2","0",0.828857421875],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda1","-inf",0.481201171875],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda1","inf",0.386962890625],["(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","lambda1","0",1.045166015625],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi2","-inf",0.303955078125],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi2","inf",0.60400390625],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi2","0",0.469970703125],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi1","-inf",0.333984375],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi1","inf",0.64990234375],["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","phi1","0",0.588134765625]],"time":33.89501953125,"type":"series"},{"count":[[4,203]],"inputs":[["(*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 0) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (*.f64 0 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) 1/2) (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) 1/2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) -1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 2) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (sqrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 -1) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi1 phi2) (+.f64 phi1 phi2))) 1/2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2)) (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (pow.f64 (cbrt.f64 (cbrt.f64 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) 2) (*.f64 2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2) (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2))) (*.f64 1 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))) (*.f64 1 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 0) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)) (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)) 1) (*.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 1) (*.f64 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 1) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1) (*.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 0 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2))) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 lambda1 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)) (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 lambda1 lambda2) (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cbrt.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda2 lambda1) (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 lambda1 lambda2) (fma.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) 2 (neg.f64 (*.f64 2 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (-.f64 lambda1 lambda2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) 2 (neg.f64 (*.f64 2 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (-.f64 lambda1 lambda2)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 0) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 0 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 phi2)) (cos.f64 (*.f64 1/2 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 2)) (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (cbrt.f64 (cos.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cbrt.f64 (cos.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 phi2))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2)) (cos.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) -1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 2)) (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (pow.f64 (cbrt.f64 (cbrt.f64 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (cbrt.f64 1/2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 0) (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) R)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 2)) (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)) 2)) R))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 phi1 phi2))) 3))))))"]],"rules":[["egg-rr",25],["egg-rr",59],["egg-rr",49],["egg-rr",70]],"time":51.81298828125,"type":"rewrite"},{"count":[[343,342]],"inputs":[["(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(cos.f64 (*.f64 1/2 phi2))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2)))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 phi1 6) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2)))))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))","(+.f64 (*.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 -1/46080 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 lambda2 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))))))","(*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)) lambda1)))) (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) (*.f64 R phi2)) (pow.f64 phi1 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R))))","(*.f64 -1 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 phi2 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2))))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R)) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2)))))","(*.f64 -1 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (fma.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (fma.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2))) (fma.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(fma.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2) (*.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2) (fma.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(fma.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(cos.f64 (*.f64 1/2 phi2))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2)))","(fma.f64 -1/8 (*.f64 (*.f64 phi1 phi1) (cos.f64 (*.f64 1/2 phi2))) (cos.f64 (*.f64 1/2 phi2)))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2))))","(fma.f64 -1/8 (*.f64 (*.f64 phi1 phi1) (cos.f64 (*.f64 1/2 phi2))) (fma.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2))) (cos.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 phi1 6) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2)))) (cos.f64 (*.f64 1/2 phi2)))))","(fma.f64 -1/8 (*.f64 (*.f64 phi1 phi1) (cos.f64 (*.f64 1/2 phi2))) (fma.f64 -1/46080 (*.f64 (pow.f64 phi1 6) (cos.f64 (*.f64 1/2 phi2))) (fma.f64 1/384 (*.f64 (pow.f64 phi1 4) (cos.f64 (*.f64 1/2 phi2))) (cos.f64 (*.f64 1/2 phi2)))))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2)))","(+.f64 (*.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(fma.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4)) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2))))","(+.f64 (*.f64 -1/46080 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(fma.f64 -1/46080 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 6)) (fma.f64 1/384 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 4)) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (*.f64 lambda1 lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (*.f64 lambda1 lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (neg.f64 3)))) (+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))","(*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)) R) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) (fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 lambda2 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))))))","(fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)) R) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) (+.f64 (fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (/.f64 (*.f64 1/2 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)) R))) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 lambda1 lambda1)))))","(*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))","(neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 lambda1 lambda1))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)) lambda1)))) (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R (*.f64 1/2 (/.f64 (*.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2)) lambda1)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (/.f64 (*.f64 1/2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) R)) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (*.f64 1/2 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (*.f64 lambda2 lambda2) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (*.f64 lambda2 lambda2) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (*.f64 (*.f64 (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (*.f64 phi1 phi1) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1/8 1/24)) (/.f64 (*.f64 1/2 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)))) (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (*.f64 (*.f64 (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (*.f64 phi1 phi1) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R)))","(+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) R) phi1) (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) (*.f64 R phi2)) (pow.f64 phi1 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R))))","(+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) (*.f64 R phi2)) (*.f64 phi1 phi1)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) R) phi1) (*.f64 phi1 R))))","(*.f64 -1 (*.f64 phi1 R))","(neg.f64 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(fma.f64 R phi2 (neg.f64 (*.f64 phi1 R)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (fma.f64 R phi2 (neg.f64 (*.f64 phi1 R))) (/.f64 (*.f64 -1/2 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2))) phi1))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 phi2 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(+.f64 (fma.f64 R phi2 (neg.f64 (*.f64 phi1 R))) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 R (*.f64 phi2 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2))) (*.f64 phi1 phi1)) (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi1))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))) R) (*.f64 (pow.f64 phi2 3) (-.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1/24 1/8)) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))))))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(fma.f64 R phi2 (neg.f64 (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2))))","(+.f64 (neg.f64 (*.f64 phi1 R)) (fma.f64 R phi2 (/.f64 (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R)) phi2)))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R)) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2)))))","(+.f64 (neg.f64 (*.f64 phi1 R)) (fma.f64 R phi2 (*.f64 1/2 (+.f64 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R)) (*.f64 phi2 phi2)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R) phi2)))))","(*.f64 -1 (*.f64 R phi2))","(neg.f64 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R)))","(fma.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi2) (+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi2) (+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 phi1 R (/.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)))) (*.f64 phi2 phi2)))))"]],"time":469.323974609375,"type":"simplify"},{"compiler":[[18819,12587]],"time":194.38916015625,"type":"eval"},{"alts":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",0.2054863769897462],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 2)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.770211334125252],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","next",0.11003876953688403],["(*.f64 R (hypot.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2))) (-.f64 phi1 phi2)))","fresh",3.744985845557575],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (/.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.6682787657461575],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (cbrt.f64 (cos.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",0.12773609264898864],["(*.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","fresh",27.50512008291192],["(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","fresh",43.19867979214641],["(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","fresh",43.49010633169629],["(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))","fresh",27.51757261305107],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (-.f64 phi1 phi2)))","fresh",0.1230150511575378]],"compiler":[[37,28],[60,43],[34,25],[32,22],[49,38],[43,33],[27,18],[64,43],[52,40],[27,18],[43,33],[37,28],[60,43],[34,25],[32,22],[49,38],[43,33],[27,18],[64,43],[52,40],[27,18],[43,33]],"count":[[349,11]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[342,8],"picked":[1,0]}],"min-error":[0.0234375],"time":176.951904296875,"type":"prune"},{"compiler":[[156,105]],"locations":[["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))",0.078125,true],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))",0.08220466452874396,true],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))",0.1171875,true],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))",0.1875,true]],"time":46.9521484375,"type":"localize"},{"count":[[4,140]],"series":[["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda2","-inf",0.60400390625],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda2","inf",0.498046875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda2","0",0.737060546875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda1","-inf",0.616943359375],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda1","inf",0.885009765625],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","lambda1","0",0.701171875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi2","-inf",0.2939453125],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi2","inf",0.369140625],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi2","0",0.6279296875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi1","-inf",0.346923828125],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi1","inf",0.547119140625],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","phi1","0",0.615966796875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","R","-inf",0.339111328125],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","R","inf",0.35498046875],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","R","0",0.7119140625],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi2","-inf",0.18408203125],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi2","inf",0.200927734375],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi2","0",0.18994140625],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi1","-inf",0.203857421875],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi1","inf",0.18505859375],["(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","phi1","0",0.205078125],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda2","-inf",0.287109375],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda2","inf",0.360107421875],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda2","0",0.296875],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda1","-inf",0.34716796875],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda1","inf",0.288818359375],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","lambda1","0",0.30419921875],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi2","-inf",0.46484375],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi2","inf",0.4921875],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi2","0",0.22900390625],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi1","-inf",0.47119140625],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi1","inf",0.413818359375],["(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","phi1","0",0.2490234375],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi1","-inf",0.178955078125],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi1","inf",0.30810546875],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi1","0",0.218017578125],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi2","-inf",0.16015625],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi2","inf",0.18798828125],["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","phi2","0",0.246826171875]],"time":16.011962890625,"type":"series"},{"count":[[4,222]],"inputs":[["(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 0) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 -1) (*.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2) (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 0 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (sqrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 2) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 -1) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (*.f64 1/2 (+.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2)) (sin.f64 (*.f64 (*.f64 1/2 (-.f64 (-.f64 phi2 phi1) (+.f64 phi1 phi2))) 1/2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) -1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (*.f64 0 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (+.f64 0 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (+.f64 0 (*.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 0))) (-.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 4))) (pow.f64 (cbrt.f64 (cbrt.f64 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 2) (*.f64 2 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2) (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1/2 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (sin.f64 (*.f64 1/2 phi1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 0) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2))) (*.f64 1 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))) (*.f64 1 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (*.f64 1 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1)) (*.f64 1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)) (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (*.f64 0 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)) 1) (*.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (-.f64 lambda1 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 1) (*.f64 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1) (*.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1) 1) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (-.f64 lambda1 lambda2))) (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 2)) (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cbrt.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 lambda1 lambda2) (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 lambda1 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lambda1 lambda2) 2)) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda2 lambda1) (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 lambda2 lambda1) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (-.f64 lambda1 lambda2) (neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 lambda1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 (neg.f64 lambda2) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 lambda1 lambda2) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (neg.f64 (*.f64 (-.f64 lambda1 lambda2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) lambda1 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (neg.f64 lambda2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) 1/2)) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 0) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (*.f64 0 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) 2) (*.f64 2 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) 2) (*.f64 2 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (sqrt.f64 2)) (*.f64 2 (/.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (sqrt.f64 2)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) 2) (*.f64 2 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) -2) (*.f64 2 (-.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2)))) (cbrt.f64 4)) (*.f64 2 (*.f64 (-.f64 (cos.f64 (*.f64 1/2 (-.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (cbrt.f64 1/2)))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1))) (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi2))) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2)) (neg.f64 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi2))) (sin.f64 (*.f64 1/2 phi1)) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 1/2 phi2)) (neg.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 1/2 phi1)) (neg.f64 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cbrt.f64 (cos.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)) (cos.f64 (*.f64 1/2 phi2))) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 1/2 phi2)) (cos.f64 (*.f64 1/2 phi1)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 2) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) 1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 0) (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) (*.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) (*.f64 0 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) 2)) R))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) R)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 2)) (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (cbrt.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) (cbrt.f64 (pow.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))) 3))))))"]],"rules":[["egg-rr",25],["egg-rr",54],["egg-rr",49],["egg-rr",94]],"time":48.739990234375,"type":"rewrite"},{"count":[[362,359]],"inputs":[["(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(cos.f64 (*.f64 1/2 phi2))","(+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) (*.f64 R phi2)) (pow.f64 phi1 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R))))","(*.f64 -1 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 phi2 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2))))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R)) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2)))))","(*.f64 -1 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)) lambda1)))) (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(fma.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1))) (fma.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (fma.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (fma.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2))) (fma.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2) (*.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)))))))","(fma.f64 -1/2 (*.f64 phi1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2) (fma.f64 1/48 (*.f64 (pow.f64 phi1 3) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))) (*.f64 (*.f64 -1/8 (*.f64 phi1 phi1)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2))))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (+.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 phi2 2) (-.f64 lambda1 lambda2)))))))","(fma.f64 1/48 (*.f64 (pow.f64 phi2 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2) (fma.f64 -1/2 (*.f64 phi2 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (*.f64 phi2 phi2) (-.f64 lambda1 lambda2)))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (-.f64 lambda1 lambda2))","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)","(*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(fma.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(cos.f64 (*.f64 1/2 phi2))","(+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))))","(fma.f64 -1/8 (*.f64 (*.f64 phi1 phi1) (cos.f64 (*.f64 1/2 phi2))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 phi1 2) (cos.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))))","(fma.f64 -1/8 (*.f64 (*.f64 phi1 phi1) (cos.f64 (*.f64 1/2 phi2))) (fma.f64 1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))) (+.f64 (cos.f64 (*.f64 1/2 phi2)) (*.f64 -1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(cos.f64 (*.f64 1/2 phi1))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2)))))","(+.f64 (cos.f64 (*.f64 1/2 phi1)) (fma.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2))))","(+.f64 (*.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 -1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (pow.f64 phi2 2))))))","(fma.f64 1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1))) (+.f64 (cos.f64 (*.f64 1/2 phi1)) (fma.f64 -1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (*.f64 -1/8 (cos.f64 (*.f64 1/2 phi1))) (*.f64 phi2 phi2)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))","(fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R)","(*.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R)","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (*.f64 (*.f64 (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (*.f64 phi1 phi1) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (+.f64 (*.f64 1/8 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/24 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2))) (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) R) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (pow.f64 phi1 2) R)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi2)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (pow.f64 phi1 3) (*.f64 R (-.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1/8 1/24)) (/.f64 (*.f64 1/2 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)))) (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (+.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)) (*.f64 phi1 R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))))) (*.f64 (*.f64 (-.f64 (+.f64 1 (fma.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2) (*.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))) (+.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi2)))) 2)) (*.f64 (*.f64 phi1 phi1) R)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)))))))))","(*.f64 phi1 R)","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R)))","(+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) R) phi1) (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) (*.f64 R phi2)) (pow.f64 phi1 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi2 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi2) 2)) R) phi1)) (*.f64 phi1 R))))","(+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) (*.f64 R phi2)) (*.f64 phi1 phi1)) (fma.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi2) 2)) R) phi1) (*.f64 phi1 R))))","(*.f64 -1 (*.f64 phi1 R))","(neg.f64 (*.f64 phi1 R))","(+.f64 (*.f64 R phi2) (*.f64 -1 (*.f64 phi1 R)))","(fma.f64 R phi2 (neg.f64 (*.f64 phi1 R)))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1))))","(+.f64 (fma.f64 R phi2 (neg.f64 (*.f64 phi1 R))) (/.f64 (*.f64 -1/2 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2))) phi1))","(+.f64 (*.f64 R phi2) (+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 phi2 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi1 2))) (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi1)))))","(+.f64 (fma.f64 R phi2 (neg.f64 (*.f64 phi1 R))) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 R (*.f64 phi2 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2))) (*.f64 phi1 phi1)) (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi1))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R)","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 R (*.f64 (pow.f64 phi2 3) (-.f64 (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 1/8 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)))))) 2)) (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2)) (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)) (pow.f64 phi1 2))) R) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1 (*.f64 -1/4 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))) 2)) (*.f64 R (pow.f64 phi2 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))))))))))","(fma.f64 1/2 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (*.f64 R phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) (fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))) R) (*.f64 (pow.f64 phi2 3) (-.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2))) (+.f64 1/24 1/8)) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1))) (sqrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1)))))))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))) R (*.f64 1/2 (*.f64 (-.f64 (fma.f64 1/4 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (+.f64 1 (*.f64 -1/4 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2)))) (pow.f64 (*.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 -2 phi1)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))) 1/2) 2)) (*.f64 (*.f64 R (*.f64 phi2 phi2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (-.f64 lambda1 lambda2)) 2) (*.f64 phi1 phi1))))))))))","(*.f64 R phi2)","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (*.f64 R phi2))","(fma.f64 R phi2 (neg.f64 (*.f64 phi1 R)))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2))))","(+.f64 (neg.f64 (*.f64 phi1 R)) (fma.f64 R phi2 (/.f64 (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R)) phi2)))","(+.f64 (*.f64 -1 (*.f64 phi1 R)) (+.f64 (*.f64 R phi2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R)) (pow.f64 phi2 2))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 phi1 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) (pow.f64 (*.f64 -1 phi1) 2)) R) phi2)))))","(+.f64 (neg.f64 (*.f64 phi1 R)) (fma.f64 R phi2 (*.f64 1/2 (+.f64 (/.f64 (*.f64 phi1 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R)) (*.f64 phi2 phi2)) (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 phi1 phi1) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) (pow.f64 (neg.f64 phi1) 2)) R) phi2)))))","(*.f64 -1 (*.f64 R phi2))","(neg.f64 (*.f64 R phi2))","(+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (*.f64 phi1 R)))","(fma.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi2) (+.f64 (neg.f64 (*.f64 R phi2)) (*.f64 phi1 R)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2))) phi2)) (+.f64 (*.f64 -1 (*.f64 R phi2)) (+.f64 (*.f64 phi1 R) (*.f64 -1/2 (/.f64 (*.f64 phi1 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (pow.f64 phi2 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)) phi2) (+.f64 (neg.f64 (*.f64 R phi2)) (fma.f64 phi1 R (/.f64 (*.f64 -1/2 (*.f64 phi1 (*.f64 R (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) 2)))) (*.f64 phi2 phi2)))))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))","(*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2))))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (*.f64 lambda1 lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (pow.f64 lambda1 2))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 R (*.f64 lambda1 lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (*.f64 lambda2 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) 2)) (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 lambda1 3))))) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (neg.f64 3)))) (+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 R (sqrt.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))","(*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (/.f64 (*.f64 1/2 (*.f64 R (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)))) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 R (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 -1 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2))) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(fma.f64 1/2 (/.f64 (*.f64 lambda2 (*.f64 R (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)))) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 lambda1 lambda1))) (+.f64 (fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))) (/.f64 (*.f64 1/2 (*.f64 R (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) 2)))) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))))","(*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))","(neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R)) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) (pow.f64 lambda1 2)))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 lambda2 2) (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2)) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2)) R) (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 lambda2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R)) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 lambda1 lambda1))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) 2)) R) (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R)","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 lambda2 2) (*.f64 R (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2))) R) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (*.f64 (-.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) lambda1))) 2)) lambda1)))) (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2)) (pow.f64 (-.f64 phi1 phi2) 2)))))))))","(+.f64 (neg.f64 (*.f64 (*.f64 lambda2 (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 (*.f64 lambda2 lambda2) R) (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (fma.f64 (sqrt.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))) R (*.f64 1/2 (/.f64 (*.f64 (*.f64 (pow.f64 lambda2 3) (*.f64 R (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (*.f64 (-.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) (pow.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))) (*.f64 (pow.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) 2) lambda1))) 2)) lambda1)))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2))))) (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)))))))","(*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))","(*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))))","(fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (/.f64 (*.f64 1/2 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) R)) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (+.f64 (*.f64 -1 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(+.f64 (fma.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (neg.f64 (*.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)))) (*.f64 1/2 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (neg.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1)) 2)) (*.f64 R lambda1)) (*.f64 (*.f64 lambda2 lambda2) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))","(neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(+.f64 (*.f64 R (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) R) (*.f64 lambda2 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (-.f64 phi1 phi2) 2) (*.f64 (pow.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) 2) (pow.f64 lambda1 2))) (pow.f64 (*.f64 (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (pow.f64 lambda2 2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (*.f64 -1 (*.f64 lambda2 (*.f64 R (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))))))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) R) (*.f64 lambda2 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2) (pow.f64 (-.f64 phi1 phi2) 2)) (pow.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) 2)) (*.f64 R lambda1)) (*.f64 (*.f64 lambda2 lambda2) (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))))) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))))"]],"time":468.60693359375,"type":"simplify"},{"compiler":[[18719,12441]],"time":189.85400390625,"type":"eval"},{"alts":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",0.2054863769897462],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 2)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.770211334125252],["(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","fresh",43.49010633169629],["(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","fresh",43.19867979214641],["(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))","fresh",27.51757261305107],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (/.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.6682787657461575],["(*.f64 (*.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","fresh",27.50512008291192],["(*.f64 R (hypot.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2))) (-.f64 phi1 phi2)))","fresh",3.744985845557575],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","fresh",0.11232377930532605],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","next",0.1112963011575378]],"compiler":[[37,28],[60,43],[52,40],[64,43],[27,18],[49,38],[27,18],[32,22],[48,37],[43,33],[37,28],[60,43],[52,40],[64,43],[27,18],[49,38],[27,18],[32,22],[48,37],[43,33]],"count":[[370,10]],"kept":[{"done":[0,0],"fresh":[10,5],"new":[359,5],"picked":[1,0]}],"min-error":[0.015625],"time":199.406005859375,"type":"prune"},{"compiler":[[241,179]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))",0.2421875,true],["(pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)",0.25,true],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))",0.28125,true],["(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))",16.186235202812465,true]],"time":73.70703125,"type":"localize"},{"count":[[4,56]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi2","-inf",0.30810546875],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi2","inf",1.184814453125],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi2","0",0.64208984375],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi1","-inf",1.069091796875],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi1","inf",1.073974609375],["(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","phi1","0",0.4091796875],["(pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)","phi1","-inf",0.14404296875],["(pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)","phi1","inf",0.1669921875],["(pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)","phi1","0",0.22900390625],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi2","-inf",0.33203125],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi2","inf",0.929931640625],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi2","0",0.347900390625],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi1","-inf",0.339111328125],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi1","inf",1.02685546875],["(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","phi1","0",0.40283203125],["(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","phi1","-inf",1.130126953125],["(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","phi1","inf",1.35205078125],["(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","phi1","0",0.529052734375]],"time":11.919921875,"type":"series"},{"count":[[4,162]],"inputs":[["(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2))))","(pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 0) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (*.f64 0 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 0) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) (*.f64 0 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (sin.f64 (*.f64 1/2 phi2))) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))) (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2/3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 (*.f64 1/2 phi1) (*.f64 1/2 phi2))) (cos.f64 (+.f64 (*.f64 1/2 phi1) (*.f64 1/2 phi2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 (*.f64 1/2 phi2) (*.f64 1/2 phi1))) (cos.f64 (+.f64 (*.f64 1/2 phi2) (*.f64 1/2 phi1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 0) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (*.f64 0 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 -1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 (*.f64 1/2 phi1))) (cos.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 0) 2) (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1))) (neg.f64 (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 2/3 1)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1))) 1) (*.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 (*.f64 1/2 phi1))) (-.f64 -1 (cos.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 (*.f64 1/2 phi1))) (-.f64 1 (cos.f64 (*.f64 1/2 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 4))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 1 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (+.f64 2 3)) (pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 3)) (+.f64 1/4 (+.f64 (*.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sin.f64 (*.f64 1/2 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (sqrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (cbrt.f64 1/4) (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/2)) (neg.f64 (sqrt.f64 1/2)) (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/2 (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 1 (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 phi1 (+.f64 1/2 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 0) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) (*.f64 0 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/2 phi2)) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))) (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))) (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 2/3) (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) 4) (sin.f64 (*.f64 1/2 phi2))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 3) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2/3) (sin.f64 (*.f64 1/2 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi2)) 3) (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)))))))"]],"rules":[["egg-rr",28],["egg-rr",71],["egg-rr",36],["egg-rr",27]],"time":35.966064453125,"type":"rewrite"},{"count":[[218,196]],"inputs":[["(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/4 (pow.f64 phi1 2))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (*.f64 -1/48 (pow.f64 phi1 4)))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (+.f64 (*.f64 1/1440 (pow.f64 phi1 6)) (*.f64 -1/48 (pow.f64 phi1 4))))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (+.f64 (*.f64 1/1440 (pow.f64 phi1 6)) (+.f64 (*.f64 -1/48 (pow.f64 phi1 4)) (*.f64 -1/80640 (pow.f64 phi1 8)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))) (*.f64 1/3840 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 5)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 7))) (*.f64 1/3840 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 5))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(pow.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))","(*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))))","(*.f64 (*.f64 1/2 phi1) (sin.f64 (*.f64 1/2 phi2)))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (+.f64 (*.f64 1/2 phi1) (*.f64 -1/48 (pow.f64 phi1 3))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2))))))","(fma.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (+.f64 (*.f64 1/3840 (pow.f64 phi1 5)) (*.f64 -1/48 (pow.f64 phi1 3)))))","(+.f64 (*.f64 1/2 (*.f64 phi1 (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi1 7) (sin.f64 (*.f64 1/2 phi2)))) (+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi1 5) (sin.f64 (*.f64 1/2 phi2)))) (*.f64 -1/48 (*.f64 (pow.f64 phi1 3) (sin.f64 (*.f64 1/2 phi2)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (+.f64 (*.f64 1/2 phi1) (*.f64 -1/645120 (pow.f64 phi1 7)))) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (+.f64 (*.f64 1/3840 (pow.f64 phi1 5)) (*.f64 -1/48 (pow.f64 phi1 3)))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))","(*.f64 (*.f64 1/2 phi2) (sin.f64 (*.f64 1/2 phi1)))","(+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))","(*.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/48 (pow.f64 phi2 3)) (*.f64 1/2 phi2)))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1))))))","(fma.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/48 (pow.f64 phi2 3)) (*.f64 1/2 phi2))))","(+.f64 (*.f64 1/3840 (*.f64 (pow.f64 phi2 5) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 phi2 7) (sin.f64 (*.f64 1/2 phi1)))) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 phi2 3) (sin.f64 (*.f64 1/2 phi1)))) (*.f64 1/2 (*.f64 phi2 (sin.f64 (*.f64 1/2 phi1)))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 1/3840 (pow.f64 phi2 5)) (*.f64 -1/645120 (pow.f64 phi2 7)))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (+.f64 (*.f64 -1/48 (pow.f64 phi2 3)) (*.f64 1/2 phi2))))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))","(*.f64 1/4 (pow.f64 phi1 2))","(*.f64 1/4 (*.f64 phi1 phi1))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (*.f64 -1/48 (pow.f64 phi1 4)))","(fma.f64 (pow.f64 phi1 4) -1/48 (*.f64 1/4 (*.f64 phi1 phi1)))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (+.f64 (*.f64 1/1440 (pow.f64 phi1 6)) (*.f64 -1/48 (pow.f64 phi1 4))))","(fma.f64 1/4 (*.f64 phi1 phi1) (fma.f64 1/1440 (pow.f64 phi1 6) (*.f64 -1/48 (pow.f64 phi1 4))))","(+.f64 (*.f64 1/4 (pow.f64 phi1 2)) (+.f64 (*.f64 1/1440 (pow.f64 phi1 6)) (+.f64 (*.f64 -1/48 (pow.f64 phi1 4)) (*.f64 -1/80640 (pow.f64 phi1 8)))))","(fma.f64 (*.f64 phi1 phi1) 1/4 (fma.f64 (pow.f64 phi1 6) 1/1440 (fma.f64 -1/48 (pow.f64 phi1 4) (*.f64 -1/80640 (pow.f64 phi1 8)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2))","(*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) phi2))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) phi2) (*.f64 -1/48 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 3))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))) (*.f64 1/3840 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 5)))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) phi2) (fma.f64 -1/48 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 3)) (*.f64 1/3840 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 5)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) phi2)) (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 3))) (+.f64 (*.f64 -1/645120 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 7))) (*.f64 1/3840 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (pow.f64 phi2 5))))))","(fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) phi2) (fma.f64 -1/48 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 3)) (fma.f64 -1/645120 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 7)) (*.f64 1/3840 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (pow.f64 phi2 5))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) 1/3) (sin.f64 (*.f64 1/2 phi2)))","(*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))"]],"time":170.39306640625,"type":"simplify"},{"compiler":[[8517,6036]],"time":100.969970703125,"type":"eval"},{"alts":[["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",0.2054863769897462],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 2)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.770211334125252],["(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","fresh",43.49010633169629],["(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","fresh",43.19867979214641],["(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))","fresh",27.51757261305107],["(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (/.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","fresh",3.6682787657461575],["(*.f64 (*.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","fresh",27.50512008291192],["(*.f64 R (hypot.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2))) (-.f64 phi1 phi2)))","fresh",3.744985845557575],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","fresh",0.11232377930532605],["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","done",0.1112963011575378]],"compiler":[[37,28],[60,43],[52,40],[64,43],[27,18],[49,38],[27,18],[32,22],[48,37],[43,33]],"count":[[206,10]],"kept":[{"done":[0,0],"fresh":[9,9],"new":[196,0],"picked":[1,1]}],"min-error":[0.015625],"time":69.324951171875,"type":"prune"},{"accuracy":[0.11003876953688402],"baseline":[0.11003876953688403],"branch":[["R",0.11003876953688402,1],["lambda1",0.11003876953688403,1],["lambda2",0.11003876953688402,1],["phi1",0.11003876953688403,1],["phi2",0.11003876953688403,1],["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))",0.11003876953688402,1],["(sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2))))",0.11003876953688403,1],["(+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))",0.11003876953688403,1],["(-.f64 lambda1 lambda2)",0.11003876953688403,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[37,21],[35,20],[34,19],[8,6],[725,436]],"count":[[22,1]],"inputs":[["(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2))))","(*.f64 (*.f64 (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))) 2)) (cbrt.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/2 phi1))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2)) (sin.f64 (*.f64 1/2 phi2)))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)))) 3) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1))))) 2) 2)) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) 2)) (-.f64 lambda1 lambda2))) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (/.f64 (/.f64 (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (cos.f64 (*.f64 1/2 (-.f64 phi2 phi1)))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (cbrt.f64 (cos.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 phi1)) 2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","(fma.f64 R (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) lambda1) (neg.f64 (*.f64 lambda2 (*.f64 R (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1)))))))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (cbrt.f64 (sin.f64 (*.f64 1/2 phi1)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/2 phi1)) 2))))) (-.f64 phi1 phi2)))","(*.f64 (cbrt.f64 R) (*.f64 (cbrt.f64 (*.f64 R R)) (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2))))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (-.f64 (*.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2))) (*.f64 (sin.f64 (*.f64 1/2 phi1)) (sin.f64 (*.f64 1/2 phi2))))) (-.f64 phi1 phi2)))","(*.f64 (*.f64 (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)) (cbrt.f64 R)) (cbrt.f64 (*.f64 R R)))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2))) R (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -2 phi2) (*.f64 (sin.f64 (*.f64 1/2 phi2)) (*.f64 (cos.f64 (*.f64 1/2 phi2)) (pow.f64 (-.f64 lambda1 lambda2) 2)))) (*.f64 phi1 R)) (pow.f64 (+.f64 (*.f64 phi2 phi2) (pow.f64 (*.f64 (cos.f64 (*.f64 1/2 phi2)) (-.f64 lambda1 lambda2)) 2)) -1/2))))","(pow.f64 (cbrt.f64 (*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))) 3)","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) 3)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (pow.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2)) 3) 1/3)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (*.f64 (+.f64 phi1 phi2) 1/2))) (-.f64 phi1 phi2)))","(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))"]],"link":["."],"name":["Equirectangular approximation to distance on a great circle"],"oracle":[60.18316138500657],"outputs":[["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))"]],"time":72.68701171875,"times":[["R",7.0419921875],["lambda1",6.990966796875],["lambda2",6.9208984375],["phi1",7.048095703125],["phi2",7.094970703125],["(*.f64 R (sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))))",4.548095703125],["(sqrt.f64 (+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2))))",5.68115234375],["(+.f64 (*.f64 (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2))) (*.f64 (-.f64 lambda1 lambda2) (cos.f64 (/.f64 (+.f64 phi1 phi2) 2)))) (*.f64 (-.f64 phi1 phi2) (-.f64 phi1 phi2)))",5.841064453125],["(-.f64 lambda1 lambda2)",7.298095703125]],"type":"regimes"},{"compiler":[[34,25]],"inputs":[["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 R (hypot.f64 (*.f64 (fma.f64 (cos.f64 (*.f64 1/2 phi1)) (cos.f64 (*.f64 1/2 phi2)) (neg.f64 (*.f64 (sin.f64 (*.f64 1/2 phi2)) (sin.f64 (*.f64 1/2 phi1))))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))","(*.f64 R (hypot.f64 (*.f64 (cos.f64 (*.f64 1/2 (+.f64 phi1 phi2))) (-.f64 lambda1 lambda2)) (-.f64 phi1 phi2)))"]],"stop":[["fuel",1]],"time":24.85888671875,"type":"simplify"},{"time":0.025146484375,"type":"soundness"},{"compiler":[[34,25]],"remove-preprocessing":[[]],"time":16.4580078125,"type":"end"}]