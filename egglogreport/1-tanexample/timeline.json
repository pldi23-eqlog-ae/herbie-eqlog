[{"compiler":[[72,53]],"method":["search"],"sampling":[[12,0.0002892152370389616,0.0020991428494824523,0.9976116419134786],[11,0.00027988571326274645,0.0021084723732586676,0.9976116419134786],[10,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[9,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[8,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[7,0.00022390857060545564,0.0021644495159159585,0.9976116419134785],[6,0.00014927238039573454,0.0022390857061256797,0.9976116419134786],[5,0.00014927238039573454,0.0022390857061256797,0.9976116419134786],[4,0.0,0.002388358086521414,0.9976116419134786],[3,0.0,0.002388358086521414,0.9976116419134786],[2,0.0,0.002388358086521414,0.9976116419134786],[1,0.0,0.002388358086521414,0.9976116419134786],[0,0.0,0.002388358086521414,0.9976116419134786]],"time":3057.321044921875,"type":"analyze"},{"outcomes":[["body",512,"valid",299.10205078125,1381],["body",1024,"valid",1746.416015625,4803],["body",2048,"valid",188.426025390625,224],["body",256,"valid",200.27197265625,1848]],"time":2443.205078125,"type":"sample"},{"compiler":[[13,9]],"inputs":[["0","1","2","3"],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(+.f64 y (-.f64 (tan.f64 (+.f64 x z)) (tan.f64 a)))","(+.f64 z (-.f64 (tan.f64 (+.f64 y x)) (tan.f64 a)))","(+.f64 a (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 x)))","(+.f64 x (-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a)))","(+.f64 x (-.f64 (tan.f64 (+.f64 a z)) (tan.f64 y)))","(+.f64 x (-.f64 (tan.f64 (+.f64 y a)) (tan.f64 z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))","(+.f64 y (-.f64 (tan.f64 (+.f64 x z)) (tan.f64 a)))","(-.f64 (+.f64 y (tan.f64 (+.f64 x z))) (tan.f64 a))","(+.f64 z (-.f64 (tan.f64 (+.f64 y x)) (tan.f64 a)))","(-.f64 (+.f64 z (tan.f64 (+.f64 y x))) (tan.f64 a))","(+.f64 a (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 x)))","(-.f64 (+.f64 a (tan.f64 (+.f64 y z))) (tan.f64 x))","(+.f64 x (-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a)))","(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))","(+.f64 x (-.f64 (tan.f64 (+.f64 a z)) (tan.f64 y)))","(-.f64 (+.f64 x (tan.f64 (+.f64 a z))) (tan.f64 y))","(+.f64 x (-.f64 (tan.f64 (+.f64 y a)) (tan.f64 z)))","(-.f64 (+.f64 x (tan.f64 (+.f64 y a))) (tan.f64 z))"]],"symmetry":[[]],"time":73.117919921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))"]],"time":20.802001953125,"type":"simplify"},{"compiler":[[22,11]],"time":0.318115234375,"type":"eval"},{"alts":[["(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))","fresh",11.93154702388132],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","next",11.930621482606362]],"compiler":[[13,9],[13,9],[13,9],[13,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[11.903334553485475],"time":1.326904296875,"type":"prune"},{"compiler":[[33,9]],"locations":[["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",0.13444009999974788,true],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))",0.21366387386845886,true],["(tan.f64 a)",0.22169877930532603,true],["(tan.f64 (+.f64 y z))",2.535233094838779,true]],"time":7.798095703125,"type":"localize"},{"count":[[4,120]],"series":[["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","a","-inf",0.196044921875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","a","inf",0.19580078125],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","a","0",0.2119140625],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","z","-inf",0.212158203125],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","z","inf",0.213134765625],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","z","0",0.34716796875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","y","-inf",0.213134765625],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","y","inf",0.216796875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))","y","0",0.3330078125],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","a","-inf",0.242919921875],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","a","inf",1.501953125],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","a","0",0.31201171875],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","z","-inf",0.247802734375],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","z","inf",0.662109375],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","z","0",0.416015625],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","y","-inf",0.256103515625],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","y","inf",0.755859375],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","y","0",0.4189453125],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","x","-inf",0.2080078125],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","x","inf",0.301025390625],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","x","0",1.01904296875],["(tan.f64 a)","a","-inf",0.489013671875],["(tan.f64 a)","a","inf",0.3818359375],["(tan.f64 a)","a","0",0.674072265625],["(tan.f64 (+.f64 y z))","z","-inf",0.4599609375],["(tan.f64 (+.f64 y z))","z","inf",0.43701171875],["(tan.f64 (+.f64 y z))","z","0",1.01513671875],["(tan.f64 (+.f64 y z))","y","-inf",0.475830078125],["(tan.f64 (+.f64 y z))","y","inf",1.070068359375],["(tan.f64 (+.f64 y z))","y","0",1.115966796875]],"time":15.1298828125,"type":"series"},{"count":[[4,216]],"inputs":[["(tan.f64 (+.f64 y z))","(tan.f64 a)","(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (*.f64 (tan.f64 (+.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 (+.f64 y z)) 0) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (*.f64 0 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (+.f64 y z))) (/.f64 1 (neg.f64 (cos.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))) (/.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cbrt.f64 (pow.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (tan.f64 y) (tan.f64 z))) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 2)) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 (+.f64 y z))) 1) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 (+.f64 y z)) 2)) (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cos.f64 (+.f64 y z)))) (/.f64 (sin.f64 (+.f64 y z)) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (+.f64 y z))) (neg.f64 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (+.f64 y z)) 1) (cos.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 1) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (sin.f64 (+.f64 y z)))) (cbrt.f64 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (+.f64 (tan.f64 y) (tan.f64 z)))) (cbrt.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2))) (cbrt.f64 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2))) (cbrt.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (tan.f64 (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) 1) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 (+.f64 y z))) 1) (neg.f64 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cbrt.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))) (cbrt.f64 (pow.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 1) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (+.f64 y z)) 1) (cos.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 (+.f64 y z)) (cbrt.f64 (cos.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 (+.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 (+.f64 y z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 a) (*.f64 (tan.f64 a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 a) 0) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 a) (*.f64 0 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (tan.f64 a)) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 a)) (cbrt.f64 (pow.f64 (tan.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 a) (/.f64 1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 a)) (/.f64 1 (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (sin.f64 a)) 1) (/.f64 (cbrt.f64 (pow.f64 (sin.f64 a) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cos.f64 a))) (/.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 a) 2)) (cbrt.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 a) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 a)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 a) 2)) (cbrt.f64 (sin.f64 a))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (sin.f64 a))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 a) 1) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (tan.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 a)) 1) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (cbrt.f64 (pow.f64 (tan.f64 a) 2))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 a) 1) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 a) (cbrt.f64 (cos.f64 a))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 a)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (tan.f64 (+.f64 y z))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 a)) (+.f64 x (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (tan.f64 a)) x) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) (*.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 0) (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) (*.f64 0 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))) (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (tan.f64 (+.f64 y z))) 1) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (*.f64 (+.f64 (neg.f64 (tan.f64 a)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (tan.f64 (+.f64 y z)) (-.f64 (tan.f64 a) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (tan.f64 a) (+.f64 x (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x (tan.f64 (+.f64 y z))) 0) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 x (tan.f64 a)) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (+.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (*.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (tan.f64 a) (+.f64 x (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (tan.f64 a) (+.f64 x (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (tan.f64 a) (+.f64 x (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (tan.f64 (+.f64 y z))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 (+.f64 y z)) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 (+.f64 y z)) 1 (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 (+.f64 y z)) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 (+.f64 y z)) 1 (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (tan.f64 (+.f64 y z))) (+.f64 (neg.f64 (tan.f64 a)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (*.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 0) (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (*.f64 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 a)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 a)) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (sin.f64 (+.f64 y z)) (cos.f64 a)) (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a))) (/.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a)) (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (tan.f64 (+.f64 y z)) 0) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (tan.f64 a)) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (tan.f64 (+.f64 y z))) (neg.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 (+.f64 y z)) (cos.f64 a) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a)))) (/.f64 1 (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (/.f64 1 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (+.f64 (cbrt.f64 (pow.f64 (tan.f64 a) 2)) (cbrt.f64 (*.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))) (-.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 (+.f64 y z)) (cos.f64 a) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a)))) (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (fma.f64 (sin.f64 a) (cos.f64 (+.f64 y z)) (neg.f64 (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) 1) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 (+.f64 y z)) (cos.f64 a) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a)))) 1) (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 a) (cos.f64 (+.f64 y z)) (neg.f64 (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (sin.f64 a)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (neg.f64 (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sin.f64 (+.f64 y z)) (cos.f64 a)) (*.f64 (cos.f64 (+.f64 y z)) (neg.f64 (sin.f64 a)))) (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sin.f64 (+.f64 y z))) (cos.f64 a)) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (neg.f64 (sin.f64 a)))) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (neg.f64 (cos.f64 (+.f64 y z)))) (*.f64 (cos.f64 a) (neg.f64 (sin.f64 (+.f64 y z))))) (*.f64 (cos.f64 a) (neg.f64 (cos.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (cos.f64 (+.f64 y z))) (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (cos.f64 a) (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (neg.f64 (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (sin.f64 a)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (neg.f64 (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sin.f64 (+.f64 y z)) (neg.f64 (cos.f64 a))) (*.f64 (cos.f64 (+.f64 y z)) (neg.f64 (sin.f64 a)))) (*.f64 (cos.f64 (+.f64 y z)) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sin.f64 (+.f64 y z))) (cos.f64 a)) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (sin.f64 a))) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (sin.f64 (+.f64 y z))) (neg.f64 (cos.f64 a))) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (neg.f64 (sin.f64 a)))) (*.f64 (neg.f64 (cos.f64 (+.f64 y z))) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))))) (*.f64 1 (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (fma.f64 (sin.f64 a) (cos.f64 (+.f64 y z)) (neg.f64 (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))))) (*.f64 1 (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 (+.f64 y z)) (cos.f64 a) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a))))) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (neg.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 (+.f64 y z)) (cos.f64 a) (neg.f64 (*.f64 (cos.f64 (+.f64 y z)) (sin.f64 a)))) (cos.f64 (+.f64 y z))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 (+.f64 y z)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 a)) (neg.f64 (cbrt.f64 (pow.f64 (tan.f64 a) 2))) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (tan.f64 a))) (cbrt.f64 (pow.f64 (tan.f64 a) 2)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (tan.f64 a)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 (+.f64 y z)) 1 (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (tan.f64 a) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (tan.f64 (+.f64 y z))) (neg.f64 (tan.f64 a)))))))"]],"rules":[["egg-rr",78],["egg-rr",65],["egg-rr",31],["egg-rr",42]],"time":48.971923828125,"type":"rewrite"},{"count":[[336,296]],"inputs":[["(/.f64 (sin.f64 z) (cos.f64 z))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 y) (cos.f64 y))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)))","(+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","a","(+.f64 a (*.f64 1/3 (pow.f64 a 3)))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(+.f64 (*.f64 17/315 (pow.f64 a 7)) (+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x)","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1 a) x))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x)))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3)))))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (*.f64 -1 a))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (*.f64 -1 a)))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (*.f64 -1 a))))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)) (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z)))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(+.f64 (-.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z)) (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (-.f64 (*.f64 1/6 (+.f64 1 (pow.f64 (tan.f64 z) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) 1) (pow.f64 (tan.f64 z) 2)))))) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))","(+.f64 (tan.f64 y) (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)))","(+.f64 (*.f64 (/.f64 (*.f64 (*.f64 z z) (+.f64 1 (pow.f64 (tan.f64 y) 2))) 1) (tan.f64 y)) (+.f64 (tan.f64 y) (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z)))","(+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) (*.f64 z z)) 1) (tan.f64 y)) (tan.f64 y)) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z (*.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/6 (pow.f64 (tan.f64 y) 2) (+.f64 1/6 (-.f64 (*.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 y) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) 1) (pow.f64 (tan.f64 y) 2))))))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(tan.f64 (+.f64 z y))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(tan.f64 (+.f64 z y))","a","(+.f64 a (*.f64 1/3 (pow.f64 a 3)))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(fma.f64 2/15 (pow.f64 a 5) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(+.f64 (*.f64 17/315 (pow.f64 a 7)) (+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(fma.f64 17/315 (pow.f64 a 7) (fma.f64 2/15 (pow.f64 a 5) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(/.f64 (sin.f64 a) (cos.f64 a))","(tan.f64 a)","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 z) x) (tan.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)) (-.f64 x (tan.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)) (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z))) x) (tan.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (-.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z)) (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (-.f64 (*.f64 1/6 (+.f64 1 (pow.f64 (tan.f64 z) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) 1) (pow.f64 (tan.f64 z) 2)))))) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (+.f64 (tan.f64 z) x))) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 y) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z x) (-.f64 (tan.f64 y) (tan.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (*.f64 (/.f64 (*.f64 (*.f64 z z) (+.f64 1 (pow.f64 (tan.f64 y) 2))) 1) (tan.f64 y)) (+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z x) (-.f64 (tan.f64 y) (tan.f64 a))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) (*.f64 z z)) 1) (tan.f64 y)) (tan.f64 y)) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z (-.f64 x (*.f64 (fma.f64 1/6 (pow.f64 (tan.f64 y) 2) (+.f64 1/6 (-.f64 (*.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 y) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) 1) (pow.f64 (tan.f64 y) 2))))) (pow.f64 z 3))))) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x)","(+.f64 (tan.f64 (+.f64 z y)) x)","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1 a) x))","(+.f64 (tan.f64 (+.f64 z y)) (-.f64 x a))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x)))","(+.f64 (tan.f64 (+.f64 z y)) (fma.f64 -1/3 (pow.f64 a 3) (-.f64 x a)))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x))))","(fma.f64 -2/15 (pow.f64 a 5) (+.f64 (tan.f64 (+.f64 z y)) (fma.f64 -1/3 (pow.f64 a 3) (-.f64 x a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (tan.f64 (+.f64 z y)) x) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 z) (tan.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)) (tan.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z)) (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z))) (tan.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (-.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (*.f64 (sin.f64 z) (*.f64 y y))) (cos.f64 z)) (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 z) 2)) (-.f64 (*.f64 1/6 (+.f64 1 (pow.f64 (tan.f64 z) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) 1) (pow.f64 (tan.f64 z) 2)))))) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 z) 2)) y (tan.f64 z))) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 y) (tan.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z) (-.f64 (tan.f64 y) (tan.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (*.f64 (/.f64 (*.f64 (*.f64 z z) (+.f64 1 (pow.f64 (tan.f64 y) 2))) 1) (tan.f64 y)) (+.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z) (-.f64 (tan.f64 y) (tan.f64 a))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3)))))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) (*.f64 z z)) 1) (tan.f64 y)) (tan.f64 y)) (fma.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) z (*.f64 (neg.f64 (pow.f64 z 3)) (fma.f64 1/6 (pow.f64 (tan.f64 y) 2) (+.f64 1/6 (-.f64 (*.f64 -1/2 (+.f64 1 (pow.f64 (tan.f64 y) 2))) (*.f64 (/.f64 (+.f64 1 (pow.f64 (tan.f64 y) 2)) 1) (pow.f64 (tan.f64 y) 2)))))))) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(tan.f64 (+.f64 z y))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (*.f64 -1 a))","(-.f64 (tan.f64 (+.f64 z y)) a)","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (*.f64 -1 a)))","(+.f64 (tan.f64 (+.f64 z y)) (fma.f64 -1/3 (pow.f64 a 3) (neg.f64 a)))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (*.f64 -1 a))))","(fma.f64 -2/15 (pow.f64 a 5) (+.f64 (tan.f64 (+.f64 z y)) (fma.f64 -1/3 (pow.f64 a 3) (neg.f64 a))))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a))"]],"time":507.342041015625,"type":"simplify"},{"compiler":[[6227,2368]],"time":52.59814453125,"type":"eval"},{"alts":[["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.918424486953176],["(fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))","fresh",12.12311272761357],["(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","next",0.29258796824082955],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",0.32653384612134995],["(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","fresh",11.912184011076208],["(+.f64 x (/.f64 (/.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (cos.f64 a)))","fresh",0.30697009339697695],["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.938530756191232],["(fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)","fresh",11.927569417223085],["(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (*.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))","fresh",12.304834620163952],["(+.f64 x (/.f64 (neg.f64 (fma.f64 (sin.f64 a) (cos.f64 (+.f64 y z)) (neg.f64 (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z)))))","fresh",11.891219805318539]],"compiler":[[20,13],[24,14],[35,20],[23,15],[21,13],[35,20],[22,14],[24,13],[42,21],[30,16],[20,13],[24,14],[35,20],[23,15],[21,13],[35,20],[22,14],[24,13],[42,21],[30,16]],"count":[[298,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[296,10],"picked":[1,0]}],"min-error":[0.07680382069442183],"time":129.337890625,"type":"prune"},{"compiler":[[140,41]],"locations":[["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))",0.19597626953688402,true],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))",0.20150375976844204,true],["(tan.f64 z)",0.20283129884221007,true],["(tan.f64 y)",0.21064379884221007,true]],"time":27.10693359375,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","a","-inf",0.177978515625],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","a","inf",0.2080078125],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","a","0",0.455078125],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","z","-inf",0.18017578125],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","z","inf",0.211181640625],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","z","0",0.281982421875],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","y","-inf",0.2099609375],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","y","inf",0.18994140625],["(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))","y","0",0.333984375],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","-inf",1.389892578125],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","inf",2.286865234375],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","0",1.569091796875],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","-inf",1.51806640625],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","inf",2.200927734375],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","0",3.33203125],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","-inf",1.630126953125],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","inf",2.359130859375],["(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","0",1.619873046875],["(tan.f64 z)","z","-inf",0.376953125],["(tan.f64 z)","z","inf",0.654052734375],["(tan.f64 z)","z","0",0.276123046875],["(tan.f64 y)","y","-inf",0.407958984375],["(tan.f64 y)","y","inf",0.412841796875],["(tan.f64 y)","y","0",0.376220703125]],"time":23.43310546875,"type":"series"},{"count":[[4,238]],"inputs":[["(tan.f64 y)","(tan.f64 z)","(/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","(*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 y) (*.f64 (tan.f64 y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 y) 0) (tan.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 y) (*.f64 0 (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (tan.f64 y)) (tan.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 y)) (cbrt.f64 (pow.f64 (tan.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 y) 2)) (cbrt.f64 (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) (/.f64 1 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) (/.f64 1 (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 y)) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (sin.f64 y))) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (tan.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) 1) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 y) 2)) (cbrt.f64 (sin.f64 y))) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 y)) 1) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 y)) (cbrt.f64 (pow.f64 (tan.f64 y) 2))) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 y)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 z) (*.f64 (tan.f64 z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 z) 0) (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 z) (*.f64 0 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (tan.f64 z)) (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 z)) (cbrt.f64 (pow.f64 (tan.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 z) 2)) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 z) (/.f64 1 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 z)) (/.f64 1 (neg.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 z) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 z)) (neg.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (tan.f64 z) 2)) (cbrt.f64 (sin.f64 z))) (cbrt.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (sin.f64 z))) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 z) 1) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 z)) 1) (neg.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 z)) (cbrt.f64 (pow.f64 (tan.f64 z) 2))) (cbrt.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 z)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a))) (*.f64 (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (*.f64 (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) (*.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 0) (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) (*.f64 0 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 a)) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (tan.f64 a)) (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (/.f64 -1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (cbrt.f64 (/.f64 (pow.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) 2) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cos.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (/.f64 1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 a)) (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cbrt.f64 (cos.f64 a)))) (/.f64 1 (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (cos.f64 a))) (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) (/.f64 1 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cos.f64 a)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (cos.f64 a) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (cos.f64 a) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (cos.f64 a) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (*.f64 (cos.f64 a) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)))) (*.f64 (cos.f64 a) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a)) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cbrt.f64 (cos.f64 a))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))) (neg.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cbrt.f64 (cos.f64 a)))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2)) (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2)) (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2)) (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cos.f64 a)) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2)) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (/.f64 1 (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (/.f64 1 (cos.f64 a))) (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cbrt.f64 (/.f64 (pow.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) 2) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (cbrt.f64 (/.f64 (pow.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) 2) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))) (cbrt.f64 (/.f64 (pow.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) 2) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 2))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) 1) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cbrt.f64 (cos.f64 a)))) 1) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) 1) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) 1) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (cos.f64 a))) 1) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (cos.f64 a)))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 1 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (tan.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (tan.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cos.f64 a)) (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2)) (cos.f64 a)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cos.f64 a) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (cos.f64 a)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (/.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (/.f64 (cos.f64 a) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (/.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (pow.f64 (cbrt.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) 2) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (/.f64 (cos.f64 a) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (/.f64 1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) 1 (neg.f64 (tan.f64 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (neg.f64 (*.f64 (tan.f64 y) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) 0) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (neg.f64 (*.f64 (tan.f64 y) (cos.f64 a)))) (*.f64 1 (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y)))) (*.f64 1 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 0) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 a)) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (tan.f64 y) (cos.f64 a))) 1) (*.f64 (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) 1) (*.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 z) (neg.f64 (cos.f64 a))) (*.f64 (tan.f64 y) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 y) (neg.f64 (cos.f64 a))) (*.f64 (tan.f64 z) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 a) (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 2)) (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cbrt.f64 (cos.f64 a))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 a)) (+.f64 (tan.f64 y) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 a) (cbrt.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))))) (cbrt.f64 (pow.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 y) (tan.f64 z)) 2)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cbrt.f64 (cos.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 a)) (fma.f64 (sin.f64 y) (cos.f64 z) (*.f64 (cos.f64 y) (sin.f64 z)))) (*.f64 (cos.f64 y) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 a)) (fma.f64 (sin.f64 z) (cos.f64 y) (*.f64 (cos.f64 z) (sin.f64 y)))) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 y) (cos.f64 z) (*.f64 (cos.f64 y) (sin.f64 z))) (neg.f64 (cos.f64 a))) (*.f64 (cos.f64 y) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 z) (cos.f64 y) (*.f64 (cos.f64 z) (sin.f64 y))) (neg.f64 (cos.f64 a))) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (neg.f64 (tan.f64 y)) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (tan.f64 y)) (cos.f64 a) (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))))))"]],"rules":[["egg-rr",58],["egg-rr",126],["egg-rr",27],["egg-rr",27]],"time":61.498046875,"type":"rewrite"},{"count":[[334,304]],"inputs":[["y","(+.f64 (*.f64 1/3 (pow.f64 y 3)) y)","(+.f64 (*.f64 1/3 (pow.f64 y 3)) (+.f64 (*.f64 2/15 (pow.f64 y 5)) y))","(+.f64 (*.f64 1/3 (pow.f64 y 3)) (+.f64 (*.f64 2/15 (pow.f64 y 5)) (+.f64 y (*.f64 17/315 (pow.f64 y 7)))))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","(/.f64 (sin.f64 y) (cos.f64 y))","z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))) (pow.f64 (cos.f64 z) 2))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 3)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))","(+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))))","(+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 5) (+.f64 1/120 (+.f64 (*.f64 1/24 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))))) (*.f64 -1/2 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))))))))))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (*.f64 y (cos.f64 a))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 y (cos.f64 a))) (*.f64 -1/3 (*.f64 (pow.f64 y 3) (cos.f64 a)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (+.f64 (*.f64 -2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 -1 (*.f64 y (cos.f64 a))) (*.f64 -1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))))))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z)))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z))))","(+.f64 (*.f64 -2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z)))))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(+.f64 (*.f64 -1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))","(+.f64 (*.f64 -1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))"]],"method":["egg-herbie"],"outputs":[["y","(+.f64 (*.f64 1/3 (pow.f64 y 3)) y)","(fma.f64 1/3 (pow.f64 y 3) y)","(+.f64 (*.f64 1/3 (pow.f64 y 3)) (+.f64 (*.f64 2/15 (pow.f64 y 5)) y))","(fma.f64 1/3 (pow.f64 y 3) (fma.f64 2/15 (pow.f64 y 5) y))","(+.f64 (*.f64 1/3 (pow.f64 y 3)) (+.f64 (*.f64 2/15 (pow.f64 y 5)) (+.f64 y (*.f64 17/315 (pow.f64 y 7)))))","(+.f64 (fma.f64 1/3 (pow.f64 y 3) (fma.f64 2/15 (pow.f64 y 5) y)) (*.f64 17/315 (pow.f64 y 7)))","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","(/.f64 (sin.f64 y) (cos.f64 y))","(tan.f64 y)","z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(fma.f64 1/3 (pow.f64 z 3) z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(fma.f64 1/3 (pow.f64 z 3) (fma.f64 2/15 (pow.f64 z 5) z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))","(+.f64 (fma.f64 1/3 (pow.f64 z 3) (fma.f64 2/15 (pow.f64 z 5) z)) (*.f64 17/315 (pow.f64 z 7)))","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(/.f64 (sin.f64 z) (cos.f64 z))","(tan.f64 z)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))","(+.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))))","(+.f64 (+.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)))))) (*.f64 (/.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a))))) 1) (tan.f64 z)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))) (pow.f64 (cos.f64 z) 2))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 3)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))))","(+.f64 (+.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)) (*.f64 (/.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a))))) 1) (tan.f64 z))) (fma.f64 (+.f64 (+.f64 (/.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z)))) (neg.f64 (cos.f64 a))) (*.f64 (/.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)))) 1) (pow.f64 (tan.f64 z) 2))) (*.f64 (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a))) 1/3)) (pow.f64 y 3) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (sin.f64 a)) (cos.f64 a)))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))))","(fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))","(+.f64 (fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a))) (*.f64 (/.f64 (*.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) (*.f64 z z)) 1) (tan.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))))","(fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (fma.f64 (+.f64 (+.f64 (/.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y)))) (neg.f64 (cos.f64 a))) (*.f64 (/.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) 1) (pow.f64 (tan.f64 y) 2))) (*.f64 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y)) 1/3)) (pow.f64 z 3) (+.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (*.f64 (/.f64 (*.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (*.f64 (/.f64 (sin.f64 a) 1) (tan.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) (*.f64 z z)) 1) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))","(+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))","(fma.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))))","(fma.f64 (+.f64 1/6 (*.f64 (fma.f64 (tan.f64 z) (/.f64 (tan.f64 y) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) -1/2)) (pow.f64 a 3) (fma.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))","(+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 5) (+.f64 1/120 (+.f64 (*.f64 1/24 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))))) (*.f64 -1/2 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))))))))))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))))","(fma.f64 (+.f64 1/6 (*.f64 (fma.f64 (tan.f64 z) (/.f64 (tan.f64 y) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) -1/2)) (pow.f64 a 3) (-.f64 (fma.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (pow.f64 a 5) (+.f64 1/120 (fma.f64 1/24 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 -1/2 (+.f64 1/6 (*.f64 (fma.f64 (tan.f64 z) (/.f64 (tan.f64 y) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) -1/2))))))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))","(*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))","(neg.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (*.f64 y (cos.f64 a))))","(-.f64 (*.f64 (neg.f64 y) (cos.f64 a)) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 y (cos.f64 a))) (*.f64 -1/3 (*.f64 (pow.f64 y 3) (cos.f64 a)))))","(-.f64 (*.f64 (cos.f64 a) (+.f64 (neg.f64 y) (*.f64 -1/3 (pow.f64 y 3)))) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (+.f64 (*.f64 -2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 -1 (*.f64 y (cos.f64 a))) (*.f64 -1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))))))","(-.f64 (fma.f64 -2/15 (*.f64 (pow.f64 y 5) (cos.f64 a)) (*.f64 (cos.f64 a) (+.f64 (neg.f64 y) (*.f64 -1/3 (pow.f64 y 3))))) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(neg.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z)))","(-.f64 (*.f64 (neg.f64 z) (cos.f64 a)) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)))","(+.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z))))","(-.f64 (-.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y))) (*.f64 (cos.f64 a) z))","(+.f64 (*.f64 -2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (*.f64 (cos.f64 a) z)))))","(fma.f64 -2/15 (*.f64 (cos.f64 a) (pow.f64 z 5)) (-.f64 (-.f64 (*.f64 -1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y))) (*.f64 (cos.f64 a) z)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(neg.f64 (+.f64 (tan.f64 z) (tan.f64 y)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 -1 (*.f64 1/2 (*.f64 a a))))","(+.f64 (*.f64 -1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))","(-.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 (*.f64 -1/24 (pow.f64 a 4)) (*.f64 1/2 (*.f64 a a)))) (+.f64 (tan.f64 z) (tan.f64 y)))","(+.f64 (*.f64 -1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))","(+.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 (*.f64 -1/24 (pow.f64 a 4)) (*.f64 1/720 (pow.f64 a 6)))) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 -1 (*.f64 1/2 (*.f64 a a)))))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))","(*.f64 -1 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))","(neg.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)))"]],"time":445.501953125,"type":"simplify"},{"compiler":[[18280,6733]],"time":123.951904296875,"type":"eval"},{"alts":[["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.918424486953176],["(fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))","fresh",12.12311272761357],["(+.f64 x (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a))))","fresh",0.30533163792509566],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",0.32653384612134995],["(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (/.f64 (sin.f64 z) (cos.f64 z)))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.29057791678446326],["(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 (cbrt.f64 (tan.f64 y)) 3) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.30379191405115946],["(+.f64 x (/.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","fresh",0.3627422608064991],["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.938530756191232],["(fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)","fresh",11.927569417223085],["(+.f64 x (-.f64 (/.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))","fresh",0.29787721382438304],["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","next",0.2841116987039455]],"compiler":[[20,13],[24,14],[35,20],[23,15],[38,23],[38,23],[57,28],[22,14],[24,13],[69,36],[39,21],[20,13],[24,14],[35,20],[23,15],[38,23],[38,23],[57,28],[22,14],[24,13],[69,36],[39,21]],"count":[[450,11]],"kept":[{"done":[0,0],"fresh":[9,5],"new":[440,6],"picked":[1,0]}],"min-error":[0.04813253162065376],"time":298.317138671875,"type":"prune"},{"compiler":[[160,42]],"locations":[["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))",0.1677912494023431,true],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))",0.20150375976844204,true],["(tan.f64 z)",0.20283129884221007,false],["(tan.f64 y)",0.21064379884221007,false]],"time":27.39404296875,"type":"localize"},{"count":[[2,72]],"series":[["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","y","-inf",0.26611328125],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","y","inf",0.2568359375],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","y","0",0.421142578125],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","z","-inf",0.264892578125],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","z","inf",0.274169921875],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","z","0",0.406982421875],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","a","-inf",0.27587890625],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","a","inf",0.276123046875],["(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))","a","0",0.35107421875],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","-inf",1.0458984375],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","inf",5.238037109375],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","y","0",0.555908203125],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","-inf",1.041015625],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","inf",1.301025390625],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","z","0",0.568115234375],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","-inf",1.363037109375],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","inf",1.35693359375],["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","a","0",1.64306640625]],"time":17.559814453125,"type":"series"},{"count":[[2,199]],"inputs":[["(/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 a)) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y))))) (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y)))) (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z)))) (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))) (*.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) (*.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 0) (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) (*.f64 0 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) 1) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (tan.f64 a)) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (neg.f64 (cos.f64 a)))) (/.f64 1 (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2)) (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 -1 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cos.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 a)) (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (cos.f64 a))) (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) (/.f64 1 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cos.f64 a)) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (/.f64 1 (cos.f64 a))) (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (cos.f64 a))) 1) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))) 1) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (cos.f64 a) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (cos.f64 a) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (cos.f64 a) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (cos.f64 a) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (cos.f64 a) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cos.f64 a)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)) (*.f64 (cbrt.f64 (cos.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)) (*.f64 (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) 1) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (cos.f64 a) (cbrt.f64 (pow.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (neg.f64 (cos.f64 a)))) 1) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) 1) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))) (neg.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (neg.f64 (cos.f64 a)))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2)) (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2)) (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 1 (cos.f64 a))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 2))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (neg.f64 (cos.f64 a)))) 1) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) 1) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) 1) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (cos.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (cos.f64 a)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cbrt.f64 (neg.f64 (cos.f64 a))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 1 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cos.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 (/.f64 1 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (cbrt.f64 (pow.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) 2)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (neg.f64 1/3)) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cos.f64 a)) (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 a)) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cos.f64 a)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (cos.f64 a) (cos.f64 a))) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 (cos.f64 a)) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))) (neg.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) (pow.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)))) 2) (neg.f64 (tan.f64 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))) (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 0) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)) (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 a) (tan.f64 z)) -1) (*.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (*.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 0) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))) 0) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (-.f64 (*.f64 (cos.f64 a) (tan.f64 y)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (-.f64 (*.f64 (cos.f64 a) (tan.f64 z)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (sin.f64 a))) (neg.f64 (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (sin.f64 a) (*.f64 (tan.f64 z) (tan.f64 y)))) (neg.f64 (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (+.f64 (*.f64 (cos.f64 a) (tan.f64 z)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2) (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))) (-.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cbrt.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 a)) (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (tan.f64 z)) 2)) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 z) (neg.f64 (cos.f64 a)) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 a)) (tan.f64 z) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (neg.f64 (fma.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (neg.f64 (cos.f64 a)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (cos.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 1 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))))"]],"rules":[["egg-rr",66],["egg-rr",133]],"time":57.239013671875,"type":"rewrite"},{"count":[[271,253]],"inputs":[["(/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (*.f64 1/2 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))))))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (*.f64 1/2 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))))))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))) (pow.f64 (cos.f64 z) 2))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 3)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 1/2 (/.f64 (sin.f64 z) (cos.f64 z)))) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 1/2 (/.f64 (sin.f64 z) (cos.f64 z)))) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3)))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2/15 (cos.f64 a)) (*.f64 2/15 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 5)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3))))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2/15 (cos.f64 a)) (*.f64 2/15 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (pow.f64 y 5)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))))) (*.f64 -1 (sin.f64 a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))","(/.f64 (neg.f64 (+.f64 (tan.f64 z) (tan.f64 y))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a)))","(+.f64 (neg.f64 (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (*.f64 1/2 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (fma.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a (*.f64 (*.f64 a a) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (neg.f64 (+.f64 (tan.f64 z) (tan.f64 y))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))))))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y)))) (+.f64 (*.f64 (-.f64 1/6 (*.f64 -1/2 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)) (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1) (cos.f64 y))))) a) (*.f64 (pow.f64 a 2) (-.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))) (*.f64 1/2 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (fma.f64 (+.f64 1/6 (*.f64 (fma.f64 (tan.f64 z) (/.f64 (tan.f64 y) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) -1/2)) (pow.f64 a 3) (fma.f64 (-.f64 (/.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) a (*.f64 (*.f64 a a) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 (neg.f64 (+.f64 (tan.f64 z) (tan.f64 y))) (fma.f64 (tan.f64 z) (tan.f64 y) -1))))))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))))","(fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))","(+.f64 (fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a))) (/.f64 (*.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) (*.f64 (*.f64 z z) (sin.f64 y))) (cos.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a))) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))))","(fma.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) z (fma.f64 (+.f64 (+.f64 (/.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (neg.f64 (cos.f64 a))) (/.f64 (*.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y)) 1/3)) (pow.f64 z 3) (+.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (/.f64 (*.f64 (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a)) (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (sin.f64 a)) (cos.f64 a)) (tan.f64 y))) (*.f64 (*.f64 z z) (sin.f64 y))) (cos.f64 y)))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a)))","(/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))","(+.f64 (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a)) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))))","(+.f64 (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a)) (+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))))) (cos.f64 z)) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a)))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a))) (cos.f64 a))) (+.f64 (/.f64 (*.f64 (sin.f64 z) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (cos.f64 z)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (cos.f64 a))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))) (pow.f64 (cos.f64 z) 2))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 3)) (*.f64 y (-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a))) (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))) (*.f64 (cos.f64 z) (cos.f64 a))))))))","(+.f64 (+.f64 (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a)) (/.f64 (*.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))))) (cos.f64 z))) (fma.f64 (+.f64 (+.f64 (/.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (neg.f64 (cos.f64 a))) (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))))) (pow.f64 (cos.f64 z) 2))) (*.f64 (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a))) 1/3)) (pow.f64 y 3) (*.f64 y (+.f64 (/.f64 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (cos.f64 a)) (*.f64 (tan.f64 z) (/.f64 (-.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (sin.f64 a)) (cos.f64 a)))))))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(/.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1))) (*.f64 (cos.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))))","(neg.f64 (+.f64 (tan.f64 z) (tan.f64 y)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a)))","(-.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) a) (tan.f64 z)) (tan.f64 y))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 1/2 (/.f64 (sin.f64 z) (cos.f64 z)))) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a))))","(fma.f64 (*.f64 1/2 (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 a a) (-.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) a) (tan.f64 z)) (tan.f64 y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 1/2 (/.f64 (sin.f64 z) (cos.f64 z)))) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) a)))))","(fma.f64 (*.f64 1/2 (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 a a) (-.f64 (-.f64 (fma.f64 1/6 (*.f64 (pow.f64 a 3) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) a)) (tan.f64 z)) (tan.f64 y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (sin.f64 a)))","(+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 -1 (sin.f64 a)))","(+.f64 (fma.f64 (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3)))) (*.f64 -1 (sin.f64 a)))","(+.f64 (fma.f64 (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z (-.f64 (*.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2/15 (cos.f64 a)) (*.f64 2/15 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 5)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3))))) (*.f64 -1 (sin.f64 a)))","(+.f64 (fma.f64 (*.f64 -2/15 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 5) (fma.f64 (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y))) z (-.f64 (*.f64 (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (sin.f64 a)))","(+.f64 (neg.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (*.f64 -1 (sin.f64 a)))","(+.f64 (neg.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (fma.f64 y (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))) (sin.f64 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))))) (*.f64 -1 (sin.f64 a)))","(+.f64 (fma.f64 (pow.f64 y 3) (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (-.f64 (*.f64 y (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2/15 (cos.f64 a)) (*.f64 2/15 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (pow.f64 y 5)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (cos.f64 a)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 y (-.f64 (*.f64 -1 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z))))))) (*.f64 -1 (sin.f64 a)))","(+.f64 (fma.f64 (*.f64 -2/15 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (pow.f64 y 5) (fma.f64 (pow.f64 y 3) (*.f64 -1/3 (+.f64 (cos.f64 a) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (-.f64 (*.f64 y (-.f64 (neg.f64 (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (cos.f64 z)))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))))) (sin.f64 a))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1)))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (*.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))"]],"time":333.441162109375,"type":"simplify"},{"compiler":[[20331,6684]],"time":130.001953125,"type":"eval"},{"alts":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))","fresh",0.3010391351638095],["(fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))","fresh",12.12311272761357],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.918424486953176],["(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))","fresh",0.3059426152491887],["(+.f64 x (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a))))","fresh",0.30533163792509566],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",0.32653384612134995],["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.938530756191232],["(fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)","fresh",11.927569417223085],["(+.f64 x (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.3068127116742203],["(+.f64 x (/.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cos.f64 a)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (pow.f64 (cos.f64 a) 2)))","next",0.2924119952485634],["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 y)) 3))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.2986281324305057]],"compiler":[[61,31],[24,14],[20,13],[65,32],[35,20],[23,15],[22,14],[24,13],[49,24],[50,27],[42,24],[61,31],[24,14],[20,13],[65,32],[35,20],[23,15],[22,14],[24,13],[49,24],[50,27],[42,24]],"count":[[468,11]],"kept":[{"done":[0,0],"fresh":[10,6],"new":[457,5],"picked":[1,0]}],"min-error":[0.04422628162065376],"time":312.98388671875,"type":"prune"},{"compiler":[[258,83]],"locations":[["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))",0.19597626953688402,true],["(tan.f64 z)",0.20283129884221007,false],["(tan.f64 y)",0.21064379884221007,false],["(pow.f64 (cos.f64 a) 2)",0.250663769536884,true]],"time":44.373046875,"type":"localize"},{"count":[[2,40]],"series":[["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","y","-inf",0.18408203125],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","y","inf",0.31787109375],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","y","0",0.239990234375],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","z","-inf",0.205810546875],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","z","inf",0.324951171875],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","z","0",0.260009765625],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","a","-inf",0.18505859375],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","a","inf",0.209228515625],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))","a","0",0.35107421875],["(pow.f64 (cos.f64 a) 2)","a","-inf",0.29296875],["(pow.f64 (cos.f64 a) 2)","a","inf",0.343994140625],["(pow.f64 (cos.f64 a) 2)","a","0",0.343994140625]],"time":3.469970703125,"type":"series"},{"count":[[2,108]],"inputs":[["(pow.f64 (cos.f64 a) 2)","(*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 a) 2) (*.f64 (pow.f64 (cos.f64 a) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 a) 2) 0) (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 a) 2) (*.f64 0 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 a) 2)) (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (+.f64 a a))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 a a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (sin.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (sin.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (sin.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (sin.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (sin.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 a) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 a)) (pow.f64 (cbrt.f64 (cos.f64 a)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 a)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) (+.f64 2 3)) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 a)) 1) (*.f64 (neg.f64 (cos.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sin.f64 a)) (-.f64 -1 (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sin.f64 a)) (-.f64 1 (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (cbrt.f64 (pow.f64 (cos.f64 a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 4)) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 1/2 3) (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 a a))) 3)) (+.f64 (*.f64 1/2 1/2) (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 a a))) (*.f64 1/2 (cos.f64 (+.f64 a a)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (sin.f64 a) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (sin.f64 a) 2)) (pow.f64 (sin.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 a a)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 a) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 a) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 a)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 a) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cos.f64 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (sin.f64 a) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 a) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (sin.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (sin.f64 a) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 0) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 0 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (tan.f64 z)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (tan.f64 y)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 2)) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 2)) (cos.f64 a)) (cbrt.f64 (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 (tan.f64 z) (tan.f64 y))) (cbrt.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 2)) (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 a) (cbrt.f64 (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cbrt.f64 (cos.f64 a))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cbrt.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 2)) (*.f64 (cos.f64 a) (cbrt.f64 (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 (tan.f64 y) (cbrt.f64 (cos.f64 a))) (*.f64 (tan.f64 z) (cbrt.f64 (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 (tan.f64 z) (cbrt.f64 (cos.f64 a))) (*.f64 (tan.f64 y) (cbrt.f64 (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 a) (fma.f64 (sin.f64 y) (cos.f64 z) (*.f64 (sin.f64 z) (cos.f64 y)))) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (sin.f64 y) (cos.f64 z) (*.f64 (sin.f64 z) (cos.f64 y))) (cos.f64 a)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 z)) (*.f64 (cos.f64 y) (*.f64 (cos.f64 a) (sin.f64 z)))) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (cos.f64 a) (sin.f64 z)) (cos.f64 y)) (*.f64 (cos.f64 z) (*.f64 (cos.f64 a) (sin.f64 y)))) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (tan.f64 z) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 z) (cos.f64 a) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (tan.f64 z)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cbrt.f64 (tan.f64 z))) (cbrt.f64 (pow.f64 (tan.f64 z) 2)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 z) (cbrt.f64 (cos.f64 a))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (tan.f64 z))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (tan.f64 z)) 2)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 z)) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 z) 2)) (cos.f64 a)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (tan.f64 y))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (tan.f64 y)) 2)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cbrt.f64 (tan.f64 y))) (cbrt.f64 (pow.f64 (tan.f64 y) 2)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 y) (cos.f64 a) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 y) (cbrt.f64 (cos.f64 a))) (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (tan.f64 y) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 y) 2)) (cos.f64 a)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 a) 2)) (tan.f64 y)) (*.f64 (cos.f64 a) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (tan.f64 z)) 1 (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (tan.f64 z)) (*.f64 (cos.f64 a) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (tan.f64 y)) (*.f64 (cos.f64 a) (tan.f64 z)))))))"]],"rules":[["egg-rr",53],["egg-rr",55]],"time":27.2509765625,"type":"rewrite"},{"count":[[148,140]],"inputs":[["1","(+.f64 (*.f64 -1 (pow.f64 a 2)) 1)","(+.f64 (*.f64 1/3 (pow.f64 a 4)) (+.f64 (*.f64 -1 (pow.f64 a 2)) 1))","(+.f64 (*.f64 -2/45 (pow.f64 a 6)) (+.f64 (*.f64 1/3 (pow.f64 a 4)) (+.f64 (*.f64 -1 (pow.f64 a 2)) 1)))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))","(+.f64 (*.f64 (cos.f64 a) z) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3)))))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (*.f64 y (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1 (pow.f64 a 2)) 1)","(-.f64 1 (*.f64 a a))","(+.f64 (*.f64 1/3 (pow.f64 a 4)) (+.f64 (*.f64 -1 (pow.f64 a 2)) 1))","(fma.f64 1/3 (pow.f64 a 4) (-.f64 1 (*.f64 a a)))","(+.f64 (*.f64 -2/45 (pow.f64 a 6)) (+.f64 (*.f64 1/3 (pow.f64 a 4)) (+.f64 (*.f64 -1 (pow.f64 a 2)) 1)))","(fma.f64 (pow.f64 a 6) -2/45 (fma.f64 1/3 (pow.f64 a 4) (-.f64 1 (*.f64 a a))))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (tan.f64 z) (tan.f64 y))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 (*.f64 -1/2 (*.f64 a a)) 1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))))","(fma.f64 -1/2 (*.f64 (*.f64 a a) (+.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 1 (*.f64 1/24 (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))))","(+.f64 (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 (*.f64 -1/2 (*.f64 a a)) (*.f64 -1/720 (pow.f64 a 6)))) (*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (+.f64 1 (*.f64 1/24 (pow.f64 a 4)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))","(*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y))","(+.f64 (*.f64 (cos.f64 a) z) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(fma.f64 (cos.f64 a) z (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y)))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3)))))","(fma.f64 (cos.f64 a) z (fma.f64 (*.f64 (cos.f64 a) (pow.f64 z 3)) 1/3 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y))))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))))))","(+.f64 (fma.f64 (cos.f64 a) z (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 y))) (fma.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3)) (*.f64 2/15 (*.f64 (cos.f64 a) (pow.f64 z 5)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))","(*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (*.f64 y (cos.f64 a)))","(fma.f64 y (cos.f64 a) (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a))))","(+.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (*.f64 (cos.f64 a) (+.f64 y (*.f64 1/3 (pow.f64 y 3)))))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a)))))","(+.f64 (*.f64 (/.f64 (cos.f64 a) 1) (tan.f64 z)) (fma.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a)) (*.f64 (cos.f64 a) (+.f64 y (*.f64 1/3 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (cos.f64 a))"]],"time":129.6611328125,"type":"simplify"},{"compiler":[[21476,8536]],"time":145.080078125,"type":"eval"},{"alts":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))","fresh",0.3010391351638095],["(fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))","fresh",12.12311272761357],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.918424486953176],["(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))","fresh",0.3059426152491887],["(+.f64 x (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a))))","fresh",0.30533163792509566],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",0.32653384612134995],["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","fresh",11.938530756191232],["(fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)","fresh",11.927569417223085],["(+.f64 x (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.3068127116742203],["(+.f64 x (/.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cos.f64 a)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (pow.f64 (cos.f64 a) 2)))","done",0.2924119952485634],["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 y)) 3))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","fresh",0.2986281324305057]],"compiler":[[61,31],[24,14],[20,13],[65,32],[35,20],[23,15],[22,14],[24,13],[49,24],[50,27],[42,24]],"count":[[423,11]],"kept":[{"done":[0,0],"fresh":[10,10],"new":[412,0],"picked":[1,1]}],"min-error":[0.04422628162065376],"time":265.976806640625,"type":"prune"},{"accuracy":[0.2841116987039455],"baseline":[0.2841116987039455],"branch":[["x",0.2841116987039455,1],["y",0.28411169870394554,1],["z",0.2841116987039456,1],["a",0.28411169870394554,1],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))",0.2841116987039455,1],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",0.2841116987039455,1],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",0.2841116987039455,1],["(tan.f64 (+.f64 y z))",0.28411169870394554,1],["(tan.f64 (+.f64 y z))",0.28411169870394554,1],["(+.f64 y z)",0.28411169870394554,1],["(+.f64 y z)",0.28411169870394554,1],["(tan.f64 a)",0.28411169870394554,1],["(tan.f64 a)",0.28411169870394554,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,9],[11,8],[11,8],[8,6],[8,6],[7,5],[7,5],[6,5],[6,5],[757,275]],"count":[[23,1]],"inputs":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (sin.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))) (*.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))) 1))))","(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a)))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))","(+.f64 x (/.f64 (fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cbrt.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(+.f64 x (/.f64 (-.f64 (*.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (cos.f64 a)) (*.f64 (cos.f64 a) (/.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a)) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))) (pow.f64 (cos.f64 a) 2)))","(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 y)) 3))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(+.f64 x (*.f64 (/.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (/.f64 -1 (cos.f64 a))))","(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (/.f64 (sin.f64 z) (cos.f64 z)))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 (cbrt.f64 (tan.f64 y)) 3) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(+.f64 x (/.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) (/.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 (sin.f64 a) (fma.f64 (tan.f64 z) (tan.f64 y) -1) (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))))) 2) (cos.f64 a))) (fma.f64 (tan.f64 z) (tan.f64 y) -1)))","(+.f64 x (-.f64 (/.f64 (*.f64 (neg.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2)) (/.f64 (*.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (pow.f64 (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a)) 2))))","(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","(fma.f64 (cbrt.f64 (+.f64 x (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 x (tan.f64 (+.f64 y z))) 2)) (neg.f64 (tan.f64 a)))","(+.f64 x (/.f64 (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 -1 (fma.f64 (tan.f64 z) (tan.f64 y) -1)) (neg.f64 (-.f64 (tan.f64 a) x)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 x (/.f64 (/.f64 (+.f64 (*.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (cos.f64 a)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (cos.f64 a)))","(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (-.f64 (tan.f64 a) x)))","(fma.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) x)","(*.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) 2)) (cbrt.f64 (*.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))","(+.f64 x (/.f64 (neg.f64 (fma.f64 (sin.f64 a) (cos.f64 (+.f64 y z)) (neg.f64 (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z)))))","(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))","(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))"]],"link":["."],"name":["tan-example"],"oracle":[12.50290868226571],"outputs":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))"]],"time":108.195068359375,"times":[["x",7.498046875],["y",7.376953125],["z",7.341064453125],["a",7.263916015625],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))",7.574951171875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",7.572998046875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",7.48388671875],["(tan.f64 (+.f64 y z))",7.22607421875],["(tan.f64 (+.f64 y z))",7.2548828125],["(+.f64 y z)",7.364013671875],["(+.f64 y z)",7.26611328125],["(tan.f64 a)",7.279052734375],["(tan.f64 a)",7.47900390625]],"type":"regimes"},{"compiler":[[39,21]],"inputs":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (-.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (sin.f64 a))) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))","(-.f64 x (+.f64 (tan.f64 a) (*.f64 (cos.f64 a) (/.f64 (+.f64 (tan.f64 z) (tan.f64 y)) (*.f64 (fma.f64 (tan.f64 z) (tan.f64 y) -1) (cos.f64 a))))))"]],"stop":[["fuel",1]],"time":26.785888671875,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[39,21]],"remove-preprocessing":[[]],"time":13.458984375,"type":"end"}]