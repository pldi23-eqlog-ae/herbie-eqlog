[{"compiler":[[43,31]],"method":["search"],"sampling":[[12,5.326294922269881e-5,2.039721584878862e-5,0.9999263398349285],[11,4.923465894535184e-5,2.8517737518996e-5,0.9999222476035357],[10,4.5270309783518314e-5,3.2482086680829525e-5,0.9999222476035357],[9,4.143384285271168e-5,4.0410785004496574e-5,0.9999181553721428],[8,3.3760908991098404e-5,5.626818165183067e-5,0.9999099709093571],[7,2.6599504053592682e-5,6.34295865893364e-5,0.9999099709093571],[6,2.0461156964302063e-5,7.775239646434784e-5,0.9999017864465714],[5,8.184462785720825e-6,0.00010639801621437073,0.9998854175209999],[4,0.0,0.00011458247900009155,0.9998854175209999],[3,0.0,0.0001309514045715332,0.9998690485954285],[2,0.0,0.0001309514045715332,0.9998690485954285],[1,0.0,0.0001309514045715332,0.9998690485954285],[0,0.0,0.0001309514045715332,0.9998690485954285]],"time":69.346923828125,"type":"analyze"},{"outcomes":[["body",256,"invalid",70.203857421875,1090],["body",512,"valid",200.545166015625,1564],["body",256,"valid",454.326171875,6692]],"time":733.66796875,"type":"sample"},{"compiler":[[20,14]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 -4 (*.f64 b c)))) a) (/.f64 1/2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 c a)))) b) (/.f64 1/2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 -4 (*.f64 a b)))) c) (/.f64 1/2 a))"]],"symmetry":[[]],"time":78.946044921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))"]],"time":21.362060546875,"type":"simplify"},{"compiler":[[35,23]],"time":1.69091796875,"type":"eval"},{"alts":[["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","next",51.52591286717872],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","fresh",51.587776776545184]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[51.52319557024074],"time":1.607177734375,"type":"prune"},{"compiler":[[62,30]],"locations":[["(fma.f64 b b (*.f64 -4 (*.f64 a c)))",0.017910009768442016,true],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))",0.03515625,true],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))",0.19207001953688402,true],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))",25.659257927927538,true]],"time":13.52099609375,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","-inf",0.203125],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","inf",0.294189453125],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","0",0.276123046875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","-inf",0.226806640625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","inf",0.302978515625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","0",0.29296875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","-inf",0.31494140625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","inf",0.296875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","0",0.3291015625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","-inf",0.3359375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","inf",0.345947265625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","0",0.19189453125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","-inf",0.339111328125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","inf",0.343017578125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","0",0.195068359375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","-inf",0.23193359375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","inf",0.237060546875],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","0",0.52587890625],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","c","-inf",0.40185546875],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","c","inf",0.623046875],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","c","0",0.449951171875],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","a","-inf",0.904052734375],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","a","inf",0.821044921875],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","a","0",0.8330078125],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","b","-inf",0.411865234375],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","b","inf",0.709228515625],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","b","0",0.572021484375],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","-inf",0.432861328125],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","inf",0.7509765625],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","0",0.658935546875],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","-inf",0.43701171875],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","inf",0.7529296875],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","0",0.56396484375],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","-inf",0.510009765625],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","inf",0.80517578125],["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","0",0.703857421875]],"time":17.160888671875,"type":"series"},{"count":[[4,232]],"inputs":[["(-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","(fma.f64 b b (*.f64 -4 (*.f64 a c)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 0) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (*.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (*.f64 (neg.f64 b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 b 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b))) (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 b -1/2) a) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))) (/.f64 (*.f64 b -1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 b -1/2) a)) (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 1/2) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 0) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 b -1/2) a) 1) (*.f64 (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 a -2)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 2)) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (/.f64 -1/2 a))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -1/2 a) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/2 a)) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 -1/8 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 -1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 a) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) a) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) 1) (*.f64 (cbrt.f64 (*.f64 a a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (neg.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (/.f64 -1/8 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 2)) (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 a)) -1/2) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1/8 a)) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (/.f64 -1/8 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1/2) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1/2 a) (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 1/2) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) b) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 c) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1/2) (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 0) (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 0 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 0) (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 c) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (cbrt.f64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -4 c) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 -4 c) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -4 c) a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -4 c) a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 c -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -4 c) a) 2)) (cbrt.f64 (*.f64 (*.f64 -4 c) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 c) a) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 -4 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 -4 c) a))))))"]],"rules":[["egg-rr",66],["egg-rr",42],["egg-rr",74],["egg-rr",50]],"time":43.784912109375,"type":"rewrite"},{"count":[[316,291]],"inputs":[["(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) (pow.f64 a 3)) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) 1/2 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 (/.f64 (*.f64 (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 16 (pow.f64 (*.f64 (/.f64 -2 b) (pow.f64 (/.f64 c b) 2)) 2)) (pow.f64 a 4)) b) 1/2 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) b) 1/2 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) (pow.f64 a 3)) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (+.f64 (/.f64 (+.f64 (neg.f64 c) (*.f64 -1/4 (*.f64 (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 16 (pow.f64 (*.f64 (/.f64 -2 b) (pow.f64 (/.f64 c b) 2)) 2)) (pow.f64 a 3)))) b) (/.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) -2) (pow.f64 b 5))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -2 (*.f64 a a)) (pow.f64 b 3)) 2))) (*.f64 a b)) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))"]],"time":289.297119140625,"type":"simplify"},{"compiler":[[6691,4204]],"time":79.012939453125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3) (/.f64 -1/2 a))","fresh",51.53892019307726],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","done",51.52591286717872],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","fresh",3.354454013079396],["(*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (/.f64 -1/2 a))","fresh",2.0755978825142023],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3) (/.f64 -1/2 a))","fresh",51.52339071672387],["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","next",1.7232786130491413],["(-.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))","fresh",51.6755673305125],["(fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))","fresh",50.77313750734877],["(*.f64 (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b) (/.f64 -1/2 a))","fresh",51.03259136707978],["(/.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))","fresh",51.52224695170612],["(*.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (/.f64 -1/2 a))","fresh",52.09295983229299]],"compiler":[[22,16],[18,12],[17,10],[70,55],[21,15],[54,36],[22,15],[22,15],[30,20],[33,22],[48,31],[22,16],[17,10],[70,55],[21,15],[54,36],[22,15],[22,15],[30,20],[33,22],[48,31]],"count":[[293,11]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[291,10],"picked":[1,1]}],"min-error":[0.22263681759645215],"time":60.51611328125,"type":"prune"},{"compiler":[[240,134]],"locations":[["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))",0.33041000976844204,true],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))",0.34212875976844204,true],["(pow.f64 (/.f64 c b) 2)",0.4889450195368841,true],["(pow.f64 (*.f64 c a) 4)",0.8613780763380797,true]],"time":54.0859375,"type":"localize"},{"count":[[4,120]],"series":[["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","-inf",0.325927734375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","inf",0.343017578125],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","b","0",0.883056640625],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","-inf",0.208984375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","inf",0.409912109375],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","a","0",0.949951171875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","-inf",0.345947265625],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","inf",0.47216796875],["(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))","c","0",1.02099609375],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","c","-inf",0.1689453125],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","c","inf",0.402099609375],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","c","0",1.18603515625],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","b","-inf",0.282958984375],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","b","inf",0.35595703125],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","b","0",1.072998046875],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","a","-inf",0.324951171875],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","a","inf",0.507080078125],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","a","0",0.807861328125],["(pow.f64 (/.f64 c b) 2)","b","-inf",0.406982421875],["(pow.f64 (/.f64 c b) 2)","b","inf",0.34716796875],["(pow.f64 (/.f64 c b) 2)","b","0",0.343994140625],["(pow.f64 (/.f64 c b) 2)","c","-inf",1.697021484375],["(pow.f64 (/.f64 c b) 2)","c","inf",0.560791015625],["(pow.f64 (/.f64 c b) 2)","c","0",0.4990234375],["(pow.f64 (*.f64 c a) 4)","a","-inf",0.51318359375],["(pow.f64 (*.f64 c a) 4)","a","inf",0.41015625],["(pow.f64 (*.f64 c a) 4)","a","0",0.505859375],["(pow.f64 (*.f64 c a) 4)","c","-inf",0.54296875],["(pow.f64 (*.f64 c a) 4)","c","inf",0.429931640625],["(pow.f64 (*.f64 c a) 4)","c","0",0.59912109375]],"time":17.31396484375,"type":"series"},{"count":[[4,226]],"inputs":[["(pow.f64 (*.f64 c a) 4)","(pow.f64 (/.f64 c b) 2)","(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))","(/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 0) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 0 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 4)) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (cbrt.f64 (pow.f64 (*.f64 c a) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 8)) (cbrt.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) -1) (*.f64 (pow.f64 (*.f64 c a) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1) (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 1) (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 c a) 2) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 c a) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 c a) 2) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 c b) 2) (*.f64 (pow.f64 (/.f64 c b) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 c b) 2) 0) (pow.f64 (/.f64 c b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 c b) 2) (*.f64 0 (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 c b) 2)) (pow.f64 (/.f64 c b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (/.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 4)) (cbrt.f64 (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 c b)) (pow.f64 (cbrt.f64 (/.f64 c b)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 c b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 c b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (cbrt.f64 (pow.f64 (/.f64 c b) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 c c) b) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (/.f64 (/.f64 c b) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (pow.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 c b)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 b -2)) (*.f64 (/.f64 c (cbrt.f64 (*.f64 b b))) (/.f64 c (cbrt.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 (/.f64 -1 b) (/.f64 -1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (*.f64 (/.f64 (cbrt.f64 (*.f64 c c)) b) (/.f64 (cbrt.f64 (*.f64 c c)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -2) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 c b)) -1) (*.f64 (neg.f64 (/.f64 c b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 c b) -1) (*.f64 (/.f64 c b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 c b)) 1) (*.f64 (neg.f64 (/.f64 c b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c c)) (/.f64 1 (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (/.f64 1 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 c c) b) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 c c)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 c c) b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (neg.f64 (*.f64 c c))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 c c) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 c b) (/.f64 c (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (cbrt.f64 (/.f64 1 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 c b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 c c) b)) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) 1) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 c (cbrt.f64 b)) (/.f64 c b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 c)) (pow.f64 (cbrt.f64 (/.f64 c b)) (+.f64 2 3))) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 c) (pow.f64 (cbrt.f64 (/.f64 c b)) (+.f64 2 3))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 c c) b) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 c c) b) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 c c) b) (cbrt.f64 (*.f64 b b))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 c c) b) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (cbrt.f64 (neg.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (cbrt.f64 b)) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 c c) b)) -1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 c c) b)) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 c c) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 c b) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 c b) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 c b) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 c b) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 c b)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 c b) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 c b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 c b)) (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (/.f64 c b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 c b) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 c b) (neg.f64 (/.f64 c b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 c b) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) (*.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) 0) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) (*.f64 0 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 a b) 2) (pow.f64 (/.f64 c b) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 a b) 2) (pow.f64 (/.f64 c b) 4))) (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (cbrt.f64 (/.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 c a) b) b) (/.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a b)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 a b) 2)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (*.f64 (/.f64 c b) (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 4)) (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (pow.f64 (/.f64 c b) 2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 b)) (/.f64 (pow.f64 (/.f64 c b) 2) (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a b) (cbrt.f64 (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (pow.f64 (/.f64 c b) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) (pow.f64 (cbrt.f64 b) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) (pow.f64 (cbrt.f64 (cbrt.f64 b)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 b)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a b) (neg.f64 (/.f64 (*.f64 c c) b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a b) (neg.f64 (*.f64 c c))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a b) (/.f64 (*.f64 c c) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a b) (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 c a) b) b) c) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 c a) b) b) (neg.f64 c)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 c a) b) b) (/.f64 c (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 a b) 2) (pow.f64 (/.f64 c b) 4))) (cbrt.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 b)) (pow.f64 (/.f64 c b) 2)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 c c) b)) (/.f64 a b)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c c)) (/.f64 a b)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 c c) b) (/.f64 a b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (/.f64 a b)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 a (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 a b) 2) (pow.f64 (/.f64 c b) 4)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (*.f64 (/.f64 c b) (/.f64 a b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 c) (*.f64 (/.f64 c b) (/.f64 a b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 c (cbrt.f64 b)) (*.f64 (/.f64 c b) (/.f64 a b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (/.f64 (pow.f64 (/.f64 c b) 2) (cbrt.f64 (*.f64 b b)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) 1) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 a b) 2)) (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (pow.f64 (/.f64 a b) 2)) (pow.f64 (/.f64 c b) 2))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 (*.f64 b b))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) (cbrt.f64 b)) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)) 1) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (cbrt.f64 b)) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b))) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 a b) 3) (pow.f64 (/.f64 c b) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 c b) (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 c a) b) b) (neg.f64 (/.f64 c b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 a b) 3) (pow.f64 (/.f64 c b) 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 0) (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) (*.f64 0 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))) (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 5))) (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2) (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 c 3)) (*.f64 a a)) (neg.f64 (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b -5))) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 (pow.f64 c 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 c 3) a) (cbrt.f64 (pow.f64 b 5))) (/.f64 a (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) a) (*.f64 a (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (/.f64 (*.f64 a a) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 c 6)) (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (/.f64 (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c)) (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -5) (*.f64 (pow.f64 c 3) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 b -5)) (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (cbrt.f64 (pow.f64 b 5)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b 5))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b 5))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 c 3)) (*.f64 a a)) (neg.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 b -5)) (*.f64 (pow.f64 c 3) (*.f64 a a))) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (*.f64 a a)) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2) (*.f64 (cbrt.f64 (*.f64 a a)) c)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2) (*.f64 (neg.f64 c) (cbrt.f64 (*.f64 a a)))) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c))) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 a a) (cbrt.f64 (pow.f64 b -5))) (pow.f64 c 3)) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) a) (cbrt.f64 (pow.f64 b 5))) a) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a a) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) a) (/.f64 a (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (/.f64 (*.f64 a a) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (cbrt.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 c 6)) (pow.f64 (pow.f64 b 5) 2)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 a a)) c) (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 c) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 a 4) (pow.f64 c 6)) (pow.f64 (pow.f64 b 5) 2)))) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 c) (cbrt.f64 (*.f64 a a))) (pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 2)) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) 1) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) -1) (neg.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 c 3)) (*.f64 a a)) (cbrt.f64 (pow.f64 b 5))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5))) 1) (cbrt.f64 (pow.f64 (pow.f64 b 5) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (cbrt.f64 (pow.f64 b -5)))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 b 5) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (cbrt.f64 (*.f64 (*.f64 a a) (pow.f64 b -5)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (neg.f64 (pow.f64 b -5))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5)) 3))))))"]],"rules":[["egg-rr",58],["egg-rr",72],["egg-rr",67],["egg-rr",29]],"time":40.35302734375,"type":"rewrite"},{"count":[[346,231]],"inputs":[["(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(*.f64 (pow.f64 c 4) (pow.f64 a 4))","(pow.f64 (*.f64 c a) 4)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (pow.f64 c 2) (pow.f64 b 2))","(pow.f64 (/.f64 c b) 2)","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))","(*.f64 (*.f64 c c) (*.f64 a (pow.f64 b -3)))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))","(*.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b -5))"]],"time":330.985107421875,"type":"simplify"},{"compiler":[[14813,8225]],"time":143.389892578125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3) (/.f64 -1/2 a))","fresh",51.53892019307726],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","done",51.52591286717872],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","fresh",3.354454013079396],["(*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (/.f64 -1/2 a))","next",2.0755978825142023],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3) (/.f64 -1/2 a))","fresh",51.52339071672387],["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","done",1.7232786130491413],["(-.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))","fresh",51.6755673305125],["(fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))","fresh",50.77313750734877],["(*.f64 (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b) (/.f64 -1/2 a))","fresh",51.03259136707978],["(/.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))","fresh",51.52224695170612],["(*.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (/.f64 -1/2 a))","fresh",52.09295983229299]],"compiler":[[22,16],[18,12],[17,10],[70,55],[21,15],[54,36],[22,15],[22,15],[30,20],[33,22],[48,31],[22,16],[17,10],[70,55],[21,15],[22,15],[22,15],[30,20],[33,22],[48,31]],"count":[[272,11]],"kept":[{"done":[1,1],"fresh":[9,9],"new":[261,0],"picked":[1,1]}],"min-error":[0.22263681759645215],"time":164.971923828125,"type":"prune"},{"compiler":[[423,311]],"locations":[["(*.f64 (pow.f64 c 3) (pow.f64 a 3))",0.35060502930532605,true],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))",0.359375,true],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))",0.36328125,true],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)",0.5153312988422101,true]],"time":106.4111328125,"type":"localize"},{"count":[[4,24]],"series":[["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","a","-inf",0.274169921875],["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","a","inf",0.318115234375],["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","a","0",0.162109375],["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","c","-inf",0.242919921875],["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","c","inf",0.322998046875],["(*.f64 (pow.f64 c 3) (pow.f64 a 3))","c","0",0.154052734375],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","b","-inf",0.322021484375],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","b","inf",0.35791015625],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","b","0",0.577880859375],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","a","-inf",0.342041015625],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","a","inf",0.4140625],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","a","0",0.5361328125],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","c","-inf",0.3330078125],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","c","inf",0.30419921875],["(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","c","0",0.733154296875],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","a","-inf",0.14990234375],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","a","inf",0.166015625],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","a","0",0.14404296875],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","c","-inf",0.15087890625],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","c","inf",0.173095703125],["(*.f64 (pow.f64 c 2) (pow.f64 a 2))","c","0",0.16015625],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","a","-inf",0.20703125],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","a","inf",0.512939453125],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","a","0",0.734130859375],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","c","-inf",0.172119140625],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","c","inf",0.56787109375],["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","c","0",0.658935546875]],"time":9.467041015625,"type":"series"},{"count":[[4,171]],"inputs":[["(pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2)","(*.f64 (pow.f64 c 2) (pow.f64 a 2))","(/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))","(*.f64 (pow.f64 c 3) (pow.f64 a 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) 0) (*.f64 4 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) (*.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 3) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 4 (pow.f64 (*.f64 c a) 4))) (*.f64 4 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) (*.f64 0 (*.f64 4 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (pow.f64 (*.f64 c a) 4)) (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 4) (*.f64 3 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) (*.f64 -2 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) (*.f64 -2 (*.f64 c c))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) (pow.f64 (cbrt.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 4 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) (pow.f64 (*.f64 c a) 2)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (*.f64 (pow.f64 (*.f64 c a) 2) (*.f64 -2 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 c c)) (*.f64 (*.f64 a a) (*.f64 -2 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 4 (pow.f64 c 4)) (pow.f64 a 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (*.f64 a a)) (*.f64 -2 (*.f64 a a))) (pow.f64 c 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -2 (*.f64 c c)) a) (*.f64 (*.f64 -2 (*.f64 c c)) a)) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 4) (*.f64 (*.f64 (*.f64 a a) -2) (*.f64 (*.f64 a a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (cbrt.f64 (pow.f64 (*.f64 c a) 2))) (*.f64 -2 (cbrt.f64 (pow.f64 (*.f64 c a) 2)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (cbrt.f64 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -2 (*.f64 c c)) (cbrt.f64 (*.f64 a a))) (*.f64 (*.f64 -2 (*.f64 c c)) (cbrt.f64 (*.f64 a a)))) (*.f64 (cbrt.f64 (pow.f64 a 4)) (cbrt.f64 (pow.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 4) (*.f64 4 (pow.f64 c 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 (*.f64 c a) 2)) (*.f64 2 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 2) (*.f64 (pow.f64 (*.f64 c a) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) -1) (*.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) -1) (*.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) 1) (*.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)))) (*.f64 1 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4))) (cbrt.f64 (pow.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) -2) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) 4)) (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (*.f64 -2 (*.f64 -2 (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4 (pow.f64 (*.f64 c a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) -2) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 c a) 2)) (*.f64 (cbrt.f64 4) (pow.f64 (*.f64 c a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (cbrt.f64 -2)) (*.f64 (pow.f64 (*.f64 c a) 2) (cbrt.f64 -2))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 64 (pow.f64 (pow.f64 (*.f64 c a) 4) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -8 (pow.f64 (*.f64 c a) 6)) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -8 (pow.f64 (*.f64 c a) 6)) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 -2 (pow.f64 (*.f64 c a) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 4 (pow.f64 (*.f64 c a) 4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 64 (pow.f64 (pow.f64 (*.f64 c a) 4) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 0) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 2) (*.f64 (pow.f64 (*.f64 c a) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 2)) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 2) (*.f64 0 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (cbrt.f64 (pow.f64 a 4)) (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) (cbrt.f64 (pow.f64 (*.f64 c a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 4)) (cbrt.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a a) c) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) a) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 c (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 a (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c a)) (neg.f64 (*.f64 c a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a a) (cbrt.f64 (*.f64 c c))) (cbrt.f64 (pow.f64 c 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (neg.f64 c)) (*.f64 (neg.f64 a) (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 c) (neg.f64 a)) (*.f64 (neg.f64 c) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c a) -1) (*.f64 (*.f64 c a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 c a) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 c a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c a) 6))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) (neg.f64 (pow.f64 (*.f64 c a) 3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 0) (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5))) (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) (*.f64 0 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (*.f64 c a) 3) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 b 5))) (*.f64 (pow.f64 (*.f64 c a) 3) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 3) (*.f64 (pow.f64 c 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (*.f64 c a) 3) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2) (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (*.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) (neg.f64 (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (pow.f64 b -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (/.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b (+.f64 5 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -5))) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b (+.f64 5 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -5) (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 b -5)) (/.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b (+.f64 5 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (cbrt.f64 (pow.f64 b 5)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b 5))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 b 5))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) 1) (*.f64 (cbrt.f64 (pow.f64 b (+.f64 5 5))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) (neg.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b -5))) (pow.f64 a 3)) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 b -5)) (pow.f64 (*.f64 c a) 3)) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2) (*.f64 c a)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2) (neg.f64 (*.f64 c a))) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b -5))) (pow.f64 c 3)) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) (pow.f64 (*.f64 c a) 2)) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) 1) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b (+.f64 5 5)))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c a) (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2)) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 c a)) (pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 2)) (cbrt.f64 (neg.f64 (pow.f64 b 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 c 3) (/.f64 (pow.f64 a 3) (cbrt.f64 (pow.f64 b (+.f64 5 5))))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (cbrt.f64 (pow.f64 b (+.f64 5 5))))) (cbrt.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5))) 1) (cbrt.f64 (pow.f64 b (+.f64 5 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) (cbrt.f64 (pow.f64 b 5))) (neg.f64 (cbrt.f64 (pow.f64 b (+.f64 5 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 3) -1) (neg.f64 (pow.f64 b 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (cbrt.f64 (pow.f64 b -5)))) (neg.f64 (cbrt.f64 (pow.f64 b (+.f64 5 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 c a) (cbrt.f64 (pow.f64 b -5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (neg.f64 (pow.f64 b -5))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (neg.f64 (pow.f64 b -5))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b -5)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 c a) 3) 0) (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 3) (*.f64 (pow.f64 (*.f64 c a) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 c a) 3)) (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 c a) 3) (*.f64 0 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 3) (pow.f64 a 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 3) (pow.f64 c 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c a) (pow.f64 (*.f64 c a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 2) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 3) (*.f64 c c)) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 3) c) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 3) a) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 (*.f64 c c) (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 c (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (*.f64 a a) (pow.f64 c 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (*.f64 a (pow.f64 c 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 c a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 c 3)) (neg.f64 (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c a)) (neg.f64 (pow.f64 (*.f64 c a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a 3)) (neg.f64 (pow.f64 c 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (pow.f64 (*.f64 (cbrt.f64 (*.f64 c c)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (cbrt.f64 a)) 3) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (*.f64 c a) 3) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 c a) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c a) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c a) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 c a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 c a) 3) 3))))))"]],"rules":[["egg-rr",33],["egg-rr",50],["egg-rr",35],["egg-rr",53]],"time":34.825927734375,"type":"rewrite"},{"count":[[195,172]],"inputs":[["(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))","(*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))","(*.f64 4 (pow.f64 (*.f64 c a) 4))"]],"time":104.31005859375,"type":"simplify"},{"compiler":[[14548,10428]],"time":153.10595703125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3) (/.f64 -1/2 a))","fresh",51.53892019307726],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","done",51.52591286717872],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","next",3.354454013079396],["(*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (/.f64 -1/2 a))","done",2.0755978825142023],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3) (/.f64 -1/2 a))","fresh",51.52339071672387],["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","done",1.7232786130491413],["(-.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))","fresh",51.6755673305125],["(fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))","fresh",50.77313750734877],["(*.f64 (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b) (/.f64 -1/2 a))","fresh",51.03259136707978],["(/.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))","fresh",51.52224695170612],["(*.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (/.f64 -1/2 a))","fresh",52.09295983229299]],"compiler":[[22,16],[18,12],[17,10],[70,55],[21,15],[54,36],[22,15],[22,15],[30,20],[33,22],[48,31],[22,16],[17,10],[21,15],[22,15],[22,15],[30,20],[33,22],[48,31]],"count":[[218,11]],"kept":[{"done":[2,2],"fresh":[8,8],"new":[207,0],"picked":[1,1]}],"min-error":[0.22263681759645215],"time":91.98193359375,"type":"prune"},{"compiler":[[45,16]],"locations":[["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))",0.0703125,true],["(*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))",0.34212875976844204,false],["(pow.f64 (/.f64 c b) 2)",0.4889450195368841,false]],"time":8.596923828125,"type":"localize"},{"count":[[1,36]],"series":[["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","a","-inf",0.218994140625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","a","inf",0.19287109375],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","a","0",0.30712890625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","b","-inf",0.211181640625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","b","inf",0.216796875],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","b","0",0.217041015625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","c","-inf",0.22900390625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","c","inf",0.23291015625],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","c","0",0.302001953125]],"time":2.26416015625,"type":"series"},{"count":[[1,88]],"inputs":[["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 0) (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) (*.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))) (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) (*.f64 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 c b)) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)) 0) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)) 0) (/.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)) (/.f64 c b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (*.f64 c b)) (*.f64 b b)) (/.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (+.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 c b) 4) (pow.f64 (/.f64 a b) 2))) (*.f64 (neg.f64 (/.f64 c b)) (cbrt.f64 (/.f64 a b))))) (-.f64 (cbrt.f64 (neg.f64 (/.f64 c b))) (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b)) 2) (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (-.f64 (cbrt.f64 (neg.f64 (/.f64 c b))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 4)) (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (-.f64 -1 (*.f64 (/.f64 a b) (/.f64 c b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (+.f64 -1 (*.f64 (neg.f64 (/.f64 c b)) (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 c b) (+.f64 (*.f64 (neg.f64 (/.f64 c b)) (/.f64 a b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 c) b (neg.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))))) (/.f64 1 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b)) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 c) (cbrt.f64 b)) b) (*.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (*.f64 (cbrt.f64 (*.f64 b b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (cbrt.f64 (*.f64 b b))) (*.f64 b (/.f64 (neg.f64 c) (cbrt.f64 b)))) (*.f64 b (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 c) (cbrt.f64 b)) (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 c) (cbrt.f64 b)) b) (*.f64 (cbrt.f64 (*.f64 b b)) (*.f64 a (pow.f64 (/.f64 c b) 2)))) (*.f64 (cbrt.f64 (*.f64 b b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 c (cbrt.f64 (*.f64 b b))) (*.f64 (neg.f64 b) (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)))) (*.f64 (neg.f64 b) (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 c) (cbrt.f64 (*.f64 b b))) (*.f64 b (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)))) (*.f64 b (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 c) b (neg.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 c) b (neg.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))))) b) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) (cbrt.f64 (*.f64 b b))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) -1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (neg.f64 c) (cbrt.f64 b)) (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 c (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (neg.f64 c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 c b) (*.f64 (neg.f64 b) (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 c b)) (*.f64 b (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) b) (neg.f64 (*.f64 c b))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)) (neg.f64 b)) (*.f64 b c)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (neg.f64 c) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b))) (*.f64 (cbrt.f64 (*.f64 b b)) (/.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) (cbrt.f64 b)))) (*.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 c (neg.f64 b)) (*.f64 (neg.f64 b) (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 c b) (*.f64 (neg.f64 b) (*.f64 a (pow.f64 (/.f64 c b) 2)))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 c) (neg.f64 b)) (*.f64 b (*.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 a)))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 a (pow.f64 (/.f64 c b) 2)) b (neg.f64 (neg.f64 (*.f64 c b)))) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 c b))) (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 c b) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 c b) 4) (pow.f64 (/.f64 a b) 2))) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (/.f64 a b)) (cbrt.f64 (pow.f64 (/.f64 c b) 2))) (cbrt.f64 (pow.f64 (/.f64 c b) 4)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 (/.f64 a b)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 c b) 4) (pow.f64 (/.f64 a b) 2)))) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (/.f64 c b)) (/.f64 a b)) (/.f64 c b) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (/.f64 -1 b) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2)) (cbrt.f64 (neg.f64 (/.f64 c b))) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 c b)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 c b) 2))) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 c b) -1 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (/.f64 1 b) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 c b)) (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 a b) (neg.f64 (pow.f64 (/.f64 c b) 2)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (/.f64 c b) 2)) (/.f64 a b) (neg.f64 (/.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 c b)) 1 (*.f64 (neg.f64 (/.f64 a b)) (pow.f64 (/.f64 c b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c) (neg.f64 b)))))))"]],"rules":[["egg-rr",88]],"time":26.02001953125,"type":"rewrite"},{"count":[[124,94]],"inputs":[["(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (neg.f64 (*.f64 (*.f64 a c) c)) (pow.f64 b -3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (neg.f64 (*.f64 (*.f64 a c) c)) (pow.f64 b -3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (neg.f64 (*.f64 (*.f64 a c) c)) (pow.f64 b -3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (neg.f64 (*.f64 (*.f64 a c) c)) (pow.f64 b -3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))","(*.f64 (neg.f64 (*.f64 (*.f64 a c) c)) (pow.f64 b -3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(neg.f64 (fma.f64 (*.f64 (*.f64 a c) c) (pow.f64 b -3) (/.f64 c b)))"]],"time":118.846923828125,"type":"simplify"},{"compiler":[[4398,1542]],"time":37.2060546875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 (neg.f64 c) b (neg.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))))) b) b)","fresh",3.4527199918445226],["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","done",1.7232786130491413],["(*.f64 (pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3) (/.f64 -1/2 a))","fresh",51.53892019307726],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","done",51.52591286717872],["(*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (/.f64 -1/2 a))","done",2.0755978825142023],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3) (/.f64 -1/2 a))","fresh",51.52339071672387],["(-.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))","fresh",51.6755673305125],["(/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) b)","fresh",3.3787639160774448],["(fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))","fresh",50.77313750734877],["(*.f64 (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b) (/.f64 -1/2 a))","fresh",51.03259136707978],["(/.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))","fresh",51.52224695170612],["(*.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (/.f64 -1/2 a))","fresh",52.09295983229299]],"compiler":[[21,13],[54,36],[22,16],[18,12],[70,55],[21,15],[22,15],[14,9],[22,15],[30,20],[33,22],[48,31]],"count":[[247,12]],"kept":[{"done":[3,3],"fresh":[7,7],"new":[236,2],"picked":[1,0]}],"min-error":[0.19529306759645215],"time":97.2509765625,"type":"prune"},{"accuracy":[1.7232786130491407],"baseline":[1.7232786130491413],"branch":[["a",1.7232786130491409,1],["b",1.7232786130491409,1],["c",1.7232786130491413,1],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",1.7232786130491407,1]],"compiler":[[4,3],[4,3],[4,3],[20,14],[373,237]],"count":[[14,1]],"inputs":[["(/.f64 (/.f64 (fma.f64 (neg.f64 c) b (neg.f64 (*.f64 b (*.f64 a (pow.f64 (/.f64 c b) 2))))) b) b)","(/.f64 (neg.f64 (fma.f64 a (pow.f64 (/.f64 c b) 2) c)) b)","(*.f64 (pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) 3) 1/3) (/.f64 -1/2 a))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))) (/.f64 -1/2 a))","(*.f64 (pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) 3) (/.f64 -1/2 a))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(-.f64 (/.f64 (*.f64 b -1/2) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (*.f64 a -2)))","(fma.f64 (/.f64 -1/2 a) b (neg.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (/.f64 -1/2 a))))","(*.f64 (fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) b) (/.f64 -1/2 a))","(/.f64 (/.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))","(*.f64 (*.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 -4 c) a)))))) (/.f64 -1/2 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) (/.f64 -1/2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"link":["."],"name":["Quadratic roots, wide range"],"oracle":[54.98792263910635],"outputs":[["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))"]],"time":26.822998046875,"times":[["a",5.6689453125],["b",5.26611328125],["c",5.154052734375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",3.962890625]],"type":"regimes"},{"compiler":[[54,36]],"inputs":[["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (/.f64 a b) (pow.f64 (/.f64 c b) 2)))","(fma.f64 (pow.f64 (/.f64 c b) 2) (neg.f64 (/.f64 a b)) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (pow.f64 (*.f64 c a) 4) 20) (pow.f64 b -7)) a) (fma.f64 (*.f64 (pow.f64 c 3) (*.f64 (*.f64 a a) (pow.f64 b -5))) -2 (neg.f64 (/.f64 c b)))))"]],"stop":[["fuel",1]],"time":26.14794921875,"type":"simplify"},{"time":0.01904296875,"type":"soundness"},{"compiler":[[54,36]],"remove-preprocessing":[[]],"time":19.5869140625,"type":"end"}]